{-# LANGUAGE Trustworthy #-}
{-# LANGUAGE CPP #-}

-----------------------------------------------------------------------------
-- |
-- Module      :  GHC.ConsoleHandler
-- Copyright   :  (c) The University of Glasgow
-- License     :  see libraries/base/LICENSE
--
-- Maintainer  :  cvs-ghc@haskell.org
-- Stability   :  internal
-- Portability :  non-portable (GHC extensions)
--
-- NB. the contents of this module are only available on Windows.
--
-- Installing Win32 console handlers.
--
-----------------------------------------------------------------------------

module GHC.ConsoleHandler
#if !defined(mingw32_HOST_OS) && !defined(__HADDOCK__)
        where
#else /* whole file */
        ( Handler(..)
        , installHandler
        , ConsoleEvent(..)
        , flushConsole
        ) where

{-


Note: this #include is inside a Haskell comment
      but it brings into scope some #defines
      that are used by CPP below (eg STG_SIG_DFL).
      Having it in a comment means that there's no
      danger that C-like crap will be misunderstood
      by GHC
-}









import Foreign
import Foreign.C
import GHC.IO.FD
import GHC.IO.Exception
import GHC.IO.Handle.Types
import GHC.IO.Handle.Internals
import GHC.Conc
import Control.Concurrent.MVar
import Data.Typeable

data Handler
 = Default
 | Ignore
 | Catch (ConsoleEvent -> IO ())

-- | Allows Windows console events to be caught and handled.  To
-- handle a console event, call 'installHandler' passing the
-- appropriate 'Handler' value.  When the event is received, if the
-- 'Handler' value is @Catch f@, then a new thread will be spawned by
-- the system to execute @f e@, where @e@ is the 'ConsoleEvent' that
-- was received.
--
-- Note that console events can only be received by an application
-- running in a Windows console.  Certain environments that look like consoles
-- do not support console events, these include:
--
--  * Cygwin shells with @CYGWIN=tty@ set (if you don't set @CYGWIN=tty@,
--    then a Cygwin shell behaves like a Windows console).
--  * Cygwin xterm and rxvt windows
--  * MSYS rxvt windows
--
-- In order for your application to receive console events, avoid running
-- it in one of these environments.
--
installHandler :: Handler -> IO Handler
installHandler handler
  | threaded =
    modifyMVar win32ConsoleHandler $ \old_h -> do
      (new_h,rc) <-
        case handler of
          Default -> do
            r <- rts_installHandler STG_SIG_DFL nullPtr
            return (no_handler, r)
          Ignore  -> do
            r <- rts_installHandler STG_SIG_IGN nullPtr
            return (no_handler, r)
          Catch h -> do
            r <- rts_installHandler STG_SIG_HAN nullPtr
            return (h, r)
      prev_handler <-
        case rc of
          STG_SIG_DFL -> return Default
          STG_SIG_IGN -> return Ignore
          STG_SIG_HAN -> return (Catch old_h)
          _           -> error "installHandler: Bad threaded rc value"
      return (new_h, prev_handler)

  | otherwise =
  alloca $ \ p_sp -> do
   rc <-
    case handler of
     Default -> rts_installHandler STG_SIG_DFL p_sp
     Ignore  -> rts_installHandler STG_SIG_IGN p_sp
     Catch h -> do
        v <- newStablePtr (toHandler h)
        poke p_sp v
        rts_installHandler STG_SIG_HAN p_sp
   case rc of
     STG_SIG_DFL -> return Default
     STG_SIG_IGN -> return Ignore
     STG_SIG_HAN -> do
        osptr <- peek p_sp
        oldh  <- deRefStablePtr osptr
         -- stable pointer is no longer in use, free it.
        freeStablePtr osptr
        return (Catch (\ ev -> oldh (fromConsoleEvent ev)))
     _           -> error "installHandler: Bad non-threaded rc value"
  where
   fromConsoleEvent ev =
     case ev of
       ControlC -> 0 {- CTRL_C_EVENT-}
       Break    -> 1 {- CTRL_BREAK_EVENT-}
       Close    -> 2 {- CTRL_CLOSE_EVENT-}
       Logoff   -> 5 {- CTRL_LOGOFF_EVENT-}
       Shutdown -> 6 {- CTRL_SHUTDOWN_EVENT-}

   toHandler hdlr ev = do
      case toWin32ConsoleEvent ev of
         -- see rts/win32/ConsoleHandler.c for comments as to why
         -- rts_ConsoleHandlerDone is called here.
        Just x  -> hdlr x >> rts_ConsoleHandlerDone ev
        Nothing -> return () -- silently ignore..

   no_handler = error "win32ConsoleHandler"

foreign import ccall "rtsSupportsBoundThreads" threaded :: Bool

foreign import ccall unsafe "RtsExternal.h rts_InstallConsoleEvent"
  rts_installHandler :: CInt -> Ptr (StablePtr (CInt -> IO ())) -> IO CInt
foreign import ccall unsafe "RtsExternal.h rts_ConsoleHandlerDone"
  rts_ConsoleHandlerDone :: CInt -> IO ()


flushConsole :: Handle -> IO ()
flushConsole h =
  wantReadableHandle_ "flushConsole" h $ \ Handle__{haDevice=dev} ->
    case cast dev of
      Nothing -> ioException $
                    IOError (Just h) IllegalOperation "flushConsole"
                        "handle is not a file descriptor" Nothing Nothing

==============
../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs
==============
lengths:(4900,5163)

==============

({ ../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,28)) "{-# LANGUAGE Trustworthy #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,21)) "{-# LANGUAGE CPP #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,78)) "-----------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,37)) "-- Module      :  GHC.ConsoleHandler" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- Copyright   :  (c) The University of Glasgow" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Maintainer  :  cvs-ghc@haskell.org" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- Portability :  non-portable (GHC extensions)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- NB. the contents of this module are only available on Windows." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Installing Win32 console handlers." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((G AnnModule),DP (19,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,54)) "#if !defined(mingw32_HOST_OS) && !defined(__HADDOCK__)" Nothing),DP (1,1)),((G AnnWhere),DP (2,9)),((AnnComment DComment (DP (1,1),DP (1,22)) "#else /* whole file */" Nothing),DP (1,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,15)) "installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "ConsoleEvent" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "flushConsole" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (11,3)) "{-\n\n\nNote: this #include is inside a Haskell comment\n      but it brings into scope some #defines\n      that are used by CPP below (eg STG_SIG_DFL).\n      Having it in a comment means that there's no\n      danger that C-like crap will be misunderstood\n      by GHC\n-}" Nothing),DP (2,1)),((AnnComment DComment (DP (-8,1),DP (-8,24)) "#include \"rts/Signals.h\"" Nothing),DP (-8,1)),((AnnComment DComment (DP (10,1),DP (10,1)) "" Nothing),DP (10,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "import" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "Foreign" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "Foreign.C" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "GHC.IO.FD" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,17)) "GHC.IO.Exception" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,20)) "GHC.IO.Handle.Types" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,24)) "GHC.IO.Handle.Internals" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "GHC.Conc" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,24)) "Control.Concurrent.MVar" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,14)) "Data.Typeable" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,5)) "data" Nothing),DP (2,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,2),DP (1,3)) "=" Nothing),DP (1,2)),((AnnComment DComment (DP (0,1),DP (0,8)) "Default" Nothing),DP (0,1)),((AnnComment DComment (DP (1,2),DP (1,3)) "|" Nothing),DP (1,2)),((AnnComment DComment (DP (0,1),DP (0,7)) "Ignore" Nothing),DP (0,1)),((AnnComment DComment (DP (1,2),DP (1,3)) "|" Nothing),DP (1,2)),((AnnComment DComment (DP (0,1),DP (0,6)) "Catch" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,12)) "ConsoleEvent" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,65)) "-- | Allows Windows console events to be caught and handled.  To" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,61)) "-- handle a console event, call 'installHandler' passing the" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- appropriate 'Handler' value.  When the event is received, if the" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,70)) "-- 'Handler' value is @Catch f@, then a new thread will be spawned by" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,69)) "-- the system to execute @f e@, where @e@ is the 'ConsoleEvent' that" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,17)) "-- was received." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,67)) "-- Note that console events can only be received by an application" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,79)) "-- running in a Windows console.  Certain environments that look like consoles" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,49)) "-- do not support console events, these include:" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,74)) "--  * Cygwin shells with @CYGWIN=tty@ set (if you don't set @CYGWIN=tty@," Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,59)) "--    then a Cygwin shell behaves like a Windows console)." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,36)) "--  * Cygwin xterm and rxvt windows" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,24)) "--  * MSYS rxvt windows" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,74)) "-- In order for your application to receive console events, avoid running" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,36)) "-- it in one of these environments." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,15)) "installHandler" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,15)) "installHandler" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "handler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,4)) "|" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,9)) "threaded" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,15)) "modifyMVar" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,20)) "win32ConsoleHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "old_h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "new_h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) "rc" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,13)) "case" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,8)) "handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,7)) "Default" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_DFL" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "nullPtr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "no_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "Ignore" Nothing),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,4)) "->" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_IGN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "nullPtr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "no_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_HAN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "nullPtr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "prev_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,13)) "case" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,3)) "rc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_DFL" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Default" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_IGN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Ignore" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_HAN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "old_h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,11),DP (0,13)) "->" Nothing),DP (0,11)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,40)) "\"installHandler: Bad threaded rc value\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "new_h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "prev_handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (2,3),DP (2,3)) "" Nothing),DP (2,3)),((AnnComment DComment (DP (0,0),DP (0,1)) "|" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "otherwise" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,9)) "alloca" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,4),DP (1,4)) "" Nothing),DP (1,4)),((AnnComment DComment (DP (0,0),DP (0,2)) "rc" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,9)) "case" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,8)) "handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,7)) "Default" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_DFL" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,6)) "Ignore" Nothing),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,4)) "->" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_IGN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "v" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "newStablePtr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "toHandler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,4)) "poke" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "v" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,18)) "rts_installHandler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_HAN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,4),DP (1,4)) "" Nothing),DP (1,4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,4)) "case" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "rc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_DFL" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Default" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_IGN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Ignore" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_HAN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,5)) "osptr" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "peek" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,4)) "oldh" Nothing),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,4)) "<-" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,15)) "deRefStablePtr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "osptr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,10),DP (1,57)) "-- stable pointer is no longer in use, free it." Nothing),DP (1,10)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,13)) "freeStablePtr" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "osptr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "oldh" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,16)) "fromConsoleEvent" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,11),DP (0,13)) "->" Nothing),DP (0,11)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,44)) "\"installHandler: Bad non-threaded rc value\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,3)) "" Nothing),DP (1,3)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "where" Nothing),DP (0,0)),((AnnComment DComment (DP (1,4),DP (1,4)) "" Nothing),DP (1,4)),((AnnComment DComment (DP (0,0),DP (0,16)) "fromConsoleEvent" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,10)) "case" Nothing),DP (1,6)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,8)) "ControlC" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,18)) "{- CTRL_C_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,5)) "Break" Nothing),DP (0,0)),((AnnComment DComment (DP (0,4),DP (0,6)) "->" Nothing),DP (0,4)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,22)) "{- CTRL_BREAK_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,5)) "Close" Nothing),DP (0,0)),((AnnComment DComment (DP (0,4),DP (0,6)) "->" Nothing),DP (0,4)),((AnnComment DComment (DP (0,1),DP (0,2)) "2" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,22)) "{- CTRL_CLOSE_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,6)) "Logoff" Nothing),DP (0,0)),((AnnComment DComment (DP (0,3),DP (0,5)) "->" Nothing),DP (0,3)),((AnnComment DComment (DP (0,1),DP (0,2)) "5" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,23)) "{- CTRL_LOGOFF_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,8)) "Shutdown" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "6" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,25)) "{- CTRL_SHUTDOWN_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (2,4),DP (2,4)) "" Nothing),DP (2,4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,9)) "toHandler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "hdlr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,4)) "case" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,20)) "toWin32ConsoleEvent" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,10),DP (1,66)) "-- see rts/win32/ConsoleHandler.c for comments as to why" Nothing),DP (1,10)),((AnnComment DComment (DP (1,10),DP (1,51)) "-- rts_ConsoleHandlerDone is called here." Nothing),DP (1,10)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,4)) "->" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,5)) "hdlr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) ">>" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,23)) "rts_ConsoleHandlerDone" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,7)) "Nothing" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,21)) "-- silently ignore.." Nothing),DP (0,1)),((AnnComment DComment (DP (2,4),DP (2,4)) "" Nothing),DP (2,4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,10)) "no_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,22)) "\"win32ConsoleHandler\"" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "foreign" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,26)) "\"rtsSupportsBoundThreads\"" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "threaded" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "Bool" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,8)) "foreign" Nothing),DP (2,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "unsafe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,40)) "\"RtsExternal.h rts_InstallConsoleEvent\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,21)) "rts_installHandler" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "Ptr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "StablePtr" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "CInt" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,8)) "foreign" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "unsafe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,39)) "\"RtsExternal.h rts_ConsoleHandlerDone\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,25)) "rts_ConsoleHandlerDone" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (3,1),DP (3,13)) "flushConsole" Nothing),DP (3,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Handle" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,13)) "flushConsole" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,22)) "wantReadableHandle_" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,15)) "\"flushConsole\"" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "Handle__" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,8)) "haDevice" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "dev" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "}" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,9)) "case" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,5)) "cast" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,7)) "Nothing" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "ioException" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (1,21),DP (1,28)) "IOError" Nothing),DP (1,21)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,17)) "IllegalOperation" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,15)) "\"flushConsole\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,25),DP (1,58)) "\"handle is not a file descriptor\"" Nothing),DP (1,25)),((AnnComment DComment (DP (0,1),DP (0,8)) "Nothing" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Nothing" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "fd" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,24)) "throwErrnoIfMinus1Retry_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,15)) "\"flushConsole\"" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (1,12),DP (1,28)) "flush_console_fd" Nothing),DP (1,12)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "fdFD" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "fd" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "foreign" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "unsafe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,36)) "\"consUtils.h flush_input_console__\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,25)) "flush_console_fd" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,28)) "#endif /* mingw32_HOST_OS */" Nothing),DP (2,1)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:20:8-25 }
    Nothing{ModuleName: GHC.ConsoleHandler})) 
  (Nothing) 
  [] 
  [] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,28)) "{-# LANGUAGE Trustworthy #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,21)) "{-# LANGUAGE CPP #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,78)) "-----------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,37)) "-- Module      :  GHC.ConsoleHandler" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- Copyright   :  (c) The University of Glasgow" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Maintainer  :  cvs-ghc@haskell.org" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- Portability :  non-portable (GHC extensions)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- NB. the contents of this module are only available on Windows." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Installing Win32 console handlers." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((G AnnModule),DP (19,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,54)) "#if !defined(mingw32_HOST_OS) && !defined(__HADDOCK__)" Nothing),DP (1,1)),((G AnnWhere),DP (2,9)),((AnnComment DComment (DP (1,1),DP (1,22)) "#else /* whole file */" Nothing),DP (1,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,15)) "installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "ConsoleEvent" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "flushConsole" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (11,3)) "{-\n\n\nNote: this #include is inside a Haskell comment\n      but it brings into scope some #defines\n      that are used by CPP below (eg STG_SIG_DFL).\n      Having it in a comment means that there's no\n      danger that C-like crap will be misunderstood\n      by GHC\n-}" Nothing),DP (2,1)),((AnnComment DComment (DP (-8,1),DP (-8,24)) "#include \"rts/Signals.h\"" Nothing),DP (-8,1)),((AnnComment DComment (DP (10,1),DP (10,1)) "" Nothing),DP (10,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "import" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "Foreign" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "Foreign.C" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "GHC.IO.FD" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,17)) "GHC.IO.Exception" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,20)) "GHC.IO.Handle.Types" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,24)) "GHC.IO.Handle.Internals" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "GHC.Conc" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,24)) "Control.Concurrent.MVar" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "import" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,14)) "Data.Typeable" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,5)) "data" Nothing),DP (2,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,2),DP (1,3)) "=" Nothing),DP (1,2)),((AnnComment DComment (DP (0,1),DP (0,8)) "Default" Nothing),DP (0,1)),((AnnComment DComment (DP (1,2),DP (1,3)) "|" Nothing),DP (1,2)),((AnnComment DComment (DP (0,1),DP (0,7)) "Ignore" Nothing),DP (0,1)),((AnnComment DComment (DP (1,2),DP (1,3)) "|" Nothing),DP (1,2)),((AnnComment DComment (DP (0,1),DP (0,6)) "Catch" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,12)) "ConsoleEvent" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,65)) "-- | Allows Windows console events to be caught and handled.  To" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,61)) "-- handle a console event, call 'installHandler' passing the" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- appropriate 'Handler' value.  When the event is received, if the" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,70)) "-- 'Handler' value is @Catch f@, then a new thread will be spawned by" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,69)) "-- the system to execute @f e@, where @e@ is the 'ConsoleEvent' that" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,17)) "-- was received." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,67)) "-- Note that console events can only be received by an application" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,79)) "-- running in a Windows console.  Certain environments that look like consoles" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,49)) "-- do not support console events, these include:" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,74)) "--  * Cygwin shells with @CYGWIN=tty@ set (if you don't set @CYGWIN=tty@," Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,59)) "--    then a Cygwin shell behaves like a Windows console)." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,36)) "--  * Cygwin xterm and rxvt windows" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,24)) "--  * MSYS rxvt windows" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,74)) "-- In order for your application to receive console events, avoid running" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,36)) "-- it in one of these environments." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,15)) "installHandler" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Handler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,15)) "installHandler" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "handler" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,4)) "|" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,9)) "threaded" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,15)) "modifyMVar" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,20)) "win32ConsoleHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "old_h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "new_h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) "rc" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,13)) "case" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,8)) "handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,7)) "Default" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_DFL" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "nullPtr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "no_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "Ignore" Nothing),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,4)) "->" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_IGN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "nullPtr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "no_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_HAN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "nullPtr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,13),DP (1,13)) "" Nothing),DP (1,13)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "prev_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,13)) "case" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,3)) "rc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_DFL" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Default" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_IGN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Ignore" Nothing),DP (0,1)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_HAN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "old_h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,11),DP (1,11)) "" Nothing),DP (1,11)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,11),DP (0,13)) "->" Nothing),DP (0,11)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,40)) "\"installHandler: Bad threaded rc value\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "new_h" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "prev_handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (2,3),DP (2,3)) "" Nothing),DP (2,3)),((AnnComment DComment (DP (0,0),DP (0,1)) "|" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "otherwise" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,9)) "alloca" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,4),DP (1,4)) "" Nothing),DP (1,4)),((AnnComment DComment (DP (0,0),DP (0,2)) "rc" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,9)) "case" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,8)) "handler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,7)) "Default" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_DFL" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,6)) "Ignore" Nothing),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,4)) "->" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,19)) "rts_installHandler" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_IGN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,1)) "v" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "newStablePtr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "toHandler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,4)) "poke" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "v" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,18)) "rts_installHandler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,12)) "STG_SIG_HAN" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,4),DP (1,4)) "" Nothing),DP (1,4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,4)) "case" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "rc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_DFL" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Default" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_IGN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Ignore" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,11)) "STG_SIG_HAN" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,5)) "osptr" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "peek" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "p_sp" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,4)) "oldh" Nothing),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,4)) "<-" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,15)) "deRefStablePtr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "osptr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,10),DP (1,57)) "-- stable pointer is no longer in use, free it." Nothing),DP (1,10)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,13)) "freeStablePtr" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "osptr" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Catch" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "oldh" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,16)) "fromConsoleEvent" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,6),DP (1,6)) "" Nothing),DP (1,6)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,11),DP (0,13)) "->" Nothing),DP (0,11)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,44)) "\"installHandler: Bad non-threaded rc value\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,3)) "" Nothing),DP (1,3)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "where" Nothing),DP (0,0)),((AnnComment DComment (DP (1,4),DP (1,4)) "" Nothing),DP (1,4)),((AnnComment DComment (DP (0,0),DP (0,16)) "fromConsoleEvent" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,6),DP (1,10)) "case" Nothing),DP (1,6)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,8)) "ControlC" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,18)) "{- CTRL_C_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,5)) "Break" Nothing),DP (0,0)),((AnnComment DComment (DP (0,4),DP (0,6)) "->" Nothing),DP (0,4)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,22)) "{- CTRL_BREAK_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,5)) "Close" Nothing),DP (0,0)),((AnnComment DComment (DP (0,4),DP (0,6)) "->" Nothing),DP (0,4)),((AnnComment DComment (DP (0,1),DP (0,2)) "2" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,22)) "{- CTRL_CLOSE_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,6)) "Logoff" Nothing),DP (0,0)),((AnnComment DComment (DP (0,3),DP (0,5)) "->" Nothing),DP (0,3)),((AnnComment DComment (DP (0,1),DP (0,2)) "5" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,23)) "{- CTRL_LOGOFF_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,8),DP (1,8)) "" Nothing),DP (1,8)),((AnnComment DComment (DP (0,0),DP (0,8)) "Shutdown" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "6" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,25)) "{- CTRL_SHUTDOWN_EVENT-}" Nothing),DP (0,1)),((AnnComment DComment (DP (2,4),DP (2,4)) "" Nothing),DP (2,4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,9)) "toHandler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "hdlr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,4)) "case" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,20)) "toWin32ConsoleEvent" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,10),DP (1,66)) "-- see rts/win32/ConsoleHandler.c for comments as to why" Nothing),DP (1,10)),((AnnComment DComment (DP (1,10),DP (1,51)) "-- rts_ConsoleHandlerDone is called here." Nothing),DP (1,10)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,4)) "->" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,5)) "hdlr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) ">>" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,23)) "rts_ConsoleHandlerDone" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "ev" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,7)) "Nothing" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,21)) "-- silently ignore.." Nothing),DP (0,1)),((AnnComment DComment (DP (2,4),DP (2,4)) "" Nothing),DP (2,4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,10)) "no_handler" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,22)) "\"win32ConsoleHandler\"" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "foreign" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,26)) "\"rtsSupportsBoundThreads\"" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "threaded" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "Bool" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,8)) "foreign" Nothing),DP (2,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "unsafe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,40)) "\"RtsExternal.h rts_InstallConsoleEvent\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,21)) "rts_installHandler" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "Ptr" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "StablePtr" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "CInt" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,8)) "foreign" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "unsafe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,39)) "\"RtsExternal.h rts_ConsoleHandlerDone\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,25)) "rts_ConsoleHandlerDone" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (3,1),DP (3,13)) "flushConsole" Nothing),DP (3,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Handle" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,13)) "flushConsole" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,22)) "wantReadableHandle_" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,15)) "\"flushConsole\"" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "Handle__" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,8)) "haDevice" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "dev" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "}" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,9)) "case" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,5)) "cast" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,7)) "Nothing" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,12)) "ioException" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (1,21),DP (1,28)) "IOError" Nothing),DP (1,21)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,17)) "IllegalOperation" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,15)) "\"flushConsole\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,25),DP (1,58)) "\"handle is not a file descriptor\"" Nothing),DP (1,25)),((AnnComment DComment (DP (0,1),DP (0,8)) "Nothing" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Nothing" Nothing),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "fd" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,9)) "" Nothing),DP (1,9)),((AnnComment DComment (DP (0,0),DP (0,24)) "throwErrnoIfMinus1Retry_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,15)) "\"flushConsole\"" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (1,12),DP (1,28)) "flush_console_fd" Nothing),DP (1,12)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "fdFD" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "fd" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "foreign" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,7)) "import" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "ccall" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "unsafe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,36)) "\"consUtils.h flush_input_console__\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,9),DP (1,25)) "flush_console_fd" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "IO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "CInt" Nothing),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,28)) "#endif /* mingw32_HOST_OS */" Nothing),DP (2,1)),((G AnnEofPos),DP (2,0))]))]
==============
([((../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:1:1,
    AnnModule),
   [../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:20:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:1:1,
    AnnWhere),
   [../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:22:9-13]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/base-4.7.0.2/GHC/ConsoleHandler.hs:24:1])],
 [(<no location info>,
   [AnnLineComment "-----------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- Installing Win32 console handlers.",
    AnnLineComment "--",
    AnnLineComment "-- NB. the contents of this module are only available on Windows.",
    AnnLineComment "--",
    AnnLineComment "-- Portability :  non-portable (GHC extensions)",
    AnnLineComment "-- Stability   :  internal",
    AnnLineComment "-- Maintainer  :  cvs-ghc@haskell.org",
    AnnLineComment "--",
    AnnLineComment "-- License     :  see libraries/base/LICENSE",
    AnnLineComment "-- Copyright   :  (c) The University of Glasgow",
    AnnLineComment "-- Module      :  GHC.ConsoleHandler",
    AnnLineComment "-- |",
    AnnLineComment "-----------------------------------------------------------------------------",
    AnnBlockComment "{-# LANGUAGE CPP #-}",
    AnnBlockComment "{-# LANGUAGE Trustworthy #-}"])])