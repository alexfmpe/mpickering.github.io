{-# OPTIONS_GHC -cpp #-}
import qualified Data.Set as Set
import qualified Data.Vector.Storable.ByteString.Char8 as P
import qualified Data.Vector.Storable.ByteString.Internal  as P
import qualified Data.Vector.Storable.ByteString.Unsafe    as P
import System.IO
import Control.Monad
import Data.HashTable as Hash
import Data.Maybe
import Data.Int (Int32)
import Data.Char (ord)

#define STRING_SETS             0
#define PACKEDSTRING_SETS       0
#define BYTESTRING_HASHTABLES   1

-- -----------------------------------------------------------------------------
-- Sets

#if STRING_SETS
main = do
  ps <- readFile "Usr.Dict.Words"
  loop (Set.fromList (lines ps)) `catch` \_ -> return ()

loop set = do
  ps <- hGetLine stdin
  when (not (ps `Set.member` set)) $ hPutStrLn stdout ps
  loop set
#endif

-- -----------------------------------------------------------------------------
-- PackedString with Sets

#if PACKEDSTRING_SETS
main = do
  ps <- P.readFile "Usr.Dict.Words"
  loop (Set.fromList (P.lines ps)) `catch` \_ -> return ()

loop set = do
  ps <- P.getLine
  when (not (ps `Set.member` set)) $ P.putStrLn ps
  loop set
#endif

#if BYTESTRING_HASHTABLES
main     = do
    ps <- P.readFile "Usr.Dict.Words"
    ht <- Hash.new (==) hash
    zipWithM (Hash.insert ht) (P.lines ps) (repeat True)
    loop ht `catch` \_ -> return ()

loop ht = do
    ps <- P.getLine
    b  <- Hash.lookup ht ps
    when (isNothing b) $ P.putStrLn ps
    loop ht

hash :: P.ByteString -> Int32
hash ps = go 0 0
  where
    len = P.length ps

    go :: Int -> Int -> Int32
    go n acc | acc `seq` False = undefined
             | n == len  = fromIntegral acc
             | otherwise = go (n+1)
                              ((fromIntegral)(ps `P.unsafeIndex` n) +
                                  (acc * 128 `rem` fromIntegral prime))
#endif

==============
../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs
==============
lengths:(1836,1832)

==============

({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Nothing) 
  (Nothing) 
  [
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,24)) "{-# OPTIONS_GHC -cpp #-}" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:18-25
       }
      Nothing{ModuleName: Data.Set}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Set}) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:18-54
       }
      Nothing{ModuleName: Data.Vector.Storable.ByteString.Char8}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: P}) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,2)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:18-57
       }
      Nothing{ModuleName: Data.Vector.Storable.ByteString.Internal}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: P}) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,4)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:18-55
       }
      Nothing{ModuleName: Data.Vector.Storable.ByteString.Unsafe}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: P}) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:1-16
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:8-16
       }
      Nothing{ModuleName: System.IO}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:1-20
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:8-20
       }
      Nothing{ModuleName: Control.Monad}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-29
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:8-21
       }
      Nothing{ModuleName: Data.HashTable}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Just {ModuleName: Hash}) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:1-17
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:8-17
       }
      Nothing{ModuleName: Data.Maybe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:8-15
       }
      Nothing{ModuleName: Data.Int}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:17-23
         }
        Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:18-22
           }
          Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:18-22
             }
            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Int32}))))]))))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:1-22
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:8-16
       }
      Nothing{ModuleName: Data.Char}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:18-22
         }
        Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:19-21
           }
          Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:19-21
             }
            Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: ord}))))])))))] 
  [
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (35,1) [DComment (DP (2,1),DP (2,33)) "#define STRING_SETS             0" Nothing,DComment (DP (1,1),DP (1,33)) "#define PACKEDSTRING_SETS       0" Nothing,DComment (DP (1,1),DP (1,33)) "#define BYTESTRING_HASHTABLES   1" Nothing,DComment (DP (2,1),DP (2,81)) "-- -----------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,8)) "-- Sets" Nothing,DComment (DP (2,1),DP (2,15)) "#if STRING_SETS" Nothing,DComment (DP (1,1),DP (1,5)) "main" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "readFile" Nothing,DComment (DP (0,1),DP (0,17)) "\"Usr.Dict.Words\"" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "Set.fromList" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "lines" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "catch" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "hGetLine" Nothing,DComment (DP (0,1),DP (0,6)) "stdin" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "Set.member" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "hPutStrLn" Nothing,DComment (DP (0,1),DP (0,7)) "stdout" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,81)) "-- -----------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,26)) "-- PackedString with Sets" Nothing,DComment (DP (2,1),DP (2,21)) "#if PACKEDSTRING_SETS" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "main" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,11)) "P.readFile" Nothing,DComment (DP (0,1),DP (0,17)) "\"Usr.Dict.Words\"" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "Set.fromList" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "P.lines" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "catch" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "P.getLine" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "Set.member" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "P.putStrLn" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,25)) "#if BYTESTRING_HASHTABLES" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:1-4
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: main})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-4)) "" Nothing),DP (0,-4)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:1-4
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: main})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,6)-(50,35)
              }
             Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,8)-(50,35)
                }
               Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(47,5)-(50,35) Ref "delta-1"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:5-37
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:5-6
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: ps}))) 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:11-37
                     }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:11-20
                       }
                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Qual {ModuleName: P} {OccName: readFile}))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:22-37
                       }
                      Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsLit 
                       (HsString "\"Usr.Dict.Words\"" {FastString: "Usr.Dict.Words"}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5-28
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5-6
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: ht}))) 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:11-28
                     }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:11-23
                       }
                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:11-18
                         }
                        Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Qual {ModuleName: Hash} {OccName: new}))) 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:20-23
                         }
                        Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: ==}))))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:25-28
                       }
                      Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: hash}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-56
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-56
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-42
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-29
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-12
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: zipWithM}))) 
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:14-29
                           }
                          Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (HsPar 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:15-28
                             }
                            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:15-25
                               }
                              Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Qual {ModuleName: Hash} {OccName: insert}))) 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:27-28
                               }
                              Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: ht}))))))))) 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:31-42
                         }
                        Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:32-41
                           }
                          Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:32-38
                             }
                            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Qual {ModuleName: P} {OccName: lines}))) 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:40-41
                             }
                            Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: ps}))))))))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:44-56
                       }
                      Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:45-55
                         }
                        Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:45-50
                           }
                          Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: repeat}))) 
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:52-55
                           }
                          Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: True}))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-35
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-35
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-11
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-8
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: loop}))) 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:10-11
                         }
                        Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: ht}))))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:13-19
                       }
                      Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: catch}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35
                       }
                      Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35 Ref "delta-2"),DP (0,0))])
                      (HsLam 
                       (MG 
                        [
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35
                           }
                          Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:22
                              }
                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (WildPat 
                              (PlaceHolder)))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:27-35
                               }
                              Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:27-35
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:27-32
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: return}))) 
                                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:34-35
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsVar 
                                   (Exact {Name: ()})))))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:1-4
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: loop})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:1-4
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: loop})) 
            (False))) 
          [
           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:6-7
             }
            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: ht})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,9)-(56,11)
              }
             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,11)-(56,11)
                }
               Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(53,5)-(56,11) Ref "delta-3"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:5-19
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:5-6
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: ps}))) 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:11-19
                     }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Qual {ModuleName: P} {OccName: getLine}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5-27
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,2))])
                  (BindStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: b}))) 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:11-27
                     }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:11-24
                       }
                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:11-21
                         }
                        Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Qual {ModuleName: Hash} {OccName: lookup}))) 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:23-24
                         }
                        Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: ht}))))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:26-27
                       }
                      Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: ps}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-38
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-38
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-22
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-8
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: when}))) 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:10-22
                         }
                        Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:11-21
                           }
                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:11-19
                             }
                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: isNothing}))) 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:21
                             }
                            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: b}))))))))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:24
                       }
                      Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:26-38
                       }
                      Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:26-35
                         }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Qual {ModuleName: P} {OccName: putStrLn}))) 
                       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:37-38
                         }
                        Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: ps}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5-11
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5-11
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5-8
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: loop}))) 
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:10-11
                       }
                      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: ht}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1-29
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1-4
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: hash}))] 
      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-29
        }
       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-29
          }
         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-20
            }
           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Qual {ModuleName: P} {OccName: ByteString}))) 
          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:25-29
            }
           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int32}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:1-4
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: hash})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:1-4
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: hash})) 
            (False))) 
          [
           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:6-7
             }
            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: ps})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,9)-(68,71)
              }
             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:11-16
                }
               Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:11-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:11-12
                    }
                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: go}))) 
                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:14
                    }
                   Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsOverLit {HsOverLit:0})))) 
                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:16
                  }
                 Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsOverLit {HsOverLit:0}))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-7
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: len})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-7
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: len})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:9-21
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:11-21
                          }
                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:11-18
                            }
                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Qual {ModuleName: P} {OccName: length}))) 
                          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:20-21
                            }
                           Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: ps})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(64,5)-(68,71)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:5-6
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: go})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(64,5)-(68,71)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:8
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: n}))),
                     ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:10-12
                       }
                      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: acc})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:14-42
                        }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-30
                           }
                          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-30
                             }
                            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-18
                               }
                              Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: acc}))) 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:20-24
                               }
                              Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: seq}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:26-30
                               }
                              Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: False}))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:34-42
                          }
                         Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: undefined}))))),
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:14-43
                        }
                       Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,2))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16-23
                           }
                          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16-23
                             }
                            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16
                               }
                              Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: n}))) 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:18-19
                               }
                              Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: ==}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:21-23
                               }
                              Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: len}))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:28-43
                          }
                         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:28-39
                            }
                           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: fromIntegral}))) 
                          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:41-43
                            }
                           Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: acc}))))))),
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(66,14)-(68,71)
                        }
                       Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:16-24
                           }
                          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:16-24
                             }
                            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: otherwise}))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(66,28)-(68,71)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:28-35
                            }
                           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:28-29
                              }
                             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: go}))) 
                            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:31-35
                              }
                             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:32-34
                                }
                               Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:32
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: n}))) 
                                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:33
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: +}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:34
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsOverLit {HsOverLit:1})))))))) 
                          ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,31)-(68,71)
                            }
                           Just (Ann (DP (1,26)) (ColDelta 26) DP (1,26) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,32)-(68,70)
                              }
                             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32-67
                                }
                               Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32-45
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:33-44
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: fromIntegral}))))) 
                                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:46-67
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:47-66
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:47-48
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: ps}))) 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:50-64
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                     (HsVar 
                                      (Qual {ModuleName: P} {OccName: unsafeIndex}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:66
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: n}))))))))) 
                              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:69
                                }
                               Just (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: +}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:35-70
                                }
                               Just (Ann (DP (1,30)) (ColDelta 30) DP (1,30) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-69
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-44
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-38
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: acc}))) 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:40
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: *}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:42-44
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsOverLit {HsOverLit:128})))) 
                                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:46-50
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: rem}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:52-69
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:52-63
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: fromIntegral}))) 
                                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:65-69
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: prime})))))))))))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [
              ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5-29
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [((G AnnDcolon),DP (0,1))])
               (TypeSig 
                [
                 ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5-6
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: go}))] 
                ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-29
                  }
                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                 (HsForAllTy 
                  (Implicit) 
                  (Nothing) 
                  (HsQTvs 
                   [] 
                   []) 
                  ({ <no location info> }
                   Nothing
                   []) 
                  ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-29
                    }
                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
                   (HsFunTy 
                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-13
                      }
                     Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: Int}))) 
                    ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:18-29
                      }
                     Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
                     (HsFunTy 
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:18-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: Int}))) 
                      ({ ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:25-29
                        }
                       Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: Int32}))))))))) 
                (PlaceHolder)))])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,24)) "{-# OPTIONS_GHC -cpp #-}" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,2)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,4)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:1-16 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:1-20 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-29 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:1-17 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:17-23 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:18-22 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:18-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:1-22 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:18-22 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:19-21 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:19-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-4)) "" Nothing),DP (0,-4)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (35,1) [DComment (DP (2,1),DP (2,33)) "#define STRING_SETS             0" Nothing,DComment (DP (1,1),DP (1,33)) "#define PACKEDSTRING_SETS       0" Nothing,DComment (DP (1,1),DP (1,33)) "#define BYTESTRING_HASHTABLES   1" Nothing,DComment (DP (2,1),DP (2,81)) "-- -----------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,8)) "-- Sets" Nothing,DComment (DP (2,1),DP (2,15)) "#if STRING_SETS" Nothing,DComment (DP (1,1),DP (1,5)) "main" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "readFile" Nothing,DComment (DP (0,1),DP (0,17)) "\"Usr.Dict.Words\"" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "Set.fromList" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "lines" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "catch" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "hGetLine" Nothing,DComment (DP (0,1),DP (0,6)) "stdin" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "Set.member" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "hPutStrLn" Nothing,DComment (DP (0,1),DP (0,7)) "stdout" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,81)) "-- -----------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,26)) "-- PackedString with Sets" Nothing,DComment (DP (2,1),DP (2,21)) "#if PACKEDSTRING_SETS" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "main" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,11)) "P.readFile" Nothing,DComment (DP (0,1),DP (0,17)) "\"Usr.Dict.Words\"" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "Set.fromList" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "P.lines" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "catch" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "P.getLine" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "ps" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "Set.member" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "P.putStrLn" Nothing,DComment (DP (0,1),DP (0,3)) "ps" Nothing,DComment (DP (1,3),DP (1,3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "loop" Nothing,DComment (DP (0,1),DP (0,4)) "set" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,25)) "#if BYTESTRING_HASHTABLES" Nothing] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,6)-(50,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,8)-(50,35) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(47,5)-(50,35) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:5-37 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(47,5)-(50,35) CN "(:)" Ref "delta-1",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:11-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:11-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:22-37 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5-28 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:11-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:11-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:11-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:25-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-56 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:14-29 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:15-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:15-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:27-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:31-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:32-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:32-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:40-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:44-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:45-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:45-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:52-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-11 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-35 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:10-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:13-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35 CN "(:)" Ref "delta-2",
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35 Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:22 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:27-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:27-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:27-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11) CN "ValD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:6-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,9)-(56,11) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,11)-(56,11) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(53,5)-(56,11) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:5-19 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(53,5)-(56,11) CN "(:)" Ref "delta-3",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:11-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5-27 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,2))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:11-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:11-24 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:23-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:26-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-38 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:10-22 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:11-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:11-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:26-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:26-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:37-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5-11 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5-11 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:10-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1-29 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-29 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:25-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:6-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,9)-(68,71) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:11-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:11-14 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:11-16 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:14 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:16 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(61,5)-(68,71) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:9-21 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:11-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:11-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:20-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5-29 CN "TypeSig" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-29 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:18-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:18-29 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:25-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(64,5)-(68,71) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(64,5)-(68,71) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:8 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:10-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:14-42 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-30 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:20-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:34-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:14-43 CN "GRHS" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,2))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16-23 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16-23 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:18-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:21-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:28-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:28-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:41-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(66,14)-(68,71) CN "GRHS" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:16-24 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:16-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:28-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:28-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(66,28)-(68,71) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:31-35 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:32-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:34 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,31)-(68,71) CN "HsPar" NotNeeded,
  (Ann (DP (1,26)) (ColDelta 26) DP (1,26) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32-67 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,32)-(68,70) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:33-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:46-67 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:47-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:47-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:50-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:69 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:35-70 CN "HsPar" NotNeeded,
  (Ann (DP (1,30)) (ColDelta 30) DP (1,30) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-69 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:42-44 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:46-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:52-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:52-69 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:65-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-50,0)) (ColDelta -21) DP (-50,0) [] []))]
==============
([((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32,
    AnnAs),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:27-28]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32,
    AnnQualified),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:8-16]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:1-32,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:2:30-32]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59,
    AnnAs),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:56-57]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59,
    AnnQualified),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:8-16]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:1-59,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:3:59]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63,
    AnnAs),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:60-61]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63,
    AnnQualified),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:8-16]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:1-63,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:4:63]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63,
    AnnAs),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:60-61]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63,
    AnnQualified),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:8-16]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:1-63,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:5:63]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:1-16,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:6:1-16,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:1-20,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:7:1-20,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-29,
    AnnAs),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:23-24]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-29,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-29,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:1-29,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:8:26-29]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:1-17,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:9:1-17,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:1-23,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:1-23,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:17-23,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:23]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:17-23,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:10:17]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:1-22,
    AnnImport),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:1-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:1-22,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:18-22,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:22]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:18-22,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:11:18]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35),
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35),
    AnnFunId),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:1-4]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,1)-(50,35),
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(46,8)-(50,35),
    AnnDo),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:46:8-9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:5-37,
    AnnLarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:8-9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:47:5-37,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5-28,
    AnnLarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:8-9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:5-28,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:20-23,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:23]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:20-23,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:20]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:20-23,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:48:21-22]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:5-56,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:14-29,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:29]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:14-29,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:14]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:31-42,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:42]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:31-42,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:31]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:44-56,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:56]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:44-56,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:49:44]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:5-35,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:13-19]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:13-19,
    AnnBackquote),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:13,
    ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:19]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:13-19,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:14-18]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35,
    AnnLam),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:21-35,
    AnnRarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:24-25]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:34-35,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:35]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:34-35,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:50:34]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11),
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11),
    AnnFunId),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:1-4]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,1)-(56,11),
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(52,11)-(56,11),
    AnnDo),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:52:11-12]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:5-19,
    AnnLarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:8-9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:53:5-19,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5-27,
    AnnLarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:8-9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:54:5-27,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-38,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:56:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:5-38,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:24]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:10-22,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:22]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:10-22,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:55:10]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1-29,
    AnnDcolon),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:6-7]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:1-29,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:9-29,
    AnnRarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:58:22-23]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71),
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71),
    AnnFunId),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:59:1-4]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71),
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:70:1]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(59,1)-(68,71),
    AnnWhere),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:60:3-7]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21,
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21,
    AnnFunId),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-7]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:61:5-21,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5-29,
    AnnDcolon),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:8-9]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:5-29,
    AnnSemi),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:5]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:11-29,
    AnnRarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:15-16]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:18-29,
    AnnRarrow),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:63:22-23]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(64,5)-(68,71),
    AnnFunId),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:5-6]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:14-42,
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:32]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:14-42,
    AnnVbar),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:14]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:16-30,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:20-24]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:20-24,
    AnnBackquote),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:20,
    ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:24]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:20-24,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:64:21-23]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:14-43,
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:26]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:14-43,
    AnnVbar),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:14]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:16-23,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:65:18-19]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(66,14)-(68,71),
    AnnEqual),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:26]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(66,14)-(68,71),
    AnnVbar),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:14]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:31-35,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:35]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:31-35,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:31]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:32-34,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:66:33]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,31)-(68,71),
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:71]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,31)-(68,71),
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:31]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32-45,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:45]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32-45,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:32]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:(67,32)-(68,70),
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:69]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:46-67,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:67]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:46-67,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:46]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:47-66,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:50-64]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:50-64,
    AnnBackquote),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:50,
    ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:64]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:50-64,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:67:51-63]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:35-70,
    AnnCloseP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:70]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:35-70,
    AnnOpenP),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:35]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-44,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:40]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:36-69,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:46-50]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:46-50,
    AnnBackquote),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:46,
    ../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:50]),
  ((../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:46-50,
    AnnVal),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:68:47-49]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/vector-bytestring-0.0.0.1/tests/spellcheck.hs:70:1])],
 [(<no location info>,
   [AnnLineComment "-- PackedString with Sets",
    AnnLineComment "-- -----------------------------------------------------------------------------",
    AnnLineComment "-- Sets",
    AnnLineComment "-- -----------------------------------------------------------------------------",
    AnnBlockComment "{-# OPTIONS_GHC -cpp #-}"])])