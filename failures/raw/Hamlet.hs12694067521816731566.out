{-# LANGUAGE CPP                  #-}
{-# LANGUAGE FlexibleInstances    #-}
{-# LANGUAGE PatternGuards        #-}
{-# LANGUAGE QuasiQuotes          #-}
{-# LANGUAGE TypeFamilies         #-}
{-# LANGUAGE TypeSynonymInstances #-}

{-# OPTIONS_GHC -fno-warn-orphans #-}

{- |
Module      :  Web.Hamlet
Description :  Hamlet templates.
Copyright   :  (c) 2011 Cedric Staub
License     :  GPL-3

Maintainer  :  Cedric Staub <cstaub@ethz.ch>
Stability   :  experimental
Portability :  non-portable
-}

module Web.Hamlet (
    rootTpl
  , overviewTpl
  ) where

import           Data.Label
import           Text.PrettyPrint.Html
import           Theory
import           Web.Theory
import           Web.Types

import           Yesod.Core

import           Data.List
import qualified Data.Map              as M
import           Data.Ord
import           Data.Time.Format
import           Data.Version          (showVersion)

import           System.Locale

import           Paths_tamarin_prover  (version)

--
-- Templates
--

{-
-- | Simple template for serving sites which are loaded through
-- AJAX instead of a normal request (no html/head/body tags).
--
-- Note: Don't use ajaxLayout and defaultLayout together, use
-- only one or the other.
-- ajaxLayout :: Monad m => GenericWidget m () -> GenericHandler m RepHtml
ajaxLayout w = error "ajaxLayout" $ fmap fst $ unGWidget w -- do
  -- (body, _, _) <- runRWST (unGWidget $ extractBody w) () 0
  -- (body, _, _) <- unGWidget $ w -- () 0
  -- hamletToRepHtml [whamlet|^{body}|]
-}

-- | Template for root/welcome page.
rootTpl :: TheoryMap      -- ^ Map of loaded theories
        -> Widget
-- rootTpl theories form enctype nonce = [whamlet|
rootTpl theories = [whamlet|
    $newline never
    <div class="ui-layout-container">
      <div class="ui-layout-north">
        <div class="ui-layout-pane">
          <div class="layout-pane-north">
            <div class="ui-layout-pane-north">
              <div id="introbar">
                <div id="header-info">
                  Running
                  \ <a href=@{RootR}><span class="tamarin">Tamarin</span></a>
                  \ #{showVersion version}
    \^{introTpl}
    <div class="intropage">
      <p>
        \^{theoriesTpl theories}
      <h2>Loading a new theory
      <p>
        You can load a new theory file from disk in order to work with it.
      <form class=root-form enctype="multipart/form-data" action=@{RootR} method=POST>
        Filename:
        <input type=file name="uploadedTheory">
        <div .submit-form>
          <input type=submit value="Load new theory">
      <p>Note: You can save a theory by downloading the source.
  |]

-- | Template for listing theories.
theoriesTpl :: TheoryMap -> Widget
theoriesTpl thmap = [whamlet|
    $newline never
    $if M.null thmap
      <strong>No theories loaded!</strong>
    $else
      <table>
        <thead>
          <th>Theory name
          <th>Time
          <th>Version
          <th>Origin
        $forall tgroup <- processMap thmap
          ^{theoryTpl (head tgroup)}
          $forall th <- ntail 4 tgroup
            ^{theoryTpl th}
    <br>
  |]
  where
    processMap =
      groupBy (\x y -> comparing tiName x y == EQ) .
      sortBy (comparing snd) . M.toList

    tiName = get thyName . tiTheory . snd

    ntail _ [] = []
    ntail i (_:xs)
      | length xs <= i = xs
      | otherwise      = ntail i xs

-- | Template for single line in table on root page.
theoryTpl :: (TheoryIdx, TheoryInfo) -> Widget
theoryTpl th = [whamlet|
    $newline never
    <tr>
      <td>
        <a href=@{OverviewR (fst th) TheoryHelp}>
          \#{get thyName $ tiTheory $ snd th}
      <td>#{formatTime defaultTimeLocale "%T" $ tiTime $ snd th}
      $if tiPrimary (snd th)
        <td>Original
      $else
        <td><em>Modified
      <td>#{origin th}
  |]
  where
    origin (_, ti) = case tiOrigin ti of
      Local path -> path
      Upload name ->  name
      Interactive -> "(interactively created)"

-- | Template for listing threads.
-- threadsTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute) => [T.Text] -> h
{-
threadsTpl threads = [whamlet|
    $newline never
    <h2>Threads
    <p>
      This page lists all threads that are currently registered as
      \ evaluating a request within the server. This is meant for debugging
      \ lockups within the server.
    $if null threads
      <strong>No threads registered!</strong>
    $else
      <table>
        <thead>
          <th>Request path
          <th>Kill?
        $forall th <- threads
          <tr>
            <td>#{th}
            <td><a href="@{KillThreadR}?path=#{th}">Kill</a>
  |]
-}

-- | Template for header frame (various information)
headerTpl :: TheoryInfo -> Widget
headerTpl info = [whamlet|
    $newline never
    <div class="layout-pane-north">
      <div #header-info>
        Running
        \ <a href=@{RootR}><span class="tamarin">Tamarin</span></a>
        \ #{showVersion version}
    <div #header-links>
      <a class=plain-link href=@{RootR}>Index</a>
      <a class=plain-link href=@{DownloadTheoryR idx filename}>Download</a>
      <ul #navigation>
        <li><a href="#">Actions</a>
          <ul>
            <li><a target=_blank href=@{TheorySourceR idx}>Show source</a>
        <li><a href="#">Options</a>
          <ul>
            <li><a id=graph-toggle href="#">Compact graphs</a>
            <li><a id=seqnt-toggle href="#">Compress sequents</a>
  |]
  where
            -- <li><a id=debug-toggle href="#">Debug pane</a>
            -- <li><a href=@{TheoryVariantsR idx}>Show variants</a>
            -- <li><a class=edit-link href=@{EditTheoryR idx}>Edit theory</a>
            -- <li><a class=edit-link href=@{EditPathR idx (TheoryLemma "")}>Add lemma</a>
            --
    idx = tiIndex info
    filename = get thyName (tiTheory info) ++ ".spthy"

    {- use this snipped to reactivate saving local theories
    localTheory (Local _) = True
    localTheory _         = False

      $if localTheory (tiOrigin info)
        <a class=save-link href=@{SaveTheoryR idx}>Save</a>

    -}

-- | Template for proof state (tree) frame.
proofStateTpl :: RenderUrl -> TheoryInfo -> IO Widget
proofStateTpl renderUrl ti = do
    let res = renderHtmlDoc $ theoryIndex renderUrl (tiIndex ti) (tiTheory ti)
    return [whamlet|
              $newline never
              #{preEscapedToMarkup res} |]

-- | Framing/UI-layout template (based on JavaScript/JQuery)
overviewTpl-- | Framing/UI-layout template (based on JavaScript/JQuery):: RenderUrl
overviewTpl :: RenderUrlTheoryInfo -- ^ Theory information
            -> TheoryInfo -- ^ Theory information-- ^ Theory path to load into main
            -> TheoryPathIO Widget  -- ^ Theory path to load into main
overviewTpl ->renderUrl Widgetinfo path = do
overviewTplproofStaterenderUrl<- proofStateTpl pathrenderUrl= do    info
  proofStatemainView <-<-pathTplrenderUrlinfo path
  mainViewreturn [whamlet|
    $newline never
    <div .ui-layout-north>
      ^{headerTpl info}
    <div .ui-layout-west>
      <h1 .pane-head>Proof scripts
      <div #proof-wrapper .scroll-wrapper>
        <div #proof .monospace>
          ^{proofState}
    <div .ui-layout-east>
      <h1 .pane-head>&nbsp;Debug information
      <div #debug-wrapper .scroll-wrapper>
        <div #ui-debug-display>
    <div .ui-layout-center>
      <h1 #main-title .pane-head>Visualization display
      <div #main-wrapper .scroll-wrapper tabindex=0>
        <div #ui-main-display>
          \^{mainView}
  |]       <- pathTpl renderUrl info path
  return [whamlet|
    $newline never
    <div .ui-layout-north>
      ^{headerTpl info}
    <div .ui-layout-west>
      <h1 .pane-head>Proof scripts
      <div #proof-wrapper .scroll-wrapper>
        <div #proof .monospace>
          ^{proofState}
    <div .ui-layout-east>
      <h1 .pane-head>&nbsp;Debug information
      <div #debug-wrapper .scroll-wrapper>
        <div #ui-debug-display>
    <div .ui-layout-center>
      <h1 #main-title .pane-head>Visualization display
      <div #main-wrapper .scroll-wrapper tabindex=0>
        <div #ui-main-display>
          \^{mainView}
  |]
-- | Theory path, displayed when loading main screen for first time.
pathTpl-- | Theory path, displayed when loading main screen for first time.:: RenderUrl
pathTpl :: RenderUrlTheoryInfo   -- ^ The theory
        -> TheoryInfo   -- ^ The theory-- ^ Path to display on load
        -> TheoryPathIO Widget    -- ^ Path to display on load
pathTpl ->renderUrl Widgetinfo path =
pathTplreturn$ [whamlet|
                $newline never
                #{htmlThyPath renderUrl info path} |] path =
    return $ [whamlet|
                $newline never
                #{htmlThyPath renderUrl info path} |]
-- | Template for introduction.
introTpl :: Widget
introTpl-- | Template for introduction.= [whamlet|
    $newline never
      <div id="logo">
        <p>
          <img src="/static/img/tamarin-logo-3-0-0.png">
      <noscript>
        <div class="warning">
          Warning: JavaScript must be enabled for the <span class="tamarin">Tamarin</span> prover GUI to function properly.
    <div class="intropage">
      <p>
        Authors:
        \ <a href="http://people.inf.ethz.ch/meiersi">Simon Meier</a>,
        \ <a href="https://www1.ethz.ch/infsec/people/benschmi">Benedikt Schmidt</a><br>
        Contributors:
        \ <a href="http://www.cs.ox.ac.uk/people/cas.cremers/">Cas Cremers</a>,
        \ <a href="http://cssx.ch">Cedric Staub</a>
      <p>
        <span class="tamarin">Tamarin</span> was developed at the
        \ <a href="http://www.infsec.ethz.ch">Information Security Institute</a>,
        \ <a href="http://www.ethz.ch">ETH Zurich</a>.
        \ This program comes with ABSOLUTELY NO WARRANTY. It is free software, and
        \ you are welcome to redistribute it according to its
        \ <a href="/static/LICENSE" type="text/plain">LICENSE.</a>
      <p>
        More information about Tamarin and technical papers describing the underlying
        \ theory can be found on the
        \ <a href="http://www.infsec.ethz.ch/research/software/tamarin"><span class="tamarin">Tamarin</span>
        \ webpage</a>.
  |] :: Widget

==============
../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs
==============
lengths:(10192,9743)

==============

({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,37)) "{-# LANGUAGE CPP                  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE FlexibleInstances    #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE PatternGuards        #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE QuasiQuotes          #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE TypeFamilies         #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE TypeSynonymInstances #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,38)) "{-# OPTIONS_GHC -fno-warn-orphans #-}" Nothing),DP (2,1)),((AnnComment DComment (DP (2,1),DP (11,3)) "{- |\nModule      :  Web.Hamlet\nDescription :  Hamlet templates.\nCopyright   :  (c) 2011 Cedric Staub\nLicense     :  GPL-3\n\nMaintainer  :  Cedric Staub <cstaub@ethz.ch>\nStability   :  experimental\nPortability :  non-portable\n-}" Nothing),DP (2,1)),((G AnnModule),DP (20,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (18,3)) "{-\n-- | Template for editing a theory.\n-- formTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute, h ~ Widget ())\n--         => WebUIRoute  -- ^ Form action route\n--         -> String      -- ^ Submit button label\n--         -> Widget ()   -- ^ Form widget\n--         -> Enctype     -- ^ Form encoding type\n--         -> Html        -- ^ Nonce field\n--         -> h\nformTpl action label form enctype nonce = [whamlet|\n    $newline never\n    <form action=@{action} method=POST enctype=#{enctype}>\n      ^{form}\n      <div .submit-form>\n        ^{addHtml nonce}\n        <input type=submit value=#{label}>\n        <input type=button id=cancel-form value=Cancel>\n  |]\n-}" Nothing),DP (0,-4)),((AnnComment DComment (DP (-16,1),DP (2,3)) "{-\n-- | Template for editing a theory.\n-- formTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute, h ~ Widget ())\n--         => WebUIRoute  -- ^ Form action route\n--         -> String      -- ^ Submit button label\n--         -> Widget ()   -- ^ Form widget\n--         -> Enctype     -- ^ Form encoding type\n--         -> Html        -- ^ Nonce field\n--         -> h\nformTpl action label form enctype nonce = [whamlet|\n    $newline never\n    <form action=@{action} method=POST enctype=#{enctype}>\n      ^{form}\n      <div .submit-form>\n        ^{addHtml nonce}\n        <input type=submit value=#{label}>\n        <input type=button id=cancel-form value=Cancel>\n  |]\n-}" Nothing),DP (-16,1)),((AnnComment DComment (DP (-1,1),DP (-1,1)) "" Nothing),DP (-1,1)),((G AnnEofPos),DP (22,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:21:8-17
     }
    Nothing{ModuleName: Web.Hamlet})) 
  (Just 
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(21,19)-(24,3)
     }
    Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:22:5-11
       }
      Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
      (IEVar 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:22:5-11
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: rootTpl})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:23:5-15
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:23:5-15
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: overviewTpl}))))])) 
  [
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:26:1-27
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:26:18-27
       }
      Nothing{ModuleName: Data.Label}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:18-38
       }
      Nothing{ModuleName: Text.PrettyPrint.Html}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:18-23
       }
      Nothing{ModuleName: Theory}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:18-27
       }
      Nothing{ModuleName: Web.Theory}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:1-26
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:18-26
       }
      Nothing{ModuleName: Web.Types}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:1-27
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:18-27
       }
      Nothing{ModuleName: Yesod.Core}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:1-26
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:18-26
       }
      Nothing{ModuleName: Data.List}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,14)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:18-25
       }
      Nothing{ModuleName: Data.Map}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: M}) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:1-25
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:18-25
       }
      Nothing{ModuleName: Data.Ord}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:1-33
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:18-33
       }
      Nothing{ModuleName: Data.Time.Format}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:1-52
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:18-29
       }
      Nothing{ModuleName: Data.Version}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:40-52
         }
        Just (Ann (DP (0,10)) (ColDelta 40) DP (0,10) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:41-51
           }
          Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:41-51
             }
            Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: showVersion}))))]))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:1-30
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:18-30
       }
      Nothing{ModuleName: System.Locale}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:1-48
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:18-37
       }
      Nothing{ModuleName: Paths_tamarin_prover}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:40-48
         }
        Just (Ann (DP (0,2)) (ColDelta 40) DP (0,2) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:41-47
           }
          Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:41-47
             }
            Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: version}))))])))))] 
  [
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,1)-(63,17)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (20,1) [DComment (DP (2,1),DP (2,3)) "--" Nothing,DComment (DP (1,1),DP (1,13)) "-- Templates" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (13,3)) "{-\n-- | Simple template for serving sites which are loaded through\n-- AJAX instead of a normal request (no html/head/body tags).\n--\n-- Note: Don't use ajaxLayout and defaultLayout together, use\n-- only one or the other.\n-- ajaxLayout :: Monad m => GenericWidget m () -> GenericHandler m RepHtml\najaxLayout w = error \"ajaxLayout\" $ fmap fst $ unGWidget w -- do\n  -- (body, _, _) <- runRWST (unGWidget $ extractBody w) () 0\n  -- (body, _, _) <- unGWidget $ w -- () 0\n  -- hamletToRepHtml [whamlet|^{body}|]\n-}" Nothing,DComment (DP (2,1),DP (2,37)) "-- | Template for root/welcome page." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:62:1-7
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: rootTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,12)-(63,17)
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,12)-(63,17)
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,6),DP (0,33)) "-- ^ Map of loaded theories" Nothing),DP (0,6)),((G AnnRarrow),DP (1,9))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:62:12-20
            }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: TheoryMap}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:63:12-17
            }
           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Widget}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,51)) "-- rootTpl theories form enctype nonce = [whamlet|" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:1-7
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: rootTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:1-7
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: rootTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:9-16
             }
            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: theories})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,18)-(90,4)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,20)-(90,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsSpliceE 
                (HsQuasiQuote 
                 (Unqual {OccName: splice}) 
                 (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,29)-(90,4)
                   } {FastString: "\n    $newline never\n    <div class=\"ui-layout-container\">\n      <div class=\"ui-layout-north\">\n        <div class=\"ui-layout-pane\">\n          <div class=\"layout-pane-north\">\n            <div class=\"ui-layout-pane-north\">\n              <div id=\"introbar\">\n                <div id=\"header-info\">\n                  Running\n                  \\ <a href=@{RootR}><span class=\"tamarin\">Tamarin</span></a>\n                  \\ #{showVersion version}\n    \\^{introTpl}\n    <div class=\"intropage\">\n      <p>\n        \\^{theoriesTpl theories}\n      <h2>Loading a new theory\n      <p>\n        You can load a new theory file from disk in order to work with it.\n      <form class=root-form enctype=\"multipart/form-data\" action=@{RootR} method=POST>\n        Filename:\n        <input type=file name=\"uploadedTheory\">\n        <div .submit-form>\n          <input type=submit value=\"Load new theory\">\n      <p>Note: You can save a theory by downloading the source.\n  "})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1-34
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,36)) "-- | Template for listing theories." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: theoriesTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-34
        }
       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-34
          }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-24
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: TheoryMap}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:29-34
            }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Widget}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: theoriesTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: theoriesTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:13-17
             }
            Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: thmap})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,19)-(121,35)
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,21)-(110,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsSpliceE 
                (HsQuasiQuote 
                 (Unqual {OccName: splice}) 
                 (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,30)-(110,4)
                   } {FastString: "\n    $newline never\n    $if M.null thmap\n      <strong>No theories loaded!</strong>\n    $else\n      <table>\n        <thead>\n          <th>Theory name\n          <th>Time\n          <th>Version\n          <th>Origin\n        $forall tgroup <- processMap thmap\n          ^{theoryTpl (head tgroup)}\n          $forall th <- ntail 4 tgroup\n            ^{theoryTpl th}\n    <br>\n  "})))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:112:5-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: processMap})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:112:5-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: processMap})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,16)-(114,39)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(113,7)-(114,39)
                          }
                         Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(113,7)-(114,28)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:7-50
                              }
                             Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:7-13
                                }
                               Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: groupBy}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:15-50
                                }
                               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49 Ref "delta-1"),DP (0,0))])
                                 (HsLam 
                                  (MG 
                                   [
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49
                                      }
                                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                     (Match 
                                      (Nothing) 
                                      [
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:17
                                         }
                                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: x}))),
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:19
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: y})))] 
                                      (Nothing) 
                                      (GRHSs 
                                       [
                                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-49
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                                         (GRHS 
                                          [] 
                                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-49
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                           (OpApp 
                                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-43
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-41
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-39
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-32
                                                    }
                                                   Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: comparing}))) 
                                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:34-39
                                                    }
                                                   Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: tiName}))))) 
                                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:41
                                                  }
                                                 Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: x}))))) 
                                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:43
                                                }
                                               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: y}))))) 
                                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:45-46
                                              }
                                             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: ==}))) 
                                            (PlaceHolder) 
                                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:48-49
                                              }
                                             Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: EQ})))))))] 
                                       (EmptyLocalBinds))))] 
                                   [] 
                                   (PlaceHolder) 
                                   (FromSource)))))))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:52
                              }
                             Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: .}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:7-28
                              }
                             Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:7-12
                                }
                               Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: sortBy}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:14-28
                                }
                               Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:15-27
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:15-23
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: comparing}))) 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:25-27
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: snd}))))))))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:30
                            }
                           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: .}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:32-39
                            }
                           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Qual {ModuleName: M} {OccName: toList})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiName})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-10
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: tiName})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:12-41
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-41
                          }
                         Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-35
                            }
                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-24
                              }
                             Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-16
                                }
                               Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: get}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:18-24
                                }
                               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: thyName}))))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:26
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: .}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:28-35
                              }
                             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: tiTheory}))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:37
                            }
                           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: .}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:39-41
                            }
                           Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: snd})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(118,5)-(121,35)
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: ntail})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-19
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-9
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: ntail})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:11
                       }
                      Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13-14
                       }
                      Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13-14
                         }
                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                        (Exact {Name: []})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:16-19
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:18-19
                          }
                         Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (HsVar 
                          (Exact {Name: []})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(119,5)-(121,35)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:5-9
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: ntail})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:11
                       }
                      Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: i}))),
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:13-18
                       }
                      Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:14-17
                         }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:15
                           }
                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Exact {Name: :})) 
                         (InfixCon 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:14
                            }
                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (WildPat 
                            (PlaceHolder))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:16-17
                            }
                           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: xs}))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:7-27
                        }
                       Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-22
                           }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-22
                             }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-17
                               }
                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-14
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: length}))) 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:16-17
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: xs}))))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:19-20
                               }
                              Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: <=}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:22
                               }
                              Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: i}))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:26-27
                          }
                         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: xs}))))),
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:7-35
                        }
                       Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,6))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:9-17
                           }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:9-17
                             }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: otherwise}))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:26-35
                          }
                         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:26-32
                            }
                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:26-30
                              }
                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: ntail}))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:32
                              }
                             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: i}))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:34-35
                            }
                           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: xs})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,53)) "-- | Template for single line in table on root page." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: theoryTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-46
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-46
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-36
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
           (HsTupleTy 
            (HsBoxedOrConstraintTuple) 
            [
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:15-23
               }
              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: TheoryIdx}))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:26-35
               }
              Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: TheoryInfo})))])) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:41-46
            }
           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Widget}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: theoryTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: theoryTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:11-12
             }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: th})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,14)-(142,46)
              }
             Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,16)-(137,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsSpliceE 
                (HsQuasiQuote 
                 (Unqual {OccName: splice}) 
                 (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,25)-(137,4)
                   } {FastString: "\n    $newline never\n    <tr>\n      <td>\n        <a href=@{OverviewR (fst th) TheoryHelp}>\n          \\#{get thyName $ tiTheory $ snd th}\n      <td>#{formatTime defaultTimeLocale \"%T\" $ tiTime $ snd th}\n      $if tiPrimary (snd th)\n        <td>Original\n      $else\n        <td><em>Modified\n      <td>#{origin th}\n  "})))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: origin})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:5-10
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: origin})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:12-18
                       }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (TuplePat 
                       [
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:13
                          }
                         Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                         (WildPat 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:16-17
                          }
                         Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (VarPat 
                          (Unqual {OccName: ti})))] 
                       (Boxed) 
                       []))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,20)-(142,46)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,22)-(142,46)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(140,7)-(142,46) Ref "delta-2"),DP (0,0))])
                         (HsCase 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:27-37
                            }
                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:27-34
                              }
                             Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: tiOrigin}))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:36-37
                              }
                             Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: ti}))))) 
                          (MG 
                           [
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-24
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-16
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (ConPatIn 
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-11
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (Unqual {OccName: Local})) 
                                 (PrefixCon 
                                  [
                                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:13-16
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (VarPat 
                                     (Unqual {OccName: path})))])))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:18-24
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:21-24
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: path})))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-26
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-17
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (ConPatIn 
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-12
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (Unqual {OccName: Upload})) 
                                 (PrefixCon 
                                  [
                                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:14-17
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (VarPat 
                                     (Unqual {OccName: name})))])))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:19-26
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:23-26
                                    }
                                   Just (Ann (DP (0,2)) (ColDelta 16) DP (0,2) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: name})))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7-46
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7-17
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (ConPatIn 
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7-17
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (Unqual {OccName: Interactive})) 
                                 (PrefixCon 
                                  [])))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:19-46
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:22-46
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsLit 
                                    (HsString "\"(interactively created)\"" {FastString: "(interactively created)"})))))] 
                               (EmptyLocalBinds))))] 
                           [] 
                           (PlaceHolder) 
                           (FromSource))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1-33
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (27,1) [DComment (DP (2,1),DP (2,35)) "-- | Template for listing threads." Nothing,DComment (DP (1,1),DP (1,76)) "-- threadsTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute) => [T.Text] -> h" Nothing,DComment (DP (1,1),DP (21,3)) "{-\nthreadsTpl threads = [whamlet|\n    $newline never\n    <h2>Threads\n    <p>\n      This page lists all threads that are currently registered as\n      \\ evaluating a request within the server. This is meant for debugging\n      \\ lockups within the server.\n    $if null threads\n      <strong>No threads registered!</strong>\n    $else\n      <table>\n        <thead>\n          <th>Request path\n          <th>Kill?\n        $forall th <- threads\n          <tr>\n            <td>#{th}\n            <td><a href=\"@{KillThreadR}?path=#{th}\">Kill</a>\n  |]\n-}" Nothing,DComment (DP (2,1),DP (2,53)) "-- | Template for header frame (various information)" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: headerTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-33
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-33
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-23
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: TheoryInfo}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:28-33
            }
           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Widget}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: headerTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: headerTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:11-14
             }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: info})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,16)-(196,54)
              }
             Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,18)-(188,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsSpliceE 
                (HsQuasiQuote 
                 (Unqual {OccName: splice}) 
                 (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,27)-(188,4)
                   } {FastString: "\n    $newline never\n    <div class=\"layout-pane-north\">\n      <div #header-info>\n        Running\n        \\ <a href=@{RootR}><span class=\"tamarin\">Tamarin</span></a>\n        \\ #{showVersion version}\n    <div #header-links>\n      <a class=plain-link href=@{RootR}>Index</a>\n      <a class=plain-link href=@{DownloadTheoryR idx filename}>Download</a>\n      <ul #navigation>\n        <li><a href=\"#\">Actions</a>\n          <ul>\n            <li><a target=_blank href=@{TheorySourceR idx}>Show source</a>\n        <li><a href=\"#\">Options</a>\n          <ul>\n            <li><a id=graph-toggle href=\"#\">Compact graphs</a>\n            <li><a id=seqnt-toggle href=\"#\">Compress sequents</a>\n  "})))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-7
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: idx})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-7
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: idx})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:9-22
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:11-22
                          }
                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:11-17
                            }
                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: tiIndex}))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:19-22
                            }
                           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: info})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-54
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: filename})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-54
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-12
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: filename})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:14-54
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-54
                          }
                         Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-42
                            }
                           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-26
                              }
                             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-18
                                }
                               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: get}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:20-26
                                }
                               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: thyName}))))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:28-42
                              }
                             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:29-41
                                }
                               Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:29-36
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: tiTheory}))) 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:38-41
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: info}))))))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:44-45
                            }
                           Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: ++}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:47-54
                            }
                           Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsLit 
                            (HsString "\".spthy\"" {FastString: ".spthy"})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1-53
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,5),DP (9,7)) "{- use this snipped to reactivate saving local theories\n    localTheory (Local _) = True\n    localTheory _         = False\n\n      $if localTheory (tiOrigin info)\n        <a class=save-link href=@{SaveTheoryR idx}>Save</a>\n\n    -}" Nothing,DComment (DP (2,1),DP (2,44)) "-- | Template for proof state (tree) frame." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1-13
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: proofStateTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-53
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-53
          }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-26
            }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RenderUrl}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:31-53
            }
           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:31-40
              }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: TheoryInfo}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:45-53
              }
             Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:45-46
                }
               Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:48-53
                }
               Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Widget}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:1-13
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: proofStateTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:1-13
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: proofStateTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:15-23
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: renderUrl}))),
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:25-26
             }
            Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: ti})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,28)-(213,42)
              }
             Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,30)-(213,42)
                }
               Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(210,5)-(213,42) Ref "delta-3"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:5-78
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])
                  (LetStmt 
                   (HsValBinds 
                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-11
                          }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: res})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-11
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: res})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:13-78
                                }
                               Just (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:15-78
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:15-27
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: renderHtmlDoc}))) 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:29
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: $}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-78
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-64
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-51
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-41
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: theoryIndex}))) 
                                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:43-51
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: renderUrl}))))) 
                                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:53-64
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:54-63
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:54-60
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: tiIndex}))) 
                                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:62-63
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: ti}))))))))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:66-78
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:67-77
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:67-74
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: tiTheory}))) 
                                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:76-77
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: ti})))))))))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        []))]} 
                     [])))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,5)-(213,42)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,5)-(213,42)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:211:5-10
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,12)-(213,42)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsSpliceE 
                       (HsQuasiQuote 
                        (Unqual {OccName: splice}) 
                        (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,21)-(213,42)
                          } {FastString: "\n              $newline never\n              #{preEscapedToMarkup res} "}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,1)-(220,24)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,61)) "-- | Framing/UI-layout template (based on JavaScript/JQuery)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "overviewTpl" Nothing,DComment (DP (0,-11),DP (0,49)) "-- | Framing/UI-layout template (based on JavaScript/JQuery)" Nothing,DComment (DP (0,-48),DP (0,-46)) "::" Nothing,DComment (DP (0,1),DP (0,10)) "RenderUrl" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:217:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: overviewTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,16)-(220,24)
        }
       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,16)-(220,24)
          }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "TheoryInfo" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,24)) "-- ^ Theory information" Nothing),DP (0,1)),((G AnnRarrow),DP (1,13))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:217:16-24
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RenderUrl}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(218,16)-(220,24)
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,1),DP (0,24)) "-- ^ Theory information" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-23),DP (0,11)) "-- ^ Theory path to load into main" Nothing),DP (0,-23)),((G AnnRarrow),DP (1,13))])
           (HsFunTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:218:16-25
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: TheoryInfo}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(219,16)-(220,24)
              }
             Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-8)) "IO" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,7)) "Widget" Nothing),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,36)) "-- ^ Theory path to load into main" Nothing),DP (0,2)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "overviewTpl" Nothing),DP (0,0)),((G AnnRarrow),DP (1,13))])
             (HsFunTy 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:219:16-25
                }
               Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: TheoryPath}))) 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:16-24
                }
               Just (Ann (DP (0,-6)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,7)) "renderUrl" Nothing] [])
               (HsAppTy 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:16-17
                  }
                 Just (Ann (DP (0,-6)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                 (HsTyVar 
                  (Unqual {OccName: IO}))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:19-24
                  }
                 Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Widget}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,2)) "info" Nothing,DComment (DP (0,1),DP (0,5)) "path" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: overviewTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "renderUrl" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: overviewTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:13-21
             }
            Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,10)) "proofState" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: renderUrl}))),
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:23-26
             }
            Just (Ann (DP (0,-7)) (ColDelta 23) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "<-" Nothing,DComment (DP (0,1),DP (0,14)) "proofStateTpl" Nothing] [((G AnnVal),DP (0,-7))])
            (VarPat 
             (Unqual {OccName: info}))),
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:28-31
             }
            Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: path})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,33)-(242,4)
              }
             Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,35)-(242,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(222,3)-(242,4) Ref "delta-4"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:3-44
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-2)) "mainView" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:3-12
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: proofState}))) 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:17-44
                     }
                    Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,6)) "pathTpl" Nothing] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:17-39
                       }
                      Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:17-29
                         }
                        Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-5))])
                        (HsVar 
                         (Unqual {OccName: proofStateTpl}))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:31-39
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "renderUrl" Nothing] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: renderUrl}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:41-44
                       }
                      Just (Ann (DP (0,-1)) (ColDelta 38) DP (0,1) [DComment (DP (0,-7),DP (0,-3)) "info" Nothing,DComment (DP (0,1),DP (0,5)) "path" Nothing] [((G AnnVal),DP (0,-1))])
                      (HsVar 
                       (Unqual {OccName: info}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3-41
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "return" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (18,2)) "[whamlet|\n    $newline never\n    <div .ui-layout-north>\n      ^{headerTpl info}\n    <div .ui-layout-west>\n      <h1 .pane-head>Proof scripts\n      <div #proof-wrapper .scroll-wrapper>\n        <div #proof .monospace>\n          ^{proofState}\n    <div .ui-layout-east>\n      <h1 .pane-head>&nbsp;Debug information\n      <div #debug-wrapper .scroll-wrapper>\n        <div #ui-debug-display>\n    <div .ui-layout-center>\n      <h1 #main-title .pane-head>Visualization display\n      <div #main-wrapper .scroll-wrapper tabindex=0>\n        <div #ui-main-display>\n          \\^{mainView}\n  |]" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3-10
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: mainView}))) 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-41
                     }
                    Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-36
                       }
                      Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-31
                         }
                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-21
                           }
                          Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: pathTpl}))) 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:23-31
                           }
                          Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: renderUrl}))))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:33-36
                         }
                        Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: info}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:38-41
                       }
                      Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: path}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,3)-(242,4)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,3)-(242,4)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:224:3-8
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,10)-(242,4)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsSpliceE 
                       (HsQuasiQuote 
                        (Unqual {OccName: splice}) 
                        (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,19)-(242,4)
                          } {FastString: "\n    $newline never\n    <div .ui-layout-north>\n      ^{headerTpl info}\n    <div .ui-layout-west>\n      <h1 .pane-head>Proof scripts\n      <div #proof-wrapper .scroll-wrapper>\n        <div #proof .monospace>\n          ^{proofState}\n    <div .ui-layout-east>\n      <h1 .pane-head>&nbsp;Debug information\n      <div #debug-wrapper .scroll-wrapper>\n        <div #ui-debug-display>\n    <div .ui-layout-center>\n      <h1 #main-title .pane-head>Visualization display\n      <div #main-wrapper .scroll-wrapper tabindex=0>\n        <div #ui-main-display>\n          \\^{mainView}\n  "}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,1)-(248,20)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,69)) "-- | Theory path, displayed when loading main screen for first time." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "pathTpl" Nothing,DComment (DP (0,-7),DP (0,61)) "-- | Theory path, displayed when loading main screen for first time." Nothing,DComment (DP (0,-60),DP (0,-58)) "::" Nothing,DComment (DP (0,1),DP (0,10)) "RenderUrl" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:245:1-7
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: pathTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,12)-(248,20)
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,12)-(248,20)
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "TheoryInfo" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,3),DP (0,18)) "-- ^ The theory" Nothing),DP (0,3)),((G AnnRarrow),DP (1,9))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:245:12-20
            }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RenderUrl}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(246,12)-(248,20)
            }
           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (0,3),DP (0,18)) "-- ^ The theory" Nothing),DP (0,3)),((AnnComment DComment (DP (0,-15),DP (0,13)) "-- ^ Path to display on load" Nothing),DP (0,-15)),((G AnnRarrow),DP (1,9))])
           (HsFunTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:246:12-21
              }
             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: TheoryInfo}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(247,12)-(248,20)
              }
             Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-8)) "IO" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,7)) "Widget" Nothing),DP (0,1)),((AnnComment DComment (DP (0,4),DP (0,32)) "-- ^ Path to display on load" Nothing),DP (0,4)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "pathTpl" Nothing),DP (0,0)),((G AnnRarrow),DP (1,9))])
             (HsFunTy 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:247:12-21
                }
               Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: TheoryPath}))) 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:12-20
                }
               Just (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,7)) "renderUrl" Nothing] [])
               (HsAppTy 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:12-13
                  }
                 Just (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                 (HsTyVar 
                  (Unqual {OccName: IO}))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:15-20
                  }
                 Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Widget}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,2)) "info" Nothing,DComment (DP (0,1),DP (0,5)) "path" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:1-7
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: pathTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:1-7
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: pathTpl})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:9-17
             }
            Just (Ann (DP (0,-2)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,3)) "return" Nothing] [((G AnnVal),DP (0,-2))])
            (VarPat 
             (Unqual {OccName: renderUrl}))),
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:19-22
             }
            Just (Ann (DP (-2,19)) (ColDelta 19) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "$" Nothing,DComment (DP (0,1),DP (2,54)) "[whamlet|\n                $newline never\n                #{htmlThyPath renderUrl info path} |]" Nothing] [((G AnnVal),DP (-2,19))])
            (VarPat 
             (Unqual {OccName: info}))),
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:24-27
             }
            Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: path})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,29)-(252,53)
              }
             Just (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(250,5)-(252,53)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
               (OpApp 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:250:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: return}))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:250:12
                  }
                 Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(250,14)-(252,53)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsSpliceE 
                  (HsQuasiQuote 
                   (Unqual {OccName: splice}) 
                   (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(250,23)-(252,53)
                     } {FastString: "\n                $newline never\n                #{htmlThyPath renderUrl info path} "})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1-18
     }
    Just (Ann (DP (-27,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,32)) "-- | Template for introduction." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "introTpl" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Widget" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "introTpl" Nothing,DComment (DP (0,-8),DP (0,23)) "-- | Template for introduction." Nothing,DComment (DP (0,-22),DP (0,-21)) "=" Nothing,DComment (DP (0,1),DP (28,5)) "[whamlet|\n    $newline never\n      <div id=\"logo\">\n        <p>\n          <img src=\"/static/img/tamarin-logo-3-0-0.png\">\n      <noscript>\n        <div class=\"warning\">\n          Warning: JavaScript must be enabled for the <span class=\"tamarin\">Tamarin</span> prover GUI to function properly.\n    <div class=\"intropage\">\n      <p>\n        Authors:\n        \\ <a href=\"http://people.inf.ethz.ch/meiersi\">Simon Meier</a>,\n        \\ <a href=\"https://www1.ethz.ch/infsec/people/benschmi\">Benedikt Schmidt</a><br>\n        Contributors:\n        \\ <a href=\"http://www.cs.ox.ac.uk/people/cas.cremers/\">Cas Cremers</a>,\n        \\ <a href=\"http://cssx.ch\">Cedric Staub</a>\n      <p>\n        <span class=\"tamarin\">Tamarin</span> was developed at the\n        \\ <a href=\"http://www.infsec.ethz.ch\">Information Security Institute</a>,\n        \\ <a href=\"http://www.ethz.ch\">ETH Zurich</a>.\n        \\ This program comes with ABSOLUTELY NO WARRANTY. It is free software, and\n        \\ you are welcome to redistribute it according to its\n        \\ <a href=\"/static/LICENSE\" type=\"text/plain\">LICENSE.</a>\n      <p>\n        More information about Tamarin and technical papers describing the underlying\n        \\ theory can be found on the\n        \\ <a href=\"http://www.infsec.ethz.ch/research/software/tamarin\"><span class=\"tamarin\">Tamarin</span>\n        \\ webpage</a>.\n  |]" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1-8
         }
        Just (Ann (DP (-27,1)) (ColDelta 1) DP (4,1) [] [((G AnnVal),DP (-27,1))])
        (Unqual {OccName: introTpl}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:13-18
        }
       Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Nothing
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:13-18
          }
         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: Widget}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:257:1-8
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: introTpl})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:257:1-8
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: introTpl})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,10)-(285,4)
              }
             Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,12)-(285,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsSpliceE 
                (HsQuasiQuote 
                 (Unqual {OccName: splice}) 
                 (Unqual {OccName: whamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,21)-(285,4)
                   } {FastString: "\n    $newline never\n      <div id=\"logo\">\n        <p>\n          <img src=\"/static/img/tamarin-logo-3-0-0.png\">\n      <noscript>\n        <div class=\"warning\">\n          Warning: JavaScript must be enabled for the <span class=\"tamarin\">Tamarin</span> prover GUI to function properly.\n    <div class=\"intropage\">\n      <p>\n        Authors:\n        \\ <a href=\"http://people.inf.ethz.ch/meiersi\">Simon Meier</a>,\n        \\ <a href=\"https://www1.ethz.ch/infsec/people/benschmi\">Benedikt Schmidt</a><br>\n        Contributors:\n        \\ <a href=\"http://www.cs.ox.ac.uk/people/cas.cremers/\">Cas Cremers</a>,\n        \\ <a href=\"http://cssx.ch\">Cedric Staub</a>\n      <p>\n        <span class=\"tamarin\">Tamarin</span> was developed at the\n        \\ <a href=\"http://www.infsec.ethz.ch\">Information Security Institute</a>,\n        \\ <a href=\"http://www.ethz.ch\">ETH Zurich</a>.\n        \\ This program comes with ABSOLUTELY NO WARRANTY. It is free software, and\n        \\ you are welcome to redistribute it according to its\n        \\ <a href=\"/static/LICENSE\" type=\"text/plain\">LICENSE.</a>\n      <p>\n        More information about Tamarin and technical papers describing the underlying\n        \\ theory can be found on the\n        \\ <a href=\"http://www.infsec.ethz.ch/research/software/tamarin\"><span class=\"tamarin\">Tamarin</span>\n        \\ webpage</a>.\n  "})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,37)) "{-# LANGUAGE CPP                  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE FlexibleInstances    #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE PatternGuards        #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE QuasiQuotes          #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE TypeFamilies         #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "{-# LANGUAGE TypeSynonymInstances #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,38)) "{-# OPTIONS_GHC -fno-warn-orphans #-}" Nothing),DP (2,1)),((AnnComment DComment (DP (2,1),DP (11,3)) "{- |\nModule      :  Web.Hamlet\nDescription :  Hamlet templates.\nCopyright   :  (c) 2011 Cedric Staub\nLicense     :  GPL-3\n\nMaintainer  :  Cedric Staub <cstaub@ethz.ch>\nStability   :  experimental\nPortability :  non-portable\n-}" Nothing),DP (2,1)),((G AnnModule),DP (20,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (18,3)) "{-\n-- | Template for editing a theory.\n-- formTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute, h ~ Widget ())\n--         => WebUIRoute  -- ^ Form action route\n--         -> String      -- ^ Submit button label\n--         -> Widget ()   -- ^ Form widget\n--         -> Enctype     -- ^ Form encoding type\n--         -> Html        -- ^ Nonce field\n--         -> h\nformTpl action label form enctype nonce = [whamlet|\n    $newline never\n    <form action=@{action} method=POST enctype=#{enctype}>\n      ^{form}\n      <div .submit-form>\n        ^{addHtml nonce}\n        <input type=submit value=#{label}>\n        <input type=button id=cancel-form value=Cancel>\n  |]\n-}" Nothing),DP (0,-4)),((AnnComment DComment (DP (-16,1),DP (2,3)) "{-\n-- | Template for editing a theory.\n-- formTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute, h ~ Widget ())\n--         => WebUIRoute  -- ^ Form action route\n--         -> String      -- ^ Submit button label\n--         -> Widget ()   -- ^ Form widget\n--         -> Enctype     -- ^ Form encoding type\n--         -> Html        -- ^ Nonce field\n--         -> h\nformTpl action label form enctype nonce = [whamlet|\n    $newline never\n    <form action=@{action} method=POST enctype=#{enctype}>\n      ^{form}\n      <div .submit-form>\n        ^{addHtml nonce}\n        <input type=submit value=#{label}>\n        <input type=button id=cancel-form value=Cancel>\n  |]\n-}" Nothing),DP (-16,1)),((AnnComment DComment (DP (-1,1),DP (-1,1)) "" Nothing),DP (-1,1)),((G AnnEofPos),DP (22,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(21,19)-(24,3) CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:22:5-11 CN "IEVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:22:5-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:23:5-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:23:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:26:1-27 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:1-38 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:1-27 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:1-26 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:1-27 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:1-26 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,14)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:1-25 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:1-33 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:1-52 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:40-52 CN "(:)" NotNeeded,
  (Ann (DP (0,10)) (ColDelta 40) DP (0,10) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:41-51 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:41-51 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:1-30 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:1-48 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:40-48 CN "(:)" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 40) DP (0,2) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:41-47 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:41-47 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:62:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,1)-(63,17) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (20,1) [DComment (DP (2,1),DP (2,3)) "--" Nothing,DComment (DP (1,1),DP (1,13)) "-- Templates" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (13,3)) "{-\n-- | Simple template for serving sites which are loaded through\n-- AJAX instead of a normal request (no html/head/body tags).\n--\n-- Note: Don't use ajaxLayout and defaultLayout together, use\n-- only one or the other.\n-- ajaxLayout :: Monad m => GenericWidget m () -> GenericHandler m RepHtml\najaxLayout w = error \"ajaxLayout\" $ fmap fst $ unGWidget w -- do\n  -- (body, _, _) <- runRWST (unGWidget $ extractBody w) () 0\n  -- (body, _, _) <- unGWidget $ w -- () 0\n  -- hamletToRepHtml [whamlet|^{body}|]\n-}" Nothing,DComment (DP (2,1),DP (2,37)) "-- | Template for root/welcome page." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:62:12-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,12)-(63,17) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,12)-(63,17) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,6),DP (0,33)) "-- ^ Map of loaded theories" Nothing),DP (0,6)),((G AnnRarrow),DP (1,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:63:12-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,51)) "-- rootTpl theories form enctype nonce = [whamlet|" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:9-16 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,18)-(90,4) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,20)-(90,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1-34 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,36)) "-- | Template for listing theories." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-34 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-34 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:29-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:13-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,19)-(121,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,21)-(110,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:112:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(121,35) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,16)-(114,39) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:7-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:7-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(113,7)-(114,28) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(113,7)-(114,39) CN "OpApp" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:15-50 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49 CN "(:)" Ref "delta-1",
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49 Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:19 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-49 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:34-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:45-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:48-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:7-28 CN "HsApp" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:14-28 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:15-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:15-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:25-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:32-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41 CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:12-41 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-24 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:28-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:39-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-19 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(118,5)-(121,35) CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:11 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13-14 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13-14 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:16-19 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:18-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(119,5)-(121,35) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:13-18 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:14 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:14-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:15 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:16-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:7-27 CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-22 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-22 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:16-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:19-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:26-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:7-35 CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,6))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:9-17 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:9-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:26-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:26-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1-46 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,53)) "-- | Template for single line in table on root page." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-36 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:15-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:26-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:41-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:11-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,14)-(142,46) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,16)-(137,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:12-18 CN "TuplePat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:16-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,20)-(142,46) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,22)-(142,46) CN "HsCase" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(140,7)-(142,46) Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:27-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:27-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:36-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-16 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-24 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(140,7)-(142,46) CN "(:)" Ref "delta-2",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:13-16 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:18-24 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:21-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-26 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:14-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:19-26 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:23-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 16) DP (0,2) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7-46 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:19-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:22-46 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1-33 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (27,1) [DComment (DP (2,1),DP (2,35)) "-- | Template for listing threads." Nothing,DComment (DP (1,1),DP (1,76)) "-- threadsTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute) => [T.Text] -> h" Nothing,DComment (DP (1,1),DP (21,3)) "{-\nthreadsTpl threads = [whamlet|\n    $newline never\n    <h2>Threads\n    <p>\n      This page lists all threads that are currently registered as\n      \\ evaluating a request within the server. This is meant for debugging\n      \\ lockups within the server.\n    $if null threads\n      <strong>No threads registered!</strong>\n    $else\n      <table>\n        <thead>\n          <th>Request path\n          <th>Kill?\n        $forall th <- threads\n          <tr>\n            <td>#{th}\n            <td><a href=\"@{KillThreadR}?path=#{th}\">Kill</a>\n  |]\n-}" Nothing,DComment (DP (2,1),DP (2,53)) "-- | Template for header frame (various information)" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-33 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-33 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:28-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:11-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,16)-(196,54) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,18)-(188,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(195,5)-(196,54) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (6,0) [DComment (DP (1,8),DP (1,57)) "-- <li><a id=debug-toggle href=\"#\">Debug pane</a>" Nothing,DComment (DP (1,8),DP (1,63)) "-- <li><a href=@{TheoryVariantsR idx}>Show variants</a>" Nothing,DComment (DP (1,8),DP (1,73)) "-- <li><a class=edit-link href=@{EditTheoryR idx}>Edit theory</a>" Nothing,DComment (DP (1,8),DP (1,86)) "-- <li><a class=edit-link href=@{EditPathR idx (TheoryLemma \"\")}>Add lemma</a>" Nothing,DComment (DP (1,8),DP (1,10)) "--" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:9-22 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:11-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:11-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-54 CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-54 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:14-54 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:20-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:28-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:29-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:29-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:38-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:44-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:47-54 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1-53 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,5),DP (9,7)) "{- use this snipped to reactivate saving local theories\n    localTheory (Local _) = True\n    localTheory _         = False\n\n      $if localTheory (tiOrigin info)\n        <a class=save-link href=@{SaveTheoryR idx}>Save</a>\n\n    -}" Nothing,DComment (DP (2,1),DP (2,44)) "-- | Template for proof state (tree) frame." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-53 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-53 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:31-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:31-53 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:45-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:45-53 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:48-53 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:15-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:25-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,28)-(213,42) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,30)-(213,42) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(210,5)-(213,42) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:5-78 CN "LetStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(210,5)-(213,42) CN "(:)" Ref "delta-3",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:13-78 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:15-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:15-78 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:31-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:43-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:53-64 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:54-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:54-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:62-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:66-78 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:67-74 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:67-77 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:76-77 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:211:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,5)-(213,42) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,5)-(213,42) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(211,12)-(213,42) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:217:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,1)-(220,24) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,61)) "-- | Framing/UI-layout template (based on JavaScript/JQuery)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "overviewTpl" Nothing,DComment (DP (0,-11),DP (0,49)) "-- | Framing/UI-layout template (based on JavaScript/JQuery)" Nothing,DComment (DP (0,-48),DP (0,-46)) "::" Nothing,DComment (DP (0,1),DP (0,10)) "RenderUrl" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:217:16-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,16)-(220,24) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,16)-(220,24) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "TheoryInfo" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,24)) "-- ^ Theory information" Nothing),DP (0,1)),((G AnnRarrow),DP (1,13))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:218:16-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(218,16)-(220,24) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,1),DP (0,24)) "-- ^ Theory information" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-23),DP (0,11)) "-- ^ Theory path to load into main" Nothing),DP (0,-23)),((G AnnRarrow),DP (1,13))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:219:16-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(219,16)-(220,24) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-8)) "IO" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,7)) "Widget" Nothing),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,36)) "-- ^ Theory path to load into main" Nothing),DP (0,2)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "overviewTpl" Nothing),DP (0,0)),((G AnnRarrow),DP (1,13))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:16-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:16-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,7)) "renderUrl" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "renderUrl" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,2)) "info" Nothing,DComment (DP (0,1),DP (0,5)) "path" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:13-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,10)) "proofState" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:23-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 23) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "<-" Nothing,DComment (DP (0,1),DP (0,14)) "proofStateTpl" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:28-31 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,33)-(242,4) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,35)-(242,4) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(222,3)-(242,4) Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:3-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:3-44 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-2)) "mainView" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(222,3)-(242,4) CN "(:)" Ref "delta-4",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [DComment (DP (0,4),DP (0,8)) "info" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:17-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:17-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:17-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,6)) "pathTpl" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:31-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "renderUrl" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:41-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 38) DP (0,1) [DComment (DP (0,-7),DP (0,-3)) "info" Nothing,DComment (DP (0,1),DP (0,5)) "path" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3-10 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3-41 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "return" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (18,2)) "[whamlet|\n    $newline never\n    <div .ui-layout-north>\n      ^{headerTpl info}\n    <div .ui-layout-west>\n      <h1 .pane-head>Proof scripts\n      <div #proof-wrapper .scroll-wrapper>\n        <div #proof .monospace>\n          ^{proofState}\n    <div .ui-layout-east>\n      <h1 .pane-head>&nbsp;Debug information\n      <div #debug-wrapper .scroll-wrapper>\n        <div #ui-debug-display>\n    <div .ui-layout-center>\n      <h1 #main-title .pane-head>Visualization display\n      <div #main-wrapper .scroll-wrapper tabindex=0>\n        <div #ui-main-display>\n          \\^{mainView}\n  |]" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:15-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:23-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:33-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:38-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:224:3-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,3)-(242,4) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,3)-(242,4) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(224,10)-(242,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:245:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,1)-(248,20) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,69)) "-- | Theory path, displayed when loading main screen for first time." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "pathTpl" Nothing,DComment (DP (0,-7),DP (0,61)) "-- | Theory path, displayed when loading main screen for first time." Nothing,DComment (DP (0,-60),DP (0,-58)) "::" Nothing,DComment (DP (0,1),DP (0,10)) "RenderUrl" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:245:12-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,12)-(248,20) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,12)-(248,20) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "TheoryInfo" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,3),DP (0,18)) "-- ^ The theory" Nothing),DP (0,3)),((G AnnRarrow),DP (1,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:246:12-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(246,12)-(248,20) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (0,3),DP (0,18)) "-- ^ The theory" Nothing),DP (0,3)),((AnnComment DComment (DP (0,-15),DP (0,13)) "-- ^ Path to display on load" Nothing),DP (0,-15)),((G AnnRarrow),DP (1,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:247:12-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(247,12)-(248,20) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-8)) "IO" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,7)) "Widget" Nothing),DP (0,1)),((AnnComment DComment (DP (0,4),DP (0,32)) "-- ^ Path to display on load" Nothing),DP (0,4)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "pathTpl" Nothing),DP (0,0)),((G AnnRarrow),DP (1,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:12-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:12-20 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,7)) "renderUrl" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:15-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,2)) "info" Nothing,DComment (DP (0,1),DP (0,5)) "path" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:9-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,3)) "return" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:19-22 CN "VarPat" NotNeeded,
  (Ann (DP (-2,19)) (ColDelta 19) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "$" Nothing,DComment (DP (0,1),DP (2,54)) "[whamlet|\n                $newline never\n                #{htmlThyPath renderUrl info path} |]" Nothing] [((G AnnVal),DP (-2,19))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:24-27 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,29)-(252,53) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:250:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(250,5)-(252,53) CN "OpApp" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:250:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(250,14)-(252,53) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (-27,1)) (ColDelta 1) DP (4,1) [] [((G AnnVal),DP (-27,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1-18 CN "SigD" NotNeeded,
  (Ann (DP (-27,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,32)) "-- | Template for introduction." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "introTpl" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Widget" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "introTpl" Nothing,DComment (DP (0,-8),DP (0,23)) "-- | Template for introduction." Nothing,DComment (DP (0,-22),DP (0,-21)) "=" Nothing,DComment (DP (0,1),DP (28,5)) "[whamlet|\n    $newline never\n      <div id=\"logo\">\n        <p>\n          <img src=\"/static/img/tamarin-logo-3-0-0.png\">\n      <noscript>\n        <div class=\"warning\">\n          Warning: JavaScript must be enabled for the <span class=\"tamarin\">Tamarin</span> prover GUI to function properly.\n    <div class=\"intropage\">\n      <p>\n        Authors:\n        \\ <a href=\"http://people.inf.ethz.ch/meiersi\">Simon Meier</a>,\n        \\ <a href=\"https://www1.ethz.ch/infsec/people/benschmi\">Benedikt Schmidt</a><br>\n        Contributors:\n        \\ <a href=\"http://www.cs.ox.ac.uk/people/cas.cremers/\">Cas Cremers</a>,\n        \\ <a href=\"http://cssx.ch\">Cedric Staub</a>\n      <p>\n        <span class=\"tamarin\">Tamarin</span> was developed at the\n        \\ <a href=\"http://www.infsec.ethz.ch\">Information Security Institute</a>,\n        \\ <a href=\"http://www.ethz.ch\">ETH Zurich</a>.\n        \\ This program comes with ABSOLUTELY NO WARRANTY. It is free software, and\n        \\ you are welcome to redistribute it according to its\n        \\ <a href=\"/static/LICENSE\" type=\"text/plain\">LICENSE.</a>\n      <p>\n        More information about Tamarin and technical papers describing the underlying\n        \\ theory can be found on the\n        \\ <a href=\"http://www.infsec.ethz.ch/research/software/tamarin\"><span class=\"tamarin\">Tamarin</span>\n        \\ webpage</a>.\n  |]" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:13-18 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:13-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:257:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,10)-(285,4) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,12)-(285,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-90,0)) (ColDelta 0) DP (-90,0) [] []))]
==============
([((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:1:1,
    AnnModule),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:21:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:1:1,
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:24:5-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(21,19)-(24,3),
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:24:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(21,19)-(24,3),
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:21:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:22:5-11,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:23:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:26:1-27,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:26:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:26:1-27,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:1-38,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:27:1-38,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:1-23,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:28:1-23,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:1-27,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:29:1-27,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:1-26,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:30:1-26,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:1-27,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:32:1-27,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:1-26,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:34:1-26,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43,
    AnnAs),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:40-41]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43,
    AnnQualified),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:8-16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:1-43,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:35:43]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:1-25,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:36:1-25,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:1-33,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:37:1-33,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:1-52,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:1-52,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:40-52,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:52]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:40-52,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:38:40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:1-30,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:40:1-30,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:1-48,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:1-48,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:62:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:40-48,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:48]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:40-48,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:42:40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,1)-(63,17),
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:62:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,1)-(63,17),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,12)-(63,17),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:63:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:65:1-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(65,1)-(90,4),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1-34,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:13-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:1-34,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:16-34,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:93:26-27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:94:1-11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(94,1)-(121,35),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:111:3-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:112:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:112:5-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(112,5)-(114,39),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(113,7)-(114,28),
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:52]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(113,7)-(114,39),
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:30]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:15-50,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:50]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:15-50,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49,
    AnnLam),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:16-49,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:21-22]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:24-49,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:113:45-46]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:14-28,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:14-28,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:114:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:5-41,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-35,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:14-41,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:116:37]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-19,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-19,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:5-19,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13-14,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13-14,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:18-19,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:18-19,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:118:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(119,5)-(121,35),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:5-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:13-18,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:13-18,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:14-17,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:119:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:7-27,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:7-27,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:9-22,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:120:19-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:7-35,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:7-35,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:121:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1-46,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:11-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:1-46,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-36,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-36,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:14-46,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:38-39]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:15-23,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:124:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:125:1-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(125,1)-(142,46),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:138:3-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,5)-(142,46),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:5-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:12-18,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:12-18,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:13,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,22)-(142,46),
    AnnCase),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:22-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(139,22)-(142,46),
    AnnOf),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:139:39-40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:7-24,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:18-24,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:140:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:7-26,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:19-26,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:141:19-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:19-46,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:142:19-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1-33,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:11-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:1-33,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:14-33,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:169:25-26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:170:1-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:189:3-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:195:5-22,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-54,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-54,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:5-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:16-54,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:44-45]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:28-42,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:42]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:28-42,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:196:28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1-53,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:15-16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:1-53,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:18-53,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:28-29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:31-53,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:208:42-43]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:1-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,1)-(213,42),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:217:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(209,30)-(213,42),
    AnnDo),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:209:30-31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:5-78,
    AnnLet),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:5-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:5-78,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:211:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-78,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:9-11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:15-78,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:53-64,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:64]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:53-64,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:53]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:66-78,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:78]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:66-78,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:210:66]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,1)-(220,24),
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:217:13-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,1)-(220,24),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(217,16)-(220,24),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:218:13-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(218,16)-(220,24),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:219:13-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(219,16)-(220,24),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:220:13-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:1-11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,1)-(242,4),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:245:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(221,35)-(242,4),
    AnnDo),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:221:35-36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:3-44,
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:14-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:222:3-44,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3-41,
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:12-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:223:3-41,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:224:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,1)-(248,20),
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:245:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,1)-(248,20),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(245,12)-(248,20),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:246:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(246,12)-(248,20),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:247:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(247,12)-(248,20),
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:248:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:249:1-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(249,1)-(252,53),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(250,5)-(252,53),
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:250:12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1-18,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:10-11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:256:1-18,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:257:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:257:10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:257:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(257,1)-(285,4),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:307:1]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:307:1])],
 [(../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(62,12)-(63,17),
   [AnnLineComment "-- ^ Map of loaded theories"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(170,1)-(196,54),
   [AnnLineComment "--",
    AnnLineComment "-- <li><a class=edit-link href=@{EditPathR idx (TheoryLemma \"\")}>Add lemma</a>",
    AnnLineComment "-- <li><a class=edit-link href=@{EditTheoryR idx}>Edit theory</a>",
    AnnLineComment "-- <li><a href=@{TheoryVariantsR idx}>Show variants</a>",
    AnnLineComment "-- <li><a id=debug-toggle href=\"#\">Debug pane</a>"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(218,16)-(220,24),
   [AnnLineComment "-- ^ Theory information"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(219,16)-(220,24),
   [AnnLineComment "-- ^ Theory path to load into main"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(246,12)-(248,20),
   [AnnLineComment "-- ^ The theory"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Hamlet.hs:(247,12)-(248,20),
   [AnnLineComment "-- ^ Path to display on load"]),
  (<no location info>,
   [AnnBlockComment "{-\n-- | Template for editing a theory.\n-- formTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute, h ~ Widget ())\n--         => WebUIRoute  -- ^ Form action route\n--         -> String      -- ^ Submit button label\n--         -> Widget ()   -- ^ Form widget\n--         -> Enctype     -- ^ Form encoding type\n--         -> Html        -- ^ Nonce field\n--         -> h\nformTpl action label form enctype nonce = [whamlet|\n    $newline never\n    <form action=@{action} method=POST enctype=#{enctype}>\n      ^{form}\n      <div .submit-form>\n        ^{addHtml nonce}\n        <input type=submit value=#{label}>\n        <input type=button id=cancel-form value=Cancel>\n  |]\n-}",
    AnnLineComment "-- | Template for introduction.",
    AnnLineComment "-- | Theory path, displayed when loading main screen for first time.",
    AnnLineComment "-- | Framing/UI-layout template (based on JavaScript/JQuery)",
    AnnLineComment "-- | Template for proof state (tree) frame.",
    AnnBlockComment "{- use this snipped to reactivate saving local theories\n    localTheory (Local _) = True\n    localTheory _         = False\n\n      $if localTheory (tiOrigin info)\n        <a class=save-link href=@{SaveTheoryR idx}>Save</a>\n\n    -}",
    AnnLineComment "-- | Template for header frame (various information)",
    AnnBlockComment "{-\nthreadsTpl threads = [whamlet|\n    $newline never\n    <h2>Threads\n    <p>\n      This page lists all threads that are currently registered as\n      \\ evaluating a request within the server. This is meant for debugging\n      \\ lockups within the server.\n    $if null threads\n      <strong>No threads registered!</strong>\n    $else\n      <table>\n        <thead>\n          <th>Request path\n          <th>Kill?\n        $forall th <- threads\n          <tr>\n            <td>#{th}\n            <td><a href=\"@{KillThreadR}?path=#{th}\">Kill</a>\n  |]\n-}",
    AnnLineComment "-- threadsTpl :: (HamletValue h, HamletUrl h ~ WebUIRoute) => [T.Text] -> h",
    AnnLineComment "-- | Template for listing threads.",
    AnnLineComment "-- | Template for single line in table on root page.",
    AnnLineComment "-- | Template for listing theories.",
    AnnLineComment "-- rootTpl theories form enctype nonce = [whamlet|",
    AnnLineComment "-- | Template for root/welcome page.",
    AnnBlockComment "{-\n-- | Simple template for serving sites which are loaded through\n-- AJAX instead of a normal request (no html/head/body tags).\n--\n-- Note: Don't use ajaxLayout and defaultLayout together, use\n-- only one or the other.\n-- ajaxLayout :: Monad m => GenericWidget m () -> GenericHandler m RepHtml\najaxLayout w = error \"ajaxLayout\" $ fmap fst $ unGWidget w -- do\n  -- (body, _, _) <- runRWST (unGWidget $ extractBody w) () 0\n  -- (body, _, _) <- unGWidget $ w -- () 0\n  -- hamletToRepHtml [whamlet|^{body}|]\n-}",
    AnnLineComment "--", AnnLineComment "-- Templates",
    AnnLineComment "--",
    AnnBlockComment "{- |\nModule      :  Web.Hamlet\nDescription :  Hamlet templates.\nCopyright   :  (c) 2011 Cedric Staub\nLicense     :  GPL-3\n\nMaintainer  :  Cedric Staub <cstaub@ethz.ch>\nStability   :  experimental\nPortability :  non-portable\n-}",
    AnnBlockComment "{-# OPTIONS_GHC -fno-warn-orphans #-}",
    AnnBlockComment "{-# LANGUAGE TypeSynonymInstances #-}",
    AnnBlockComment "{-# LANGUAGE TypeFamilies         #-}",
    AnnBlockComment "{-# LANGUAGE QuasiQuotes          #-}",
    AnnBlockComment "{-# LANGUAGE PatternGuards        #-}",
    AnnBlockComment "{-# LANGUAGE FlexibleInstances    #-}",
    AnnBlockComment "{-# LANGUAGE CPP                  #-}"])])