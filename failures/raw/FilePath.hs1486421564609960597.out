{-# LANGUAGE CPP #-}
#if __GLASGOW_HASKELL__ >= 704
{-# LANGUAGE Safe #-}
#endif
{- |
Module      :  System.FilePath
Copyright   :  (c) Neil Mitchell 2005-2007
License     :  BSD3

Maintainer  :  libraries@haskell.org
Stability   :  stable
Portability :  portable

A library for 'FilePath' manipulations, using Posix or Windows filepaths
depending on the platform.

Both "System.FilePath.Posix" and "System.FilePath.Windows" provide the
same interface. See either for examples and a list of the available
functions.
-}

#if defined(mingw32_HOST_OS) || defined(__MINGW32__)
module System.FilePath(module System.FilePath.Windows) where
import System.FilePath.Windows
#else
module       System.FilePath(module System.FilePath.Posix) where
import System.FilePath.Posix
#endif


==============
../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs
==============
lengths:(773,767)

==============

({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,20)) "{-# LANGUAGE CPP #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,30)) "#if __GLASGOW_HASKELL__ >= 704" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,22)) "{-# LANGUAGE Safe #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (16,3)) "{- |\nModule      :  System.FilePath\nCopyright   :  (c) Neil Mitchell 2005-2007\nLicense     :  BSD3\n\nMaintainer  :  libraries@haskell.org\nStability   :  stable\nPortability :  portable\n\nA library for 'FilePath' manipulations, using Posix or Windows filepaths\ndepending on the platform.\n\nBoth \"System.FilePath.Posix\" and \"System.FilePath.Windows\" provide the\nsame interface. See either for examples and a list of the available\nfunctions.\n-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,52)) "#if defined(mingw32_HOST_OS) || defined(__MINGW32__)" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,16)) "System.FilePath" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "module" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,24)) "System.FilePath.Windows" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "import" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,24)) "System.FilePath.Windows" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "#else" Nothing),DP (1,1)),((G AnnModule),DP (25,1)),((AnnComment DComment (DP (0,-6),DP (0,-6)) "" Nothing),DP (0,-6)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((G AnnEofPos),DP (4,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:8-22 }
    Nothing{ModuleName: System.FilePath})) 
  (Just 
   ({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:23-52
     }
    Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
    [
     ({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:24-51
       }
      Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnModule),DP (0,0)),((G AnnVal),DP (0,1))])
      (IEModuleContents 
       ({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:31-51
         }
        Nothing{ModuleName: System.FilePath.Posix})))])) 
  [
   ({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:27:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:27:8-28 }
      Nothing{ModuleName: System.FilePath.Posix}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,20)) "{-# LANGUAGE CPP #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,30)) "#if __GLASGOW_HASKELL__ >= 704" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,22)) "{-# LANGUAGE Safe #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (16,3)) "{- |\nModule      :  System.FilePath\nCopyright   :  (c) Neil Mitchell 2005-2007\nLicense     :  BSD3\n\nMaintainer  :  libraries@haskell.org\nStability   :  stable\nPortability :  portable\n\nA library for 'FilePath' manipulations, using Posix or Windows filepaths\ndepending on the platform.\n\nBoth \"System.FilePath.Posix\" and \"System.FilePath.Windows\" provide the\nsame interface. See either for examples and a list of the available\nfunctions.\n-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,52)) "#if defined(mingw32_HOST_OS) || defined(__MINGW32__)" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,16)) "System.FilePath" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "module" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,24)) "System.FilePath.Windows" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "import" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,24)) "System.FilePath.Windows" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "#else" Nothing),DP (1,1)),((G AnnModule),DP (25,1)),((AnnComment DComment (DP (0,-6),DP (0,-6)) "" Nothing),DP (0,-6)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((G AnnEofPos),DP (4,0))])),
 (AnnKey ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:23-52 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:24-51 CN "IEModuleContents" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnModule),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:27:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))]))]
==============
([((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:1:1,
    AnnModule),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:1-6]),
  ((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:1:1,
    AnnWhere),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:54-58]),
  ((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:23-52,
    AnnCloseP),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:52]),
  ((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:23-52,
    AnnOpenP),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:23]),
  ((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:24-51,
    AnnModule),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:26:24-29]),
  ((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:27:1-28,
    AnnImport),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:27:1-6]),
  ((../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:27:1-28,
    AnnSemi),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:31:1]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/filepath-1.3.0.2/System/FilePath.hs:31:1])],
 [(<no location info>,
   [AnnBlockComment "{- |\nModule      :  System.FilePath\nCopyright   :  (c) Neil Mitchell 2005-2007\nLicense     :  BSD3\n\nMaintainer  :  libraries@haskell.org\nStability   :  stable\nPortability :  portable\n\nA library for 'FilePath' manipulations, using Posix or Windows filepaths\ndepending on the platform.\n\nBoth \"System.FilePath.Posix\" and \"System.FilePath.Windows\" provide the\nsame interface. See either for examples and a list of the available\nfunctions.\n-}",
    AnnBlockComment "{-# LANGUAGE Safe #-}",
    AnnBlockComment "{-# LANGUAGE CPP #-}"])])