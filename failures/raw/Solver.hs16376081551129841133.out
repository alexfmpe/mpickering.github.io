{-# LANGUAGE MultiParamTypeClasses
            ,FunctionalDependencies
            ,FlexibleInstances
            ,FlexibleContexts
            ,GeneralizedNewtypeDeriving
            ,TypeSynonymInstances
            ,TypeOperators
            ,ParallelListComp
            ,BangPatterns
 #-}
{-# OPTIONS -cpp #-}
{-# OPTIONS -cpp #-}





{-|

Funsat aims to be a reasonably efficient modern SAT solver that is easy to
integrate as a backend to other projects.  SAT is NP-complete, and thus has
reductions from many other interesting problems.  We hope this implementation is
efficient enough to make it useful to solve medium-size, real-world problem
mapped from another space.  We also have taken pains test the solver rigorously
to encourage confidence in its output.

One particular nicetie facilitating integration of Funsat into other projects
is the efficient calculation of an /unsatisfiable core/ for unsatisfiable
problems (see the "Funsat.Resolution" module).  In the case a problem is
unsatisfiable, as a by-product of checking the proof of unsatisfiability,
Funsat will generate a minimal set of input clauses that are also
unsatisfiable.

Another is the ability to compile high-level circuits into CNF.  Seen the
"Funsat.Circuit" module.

* 07 Jun 2008 21:43:42: N.B. because of the use of mutable arrays in the ST
monad, the solver will actually give _wrong_ answers if you compile without
optimisation.  Which is okay, 'cause that's really slow anyway.

[@Bibliography@]

  * ''Abstract DPLL and DPLL Modulo Theories''

  * ''Chaff: Engineering an Efficient SAT solver''

  * ''An Extensible SAT-solver'' by Niklas Een, Niklas Sorensson

  * ''Efficient Conflict Driven Learning in a Boolean Satisfiability Solver''
by Zhang, Madigan, Moskewicz, Malik

  * ''SAT-MICRO: petit mais costaud!'' by Conchon, Kanig, and Lescuyer

-}module Funsat.Solver

module#ifndef TESTINGFunsat.Solver
        ( -- * Interface
        ( solve-- * Interface
        , solvesolve1
        , solve1Solution(..)
        , Solution-- ** Verification(..)
        , verify-- ** Verification
        , verifyVerifyError(..)
        , VerifyError-- ** Configuration(..)
        , FunsatConfig-- ** Configuration(..)
        , FunsatConfigdefaultConfig(..)
        , defaultConfig-- * Solver statistics
        , Stats-- * Solver statistics(..)
        , StatsShowWrapped(..)  (..)
        , ShowWrappedstatTable  (..)
        , statTablestatSummary
        , statSummary
#endif   )
    where
    where
{-
    This file is part of funsat.

    funsat is free software: it is released under the BSD3 open source license.
    You can find details of this license in the file LICENSE at the root of the
    source tree.

    Copyright 2008 Denis Bueno
-}

import Control.Arrow( (&&&) )
import Control.ArrowControl.Exception( (&&&( )assert)    )
import Control.ExceptionControl.Monad.Error( asserthiding)( (>=>), forM_, runErrorT )
import Control.Monad.ErrorControl.Monad.MonadST( MonadST( (>=>(..),)forM_, runErrorT )
import Control.Monad.MonadSTControl.Monad.ST.Strict( MonadST(..) )
import Control.Monad.ST.StrictControl.Monad.State.Lazy hiding ( (>=>), forM_ )
import Control.Monad.State.LazyData.Array.ST            hiding ( (>=>), forM_ )
import Data.Array.STData.Array.Unboxed
import Data.Array.UnboxedData.Foldable hiding ( sequence_ )
import Data.FoldableData.Int( Int64)    ( sequence_ )
import Data.IntData.List((Int64nub, )tails, sortBy, sort )
import Data.ListData.Maybe( nub, tails, sortBy, sort )
import Data.MaybeData.Ord( comparing )
import Data.OrdData.STRef( comparing )
import Data.STRefData.Sequence( Seq )
import-- import Debug.Trace (trace)Data.Sequence( Seq )
import-- import Debug.Trace (trace)Funsat.Monad
import Funsat.Monad
import Funsat.UtilsFunsat.Resolution( ResolutionTrace(..), initResolutionTrace )
import Funsat.ResolutionFunsat.Types     ( ResolutionTrace(..), initResolutionTrace )
import Funsat.TypesFunsat.Types.Internal
import Funsat.Types.InternalPrelude hiding ( sum, concatMap, elem, foldr, foldl, any, maximum )
import PreludeFunsat.Resolution ( sum( ResolutionError, concatMap, elem(.., foldr)    , foldl, any, maximum )
import Funsat.ResolutionText.Printf( printf( ResolutionError)             (..) )
import Text.Printfqualified Data.Foldable( printf )   as Fl
import qualified Data.FoldableData.List as Listas Fl
import qualified Data.ListData.Map asasMapList
import qualified Data.MapData.Sequenceas Mapas Seq
import qualified Data.SequenceData.Set as Setas Seq
import qualified Data.SetFunsat.Resolutionas Set   as Resolution
import qualified Funsat.ResolutionText.Tabular as Tabularas Resolution
import qualified Text.Tabular as Tabular
-- * Interface
-- * Interface
-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a
-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a-- solution, along with internal solver statistics and possibly a resolution
-- trace.  The trace is for checking a proof of `Unsat', and thus is only-- solution, along with internal solver statistics and possibly a resolution
-- present when the result is `Unsat'.-- trace.  The trace is for checking a proof of `Unsat', and thus is only
solve-- present when the result is `Unsat'.:: FunsatConfig -> CNF -> (Solution, Stats, Maybe ResolutionTrace)
solve ::cfgFunsatConfigfIn =       -> CNF -> (Solution, Stats, Maybe ResolutionTrace)
solve-- To solve, we simply take baby steps toward the solution using solveStep, fIn =
    -- starting with an initial assignment.-- To solve, we simply take baby steps toward the solution using solveStep,
--     trace ("input " ++ show f) $-- starting with an initial assignment.
--     trace ("input " ++ show f) $either (error "solve: invariant violated") id $
    eitherrunST $(error "solve: invariant violated") id $
    runSTevalSSTErrMonad
    evalSSTErrMonad(do initialAssignment <- liftST $ newSTUArray (V 1, V (numVars f)) 0
        (do initialAssignment(a, isUnsat) <- initialState<- liftST $initialAssignment (V 1, V (numVars f)) 0
            (ifa,isUnsat)then<- initialStatereportSolution(Unsat a)
            if isUnsat then reportSolution (initialAssignmentUnsat a)         >>= reportSolution)
    SC{ cnf = f{ clauseselse= Set.empty}, dl initialAssignment= []              >>= reportSolution)
    SC{ cnfwatches= f{=clausesundefined= Set.empty, learnt =},undefined = []
      , watchespropQ = =Seq.empty, ,trail= [=,undefinedlevel = undefined
      , propQ = Seq.emptyFunStats{,numConfl ==[],numConflTotal = undefined= 0,numDecisions = 0,numImpl = 0}
      , statsreason==FunStatsMap.empty{numConfl, varOrder= 0,numConflTotalundefined    = 0,numDecisions = 0,numImpl = 0}
      , reasonresolutionTrace= Map.empty= ,PartialResolutionTrace = undefined 1 [] [] Map.empty
      , resolutionTracedpllConfig = cfg=}PartialResolutionTrace 1 [] [] Map.empty
  where, dpllConfig = cfg }
  wheref = preprocessCNF fIn
    f-- If returns True, then problem is unsat.= preprocessCNF fIn
    initialState-- If returns True, then problem is unsat.:: MAssignment s -> FunMonad s (IAssignment, Bool)
    initialState ::m =MAssignmentdo         s -> FunMonad s (IAssignment, Bool)
    initialStateinitialLevel =<-doliftST $ newSTUArray (V 1, V (numVars f)) noLevel
      initialLevelmodify $ \s -><-sliftST{ level$=newSTUArrayinitialLevelV}1, V (numVars f)) noLevel
      modifyinitialWatches \s -> s<-{ levelliftST=$initialLevelnewSTArray (} (- (numVars f)), L (numVars f)) []
      initialWatchesmodify $ \s -> <-s{ liftSTwatches$=newSTArrayinitialWatchesL (-}(numVars f)), L (numVars f)) []
      modifyinitialLearnts \s -> s<-{ watchesliftST $=newSTArray(L (-}(numVars f)), L (numVars f)) []
      initialLearntsmodify $ \s -> <-s{ liftST $ newSTArrayinitialLearntsL (- (numVars f)), L (numVars f)) []
      modifyinitialVarOrder \s -> s{<-learntliftST=$initialLearntsnewSTUArray (V}1, V (numVars f)) initialActivity
      initialVarOrdermodify $ \s -> s<-{ varOrder $=newSTUArrayVarOrder initialVarOrderV 1, V (numVars}  f)) initialActivity
      modify $ \s -> s{ varOrder = VarOrder initialVarOrder }
      -- Watch each clause, making sure to bork if we find a contradiction.
      (-- Watch each clause, making sure to bork if we find a contradiction.`catchError`
      (`catchErrorconst $ liftST`    (unsafeFreezeAss m) >>= \a -> return (a,True))) $ do
       (constforM_ liftST(clausesunsafeFreezeAssf)             m) >>= \a -> return (a,True))) $ do
          forM_(\c (->clausesdo cidf)<- nextTraceId
            (\c -> do cidisConsistent<- nextTraceId<- watchClause m (c, cid) False
                      isConsistentwhen (not isConsistent<- watchClause)     m (c, cid) False
                      when-- conflict data is ignored here, so safe to fakenot isConsistent)
                        (-- conflict data is ignored here, so safe to fakedo traceClauseId cid ; throwError (L 0, [], 0)))
          a <- liftST (unsafeFreezeAssdo traceClauseIdm) cid ; throwError (L 0, [], 0)))
          areturn<- liftST(a, FalseunsafeFreezeAss)            m)
          return (a, False)

-- | Solve with the default configuration `defaultConfig'.
solve1-- | Solve with the default configuration `defaultConfig'.:: CNF -> (Solution, Stats, Maybe ResolutionTrace)
solve1 ::= solve ->defaultConfigSolution, Stats, Maybe ResolutionTrace)
solve1 = solve defaultConfig
-- | This function applies `solveStep' recursively until SAT instance is
-- | This function applies `solveStep' recursively until SAT instance is-- solved, starting with the given initial assignment.  It also implements the
-- conflict-based restarting (see `FunsatConfig').-- solved, starting with the given initial assignment.  It also implements the
stepToSolution-- conflict-based restarting (see `FunsatConfig').:: MAssignment s -> FunMonad s Solution
stepToSolution ::assignment= dos -> FunMonad s Solution
stepToSolutionstep <- solveStepassignment= do
    stepuseRestarts<- solveStep<- gets(configUseRestarts . dpllConfig)
    useRestartsisTimeToRestart<- gets<- uncurryconfigUseRestarts((>=)) `liftM`dpllConfig)
    isTimeToRestartgets <-((numConfl ((>=stats)) `liftM&&& `configRestart . dpllConfig))
    case step of ((numConfl . stats) &&& (configRestart . dpllConfig))
    caseLeftm ->ofdo when (useRestarts && isTimeToRestart)
      Left m -> do when(do(useRestarts_stats <- extractStats isTimeToRestart)
--                          trace ("Restarting...") $do _stats <- extractStats
                               --                          trace ("Restarting...") $--                           trace (statSummary stats) $
                               --                           trace (statSummary stats) $resetState m)
                                                  stepToSolutionm m)
      Right s -> returns         m
  where s -> return s
  whereresetState m = do
    resetStatemodify $ ms=->let st = stats s in s{ stats = st{numConfl = 0} }
      modify-- Require more conflicts before next restart. \s -> let st = stats s in s{ stats = st{numConfl = 0} }
      modifySlot-- Require more conflicts before next restart.dpllConfig $ \s c ->
      modifySlots{ dpllConfig= c{ configRestart \s c ->    = ceiling (configRestartBump c
             s{ dpllConfig = c{ configRestart = ceiling (configRestartBumpfromIntegral (configRestart          c))
                                } }                     * fromIntegral (configRestart c))
           lvl :: FrozenLevelArray} }<- gets level >>= liftST . unsafeFreeze
      lvlundoneLits:: FrozenLevelArray<- takeWhile <-(\lgets-> lvl! (>>= liftSTl) > 0).`unsafeFreezeliftM` gets trail
      undoneLitsforM_ undoneLits<- takeWhile$ const(\lundoOne-> lvlm! (var l) > 0) `liftM` gets trail
      forM_modifyundoneLits$ \s -> s{$dl= [](undoOnepropQ =m)Seq.empty }
      modifycompactDB \s -> s{ dl = [], propQ = Seq.empty }
      compactDBunsafeFreezeAss m >>= simplifyDB
      unsafeFreezeAss m >>= simplifyDB
reportSolution :: Solution -> FunMonad s (Solution, Stats, Maybe ResolutionTrace)
reportSolution ::s =Solutiondo      -> FunMonad s (Solution, Stats, Maybe ResolutionTrace)
reportSolutionstats <- extractStats = do
    statscase s<-ofextractStats
    caseSats_of -> return (s, stats, Nothing)
      SatUnsat _ -> returndo     (s, stats, Nothing)
      UnsatresTrace -> do<- constructResTrace s
          resTracereturn (s<-, stats, Just resTrace)
          return (s, stats, Just resTrace)

-- | A default configuration based on the formula to solve.
---- | A default configuration based on the formula to solve.
----  * restarts every 100 conflicts
----  * restarts every 100 conflicts
----  * requires 1.5 as many restarts after restarting as before, each time
----  * requires 1.5 as many restarts after restarting as before, each time
----  * VSIDS to be enabled
----  * VSIDS to be enabled
----  * restarts to be enabled
defaultConfig--  * restarts to be enabled:: FunsatConfig
defaultConfig ::= Cfg{ configRestart = 100 -- fromIntegral $ max (numVars f `div` 10) 100
defaultConfig = Cfg { configRestart, configRestartBump= 100 =-- fromIntegral $ max (numVars f `div` 10) 1001.5
                      , configRestartBumpconfigUseVSIDS = True= 1.5
                      , configUseVSIDSconfigUseRestarts= True= True }
                      , configUseRestarts = True }
-- * Preprocessing
-- * Preprocessing
-- | Some kind of preprocessing.
---- | Some kind of preprocessing.
----   * remove duplicates
preprocessCNF--   * remove duplicates:: CNF -> CNF
preprocessCNF ::f =CNFf{clauses-> CNF = simpClauses (clauses f)}
preprocessCNFwhere simpClauses = f{clauses= Set.map= simpClausesnub -- rm dupsclauses f)}
    where simpClauses = Set.map nub -- rm dups
-- | Simplify the clause database.  Eventually should supersede, probably,
-- `preprocessCNF'.-- | Simplify the clause database.  Eventually should supersede, probably,
---- `preprocessCNF'.
---- Precondition: decision level 0.
simplifyDB-- Precondition: decision level 0.:: IAssignment -> FunMonad s ()
simplifyDB ::mFrIAssignment= do       -> FunMonad s ()
simplifyDB-- For each clause in the database, remove it if satisfied; if it contains a = do
  -- literal whose negation is assigned, delete that literal.-- For each clause in the database, remove it if satisfied; if it contains a
  n-- literal whose negation is assigned, delete that literal.<- numVars `liftM` gets cnf
  n <- numVarsget     `liftM` gets cnf
  sliftST<- get. forM_ [V 1 .. V n] $ \i -> when (mFr!i /= 0) $ do
  liftSTlet l.=forM_L (mFrVi1 .. V n] $ \i -> when (mFr!i /= 0) $ do
    let lfilterL= L (mFr_i!i)map (\(p, c, cid) -> (p, filter (/= negate l) c, cid))
    -- Remove unsat literal `negate l' from clauses. _i = map (\(p, c, cid) -> (p, filter (/= negate l) c, cid))
--     modifyArray (watches s) l filterL-- Remove unsat literal `negate l' from clauses.
--     modifyArray (watches s) l filterLmodifyArray (learnt s) l filterL
    modifyArray-- Clauses containing `l' are Sat.learnt s) l filterL
--     writeArray (watches s) (negate l) []-- Clauses containing `l' are Sat.
--     writeArray (watches s) (negate l) []writeArray (learnt s) (negate l) []
    writeArray (learnt s) (negate l) []
-- * Internals
-- * Internals
-- | The DPLL procedure is modeled as a state transition system.  This
-- | The DPLL procedure is modeled as a state transition system.  This-- function takes one step in that transition system.  Given an unsatisfactory
-- assignment, perform one state transition, producing a new assignment and a-- function takes one step in that transition system.  Given an unsatisfactory
-- new state.-- assignment, perform one state transition, producing a new assignment and a
solveStep-- new state.:: MAssignment s -> FunMonad s (Either (MAssignment s) Solution)
solveStep ::m =MAssignmentdo         s -> FunMonad s (Either (MAssignment s) Solution)
solveStepunsafeFreezeAss = do    m >>= solveStepInvariants
    unsafeFreezeAssconf <- gets dpllConfig >>= solveStepInvariants
    conflet selector<- gets dpllConfig= if configUseVSIDS conf then select else selectStatic
    letmaybeConfl<-=bcp configUseVSIDSm              conf then select else selectStatic
    maybeConflmFr   <- unsafeFreezeAss<- bcp m      m
    mFrvoArr <- unsafeFreezeAssgets (varOrderArr . varOrder)
    voArrvoFr  <- getsFrozenVarOrdervarOrderArr`liftM varOrder` liftST) (unsafeFreeze voArr)
    voFrs     <- FrozenVarOrderget            `liftM` liftST (unsafeFreeze voArr)
    sstepForward<- get$
    stepForward-- Check if unsat.
          unsat-- Check if unsat.maybeConfl s ==> postProcessUnsat maybeConfl
          unsat-- Unit propagation may reveal conflicts; check. s ==> postProcessUnsat maybeConfl
       >< maybeConfl-- Unit propagation may reveal conflicts; check.>=> backJump m
       >< maybeConfl-- No conflicts.  Decide. backJump m
       >< selector-- No conflicts.  Decide.mFr voFr  >=> decide m
    where selector mFr voFr  >=> decide m
    where-- Take the step chosen by the transition guards above.
      stepForward-- Take the step chosen by the transition guards above.Nothing     = (Right . Sat) `liftM` unsafeFreezeAss m
      stepForward Nothing(Just step) = (doRight . Sat) `liftM` unsafeFreezeAss m
      stepForwardr <- stepJust step) = do
          rcase<- stepr of
          caseNothing of -> (Right . Unsat) `liftM` liftST (unsafeFreezeAss m)
            NothingJust m  -> (returnRight . UnsatLeft ) `liftM` liftST (unsafeFreezeAss m)
            Just m  -> return . Left $ m
-- | /Precondition:/ problem determined to be unsat.
---- | /Precondition:/ problem determined to be unsat.
---- Records id of conflicting clause in trace before failing.  Always returns
-- `Nothing'.-- Records id of conflicting clause in trace before failing.  Always returns
-- `Nothing'.postProcessUnsat :: Maybe (Lit, Clause, ClauseId) -> FunMonad s (Maybe a)
postProcessUnsat ::maybeConfl (Lit= ,doClause, ClauseId) -> FunMonad s (Maybe a)
postProcessUnsattraceClauseIdmaybeConfl$ (thd . fromJust= do   ) maybeConfl
    traceClauseIdreturn Nothing$ (thd . fromJust) maybeConfl
  where Nothing
  wherethd (_,_,i) = i
    thd (_,_,i) = i
-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed,
-- this should be optimised away to nothing.-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed,
solveStepInvariants-- this should be optimised away to nothing.:: IAssignment -> FunMonad s ()
solveStepInvariants{-# INLINE solveStepInvariants:: IAssignment#-} -> FunMonad s ()
{-# INLINEsolveStepInvariants_m = assert#-}True $ do
solveStepInvariantss <- get        _m = assert True $ do
    s-- no dups in decision list or trail<- get
    assert-- no dups in decision list or trail((length . dl) s == (length . nub . dl) s) $
    assertassert((length(length..dltrail) s ==) s(length== (length nub. .nub) strail) $ ) s) $
     assert ((length . trail) s == (length . nub . trail) s) $
     return ()
-- ** Internals
-- ** Internals
-- | Value of the `level' array if corresponding variable unassigned.  Had
-- better be less that 0.-- | Value of the `level' array if corresponding variable unassigned.  Had
noLevel-- better be less that 0.:: Level
noLevel ::= -Level1
noLevel = -1

-- *** Boolean constraint propagation
-- *** Boolean constraint propagation
-- | Assign a new literal, and enqueue any implied assignments.  If a conflict
-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise-- | Assign a new literal, and enqueue any implied assignments.  If a conflict
-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts
-- with the assignment.-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts
---- with the assignment.
---- If no new clauses are unit (i.e. no implied assignments), simply update
-- watched literals.-- If no new clauses are unit (i.e. no implied assignments), simply update
bcpLit-- watched literals.:: MAssignment s
bcpLit :: MAssignment-> Lit      s         -- ^ Assigned literal which might propagate.
          -> LitFunMonad s (Maybe (Lit-- ^ Assigned literal which might propagate., Clause, ClauseId))
bcpLit m l->= FunMonaddo       s (Maybe (Lit, Clause, ClauseId))
bcpLitws m<-lgets= dowatches ; ls <- gets learnt
    wsclauses<- gets<- watchesliftST $;readArray <- getswslearntl
    clauses <- liftST $ readArray ws l
    learntsliftST $<-doliftSTwriteArray readArrayws l []ls; lwriteArray ls l []
    liftST $ do writeArray ws l [] ; writeArray ls l []
    -- Update wather lists for normal & learnt clauses; if conflict is found,
    -- return that and don't update anything else.-- Update wather lists for normal & learnt clauses; if conflict is found,
    (-- return that and don't update anything else.`catchError` return . Just) $ do
    (`catchError{-# SCC "bcpWatches"` return . Just#-} )forM_ do(tails clauses) (updateWatches
      {-# SCC(\ f l"bcpWatches"-> liftST $ #-}modifyArray (tailsws l clauses(const ))(updateWatches)
      {-# SCC\ f l"bcpLearnts"-> liftST $ modifyArray#-} forM_ (tails l (learntsconst f)))updateWatches
      {-# SCC(\ f l"bcpLearnts"-> liftST $ #-}modifyArray (tailsls l learnts(const ))(updateWatches)
      return\ f lNothing-> liftST $ modifyArray-- no conflict l (const f)))
  where Nothing            -- no conflict
  where-- updateWatches: `l' has been assigned, so we look at the clauses in
    -- updateWatches: `l' has been assigned, so we look at the clauses in
    -- annotated clause, find the status of its watched literals.  If a-- which contain @negate l@, namely the watcher list for l.  For each
    -- annotated clause, find the status of its watched literals.  If a-- conflict is found, the at-fault clause is returned through Left, and
    -- conflict is found, the at-fault clause is returned through Left, and
    -- list.-- the unprocessed clauses are placed back into the appropriate watcher
    -- list.{-# INLINE updateWatches #-}
    {-# INLINEupdateWatches_ [] = return#-}()
    updateWatches _alter] =(returnannCl@((watchRef)      , c, cid) : restClauses) = do
    updateWatchesmFr <- unsafeFreezeAss (annClm@(watchRef, c, cid) : restClauses) = do
      mFrq   <- unsafeFreezeAssliftST $ do (x, m) <- readSTRef watchRef
      q   <- liftST $ do (returnx, y) <-$ ifx == l theny else x
      -- l,q are the (negated) literals being watched for clause c. $ if x == l then y else x
      if-- l,q are the (negated) literals being watched for clause c.negate q `isTrueUnder` mFr -- if other true, clause already sat
      ifthenalter `isTrueUnderannCl:) l  ` mFr -- if other true, clause already sat
       then alter (annCl:) l
       elsecase find (\x -> x /= negate q && x /= negate l
         case find (\x -> x&&/=not(x `isFalseUnder && x /= negate` mFr)l c of
           Just l' -> do  && not-- found unassigned literal, negate l', to watchx `isFalseUnder` mFr)) c of
           JustliftST ->$ dowriteSTRef-- found unassigned literal, negate l', to watchwatchRef (q, negate l')
             liftSTalter ($annCl:) (negatel')   (q, negate l')
             alter (annCl:) (negate l')
           Nothing -> do      -- all other lits false, clause is unit
           NothingincNumImpl do      -- all other lits false, clause is unit
             incNumImplalter (annCl:) l
             alterisConsistentannCl:)<-lenqueue m (negate q) (Just (c, cid))
             isConsistentwhen (not isConsistent<- enqueue) m (donegate-- unit literal is conflicting) (Just (c, cid))
             whenalternot(isConsistentrestClauses )++$ dol  -- unit literal is conflicting
                alterclearQueuerestClauses ++) l
                clearQueue (negate q, c, cid)
                throwError (negate q, c, cid)
-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict
-- is found it is returned exactly as described for `bcpLit'.-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict
bcp-- is found it is returned exactly as described for `bcpLit'.:: MAssignment s -> FunMonad s (Maybe (Lit, Clause, ClauseId))
bcp ::m =MAssignmentdo         s -> FunMonad s (Maybe (Lit, Clause, ClauseId))
bcpq m<-=gets  propQ
  qif<-Seq.null propQq then return Nothing
  ifelsedo    q then return Nothing
   elsep <-dequeue
     pbcpLit<- dequeuem p >>= maybe (bcp m) (return . Just)
     bcpLit m p >>= maybe (bcp m) (return . Just)


-- *** Decisions
-- *** Decisions
-- | Find and return a decision variable.  A /decision variable/ must be (1)
-- undefined under the assignment and (2) it or its negation occur in the-- | Find and return a decision variable.  A /decision variable/ must be (1)
-- formula.-- undefined under the assignment and (2) it or its negation occur in the
---- formula.
---- Select a decision variable, if possible, and return it and the adjusted
-- `VarOrder'.-- Select a decision variable, if possible, and return it and the adjusted
select-- `VarOrder'.:: IAssignment -> FrozenVarOrder -> Maybe Var
select{-# INLINE:: IAssignmentselect #-} -> FrozenVarOrder -> Maybe Var
{-# INLINEselect = varOrderGet #-}
select = varOrderGet
selectStatic :: IAssignment -> a -> Maybe Var
selectStatic{-# INLINE selectStatic:: IAssignment#-} -> a -> Maybe Var
{-# INLINEselectStaticm _ = find #-}(`isUndefUnder` m) (range . bounds $ m)
selectStatic m _ = find (`isUndefUnder` m) (range . bounds $ m)
-- | Assign given decision variable.  Records the current assignment before
-- deciding on the decision variable indexing the assignment.-- | Assign given decision variable.  Records the current assignment before
decide-- deciding on the decision variable indexing the assignment.:: MAssignment s -> Var -> FunMonad s (Maybe (MAssignment s))
decide ::m vMAssignment= do       s -> Var -> FunMonad s (Maybe (MAssignment s))
decidelet ld v = do(unVar v)
  let(SC{ld==dlL)(unVar<- getv)
--   trace ("decide " ++ show ld) $ return ()SC{dl=dl}) <- get
--   trace ("decide " ++ show ld) $ return ()incNumDecisions
  incNumDecisionsmodify $ \s -> s{ dl = ld:dl }
  modifyenqueue$m\sld->Nothing{ dl = ld:dl }
  enqueuereturn $mJust Nothingm
  return $ Just m


-- *** Backtracking
-- *** Backtracking
-- | Non-chronological backtracking.  The current returns the learned clause
-- implied by the first unique implication point cut of the conflict graph.-- | Non-chronological backtracking.  The current returns the learned clause
backJump-- implied by the first unique implication point cut of the conflict graph.:: MAssignment s
backJump :: MAssignment(Lit, Clauses ClauseId)
         -> (-- ^ @(l, c)@, where attempting to assign @l@ conflicted withLit, Clause, ClauseId)
            -- clause @c@.-- ^ @(l, c)@, where attempting to assign @l@ conflicted with
         -> FunMonad-- clause @c@.s (Maybe (MAssignment s))
backJump ->m cFunMonad@(_, _conflict (Maybe, _)(MAssignment= get >>= \(sSC))dl=dl, reason=_reason}) -> do
backJump_theTrail c@(_<-, _conflictgets trail, _) = get >>= \(SC{dl=dl, reason=_reason}) -> do
     --     trace ("********** conflict = " ++ show c) $ return () <- gets trail
     --     trace ("trail = " ++ show _theTrail) $ return ()--     trace ("********** conflict = " ++ show c) $ return ()
     --     trace ("trail = " ++ show _theTrail) $ return ()--     trace ("dlits (" ++ show (length dl) ++ ") = " ++ show dl) $ return ()
     --          ++ "reason: " ++ Map.showTree _reason--     trace ("dlits (" ++ show (length dl) ++ ") = " ++ show dl) $ return ()
     --           ) (--          ++ "reason: " ++ Map.showTree _reason
     --           ) (incNumConfl ; incNumConflTotal
         incNumConfllevelArr :: ;FrozenLevelArray<- do s <- get
         levelArr :: FrozenLevelArray <- do sliftST<- get$ unsafeFreeze (level s)
         (learntCl, learntClId, newLevel) <-liftST $ unsafeFreeze (level s)
         (learntCldo mFr, learntClId<- unsafeFreezeAss, newLevelm) <-
             do mFranalyse<- unsafeFreezeAssmFr levelArr dlmc
         s <- get mFr levelArr dl c
         slet<-numDecisionsToUndo               = length dl - newLevel
         let numDecisionsToUndodl' = drop numDecisionsToUndo= length dldl newLevel
             dl'undoneLits= drop numDecisionsToUndo= takeWhile (\lit ->levelArr ! (var lit) > newLevel) (trail s)
         forM_undoneLits= takeWhile$ const (undoOne\lit ->m)levelArr-- backtrack (var lit) > newLevel) (trail s)
         forM_mFr <-undoneLitsunsafeFreezeAss constm (undoOne m) -- backtrack
         mFrassert<- unsafeFreezeAss(numDecisionsToUndo   > 0) $
         assertassert(numDecisionsToUndo(not (null learntCl>)0) $
          assert (notlearntClnull`learntClisUnitUnder)) $ mFr) $
          assert (learntCl\s -> s{`isUnitUnderdl  = dl' }`-- undo decisions) $
         mFr<- unsafeFreezeAss \s -> s{ dl  = dl' } -- undo decisions
     --     trace ("new mFr: " ++ showAssignment mFr) $ return () <- unsafeFreezeAss m
     --     trace ("new mFr: " ++ showAssignment mFr) $ return ()-- TODO once I'm sure this works I don't need getUnit, I can just use the
         -- uip of the cut.-- TODO once I'm sure this works I don't need getUnit, I can just use the
         watchClause-- uip of the cut.m (learntCl, learntClId) True
         watchClauseenqueue m (getUnit (learntCllearntCl, learntClIdmFr) (Just) True(learntCl, learntClId))
         enqueue-- learntCl is asserting (getUnit learntCl mFr) (Just (learntCl, learntClId))
         return-- learntCl is asserting$ Just m
         return $ Just m


-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and
-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and-- executing @cmd@.  The traditional @do-while@ semantics, in other words.
doWhile-- executing @cmd@.  The traditional @do-while@ semantics, in other words.:: (Monad m) => m () -> m Bool -> m ()
doWhile ::bodyMonadtest m)do=> m () -> m Bool -> m ()
doWhilebody  body test = do
  bodyshouldContinue <- test
  shouldContinuewhen shouldContinue<- test$ doWhile body test
  when shouldContinue $ doWhile body test
-- | Analyse a the conflict graph and produce a learned clause.  We use the
-- First UIP cut of the conflict graph.-- | Analyse a the conflict graph and produce a learned clause.  We use the
---- First UIP cut of the conflict graph.
---- May undo part of the trail, but not past the current decision level.
analyse-- May undo part of the trail, but not past the current decision level.:: IAssignment -> FrozenLevelArray -> [Lit] -> (Lit, Clause, ClauseId)
analyse :: IAssignmentFunMonad s (->Clause, ClauseId, Int->) [Lit] -> (Lit, Clause, ClauseId)
        -> FunMonad-- ^ learned clause and new decision level (Clause, ClauseId, Int)
analyse mFr-- ^ learned clause and new decision levellevelArr dlits (cLit, cClause, cCid) = do
analysest <-get dlits (cLit, cClause, cCid) = do
--     trace ("mFr: " ++ showAssignment mFr) $ assert True (return ()) <- get
--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut--     trace ("mFr: " ++ showAssignment mFr) $ assert True (return ())
--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)
--                       (firstUIP conflGraph)--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)
--                       (firstUIP conflGraph)--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c
--                      :: Gr CGNodeAnnot ()--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c
--                      :: Gr CGNodeAnnot ()--     trace ("graphviz graph:\n" ++ graphviz' conflGraph) $ return ()
--     trace ("cut: " ++ show firstUIPCut) $ return ()--     trace ("graphviz graph:\n" ++ graphviz' conflGraph) $ return ()
--     trace ("cut: " ++ show firstUIPCut) $ return ()--     trace ("topSort: " ++ show topSortNodes) $ return ()
--     trace ("topSort: " ++ show topSortNodes) $ return ()--     trace ("dlits (" ++ show (length dlits) ++ "): " ++ show dlits) $ return ()
--     trace ("dlits (" ++ show (length dlits) ++ "): " ++ show dlits) $ return ()--     trace ("learnt: " ++ show (map (\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()
--     outputConflict "conflict.dot" (graphviz' conflGraph) $ return ()--     trace ("learnt: " ++ show (map (\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()
--     return $ (learntCl, newLevel)--     outputConflict "conflict.dot" (graphviz' conflGraph) $ return ()
--     return $ (learntCl, newLevel)m <- liftST $ unsafeThawAss mFr
    m <- liftSTfirstUIPBFS unsafeThawAssm (numVars mFr. cnf $ st) (reason st)
--     trace ("firstUIPBFS learned: " ++ show a) $ return () <- firstUIPBFS m (numVars . cnf $ st) (reason st)
--     trace ("firstUIPBFS learned: " ++ show a) $ return ()return a
  where a
  where-- BFS by undoing the trail backward.  From Minisat paper.  Returns
    -- conflict clause and backtrack level.-- BFS by undoing the trail backward.  From Minisat paper.  Returns
    firstUIPBFS-- conflict clause and backtrack level.:: MAssignment s -> Int -> ReasonMap
    firstUIPBFS :: MAssignmentFunMonad s (sClause-> Int, ClauseId-> ReasonMap, Int)
    firstUIPBFS ->m nVarsreasonMap (Clause=  ,doClauseId, Int)
    firstUIPBFSresolveSourcesR nVars<-reasonMapliftST $ =newSTRef    [] -- trace sources
      resolveSourcesRlet addResolveSource<- liftSTclauseId newSTRef=      [] -- trace sources
      let addResolveSourceliftST $ modifySTRefresolveSourcesR=              (clauseId:)
      -- Literals we should process. $ modifySTRef resolveSourcesR (clauseId:)
      seenArr-- Literals we should process.<- liftST $ newSTUArray (V 1, V nVars) False
      seenArrcounterR <- liftST $ newSTUArraynewSTRef (0 (::V 1Int, V nVars-- Number of unprocessed current-level) False
      counterR <- liftST $ newSTRef (0 :: Int) -- lits we know about.-- Number of unprocessed current-level
      pR <- liftST $ newSTRef cLit -- Invariant: literal from current dec. lev.-- lits we know about.
      pRout_learnedR<- liftST $<-newSTRefliftST $cLitnewSTRef-- Invariant: literal from current dec. lev.[]
      out_learnedR <- liftST $ newSTRef []
      out_btlevelRlet reasonL l<-= liftSTif l ==$cLitthen 0cClause, cCid)
      let reasonL l = ifelse == cLit then (cClause, cCid)
                      elselet (r, rid) =
                        let (r, ridMap.findWithDefault) =              (error "analyse: reasonL")
                                Map.findWithDefault(var l) reasonMap   (error "analyse: reasonL")
                        in (r `withoutvar l) reasonMapl, rid)
                        in (r `without` l, rid)

      (`doWhile` (liftM (> 0) (liftST $ readSTRef counterR))) $
      (`doWhiledo p <-`liftSTliftM$(>readSTRef) (liftSTpR $ readSTRef counterR))) $
        do plet<-(liftSTp_reason,readSTRefp_rid) = pRreasonL p
           lettraceClauseIdp_reason,p_rid) = reasonL p
           traceClauseIdaddResolveSourcep_rid
           addResolveSourceforM_ p_reason (bump. var)
           forM_-- For each unseen reason, (bump . var)
           -- For each unseen reason,-- > from the current level, bump counter
           -- > from the current level, bump counter-- > from lower level, put in learned clause
           liftST-- > from lower level, put in learned clause. forM_ p_reason $ \q -> do
           liftSTseenq.<-readArrayseenArr \q ->(varq)
         seenqwhen (<-notreadArrayseenq) $ seenArr (var q)
         whendo (writeArraynot seenq)seenArr      (var q) True
           do writeArrayif levelL qseenArr== currentLevelvar q) True
              ifthenmodifySTRef == currentLevelcounterR (+ 1)
               then modifySTRefif levelL q counterR> 0      (+ 1)
               else if levelLmodifySTRef > 0out_learnedR (q:)
               then do modifySTRef out_learnedR (q:max)  (levelL q)
               else return()      out_btlevelR $ max (levelL q)
       -- Select next literal to look at:else return ()
           (-- Select next literal to look at:`doWhile` (liftST (readSTRef pR >>= readArray seenArr . var)
           (`doWhile` (liftST>>= returnreadSTRef. not))pR$ >>=do  readArray seenArr . var)
             p <- head >>=`liftM` gets nottrail)) $-- a dec. var. only if the counter =
             p <- head `liftM` gets trail -- 1, i.e., loop terminates now-- a dec. var. only if the counter =
             liftST $ writeSTRef pR p     -- 1, i.e., loop terminates now
             liftSTundoOne$mwriteSTRef pR p
           -- Invariant states p is from current level, so when we're done m
           -- with it, we've thrown away one lit. from counting toward-- Invariant states p is from current level, so when we're done
           -- counter.-- with it, we've thrown away one lit. from counting toward
           liftST-- counter.$ modifySTRef counterR (\c -> c - 1)
      p <- liftST $ modifySTRefreadSTRef pRcounterR (\c -> c - 1)
      pliftST<- liftST$ modifySTRef readSTRefout_learnedR        (negate p:)
      liftSTbump . $var$ p       out_learnedR (negate p:)
      bumpout_learned var $<- liftST $ readSTRef out_learnedR
      out_learned <- liftST $ readSTRef out_learnedR
      out_btlevellearnedClauseId<- liftST<- nextTraceId readSTRef out_btlevelR
      learnedClauseIdstoreResolvedSources<- nextTraceIdresolveSourcesR learnedClauseId
      storeResolvedSourcestraceClauseId learnedClauseId learnedClauseId
      traceClauseIdreturn (out_learned, learnedClauseId, out_btlevel)
      return (out_learned, learnedClauseId, out_btlevel)
    -- helpers
    -- helperscurrentLevel = length dlits
    currentLevellevelL l = levelArr= length!(varl)
    levelLstoreResolvedSources = levelArr!(var lclauseId)       = do
    storeResolvedSourcesrsReversed <- liftST$ clauseIdreadSTRef=rsR
      rsReversed <-resolutionTrace $ readSTRef$ \s rt->
      modifySlots{resolutionTrace=      $ \s rt ->
 s{resolutionTracert{resSourceMap=   =
       rt{resSourceMapMap.insert= clauseId (reverse rsReversed) (resSourceMap rt)}}
              Map.insert clauseId (reverse rsReversed) (resSourceMap rt)}}

-- | Delete the assignment to last-assigned literal.  Undoes the trail, the
-- assignment, sets `noLevel', undoes reason.-- | Delete the assignment to last-assigned literal.  Undoes the trail, the
---- assignment, sets `noLevel', undoes reason.
---- Does /not/ touch `dl'.
undoOne-- Does /not/ touch `dl'.:: MAssignment s -> FunMonad s ()
undoOne{-# INLINE:: MAssignmentundoOne #-} s -> FunMonad s ()
{-# INLINEundoOne m =undoOnedo     #-}
undoOnetrl m<-=gets  trail
    trl <- gets trail
    lvlcase<-trlof level
    case[] trl of-> error "undoOne of empty trail"
      []:trl') -> errordo    "undoOne of empty trail"
      (l:trl'liftST) ->$dom `unassign` l
          liftST $ mwriteArrayunassign`lvl (var l) noLevel
          liftST $ writeArray\s ->      lvl (var l) noLevel
          modifys{ trail \s ->= trl'
              s{ trailreason   = trl'Map.delete (var l) (reason s) }
               , reason   = Map.delete (var l) (reason s) }
-- | Increase the recorded activity of given variable.
bump-- | Increase the recorded activity of given variable.:: Var -> FunMonad s ()
bump{-# INLINE:: Varbump-> FunMonad#-}     s ()
{-# INLINEbump v = varOrderMod #-}  v (+ varInc)
bump v = varOrderMod v (+ varInc)
-- | Constant amount by which a variable is `bump'ed.
varInc-- | Constant amount by which a variable is `bump'ed.:: Double
varInc ::= 1.0
varInc = 1.0


-- *** Impossible to satisfy
-- *** Impossible to satisfy
-- | /O(1)/.  Test for unsatisfiability.
---- | /O(1)/.  Test for unsatisfiability.
---- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting
-- clause and there are no decision literals in @m@.''  But we were deciding-- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting
-- on all literals *without* creating a conflicting clause.  So now we also-- clause and there are no decision literals in @m@.''  But we were deciding
-- test whether we've made all possible decisions, too.-- on all literals *without* creating a conflicting clause.  So now we also
unsat-- test whether we've made all possible decisions, too.:: Maybe a -> FunsatState s -> Bool
unsat{-# INLINE:: Maybeunsat ->#-}FunsatState s -> Bool
{-# INLINEunsat maybeConflict #-}(SC{dl=dl}) = isUnsat
unsatwhereisUnsat = (SCnull{dl=dldl}&&) =isJustmaybeConflict)
    where isUnsat = (-- or BitSet.size bad == numVars cnfnull dl && isJust maybeConflict)
                    -- or BitSet.size bad == numVars cnf


-- ** Helpers
-- ** Helpers
-- *** Clause compaction
-- *** Clause compaction
-- | Keep the smaller half of the learned clauses.
compactDB-- | Keep the smaller half of the learned clauses.:: FunMonad s ()
compactDB ::= do s ()
compactDBn <- numVars= do   `liftM` gets cnf
    nlArr<- numVars<- gets `learntliftM` gets cnf
    lArrclauses<- gets<- liftST$ (nub . Fl.concat) `liftM`
    clauses <- liftST $ (forMnub .LFl.concat(- n) ..)L`liftMn]   `
                        forM(\[L->-do)val.. L<-n]readArray lArr v ; writeArray lArr v []
                           (\v -> do valreturn<- readArrayval)      lArr v ; writeArray lArr v []
    let clauses' = take (length clauses`divval` 2)
    let clauses' = take$ sortBylength(comparing(`lengthdiv` 2) (\(_,s,_) -> s))) clauses
    liftST $ forM_ $clauses' (comparing (length . (\(_,s,_) -> s))) clauses
    liftST $ forM_(\ wClclauses'@(r, _, _) -> do
             (\ wCl(x,@(r,<-,readSTRef) -> do r
                (modifyArrayx, y) <- readSTReflArr x $rconst (wCl:)
                modifyArray lArr x $ const (wCl:))
                modifyArray lArr y $ const (wCl:))
-- *** Unit propagation
-- *** Unit propagation
-- | Add clause to the watcher lists, unless clause is a singleton; if clause
-- | Add clause to the watcher lists, unless clause is a singleton; if clause-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict,
-- `True' otherwise.  This function should be called exactly once per clause,-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict,
-- per run.  It should not be called to reconstruct the watcher list when-- `True' otherwise.  This function should be called exactly once per clause,
-- propagating.-- per run.  It should not be called to reconstruct the watcher list when
---- propagating.
---- Currently the watched literals in each clause are the first two.
---- Currently the watched literals in each clause are the first two.
---- Also adds unique clause ids to trace.
watchClause-- Also adds unique clause ids to trace.:: MAssignment s
watchClause :: MAssignment(Clause, ClauseId    )
            -> (BoolClause, ClauseId)-- ^ Is this clause learned?
            -> BoolFunMonad s Bool  -- ^ Is this clause learned?
{-# INLINE watchClause-> FunMonad#-} Bool
{-# INLINEwatchClausewatchClausem (c, cid) #-}isLearnt = do
watchClausecase c of (c, cid) isLearnt = do
    case[] c->ofreturn True
      []]->->returndo result<- enqueue m l (Just (c, cid))
      [l] -> do resultlevelArr<-<-gets level l (Just (c, cid))
                levelArrliftST $ <-writeArray levellevelArr (var l) 0
                liftSTwhen (not writeArrayisLearnt) levelArr(        (var l) 0
                whenmodifySlotnot isLearntresolutionTrace) (        $ \s rt ->
                  modifySlots{resolutionTrace=rt{resTraceOriginalSingles \s rt ->           =
                                     s{resolutionTrace=rt{resTraceOriginalSingles(c,cid):resTraceOriginalSingles=            rt}})
                               return result                  (c,cid):resTraceOriginalSingles rt}})
      _ -> do letp = (result (c !! 0), negate (c !! 1))
      _ -> do let p_insert= (negateannClc(!!_, 0cl), negatelist -- avoid watching dup clausesc !! 1))
                  _insert| any(\(@(_,)cl->) listcl ==-- avoid watching dup clausesc) list = list
                      | anyotherwise\(_, c) -> cl == c) list = listannCl:list
              r <- liftST otherwise$ newSTRef p                = annCl:list
              rlet<-annCl= $rnewSTRef, c, cid)p
              let annCl =arrr, cdo, cidmodifyArray)        arr (fst p) $ const (annCl:)
                  addCl arr = do modifyArray arr (fst p) $ const (annCl:)
              get >>= liftST . addCl. (if isLearnt (sndthen) $learntelseannClwatches:)   )
              getreturnTrue . addCl . (if isLearnt then learnt else watches)
              return True
-- | Enqueue literal in the `propQ' and place it in the current assignment.
-- | Enqueue literal in the `propQ' and place it in the current assignment.-- If this conflicts with an existing assignment, returns @False@; otherwise
-- returns @True@.  In case there is a conflict, the assignment is /not/-- If this conflicts with an existing assignment, returns @False@; otherwise
-- altered.-- returns @True@.  In case there is a conflict, the assignment is /not/
---- altered.
---- Also records decision level, modifies trail, and records reason for
-- assignment.-- Also records decision level, modifies trail, and records reason for
enqueue-- assignment.:: MAssignment s
enqueue :: MAssignmentLit         s
        -> Lit-- ^ The literal that has been assigned true.
        -> Maybe-- ^ The literal that has been assigned true.(Clause, ClauseId)
        -> Maybe-- ^ The reason for enqueuing the literal.  Including aClause, ClauseId)
           -- non-@Nothing@ value here adjusts the `reason' map.-- ^ The reason for enqueuing the literal.  Including a
        -> FunMonad-- non-@Nothing@ value here adjusts the `reason' map.s Bool
{-# INLINE-> FunMonadenqueue #-} Bool
{-# INLINE-- enqueue _m l _r | trace ("enqueue " ++ show l) $ False = undefined #-}
enqueue-- enqueue _m l _r | trace ("enqueue " ++ show l) $ False = undefinedm l r = do
enqueuemFr m<-lunsafeFreezeAss = do         m
    mFrcase<-l unsafeFreezeAss`statusUnder` mFr of
    caseRight `statusUnderb -> return`bmFr of   -- conflict/already assigned
      RightLeft (b -> returndo     b         -- conflict/already assigned
      LeftliftST) ->$ dom `assign` l
        liftST-- assign decision level for literal m `assign` l
        gets-- assign decision level for literal(level &&& (length . dl)) >>= \(levelArr, dlInt) ->
        getsliftSTlevel(writeArray (lengthlevelArr dl))(>>= \(levelArrdlInt) , dlInt) ->
                   modify$ (writeArrays -> s{ trail= l : (vartrail)sdlInt)    )
        modify $ \s -> s{ trail = lpropQ (trails Seq.|>)  l }
        when (isJust r) , propQ = propQ s Seq.|> l }
        whenmodifySlotisJust rreason) $   $ \s m -> s{reason = Map.insert (var l) (fromJust r) m}
        returnTrue  reason $ \s m -> s{reason = Map.insert (var l) (fromJust r) m}
        return True
-- | Pop the `propQ'.  Error (crash) if it is empty.
dequeue-- | Pop the `propQ'.  Error (crash) if it is empty.:: FunMonad s Lit
dequeue{-# INLINE:: FunMonaddequeue #-} Lit
{-# INLINEdequeue = do #-}
dequeueq <-=gets  propQ
    qcase<- getsSeq.viewlq of
    caseSeq.EmptyL->qerrorof   "dequeue of empty propQ"
      Seq.EmptyLtop Seq.:< -> error-> do "dequeue of empty propQ"
      topmodify$ q'\s -> dos{propQ = q'}
        modify $tops -> s{propQ = q'}
        return top
-- | Clear the `propQ'.
clearQueue-- | Clear the `propQ'.:: FunMonad s ()
clearQueue ::clearQueue#-} ()
{-# INLINE clearQueue= modify $ #-}\s -> s{propQ = Seq.empty}
clearQueue = modify $ \s -> s{propQ = Seq.empty}
-- *** Dynamic variable ordering
-- *** Dynamic variable ordering
-- | Modify priority of variable; takes care of @Double@ overflow.
varOrderMod-- | Modify priority of variable; takes care of @Double@ overflow.:: Var -> (Double -> Double) -> FunMonad s ()
varOrderMod ::v fVar= do-> (Double -> Double) -> FunMonad s ()
varOrderModvo <- varOrderArr f = do  `liftM` gets varOrder
    vovActivity<- varOrderArr<- liftSTliftM$ readArray` gets varOrdervo v
    vActivitywhen (f vActivity<- liftST> $1e100) $ rescaleActivities v           vo
    whenliftSTf$vActivitywriteArray 1e100vo v )f$vActivity)         vo
  where $ writeArray vo v (f vActivity)
  whererescaleActivities vo = liftST $ do
    rescaleActivitiesindices <- range =liftM` getBounds do     vo
        indicesforM_ indices<- range(\i`liftM-> modifyArray` getBoundsvovoi $ const (* 1e-100))
        forM_ indices (\i -> modifyArray vo i $ const (* 1e-100))

-- | Retrieve the maximum-priority variable from the variable order.
varOrderGet-- | Retrieve the maximum-priority variable from the variable order.:: IAssignment -> FrozenVarOrder -> Maybe Var
varOrderGet{-# INLINE varOrderGet:: IAssignment#-} -> FrozenVarOrder -> Maybe Var
{-# INLINEvarOrderGetvarOrderGetmFr (FrozenVarOrder#-}      voFr) =
varOrderGet-- find highest var undef under mFr, then find one with highest activity (FrozenVarOrder voFr) =
    (-- find highest var undef under mFr, then find one with highest activity`fmap` goUndef highestIndex) $ \start -> goActivity start start
  where`fmap` goUndef highestIndex) $ \start -> goActivity start start
  wherehighestIndex = snd . bounds $ voFr
    highestIndexmaxActivity v=v'= .ifboundsvoFr!v$>voFrvoFr!v' then v else v'
    maxActivity v v' = if voFr!v > voFr!v' then v else v'
    -- @goActivity current highest@ returns highest-activity var
    goActivity-- @goActivity current highest@ returns highest-activity var!(V 0) !h   = h
    goActivity !(V(0)n!h!h = hif v `isUndefUnder` mFr
    goActivity !v@(V n) !h = ifthen `goActivityisUndefUnder(V`$!n-1) (v `maxActivity` h)
                             then goActivity (V $! n-1) (v `maxActivity` h)
                             else goActivity (V $! n-1) h
    -- returns highest var that is undef under mFr
    goUndef-- returns highest var that is undef under mFr!(V 0) = Nothing
    goUndef !(V(0)n= Nothing| v `isUndefUnder` mFr = Just v
    goUndef !v@(V n) | votherwiseisUndefUnder` mFr = JustgoUndef  (V $! n-1)
                     | otherwise            = goUndef (V $! n-1)

-- | Generate a new clause identifier (always unique).
nextTraceId-- | Generate a new clause identifier (always unique).:: FunMonad s Int
nextTraceId ::= do s Int
nextTraceIdcounter =<-dogets (resTraceIdCount . resolutionTrace)
    countermodifySlot<- getsresolutionTraceresTraceIdCount$ \s rt resolutionTrace->             )
    modifySlots{ resolutionTrace= rt$ \resTraceIdCounts rt ->        = succ counter }}
return{ resolutionTrace$! counter      = rt{ resTraceIdCount = succ counter }}
    return $! counter
-- | Add the given clause id to the trace.
traceClauseId-- | Add the given clause id to the trace.:: ClauseId -> FunMonad s ()
traceClauseId ::cidClauseId= do    -> FunMonad s ()
traceClauseIdmodifySlotcidresolutionTrace= do         $ \s rt ->
    modifySlots{resolutionTrace= rt{$resTraces rt ->= [cid] }}
         s{resolutionTrace = rt{ resTrace = [cid] }}

-- *** Generic state transition notation
-- *** Generic state transition notation
-- | Guard a transition action.  If the boolean is true, return the action
-- given as an argument.  Otherwise, return `Nothing'.-- | Guard a transition action.  If the boolean is true, return the action
(-- given as an argument.  Otherwise, return `Nothing'.==>) :: (Monad m) => Bool -> m a -> Maybe (m a)
({-# INLINE==>) :: (Monad(==>)m)#-}=> Bool -> m a -> Maybe (m a)
{-# INLINE(==>) b amb(==>= guard) #-}b >> return amb
(==>) b amb = guard b >> return amb
infixr 6 ==>
infixr 6 ==>
-- | @flip fmap@.
(-- | @flip fmap@.>=>) :: (Monad m) => Maybe a -> (a -> m b) -> Maybe (m b)
({-# INLINE>=>) :: (Monad(>=>)m)#-}=> Maybe a -> (a -> m b) -> Maybe (m b)
{-# INLINE(>=>) = flip>=>fmap) #-}
(>=>) = flip fmap
infixr 6 >=>
infixr 6 >=>

-- | Choice of state transitions.  Choose the leftmost action that isn't
-- @Nothing@, or return @Nothing@ otherwise.-- | Choice of state transitions.  Choose the leftmost action that isn't
(-- @Nothing@, or return @Nothing@ otherwise.><) :: (Monad m) => Maybe (m a) -> Maybe (m a) -> Maybe (m a)
(a1><)><::a2(Monad=     m) => Maybe (m a) -> Maybe (m a) -> Maybe (m a)
a1 ><case =a1, a2) of
    case(Nothinga1, a2, )Nothingof   ) -> Nothing
      (NothingJust _,,_Nothing)      ) -> Nothinga1
      (Just _, _)        -> a1
      _                  -> a2
infixl 5 ><
infixl 5 ><
-- *** Misc
-- *** Misc
initialActivity :: Double
initialActivity ::= 1.0
initialActivity = 1.0
instance Error (Lit, Clause, ClauseId) where noMsg = (L 0, [], 0)
instance Error (Lit) where, ClausenoMsg, ClauseId= ()   ) where noMsg = (L 0, [], 0)
instance Error () where noMsg = ()

data VerifyError =
dataSatError[(Clause=   , Either () Bool)]
    SatError-- ^ Indicates a unsatisfactory assignment that was claimed(Clause, Either () Bool)]
      -- ^ Indicates a unsatisfactory assignment that was claimed-- satisfactory.  Each clause is tagged with its status using
      -- 'Funsat.Types.Model'@.statusUnder@.-- satisfactory.  Each clause is tagged with its status using
      -- 'Funsat.Types.Model'@.statusUnder@.
    | UnsatError ResolutionError
    | UnsatError-- ^ Indicates an error in the resultion checking process.
      -- ^ Indicates an error in the resultion checking process.
                   deriving (Show)
                   deriving (Show)
-- | Verify the solution.  In case of `Sat', checks that the assignment is
-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a-- | Verify the solution.  In case of `Sat', checks that the assignment is
-- resolution-based checker on a trace of the SAT solver.-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a
verify-- resolution-based checker on a trace of the SAT solver.:: Solution -> Maybe ResolutionTrace -> CNF -> Maybe VerifyError
verify ::solSolutionmaybeRT ->cnfMaybe=    ResolutionTrace -> CNF -> Maybe VerifyError
verify-- m is well-formed maybeRT cnf =
--    Fl.all (\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]-- m is well-formed
--    Fl.all (\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]case sol of
    caseSatsolm ->of
      Sat mletunsatClauses = toList $
          let unsatClauses = toListSet.filter   (not . isTrue . snd) $
                             Set.filterSet.map (\c(not-> (.,isTruec `statusUnder snd) $` m)) (clauses cnf)
          in if null unsatClauses (\c -> (c, c `statusUnder` m)) (clauses cnf)
          in ifthenNothing
             then NothingJust . SatError $ unsatClauses
      Unsat _else->  Just . SatError $ unsatClauses
      Unsatcase ->Resolution.checkDepthFirst (fromJust maybeRT) of
          caseLefter -> Just . UnsatError $(fromJuster       maybeRT) of
            LeftRighter_ -> JustNothing UnsatError $ er
  where isTrue(Right ->True) = True
  where isTrue (Right True) = TrueFalse
        isTrue _            = False
---------------------------------------
-- Statistics & trace---------------------------------------
-- Statistics & trace

data Stats = Stats
data{StatsstatsNumConfl= Stats  :: Int64
    { statsNumConfl-- ^ Number of conflicts since last restart.:: Int64
      -- ^ Number of conflicts since last restart.
    , statsNumConflTotal :: Int64
    , statsNumConflTotal-- ^ Number of conflicts since beginning of solving.:: Int64
      -- ^ Number of conflicts since beginning of solving.
    , statsNumLearnt :: Int64
    , statsNumLearnt-- ^ Number of learned clauses currently in DB (fluctuates because DB is:: Int64
      -- compacted every restart).-- ^ Number of learned clauses currently in DB (fluctuates because DB is
      -- compacted every restart).
    , statsAvgLearntLen :: Double
    , statsAvgLearntLen-- ^ Avg. number of literals per learnt clause.:: Double
      -- ^ Avg. number of literals per learnt clause.
    , statsNumDecisions :: Int64
    , statsNumDecisions-- ^ Total number of decisions since beginning of solving.:: Int64
      -- ^ Total number of decisions since beginning of solving.
    , statsNumImpl :: Int64
    , statsNumImpl-- ^ Total number of unit implications since beginning of solving.:: Int64
    } -- ^ Total number of unit implications since beginning of solving.
    }
-- |  The show instance uses the wrapped string.
newtype-- |  The show instance uses the wrapped string.ShowWrapped = WrapString { unwrapString :: String }
newtypeinstanceShowWrappedShow ShowWrapped= WrapStringwhere show unwrapString= unwrapString:: String }
instance Show ShowWrapped where show = unwrapString
instance Show Stats where show = show . statTable
instance Show Stats where show = show . statTable
-- | Convert statistics to a nice-to-display tabular form.
statTable-- | Convert statistics to a nice-to-display tabular form.:: Stats -> Tabular.Table ShowWrapped
statTable ::s =Stats -> Tabular.Table ShowWrapped
statTableTabular.mkTable =
    Tabular.mkTable[ [WrapString "Num. Conflicts"
                   [ [WrapString "Num. Conflicts"$ show (statsNumConflTotal s)]
                   , ,WrapString $"Num. Learned Clauses" (statsNumConflTotal s)]
                   , [WrapString "Num. Learned Clauses"$ show (statsNumLearnt s)]
                   , ,WrapString $" --> Avg. Lits/Clause" (statsNumLearnt s)]
                   , [WrapString " --> Avg. Lits/Clause"$ show (statsAvgLearntLen s)]
                   , ,WrapString $"Num. Decisions" (statsAvgLearntLen s)]
                   , [WrapString "Num. Decisions"$ show (statsNumDecisions s)]
                   , ,WrapString $"Num. Propagations" (statsNumDecisions s)]
                   , [WrapString "Num. Propagations"$ show (statsNumImpl s)] ]
                     ,WrapString $ show (statsNumImpl s)] ]
-- | Converts statistics into a tabular, human-readable summary.
statSummary-- | Converts statistics into a tabular, human-readable summary.:: Stats -> String
statSummary ::s =Stats -> String
statSummaryshow (Tabular.mkTable =
     show (Tabular.mkTable[[WrapString $ show (statsNumConflTotal s) ++ " Conflicts"
           [[WrapString $ show (++statsNumConflTotalshow (statsNumLearnt) ++s)" Conflicts"++ " Learned Clauses"
            ,WrapString++$" (avg " ++ show++ printfstatsNumLearnt"%.2f" (statsAvgLearntLen) ++ " Learned Clauses"s)
                      ++ " (avg "" lits/clause)" printf]]) "%.2f" (statsAvgLearntLen s)
                      ++ " lits/clause)"]])

extractStats :: FunMonad s Stats
extractStats ::= do s Stats
extractStatss <- gets stats= do
  slearntArr<- gets stats<- get >>= liftST . unsafeFreezeWatchArray . learnt
  learntArrlet learnts<-=get(nub. liftSTFl.concat unsafeFreezeWatchArray)                      . learnt
  let learnts[ map =sortnub..(Fl.concat\(_,c,_) )-> c)) (learntArr!i)
        [ mapi <-(sort(range (\(bounds_,c,_) ->learntArr)) (learntArr] :: [Clause!i)  ]
      stats| i <-=  (range . bounds) learntArr ] :: [Clause]
      statsStats= { statsNumConfl = numConfl s
        Stats { statsNumConflstatsNumConflTotal= numConfl= numConflTotal         s
              , statsNumConflTotalstatsNumLearnt = fromIntegral= numConflTotal$ length   learnts
              , statsNumLearntstatsAvgLearntLen= fromIntegral=           $ length learnts
              , statsAvgLearntLenfromIntegral (foldl'=  (+) 0 (map length learnts))
                fromIntegral/ fromIntegralfoldl'(statsNumLearnt+) 0 (mapstats)  learnts))
              , /statsNumDecisions (statsNumLearnt= numDecisionss  )
              , statsNumDecisionsstatsNumImpl = numImpl= numDecisionss }       s
  return stats, statsNumImpl = numImpl s }
  return stats
unsafeFreezeWatchArray :: WatchArray s -> ST s (Array Lit [WatchedPair s])
unsafeFreezeWatchArray ::= freeze s -> ST s (Array Lit [WatchedPair s])
unsafeFreezeWatchArray = freeze

constructResTrace :: Solution -> FunMonad s ResolutionTrace
constructResTrace ::solSolution= do    -> FunMonad s ResolutionTrace
constructResTraces <- get      sol = do
    swatchesIndices<- get       <- range `liftM` liftST (getBounds (watches s))
    watchesIndicesorigClauseMap <-<- range `liftM` liftST (getBounds (watches s))
    origClauseMapfoldM (\origMap<-    i -> do
        foldM (\origMapclausesi<-->liftST    $ readArray (watches s) i
                 clausesreturn $<- liftST $ readArray (watches s) i
                 returnfoldr$(\(_, clause, clauseId) origMap ->
                   foldr (\(Map.insert_, clause,clauseId)clauseorigMap->  )
                         origMap clauseId clause origMap)
                         origMap)
              Map.empty  clauses)
              Map.emptywatchesIndices
    let singleClauseMap=
    let singleClauseMapfoldr (\(clause=  , clauseId) m -> Map.insert clauseId clause m)
            foldr (Map.empty\(clause, clauseId) m -> Map.insert clauseId clause m)
                  Map.empty(resTraceOriginalSingles . resolutionTrace $ s)
        anteMap = (resTraceOriginalSingles . resolutionTrace $ s)
        anteMapfoldr= (\l anteMap -> Map.insert (var l) (getAnteId s (var l)) anteMap)
            foldr (Map.empty\l anteMap -> Map.insert (var l) (getAnteId s (var l)) anteMap)
                  Map.empty(litAssignment . finalAssignment $ sol)
    return        (litAssignment . finalAssignment $ sol)
    return(initResolutionTrace
      (initResolutionTrace(head (resTrace . resolutionTrace $ s))
       (headfinalAssignmentresTrace .sol))            $ s))
      {(finalAssignmenttraceSources = resSourceMap))       . resolutionTrace $ s
      { traceSourcestraceOriginalClauses= resSourceMap= origClauseMap resolutionTrace`Map.union`ssingleClauseMap
      , traceOriginalClausestraceAntecedents = anteMap= origClauseMap}         `Map.union` singleClauseMap
  where, traceAntecedents = anteMap }
  wheregetAnteId s v = snd $
    getAnteIdMap.findWithDefault v = snd $   (error $ "no reason for assigned var " ++ show v)
        Map.findWithDefaultv (reason s)        (error $ "no reason for assigned var " ++ show v)
        v (reason s)

==============
../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs
==============
lengths:(61711,36799)

==============

({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (9,5)) "{-# LANGUAGE MultiParamTypeClasses\n            ,FunctionalDependencies\n            ,FlexibleInstances\n            ,FlexibleContexts\n            ,GeneralizedNewtypeDeriving\n            ,TypeSynonymInstances\n            ,TypeOperators\n            ,ParallelListComp\n            ,BangPatterns\n #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,21)) "{-# OPTIONS -cpp #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,21)) "{-# OPTIONS -cpp #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (6,1),DP (42,3)) "{-|\n\nFunsat aims to be a reasonably efficient modern SAT solver that is easy to\nintegrate as a backend to other projects.  SAT is NP-complete, and thus has\nreductions from many other interesting problems.  We hope this implementation is\nefficient enough to make it useful to solve medium-size, real-world problem\nmapped from another space.  We also have taken pains test the solver rigorously\nto encourage confidence in its output.\n\nOne particular nicetie facilitating integration of Funsat into other projects\nis the efficient calculation of an /unsatisfiable core/ for unsatisfiable\nproblems (see the \"Funsat.Resolution\" module).  In the case a problem is\nunsatisfiable, as a by-product of checking the proof of unsatisfiability,\nFunsat will generate a minimal set of input clauses that are also\nunsatisfiable.\n\nAnother is the ability to compile high-level circuits into CNF.  Seen the\n\"Funsat.Circuit\" module.\n\n* 07 Jun 2008 21:43:42: N.B. because of the use of mutable arrays in the ST\nmonad, the solver will actually give _wrong_ answers if you compile without\noptimisation.  Which is okay, 'cause that's really slow anyway.\n\n[@Bibliography@]\n\n  * ''Abstract DPLL and DPLL Modulo Theories''\n\n  * ''Chaff: Engineering an Efficient SAT solver''\n\n  * ''An Extensible SAT-solver'' by Niklas Een, Niklas Sorensson\n\n  * ''Efficient Conflict Driven Learning in a Boolean Satisfiability Solver''\nby Zhang, Madigan, Moskewicz, Malik\n\n  * ''SAT-MICRO: petit mais costaud!'' by Conchon, Kanig, and Lescuyer\n\n-}" Nothing),DP (6,1)),((AnnComment DComment (DP (-35,1),DP (1,3)) "{-|\n\nFunsat aims to be a reasonably efficient modern SAT solver that is easy to\nintegrate as a backend to other projects.  SAT is NP-complete, and thus has\nreductions from many other interesting problems.  We hope this implementation is\nefficient enough to make it useful to solve medium-size, real-world problem\nmapped from another space.  We also have taken pains test the solver rigorously\nto encourage confidence in its output.\n\nOne particular nicetie facilitating integration of Funsat into other projects\nis the efficient calculation of an /unsatisfiable core/ for unsatisfiable\nproblems (see the \"Funsat.Resolution\" module).  In the case a problem is\nunsatisfiable, as a by-product of checking the proof of unsatisfiability,\nFunsat will generate a minimal set of input clauses that are also\nunsatisfiable.\n\nAnother is the ability to compile high-level circuits into CNF.  Seen the\n\"Funsat.Circuit\" module.\n\n* 07 Jun 2008 21:43:42: N.B. because of the use of mutable arrays in the ST\nmonad, the solver will actually give _wrong_ answers if you compile without\noptimisation.  Which is okay, 'cause that's really slow anyway.\n\n[@Bibliography@]\n\n  * ''Abstract DPLL and DPLL Modulo Theories''\n\n  * ''Chaff: Engineering an Efficient SAT solver''\n\n  * ''An Extensible SAT-solver'' by Niklas Een, Niklas Sorensson\n\n  * ''Efficient Conflict Driven Learning in a Boolean Satisfiability Solver''\nby Zhang, Madigan, Moskewicz, Malik\n\n  * ''SAT-MICRO: petit mais costaud!'' by Conchon, Kanig, and Lescuyer\n\n-}" Nothing),DP (-35,1)),((AnnComment DComment (DP (0,-2),DP (0,4)) "module" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,14)) "Funsat.Solver" Nothing),DP (0,1)),((G AnnModule),DP (55,1)),((AnnComment DComment (DP (0,-6),DP (0,8)) "#ifndef TESTING" Nothing),DP (0,-6)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,10)) "where" Nothing),DP (1,5)),((G AnnWhere),DP (2,5)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:56:8-20 }
    Nothing{ModuleName: Funsat.Solver})) 
  (Just 
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(58,9)-(73,9)
     }
    Just (Ann (DP (1,9)) (ColDelta 9) DP (2,9) [DComment (DP (1,9),DP (1,10)) "(" Nothing,DComment (DP (0,1),DP (0,15)) "-- * Interface" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((G AnnCloseP),DP (1,9))])
    [
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:59:11-15 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (1,11) [DComment (DP (0,1),DP (0,6)) "solve" Nothing,DComment (DP (0,-5),DP (0,9)) "-- * Interface" Nothing,DComment (DP (1,9),DP (1,10)) "," Nothing] [])
      (IEVar 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:59:11-15 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,1)) "solve1" Nothing),DP (0,-5)),((G AnnComma),DP (1,9))])
        (Unqual {OccName: solve})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:60:11-16 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:60:11-16 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,2)) "Solution" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,9))])
        (Unqual {OccName: solve1})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-22 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-8),DP (0,10)) "-- ** Verification" Nothing),DP (0,-8)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,10)) "," Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,7)) "verify" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-6),DP (0,12)) "-- ** Verification" Nothing),DP (0,-6)),((G AnnComma),DP (2,9))])
      (IEThingAll 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-18 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: Solution})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:63:11-16 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:63:11-16 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,5)) "VerifyError" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,9))])
        (Unqual {OccName: verify})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-25 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,8)) "-- ** Configuration" Nothing),DP (0,-11)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,10)) "," Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,13)) "FunsatConfig" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-12),DP (0,7)) "-- ** Configuration" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (2,9))])
      (IEThingAll 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-21 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: VerifyError})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-26 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,1)) "defaultConfig" Nothing),DP (0,-12)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,9))])
      (IEThingAll 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-22 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: FunsatConfig})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:67:11-23 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:67:11-23 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-13),DP (0,9)) "-- * Solver statistics" Nothing),DP (0,-13)),((AnnComment DComment (DP (1,9),DP (1,10)) "," Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,6)) "Stats" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-5),DP (0,17)) "-- * Solver statistics" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,-17),DP (0,-16)) "(" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (2,9))])
        (Unqual {OccName: defaultConfig})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-19 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,6)) "ShowWrapped" Nothing),DP (0,-5)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,3)) "(" Nothing),DP (0,2)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,9))])
      (IEThingAll 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-15 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: Stats})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-25 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,-2)) "statTable" Nothing),DP (0,-11)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,9))])
      (IEThingAll 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-21 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: ShowWrapped})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:71:11-19 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:71:11-19 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,2)) "statSummary" Nothing),DP (0,-9)),((G AnnComma),DP (1,9))])
        (Unqual {OccName: statTable})))),
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:72:11-21 }
      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:72:11-21 }
        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: statSummary}))))])) 
  [
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:1-29 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (13,1) [DComment (DP (1,1),DP (9,3)) "{-\n    This file is part of funsat.\n\n    funsat is free software: it is released under the BSD3 open source license.\n    You can find details of this license in the file LICENSE at the root of the\n    source tree.\n\n    Copyright 2008 Denis Bueno\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-\n    This file is part of funsat.\n\n    funsat is free software: it is released under the BSD3 open source license.\n    You can find details of this license in the file LICENSE at the root of the\n    source tree.\n\n    Copyright 2008 Denis Bueno\n-}" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "Control.Arrow" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "&&&" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:8-20 }
      Nothing{ModuleName: Control.Arrow}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:21-29 }
        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-13),DP (0,4)) "Control.Exception" Nothing),DP (0,-13)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,5)) "assert" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27 }
          Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27 }
            Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: &&&}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:1-34 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,4),DP (0,5)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:8-24 }
      Nothing{ModuleName: Control.Exception}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:25-34 }
        Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,2)) "Control.Monad.Error" Nothing),DP (0,-17)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,1)) "hiding" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:27-32 }
          Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:27-32 }
            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: assert}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:1-61 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,10)) "runErrorT" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:8-26 }
      Nothing{ModuleName: Control.Monad.Error}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (True) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:28-61 }
        Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-19),DP (0,2)) "Control.Monad.MonadST" Nothing] [((G AnnHiding),DP (0,-1)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,8)) "MonadST" Nothing),DP (0,1)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41 }
          Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41 }
            Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: >=>})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:44-48 }
          Just (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:44-48 }
            Just (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: forM_})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:51-59 }
          Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:51-59 }
            Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: runErrorT}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:1-43 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:8-28 }
      Nothing{ModuleName: Control.Monad.MonadST}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:29-43 }
        Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((AnnComment DComment (DP (0,-21),DP (0,2)) "Control.Monad.ST.Strict" Nothing),DP (0,-21)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-41 }
          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingAll 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-37 }
            Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: MonadST}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:1-30 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:8-30 }
      Nothing{ModuleName: Control.Monad.ST.Strict}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:1-55 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-23),DP (0,1)) "Control.Monad.State.Lazy" Nothing,DComment (DP (0,1),DP (0,7)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:8-31 }
      Nothing{ModuleName: Control.Monad.State.Lazy}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (True) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:33-55 }
        Just (Ann (DP (0,12)) (ColDelta 33) DP (0,1) [DComment (DP (0,-24),DP (0,-11)) "Data.Array.ST" Nothing] [((G AnnHiding),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46 }
          Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46 }
            Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: >=>})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:49-53 }
          Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:49-53 }
            Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: forM_}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:8-20 }
      Nothing{ModuleName: Data.Array.ST}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:1-25 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-13),DP (0,5)) "Data.Array.Unboxed" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:8-25 }
      Nothing{ModuleName: Data.Array.Unboxed}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:1-41 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-18),DP (0,-5)) "Data.Foldable" Nothing,DComment (DP (0,1),DP (0,7)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "sequence_" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:8-20 }
      Nothing{ModuleName: Data.Foldable}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (True) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:22-41 }
        Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,1) [DComment (DP (0,-13),DP (0,-5)) "Data.Int" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,6)) "Int64" Nothing] [((G AnnHiding),DP (0,-1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) ")" Nothing),DP (0,-4)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:31-39 }
          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:31-39 }
            Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: sequence_}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:1-24 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:8-15 }
      Nothing{ModuleName: Data.Int}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:16-24 }
        Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,1)) "Data.List" Nothing),DP (0,-8)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-1)) "nub" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:18-22 }
          Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])
          (IEThingAbs 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:18-22 }
            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Int64}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:1-44 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,4)) "tails" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "sortBy" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "sort" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:8-16 }
      Nothing{ModuleName: Data.List}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:17-44 }
        Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "Data.Maybe" Nothing),DP (0,-9)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:19-21 }
          Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:19-21 }
            Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: nub})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:24-28 }
          Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:24-28 }
            Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: tails})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:31-36 }
          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:31-36 }
            Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: sortBy})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:39-42 }
          Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:39-42 }
            Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: sort}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:1-17 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:8-17 }
      Nothing{ModuleName: Data.Maybe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-10),DP (0,-2)) "Data.Ord" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "comparing" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:8-15 }
      Nothing{ModuleName: Data.Ord}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:16-28 }
        Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,2)) "Data.STRef" Nothing),DP (0,-8)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:18-26 }
          Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:18-26 }
            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: comparing}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:1-17 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:8-17 }
      Nothing{ModuleName: Data.STRef}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:1-27 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-10),DP (0,3)) "Data.Sequence" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,4)) "Seq" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,23)) "-- import Debug.Trace (trace)" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:8-20 }
      Nothing{ModuleName: Data.Sequence}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:21-27 }
        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:23-25 }
          Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:23-25 }
            Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Seq}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:1-19 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,23)) "-- import Debug.Trace (trace)" Nothing,DComment (DP (0,-22),DP (0,-10)) "Funsat.Monad" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:8-19 }
      Nothing{ModuleName: Funsat.Monad}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:1-19 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:8-19 }
      Nothing{ModuleName: Funsat.Utils}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:1-68 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,5)) "Funsat.Resolution" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,20)) "initResolutionTrace" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:8-24 }
      Nothing{ModuleName: Funsat.Resolution}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:25-68 }
        Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,-5)) "Funsat.Types" Nothing),DP (0,-17)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-45 }
          Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
          (IEThingAll 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-41 }
            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: ResolutionTrace})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:48-66 }
          Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:48-66 }
            Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: initResolutionTrace}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:1-19 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:8-19 }
      Nothing{ModuleName: Funsat.Types}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,9)) "Funsat.Types.Internal" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:8-28 }
      Nothing{ModuleName: Funsat.Types.Internal}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:1-74 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-21),DP (0,-14)) "Prelude" Nothing,DComment (DP (0,1),DP (0,7)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,4)) "sum" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,10)) "concatMap" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "elem" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "foldr" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "foldl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "any" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "maximum" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:8-14 }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (True) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:16-74 }
        Just (Ann (DP (0,-9)) (ColDelta 16) DP (0,1) [DComment (DP (0,-7),DP (0,10)) "Funsat.Resolution" Nothing] [((G AnnHiding),DP (0,-9)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:25-27 }
          Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:25-27 }
            Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,16)) "ResolutionError" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: sum})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:30-38 }
          Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:30-38 }
            Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: concatMap})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:41-44 }
          Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:41-44 }
            Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: elem})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:47-51 }
          Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:47-51 }
            Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) ")" Nothing),DP (0,-5)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: foldr})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:54-58 }
          Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:54-58 }
            Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: foldl})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:61-63 }
          Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:61-63 }
            Just (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: any})))),
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:66-72 }
          Just (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:66-72 }
            Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: maximum}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:1-47 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:8-24 }
      Nothing{ModuleName: Funsat.Resolution}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:25-47 }
        Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,-6)) "Text.Printf" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,7)) "printf" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-45 }
          Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,-13)) ")" Nothing),DP (0,-14)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingAll 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-41 }
            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: ResolutionError}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:8-18 }
      Nothing{ModuleName: Text.Printf}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:19-28 }
        Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-2)) "qualified" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,14)) "Data.Foldable" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:21-26 }
          Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:21-26 }
            Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: printf}))))]))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,5)) "as" Nothing,DComment (DP (0,1),DP (0,3)) "Fl" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-13),DP (0,-4)) "Data.List" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "List" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:18-30 }
      Nothing{ModuleName: Data.Foldable}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Fl}) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,-1)) "Data.Map" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "Map" Nothing),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:18-26 }
      Nothing{ModuleName: Data.List}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: List}) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,5)) "Data.Sequence" Nothing),DP (0,-8)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:18-25 }
      Nothing{ModuleName: Data.Map}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Map}) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,1)) "as" Nothing,DComment (DP (0,1),DP (0,4)) "Seq" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-13),DP (0,-5)) "Data.Set" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "Set" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:18-30 }
      Nothing{ModuleName: Data.Sequence}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Seq}) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,9)) "Funsat.Resolution" Nothing),DP (0,-8)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:18-25 }
      Nothing{ModuleName: Data.Set}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Set}) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,5)) "as" Nothing,DComment (DP (0,1),DP (0,11)) "Resolution" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-17),DP (0,-5)) "Text.Tabular" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Tabular" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:18-34 }
      Nothing{ModuleName: Funsat.Resolution}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Resolution}) 
     (Nothing))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:18-29 }
      Nothing{ModuleName: Text.Tabular}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Tabular}) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1-72 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (1,15)) "-- * Interface" Nothing,DComment (DP (1,1),DP (1,15)) "-- * Interface" Nothing,DComment (DP (1,1),DP (1,73)) "-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a" Nothing,DComment (DP (1,1),DP (1,73)) "-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a" Nothing,DComment (DP (0,-72),DP (0,4)) "-- solution, along with internal solver statistics and possibly a resolution" Nothing,DComment (DP (1,1),DP (1,74)) "-- trace.  The trace is for checking a proof of `Unsat', and thus is only" Nothing,DComment (DP (0,-73),DP (0,3)) "-- solution, along with internal solver statistics and possibly a resolution" Nothing,DComment (DP (1,1),DP (1,39)) "-- present when the result is `Unsat'." Nothing,DComment (DP (0,-38),DP (0,35)) "-- trace.  The trace is for checking a proof of `Unsat', and thus is only" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "solve" Nothing,DComment (DP (0,-5),DP (0,33)) "-- present when the result is `Unsat'." Nothing,DComment (DP (0,-32),DP (0,-30)) "::" Nothing,DComment (DP (0,1),DP (0,13)) "FunsatConfig" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1-5 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: solve}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-72 }
       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "cfg" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-72 }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,-8)) "fIn" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-21 }
           Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: FunsatConfig}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:26-72 }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:26-28 }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: CNF}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:33-72 }
             Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:34-41 }
                Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Solution}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:44-48 }
                Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Stats}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:51-71 }
                Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:51-55 }
                  Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:57-71 }
                  Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: ResolutionTrace})))))])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:1-5 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: solve})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:1-5 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: solve})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:7-9 }
            Just (Ann (DP (0,-73)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,74)) "-- To solve, we simply take baby steps toward the solution using solveStep," Nothing] [((G AnnVal),DP (0,-73))])
            (VarPat 
             (Unqual {OccName: cfg}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:11-13 }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: fIn})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,15)-(169,27)
              }
             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(131,5)-(144,26)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,5),DP (1,44)) "-- starting with an initial assignment." Nothing,DComment (DP (0,-39),DP (0,36)) "-- To solve, we simply take baby steps toward the solution using solveStep," Nothing,DComment (DP (1,1),DP (1,36)) "--     trace (\"input \" ++ show f) $" Nothing,DComment (DP (0,-31),DP (0,8)) "-- starting with an initial assignment." Nothing,DComment (DP (1,1),DP (1,36)) "--     trace (\"input \" ++ show f) $" Nothing,DComment (DP (0,-31),DP (0,-25)) "either" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "error" Nothing,DComment (DP (0,1),DP (0,28)) "\"solve: invariant violated\"" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
               (OpApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(131,5)-(132,9)
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                 (OpApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:5-49 }
                   Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:5-46 }
                     Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:5-10 }
                       Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: either}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:12-46 }
                       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "runST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                       (HsPar 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:13-45 }
                         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:13-17 }
                           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: error}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:19-45 }
                           Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsLit 
                            (HsString "\"solve: invariant violated\"" {FastString: "solve: invariant violated"}))))))))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:48-49 }
                     Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: id}))))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:51 }
                   Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: $}))) 
                  (PlaceHolder) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:132:5-9 }
                   Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: runST}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:132:11 }
                 Just (Ann (DP (0,-9)) (ColDelta 11) DP (0,1) [DComment (DP (0,-5),DP (0,10)) "evalSSTErrMonad" Nothing] [((G AnnVal),DP (0,-9))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(133,5)-(144,26)
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(133,5)-(137,80)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:133:5-19 }
                     Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: evalSSTErrMonad}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,9)-(137,80)
                      }
                     Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,17)) "initialAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "newSTUArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,10)-(137,79)
                        }
                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,13)-(137,79) Ref "delta-1"),DP (0,0))])
                       (HsDo 
                        (DoExpr) 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:13-76 }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,-16)) "(" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "isUnsat" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "initialState" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                          (BindStmt 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:13-29 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: initialAssignment}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:34-76 }
                            Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:34-39 }
                              Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: liftST}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:41 }
                              Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: $}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:43-76 }
                              Just (Ann (DP (0,-16)) (ColDelta 30) DP (0,1) [DComment (DP (0,0),DP (0,17)) "initialAssignment" Nothing] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:43-74 }
                                Just (Ann (DP (0,-16)) (ColDelta 30) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:43-53 }
                                  Just (Ann (DP (0,-16)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,-16))])
                                  (HsVar 
                                   (Unqual {OccName: newSTUArray}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:55-74 }
                                  Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (ExplicitTuple 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56-58 }
                                     Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
                                     (Present 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56-58 }
                                       Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56 }
                                         Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: V}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:58 }
                                         Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsOverLit {HsOverLit:1})))))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:61-73 }
                                     Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])
                                     (Present 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:61-73 }
                                       Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:61 }
                                         Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: V}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:63-73 }
                                         Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:64-72 }
                                           Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:64-70 }
                                             Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: numVars}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:72 }
                                             Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: f})))))))))))] 
                                   (Boxed))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:76 }
                                Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsOverLit {HsOverLit:0})))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})))),
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-58 }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "then" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                          (BindStmt 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-24 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (TuplePat 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:14 }
                               Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "if" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                               (VarPat 
                                (Unqual {OccName: a}))),
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:17-23 }
                               Just (Ann (DP (0,-6)) (ColDelta 4) DP (0,1) [DComment (DP (0,0),DP (0,7)) "isUnsat" Nothing] [((G AnnVal),DP (0,-6))])
                               (VarPat 
                                (Unqual {OccName: isUnsat})))] 
                             (Boxed) 
                             [])) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:29-58 }
                            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:29-40 }
                              Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: initialState}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:42-58 }
                              Just (Ann (DP (0,-1)) (ColDelta 29) DP (0,1) [DComment (DP (0,-12),DP (0,2)) "reportSolution" Nothing] [((G AnnVal),DP (0,-1))])
                              (HsVar 
                               (Unqual {OccName: initialAssignment}))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})))),
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79)
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-15),DP (0,-14)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Unsat" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79)
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((AnnComment DComment (DP (0,9),DP (0,12)) ">>=" Nothing),DP (0,9)),((AnnComment DComment (DP (0,1),DP (0,15)) "reportSolution" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,-8),DP (1,-8)) "" Nothing),DP (1,-8)),((AnnComment DComment (DP (0,0),DP (0,2)) "SC" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "cnf" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "f" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "clauses" Nothing),DP (0,1)),((G AnnElse),DP (1,11))])
                            (HsIf 
                             (Just 
                              (HsLit 
                               (HsString "" {FastString: "noSyntaxExpr"}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:16-22 }
                              Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: isUnsat}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:29-52 }
                              Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:29-42 }
                                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: reportSolution}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:44-52 }
                                Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (HsPar 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:45-51 }
                                  Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:45-49 }
                                    Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,16)) "initialAssignment" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: Unsat}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:51 }
                                    Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: a}))))))))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-79 }
                              Just (Ann (DP (0,-8)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "Set.empty" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-60 }
                                Just (Ann (DP (0,-8)) (ColDelta 16) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-42 }
                                  Just (Ann (DP (0,-8)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-8))])
                                  (HsVar 
                                   (Unqual {OccName: stepToSolution}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:44-60 }
                                  Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: initialAssignment}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:62-64 }
                                Just (Ann (DP (0,14)) (ColDelta 49) DP (0,1) [DComment (DP (0,-17),DP (0,-16)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: >>=}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:66-79 }
                                Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: reportSolution}))))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        (PlaceHolder))))))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(138,5)-(144,26)
                    }
                   Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                   (RecordCon 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:5-6 }
                     Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: SC})) 
                    (HsLit 
                     (HsString "" {FastString: "noPostTcExpr"})) 
                    (HsRecFields 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:9-38 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,4)) "watches" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:9-11 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: cnf})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:15-38 }
                         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "," Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,7)) "learnt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnCloseC),DP (0,1))])
                         (RecordUpd 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:15 }
                           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: f}))) 
                          (HsRecFields 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:18-36 }
                             Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,3)) "undefined" Nothing),DP (0,-6)),((G AnnEqual),DP (0,1))])
                             (HsRecField 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:18-24 }
                               Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: clauses})) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:28-36 }
                               Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Qual {ModuleName: Set} {OccName: empty}))) 
                              (False)))] 
                           (Nothing)) 
                          [] 
                          [] 
                          [])) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:41-47 }
                       Just (Ann (DP (0,-7)) (ColDelta 41) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "undefined" Nothing] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,7))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:41-42 }
                         Just (Ann (DP (0,-7)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                         (Unqual {OccName: dl})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:46-47 }
                         Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (HsVar 
                          (Exact {Name: []}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:9-27 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-2)) "propQ" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:9-15 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: watches})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:19-27 }
                         Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "Seq.empty" Nothing] [((G AnnVal),DP (0,-7))])
                         (HsVar 
                          (Unqual {OccName: undefined}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:30-47 }
                       Just (Ann (DP (0,-3)) (ColDelta 30) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "trail" Nothing] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,-3)) "level" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "undefined" Nothing),DP (0,1)),((G AnnComma),DP (1,7))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:30-35 }
                         Just (Ann (DP (0,-3)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,-3))])
                         (Unqual {OccName: learnt})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:39-47 }
                         Just (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: undefined}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:9-25 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,-1)) "FunStats" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:9-13 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: propQ})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:17-25 }
                         Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Qual {ModuleName: Seq} {OccName: empty}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:28-37 }
                       Just (Ann (DP (0,-6)) (ColDelta 28) DP (0,1) [DComment (DP (0,-1),DP (0,7)) "numConfl" Nothing] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:28-32 }
                         Just (Ann (DP (0,-6)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                         (Unqual {OccName: trail})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:36-37 }
                         Just (Ann (DP (0,0)) (ColDelta 36) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (HsVar 
                          (Exact {Name: []}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:40-56 }
                       Just (Ann (DP (0,-12)) (ColDelta 40) DP (0,1) [DComment (DP (0,0),DP (0,13)) "numConflTotal" Nothing] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "=" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "numDecisions" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "numImpl" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "}" Nothing),DP (0,0)),((G AnnComma),DP (1,7))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:40-44 }
                         Just (Ann (DP (0,-12)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,-12))])
                         (Unqual {OccName: level})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:48-56 }
                         Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: undefined}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:9-85 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,1)) "reason" Nothing),DP (0,-5)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,7))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:9-13 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: stats})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:17-85 }
                         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,2)) "Map.empty" Nothing),DP (0,-7)),((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                         (RecordCon 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:17-24 }
                           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (Unqual {OccName: FunStats})) 
                          (HsLit 
                           (HsString "" {FastString: "noPostTcExpr"})) 
                          (HsRecFields 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:26-37 }
                             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "," Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,9)) "varOrder" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])
                             (HsRecField 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:26-33 }
                               Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: numConfl})) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:37 }
                               Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsOverLit {HsOverLit:0})) 
                              (False))),
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:39-55 }
                             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-3)) "undefined" Nothing),DP (0,-12)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])
                             (HsRecField 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:39-51 }
                               Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: numConflTotal})) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:55 }
                               Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsOverLit {HsOverLit:0})) 
                              (False))),
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:57-72 }
                             Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])
                             (HsRecField 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:57-68 }
                               Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: numDecisions})) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:72 }
                               Just (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsOverLit {HsOverLit:0})) 
                              (False))),
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:74-84 }
                             Just (Ann (DP (0,0)) (ColDelta 74) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                             (HsRecField 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:74-80 }
                               Just (Ann (DP (0,0)) (ColDelta 74) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: numImpl})) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:84 }
                               Just (Ann (DP (0,1)) (ColDelta 84) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsOverLit {HsOverLit:0})) 
                              (False)))] 
                           (Nothing)))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:9-26 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-6),DP (0,9)) "resolutionTrace" Nothing),DP (0,-6)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:9-14 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: reason})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:18-26 }
                         Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Qual {ModuleName: Map} {OccName: empty}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:29-48 }
                       Just (Ann (DP (0,-20)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,21)) "PartialResolutionTrace" Nothing] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "Map.empty" Nothing),DP (0,1)),((G AnnComma),DP (1,7))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:29-36 }
                         Just (Ann (DP (0,-20)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,-20))])
                         (Unqual {OccName: varOrder})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:40-48 }
                         Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: undefined}))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:9-66 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-5)) "dpllConfig" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "cfg" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,8)) "where" Nothing),DP (1,3)),((G AnnComma),DP (1,7))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:9-23 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: resolutionTrace})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-66 }
                         Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "}" Nothing] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-56 }
                           Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-53 }
                             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-50 }
                               Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-48 }
                                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: PartialResolutionTrace}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:50 }
                                 Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsOverLit {HsOverLit:1})))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:52-53 }
                               Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                               (HsVar 
                                (Exact {Name: []}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:55-56 }
                             Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                             (HsVar 
                              (Exact {Name: []}))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:58-66 }
                           Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Qual {ModuleName: Map} {OccName: empty}))))) 
                        (False))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:9-24 }
                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                       (HsRecField 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:9-18 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: dpllConfig})) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:22-24 }
                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: cfg}))) 
                        (False)))] 
                     (Nothing))))))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25 }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: f})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,41)) "-- If returns True, then problem is unsat." Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: f})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:7-25 }
                       Just (Ann (DP (0,-1)) (ColDelta 2) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:9-25 }
                         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:9-21 }
                           Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: preprocessCNF}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:23-25 }
                           Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: fIn})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,5)-(169,27)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:5-16 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: initialState})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,5)-(169,27)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:5-16 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: initialState})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:18 }
                      Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,12)) "initialLevel" Nothing] [((G AnnVal),DP (0,-1))])
                      (VarPat 
                       (Unqual {OccName: m})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,20)-(169,27)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,22)-(169,27)
                          }
                         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(150,7)-(169,27) Ref "delta-2"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:7-71 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-6)) "modify" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:7-18 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: initialLevel}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:23-71 }
                              Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,0),DP (0,1)) "s" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:23-28 }
                                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:30 }
                                Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "level" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:32-71 }
                                Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:32-63 }
                                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:32-42 }
                                    Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: newSTUArray}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:44-63 }
                                    Just (Ann (DP (0,-1)) (ColDelta 37) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "initialLevel" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                    (ExplicitTuple 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45-47 }
                                       Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45-47 }
                                         Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45 }
                                           Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: V}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:47 }
                                           Just (Ann (DP (0,0)) (ColDelta 40) DP (0,1) [DComment (DP (0,0),DP (0,1)) "}" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsOverLit {HsOverLit:1})))))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:50-62 }
                                       Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:50-62 }
                                         Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:50 }
                                           Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: V}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:52-62 }
                                           Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:53-61 }
                                             Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:53-59 }
                                               Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: numVars}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:61 }
                                               Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: f})))))))))))] 
                                     (Boxed))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:65-71 }
                                  Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: noLevel}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-46 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-46 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: modify}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:14 }
                                Just (Ann (DP (0,-7)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,8)) "initialWatches" Nothing] [((G AnnVal),DP (0,-7))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 Ref "delta-3"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:17 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22-46 }
                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22-46 }
                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-1)) "newSTArray" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnCloseC),DP (0,1))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22 }
                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:25-44 }
                                              Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,1)) "liftST" Nothing),DP (0,-5)),((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:25-29 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: level})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:33-44 }
                                                Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: initialLevel}))) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7-81 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "-" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-8)) "modify" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7-20 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: initialWatches}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:25-81 }
                              Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:25-30 }
                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:32 }
                                Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "watches" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:34-81 }
                                Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:34-78 }
                                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:34-43 }
                                    Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: newSTArray}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:45-78 }
                                    Just (Ann (DP (0,-4)) (ColDelta 38) DP (0,1) [DComment (DP (0,-9),DP (0,5)) "initialWatches" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                                    (ExplicitTuple 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46-62 }
                                       Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46-62 }
                                         Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46 }
                                           Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: L}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:48-62 }
                                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:49-61 }
                                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnMinus),DP (0,0))])
                                             (NegApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:51-61 }
                                               Just (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,1)) "}" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (HsPar 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:52-60 }
                                                 Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:52-58 }
                                                   Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: numVars}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:60 }
                                                   Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: f}))))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})))))))))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:65-77 }
                                       Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:65-77 }
                                         Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:65 }
                                           Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: L}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:67-77 }
                                           Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:68-76 }
                                             Just (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:68-74 }
                                               Just (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: numVars}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:76 }
                                               Just (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: f})))))))))))] 
                                     (Boxed))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:80-81 }
                                  Just (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                  (HsVar 
                                   (Exact {Name: []}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-50 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-50 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: modify}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:14 }
                                Just (Ann (DP (0,-7)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,8)) "initialLearnts" Nothing] [((G AnnVal),DP (0,-7))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 Ref "delta-4"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:17 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22-50 }
                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22-50 }
                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,1)) "L" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "-" Nothing),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22 }
                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:25-48 }
                                              Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:25-31 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: watches})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:35-48 }
                                                Just (Ann (DP (0,-9)) (ColDelta 19) DP (0,1) [DComment (DP (0,0),DP (0,10)) "newSTArray" Nothing] [((G AnnVal),DP (0,-9))])
                                                (HsVar 
                                                 (Unqual {OccName: initialWatches}))) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7-81 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-8)) "modify" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7-20 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: initialLearnts}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:25-81 }
                              Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:25-30 }
                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:32 }
                                Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:34-81 }
                                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:34-78 }
                                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:34-43 }
                                    Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: newSTArray}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:45-78 }
                                    Just (Ann (DP (0,-3)) (ColDelta 38) DP (0,1) [DComment (DP (0,-10),DP (0,4)) "initialLearnts" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                    (ExplicitTuple 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46-62 }
                                       Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46-62 }
                                         Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46 }
                                           Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: L}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:48-62 }
                                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:49-61 }
                                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnMinus),DP (0,0))])
                                             (NegApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:51-61 }
                                               Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (HsPar 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:52-60 }
                                                 Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:52-58 }
                                                   Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: numVars}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:60 }
                                                   Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: f}))))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})))))))))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:65-77 }
                                       Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:65-77 }
                                         Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:65 }
                                           Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: L}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:67-77 }
                                           Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:68-76 }
                                             Just (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:68-74 }
                                               Just (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: numVars}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:76 }
                                               Just (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: f})))))))))))] 
                                     (Boxed))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:80-81 }
                                  Just (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                  (HsVar 
                                   (Exact {Name: []}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-49 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-49 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: modify}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:14 }
                                Just (Ann (DP (0,-8)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,9)) "initialVarOrder" Nothing] [((G AnnVal),DP (0,-8))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 Ref "delta-5"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:17 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22-49 }
                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22-49 }
                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-13),DP (0,-2)) "newSTUArray" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "V" Nothing),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22 }
                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:25-47 }
                                              Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,1)) "liftST" Nothing),DP (0,-5)),((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:25-30 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: learnt})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:34-47 }
                                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: initialLearnts}))) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7-82 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,16)) "initialActivity" Nothing] [((AnnComment DComment (DP (0,-15),DP (0,-9)) "modify" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7-21 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: initialVarOrder}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:26-82 }
                              Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "{" Nothing,DComment (DP (0,1),DP (0,9)) "varOrder" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:26-31 }
                                Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:33 }
                                Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:35-82 }
                                Just (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:35-66 }
                                  Just (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:35-45 }
                                    Just (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: newSTUArray}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:47-66 }
                                    Just (Ann (DP (0,-13)) (ColDelta 40) DP (0,1) [DComment (DP (0,-10),DP (0,-2)) "VarOrder" Nothing,DComment (DP (0,1),DP (0,16)) "initialVarOrder" Nothing] [((G AnnOpenP),DP (0,-13)),((G AnnCloseP),DP (0,0))])
                                    (ExplicitTuple 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48-50 }
                                       Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48-50 }
                                         Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48 }
                                           Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: V}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:50 }
                                           Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsOverLit {HsOverLit:1})))))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:53-65 }
                                       Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:53-65 }
                                         Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:53 }
                                           Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: V}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:55-65 }
                                           Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:56-64 }
                                             Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:56-62 }
                                               Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: numVars}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:64 }
                                               Just (Ann (DP (0,2)) (ColDelta 57) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "}" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: f})))))))))))] 
                                     (Boxed))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:68-82 }
                                  Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: initialActivity}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-61 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-61 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: modify}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:14 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 Ref "delta-6"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:17 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22-61 }
                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22-61 }
                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22 }
                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:25-59 }
                                              Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:25-32 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: varOrder})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:36-59 }
                                                Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                                                (HsApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:36-43 }
                                                  Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: VarOrder}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:45-59 }
                                                  Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: initialVarOrder}))))) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(169,27)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,69)) "-- Watch each clause, making sure to bork if we find a contradiction." Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,68)) "-- Watch each clause, making sure to bork if we find a contradiction." Nothing,DComment (DP (0,-68),DP (0,-67)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "catchError" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(169,27)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(161,70)
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (HsPar 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,8)-(161,69)
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                                  (SectionR 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:8-19 }
                                    Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-5)) "const" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: catchError}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:8-69 }
                                    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,4),DP (0,5)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,4)) "True" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                    (HsPar 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-68 }
                                      Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-42 }
                                        Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                                        (OpApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-13 }
                                          Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: const}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:15 }
                                          Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,5)) "forM_" Nothing] [((G AnnVal),DP (0,-1))])
                                          (HsVar 
                                           (Unqual {OccName: $}))) 
                                         (PlaceHolder) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:17-42 }
                                          Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:17-22 }
                                            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: liftST}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:24-42 }
                                            Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                            (HsPar 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:25-41 }
                                              Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:25-39 }
                                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: unsafeFreezeAss}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:41 }
                                                Just (Ann (DP (0,13)) (ColDelta 34) DP (0,1) [DComment (DP (0,-14),DP (0,-13)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: m}))))))))))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:44-46 }
                                        Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: >>=}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 }
                                        Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 Ref "delta-7"),DP (0,0))])
                                        (HsLam 
                                         (MG 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 }
                                            Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                            (Match 
                                             (Nothing) 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:49 }
                                               Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (VarPat 
                                                (Unqual {OccName: a})))] 
                                             (Nothing) 
                                             (GRHSs 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:54-68 }
                                                Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                (GRHS 
                                                 [] 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:54-68 }
                                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                  (HsApp 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:54-59 }
                                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: return}))) 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:61-68 }
                                                    Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                    (ExplicitTuple 
                                                     [
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:62 }
                                                       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                                       (Present 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:62 }
                                                         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: a}))))),
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:64-67 }
                                                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                                       (Present 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:64-67 }
                                                         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: True})))))] 
                                                     (Boxed)))))))] 
                                              (EmptyLocalBinds))))] 
                                          [] 
                                          (PlaceHolder) 
                                          (FromSource)))))))))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:72 }
                                Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(161,74)-(169,27)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(169,27) Ref "delta-8"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(167,73)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(167,73)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:11-27 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:11-15 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: forM_}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:17-27 }
                                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:18-26 }
                                           Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:18-24 }
                                             Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "->" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: clauses}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:26 }
                                             Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "cid" Nothing] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: f}))))))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,13)-(167,73)
                                        }
                                       Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "nextTraceId" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72)
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72) Ref "delta-9"),DP (0,0))])
                                         (HsLam 
                                          (MG 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72)
                                              }
                                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                             (Match 
                                              (Nothing) 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:15 }
                                                Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (VarPat 
                                                 (Unqual {OccName: c})))] 
                                              (Nothing) 
                                              (GRHSs 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,20)-(167,72)
                                                  }
                                                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                 (GRHS 
                                                  [] 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,20)-(167,72)
                                                    }
                                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,23)-(167,72) Ref "delta-10"),DP (0,0))])
                                                   (HsDo 
                                                    (DoExpr) 
                                                    [
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:23-40 }
                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,9)) "isConsistent" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])
                                                      (BindStmt 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:23-25 }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                        (VarPat 
                                                         (Unqual {OccName: cid}))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:30-40 }
                                                        Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: nextTraceId}))) 
                                                       (HsLit 
                                                        (HsString "" {FastString: "noSyntaxExpr"})) 
                                                       (HsLit 
                                                        (HsString "" {FastString: "noSyntaxExpr"})))),
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23-66 }
                                                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "watchClause" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-8)) "when" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "not" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "isConsistent" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                                                      (BindStmt 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23-34 }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                        (VarPat 
                                                         (Unqual {OccName: isConsistent}))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-66 }
                                                        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-60 }
                                                          Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-51 }
                                                            Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-49 }
                                                              Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: watchClause}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:51 }
                                                              Just (Ann (DP (0,5)) (ColDelta 28) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: m}))))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:53-60 }
                                                            Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                            (ExplicitTuple 
                                                             [
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:54 }
                                                               Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                                                               (Present 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:54 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: c}))))),
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:57-59 }
                                                               Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                                                               (Present 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:57-59 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: cid})))))] 
                                                             (Boxed))))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:62-66 }
                                                          Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: False}))))) 
                                                       (HsLit 
                                                        (HsString "" {FastString: "noSyntaxExpr"})) 
                                                       (HsLit 
                                                        (HsString "" {FastString: "noSyntaxExpr"})))),
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(165,23)-(167,72)
                                                       }
                                                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                                      (BodyStmt 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(165,23)-(167,72)
                                                         }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:23-45 }
                                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:23-26 }
                                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: when}))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:28-45 }
                                                            Just (Ann (DP (0,-46)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,47)) "-- conflict data is ignored here, so safe to fake" Nothing] [((G AnnOpenP),DP (0,-46)),((G AnnCloseP),DP (0,0))])
                                                            (HsPar 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:29-44 }
                                                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                              (HsApp 
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:29-31 }
                                                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                (HsVar 
                                                                 (Unqual {OccName: not}))) 
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:33-44 }
                                                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                (HsVar 
                                                                 (Unqual {OccName: isConsistent}))))))))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:25-72 }
                                                          Just (Ann (DP (0,-14)) (ColDelta 2) DP (2,2) [DComment (DP (1,2),DP (1,3)) "(" Nothing,DComment (DP (0,-1),DP (0,48)) "-- conflict data is ignored here, so safe to fake" Nothing,DComment (DP (0,-48),DP (0,-46)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,13)) "traceClauseId" Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,11)) "throwError" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-12),DP (1,-12)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing] [((G AnnOpenP),DP (0,-14)),((G AnnCloseP),DP (0,0))])
                                                          (HsPar 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:26-71 }
                                                            Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-71 Ref "delta-11"),DP (0,0))])
                                                            (HsDo 
                                                             (DoExpr) 
                                                             [
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-45 }
                                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                               (BodyStmt 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-45 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [(AnnSemiSep,DP (0,1))])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-41 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: traceClauseId}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:43-45 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: cid}))))) 
                                                                (HsLit 
                                                                 (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                (HsLit 
                                                                 (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                (PlaceHolder))),
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:49-71 }
                                                               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                                                               (BodyStmt 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:49-71 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:49-58 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: throwError}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:60-71 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                   (ExplicitTuple 
                                                                    [
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61-63 }
                                                                      Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                                                      (Present 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61-63 }
                                                                        Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                                                        (HsApp 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61 }
                                                                          Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: L}))) 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:63 }
                                                                          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                          (HsOverLit {HsOverLit:0})))))),
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67 }
                                                                      Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
                                                                      (Present 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67 }
                                                                        Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                        (HsVar 
                                                                         (Exact {Name: []}))))),
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:70 }
                                                                      Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])
                                                                      (Present 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:70 }
                                                                        Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                        (HsOverLit {HsOverLit:0}))))] 
                                                                    (Boxed))))) 
                                                                (HsLit 
                                                                 (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                (HsLit 
                                                                 (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                (PlaceHolder)))] 
                                                             (PlaceHolder))))))) 
                                                       (HsLit 
                                                        (HsString "" {FastString: "noSyntaxExpr"})) 
                                                       (HsLit 
                                                        (HsString "" {FastString: "noSyntaxExpr"})) 
                                                       (PlaceHolder)))] 
                                                    (PlaceHolder)))))] 
                                               (EmptyLocalBinds))))] 
                                           [] 
                                           (PlaceHolder) 
                                           (FromSource)))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11-41 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                                   (BindStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (VarPat 
                                      (Unqual {OccName: a}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:16-41 }
                                     Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:16-21 }
                                       Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftST}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:23-41 }
                                       Just (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:24-40 }
                                         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:24-38 }
                                           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: unsafeFreezeAss}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:40 }
                                           Just (Ann (DP (0,12)) (ColDelta 29) DP (0,1) [DComment (DP (0,-12),DP (0,-11)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: m}))))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11-27 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11-27 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11-16 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:18-27 }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (ExplicitTuple 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:19 }
                                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                          (Present 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:19 }
                                            Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: a}))))),
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:22-26 }
                                          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                          (Present 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:22-26 }
                                            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: False})))))] 
                                        (Boxed))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5-67 }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "initialState" Nothing,DComment (DP (0,-12),DP (0,30)) "-- If returns True, then problem is unsat." Nothing,DComment (DP (0,-29),DP (0,-27)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "IAssignment" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
               (TypeSig 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5-16 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: initialState}))] 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-67 }
                 Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
                 (HsForAllTy 
                  (Implicit) 
                  (Nothing) 
                  (HsQTvs 
                   [] 
                   []) 
                  ({ <no location info> }
                   Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
                   []) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-67 }
                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
                   (HsFunTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-33 }
                     Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-31 }
                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: MAssignment}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:33 }
                       Just (Ann (DP (0,9)) (ColDelta 28) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "do" Nothing] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: s}))))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:38-67 }
                     Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:38-47 }
                       Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                       (HsAppTy 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:38-45 }
                         Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: FunMonad}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:47 }
                         Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: s}))))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:49-67 }
                       Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                       (HsTupleTy 
                        (HsBoxedOrConstraintTuple) 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:50-60 }
                          Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: IAssignment}))),
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:63-66 }
                          Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: Bool})))])))))))) 
                (PlaceHolder)))])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1-57 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,59)) "-- | Solve with the default configuration `defaultConfig'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "solve1" Nothing,DComment (DP (0,-6),DP (0,52)) "-- | Solve with the default configuration `defaultConfig'." Nothing,DComment (DP (0,-51),DP (0,-49)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1-6 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: solve1}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-57 }
       Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "solve" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-57 }
         Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-13 }
           Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: CNF}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:18-57 }
           Just (Ann (DP (0,-11)) (ColDelta 18) DP (0,1) [DComment (DP (0,-1),DP (0,12)) "defaultConfig" Nothing] [((G AnnOpenP),DP (0,-11)),((G AnnCloseP),DP (0,0))])
           (HsTupleTy 
            (HsBoxedOrConstraintTuple) 
            [
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:19-26 }
              Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: Solution}))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:29-33 }
              Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: Stats}))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:36-56 }
              Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:36-40 }
                Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Maybe}))) 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:42-56 }
                Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ResolutionTrace})))))])))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-6 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: solve1})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-6 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: solve1})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:8-28 }
             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:10-28 }
               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:10-14 }
                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: solve}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:16-28 }
                 Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: defaultConfig})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1-54 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,73)) "-- | This function applies `solveStep' recursively until SAT instance is" Nothing,DComment (DP (1,1),DP (1,73)) "-- | This function applies `solveStep' recursively until SAT instance is" Nothing,DComment (DP (0,-72),DP (0,6)) "-- solved, starting with the given initial assignment.  It also implements the" Nothing,DComment (DP (1,1),DP (1,51)) "-- conflict-based restarting (see `FunsatConfig')." Nothing,DComment (DP (0,-50),DP (0,28)) "-- solved, starting with the given initial assignment.  It also implements the" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,14)) "stepToSolution" Nothing,DComment (DP (0,-14),DP (0,36)) "-- conflict-based restarting (see `FunsatConfig')." Nothing,DComment (DP (0,-35),DP (0,-33)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1-14 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: stepToSolution}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-54 }
       Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "assignment" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-54 }
         Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-31 }
           Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-29 }
             Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-7))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:31 }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:36-54 }
           Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:36-45 }
             Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:36-43 }
               Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:45 }
               Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:47-54 }
             Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Solution}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:1-14 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: stepToSolution})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,7)) "assignment" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:1-14 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: stepToSolution})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:16-25 }
            Just (Ann (DP (0,-6)) (ColDelta 16) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,4)) "step" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "solveStep" Nothing] [((G AnnVal),DP (0,-6))])
            (VarPat 
             (Unqual {OccName: assignment})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,27)-(206,38)
              }
             Just (Ann (DP (0,-1)) (ColDelta 27) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,29)-(192,25)
                }
               Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(181,5)-(192,25) Ref "delta-12"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:5-32 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,7)) "useRestarts" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:5-8 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: step}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:13-32 }
                    Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:13-21 }
                      Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: solveStep}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:23-32 }
                      Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing] [((G AnnVal),DP (0,-1))])
                      (HsVar 
                       (Unqual {OccName: assignment}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5-56 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-7)) "(" Nothing,DComment (DP (0,0),DP (0,17)) "configUseRestarts" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-11),DP (0,4)) "isTimeToRestart" Nothing),DP (0,-11)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5-15 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: useRestarts}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:20-56 }
                    Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:20-23 }
                      Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:25-56 }
                      Just (Ann (DP (0,-6)) (ColDelta 20) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "<-" Nothing,DComment (DP (0,1),DP (0,8)) "uncurry" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:26-55 }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:26-42 }
                          Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: configUseRestarts}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:44 }
                          Just (Ann (DP (0,-1)) (ColDelta 39) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ">=" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [((G AnnVal),DP (0,-1))])
                          (HsVar 
                           (Unqual {OccName: .}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:46-55 }
                          Just (Ann (DP (0,0)) (ColDelta 41) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: dpllConfig}))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,5)-(184,73)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-4),DP (0,0)) "gets" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:5-19 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: isTimeToRestart}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,24)-(184,73)
                     }
                    Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "numConfl" Nothing] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:24-37 }
                      Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:24-30 }
                        Just (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                        (HsVar 
                         (Unqual {OccName: uncurry}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:32-37 }
                        Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:33-36 }
                          Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,3)) "stats" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: >=}))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:39-45 }
                      Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-1)) "&&&" Nothing),DP (0,-4)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:16-73 }
                      Just (Ann (DP (0,-1)) (ColDelta 11) DP (1,11) [DComment (DP (0,0),DP (0,13)) "configRestart" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "case" Nothing,DComment (DP (0,1),DP (0,5)) "step" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:16-19 }
                        Just (Ann (DP (0,-1)) (ColDelta 11) DP (1,11) [] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: gets}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:21-73 }
                        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-72 }
                          Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-39 }
                            Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:23-38 }
                              Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:23-30 }
                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: numConfl}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:32 }
                                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: .}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:34-38 }
                                Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: stats}))))))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:41-43 }
                            Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: &&&}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:45-72 }
                            Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:46-71 }
                              Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:46-58 }
                                Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: configRestart}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:60 }
                                Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: .}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:62-71 }
                                Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: dpllConfig}))))))))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(185,5)-(192,25)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(185,5)-(192,25)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "m" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,7)-(192,25) Ref "delta-13"),DP (0,0))])
                    (HsCase 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:185:10-13 }
                      Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Left" Nothing] [((G AnnVal),DP (0,-1))])
                      (HsVar 
                       (Unqual {OccName: step}))) 
                     (MG 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,7)-(191,35)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:7-12 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:7-10 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: Left})) 
                            (PrefixCon 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:12 }
                               Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (VarPat 
                                (Unqual {OccName: m})))])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,14)-(191,35)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,17)-(191,35)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(191,35) Ref "delta-14"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(190,38)
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(190,38)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:20-56 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:20-23 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: when}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:25-56 }
                                       Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:26-55 }
                                         Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                         (OpApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:26-36 }
                                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: useRestarts}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:38-39 }
                                           Just (Ann (DP (0,-10)) (ColDelta 18) DP (0,1) [DComment (DP (0,-11),DP (0,-11)) "" Nothing,DComment (DP (0,0),DP (0,6)) "_stats" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,13)) "extractStats" Nothing] [((G AnnVal),DP (0,-10))])
                                           (HsVar 
                                            (Unqual {OccName: &&}))) 
                                          (PlaceHolder) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:41-55 }
                                           Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: isTimeToRestart}))))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,22)-(190,38)
                                      }
                                     Just (Ann (DP (0,-32)) (ColDelta 2) DP (1,2) [DComment (DP (1,-19),DP (1,34)) "--                          trace (\"Restarting...\") $" Nothing] [((G AnnOpenP),DP (0,-32)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,23)-(190,37)
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,26)-(190,37) Ref "delta-15"),DP (0,0))])
                                       (HsDo 
                                        (DoExpr) 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:26-47 }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                                          (BindStmt 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:26-31 }
                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: _stats}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:36-47 }
                                            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: extractStats}))) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})))),
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26-37 }
                                          Just (Ann (DP (0,-8)) (ColDelta 0) DP (3,0) [DComment (DP (1,-25),DP (1,28)) "--                          trace (\"Restarting...\") $" Nothing,DComment (DP (0,-53),DP (0,3)) "--                           trace (statSummary stats) $" Nothing,DComment (DP (1,-25),DP (1,31)) "--                           trace (statSummary stats) $" Nothing,DComment (DP (0,-31),DP (0,-31)) "" Nothing,DComment (DP (0,0),DP (0,10)) "resetState" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-6),DP (1,-6)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,14)) "stepToSolution" Nothing] [])
                                          (BodyStmt 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26-37 }
                                            Just (Ann (DP (0,-8)) (ColDelta 0) DP (3,0) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26-35 }
                                              Just (Ann (DP (0,-8)) (ColDelta 0) DP (3,0) [] [((G AnnVal),DP (0,-8))])
                                              (HsVar 
                                               (Unqual {OccName: resetState}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:37 }
                                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "m" Nothing] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: m}))))) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (PlaceHolder)))] 
                                        (PlaceHolder))))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20-35 }
                                 Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20-35 }
                                   Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20-33 }
                                     Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-4))])
                                     (HsVar 
                                      (Unqual {OccName: stepToSolution}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:35 }
                                     Just (Ann (DP (0,9)) (ColDelta 15) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "s" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: m}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7-25 }
                        Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7-13 }
                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7-11 }
                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])
                             (Unqual {OccName: Right})) 
                            (PrefixCon 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:13 }
                               Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (VarPat 
                                (Unqual {OccName: s})))])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:15-25 }
                            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:18-25 }
                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:18-23 }
                                Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: return}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:25 }
                                Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: s})))))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:5-14 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: resetState})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:5-14 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: resetState})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:16 }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-8),DP (0,-8)) "" Nothing,DComment (DP (0,0),DP (0,6)) "modify" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: m})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,18)-(206,38)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,20)-(206,38)
                          }
                         Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,2)) "->" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(195,7)-(206,38) Ref "delta-16"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-70 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-70 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: modify}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:14 }
                                Just (Ann (DP (0,-39)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,40)) "-- Require more conflicts before next restart." Nothing] [((G AnnVal),DP (0,-39))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 Ref "delta-17"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:17 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-70 }
                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-70 }
                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 NotNeeded),DP (0,0)),((G AnnIn),DP (0,1))])
                                          (HsLet 
                                           (HsValBinds 
                                            (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (FunBind 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-27 }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (Unqual {OccName: st})) 
                                                (False) 
                                                (MG 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 }
                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                                   (Match 
                                                    (Just 
                                                     ((,) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-27 }
                                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (Unqual {OccName: st})) 
                                                      (False))) 
                                                    [] 
                                                    (Nothing) 
                                                    (GRHSs 
                                                     [
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:29-37 }
                                                       Just (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])
                                                       (GRHS 
                                                        [] 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:31-37 }
                                                         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:31-35 }
                                                           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: stats}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:37 }
                                                           Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: s})))))))] 
                                                     (EmptyLocalBinds))))] 
                                                 [] 
                                                 (PlaceHolder) 
                                                 (FromSource)) 
                                                (WpHole) 
                                                (PlaceHolder) 
                                                []))]} 
                                             [])) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:42-70 }
                                            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                            (RecordUpd 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:42 }
                                              Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: s}))) 
                                             (HsRecFields 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:45-68 }
                                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                                (HsRecField 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:45-49 }
                                                  Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (Unqual {OccName: stats})) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:53-68 }
                                                  Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                                  (RecordUpd 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:53-54 }
                                                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: st}))) 
                                                   (HsRecFields 
                                                    [
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:56-67 }
                                                      Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                                      (HsRecField 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:56-63 }
                                                        Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                        (Unqual {OccName: numConfl})) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:67 }
                                                        Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                        (HsOverLit {HsOverLit:0})) 
                                                       (False)))] 
                                                    (Nothing)) 
                                                   [] 
                                                   [] 
                                                   [])) 
                                                 (False)))] 
                                              (Nothing)) 
                                             [] 
                                             [] 
                                             []))))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,7)-(200,30)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "modifySlot" Nothing,DComment (DP (0,-10),DP (0,36)) "-- Require more conflicts before next restart." Nothing,DComment (DP (0,-35),DP (0,-25)) "dpllConfig" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,7)-(200,30)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:7-27 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:7-16 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: modifySlot}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:18-27 }
                                  Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing] [((G AnnVal),DP (0,-4))])
                                  (HsVar 
                                   (Unqual {OccName: dpllConfig}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:29 }
                                Just (Ann (DP (0,-12)) (ColDelta 22) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,14)) "configRestart" Nothing] [((G AnnVal),DP (0,-12))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30) Ref "delta-18"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30)
                                     }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:32 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s}))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:34 }
                                       Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: c})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,9)-(200,30)
                                         }
                                        Just (Ann (DP (1,-22)) (ColDelta -22) DP (1,-22) [DComment (DP (0,4),DP (0,5)) "=" Nothing,DComment (DP (0,1),DP (0,8)) "ceiling" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,17)) "configRestartBump" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,9)-(200,30)
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta -22) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:9 }
                                            Just (Ann (DP (0,0)) (ColDelta -22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,12)-(200,28)
                                               }
                                              Just (Ann (DP (0,1)) (ColDelta -19) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:12-21 }
                                                Just (Ann (DP (0,0)) (ColDelta -19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: dpllConfig})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,25)-(200,28)
                                                 }
                                                Just (Ann (DP (0,1)) (ColDelta -6) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,-24),DP (1,-24)) "" Nothing),DP (1,-24)),((AnnComment DComment (DP (0,0),DP (0,3)) "lvl" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,17)) "FrozenLevelArray" Nothing),DP (0,1)),((G AnnCloseC),DP (1,-3))])
                                                (RecordUpd 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:25 }
                                                  Just (Ann (DP (0,0)) (ColDelta -6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: c}))) 
                                                 (HsRecFields 
                                                  [
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,28)-(199,84)
                                                     }
                                                    Just (Ann (DP (0,1)) (ColDelta -3) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                                    (HsRecField 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:28-40 }
                                                      Just (Ann (DP (0,0)) (ColDelta -3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (Unqual {OccName: configRestart})) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,44)-(199,84)
                                                       }
                                                      Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:44-50 }
                                                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: ceiling}))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,52)-(199,84)
                                                         }
                                                        Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                        (HsPar 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,53)-(199,83)
                                                           }
                                                          Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                                          (OpApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:53-71 }
                                                            Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:53-69 }
                                                              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: configRestartBump}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:71 }
                                                              Just (Ann (DP (0,-10)) (ColDelta 40) DP (0,1) [DComment (DP (0,-16),DP (0,-4)) "fromIntegral" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "configRestart" Nothing] [((G AnnVal),DP (0,-10))])
                                                              (HsVar 
                                                               (Unqual {OccName: c}))))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:52 }
                                                            Just (Ann (DP (0,21)) (ColDelta 21) DP (1,21) [DComment (DP (0,10),DP (0,11)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-3),DP (1,-2)) "}" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: *}))) 
                                                           (PlaceHolder) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:54-83 }
                                                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:54-65 }
                                                              Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: fromIntegral}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:67-83 }
                                                              Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                              (HsPar 
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:68-82 }
                                                                Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])
                                                                (HsApp 
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:68-80 }
                                                                  Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                  (HsVar 
                                                                   (Unqual {OccName: configRestart}))) 
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:82 }
                                                                  Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                  (HsVar 
                                                                   (Unqual {OccName: c}))))))))))))))) 
                                                     (False)))] 
                                                  (Nothing)) 
                                                 [] 
                                                 [] 
                                                 [])) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-69 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,2)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,6)) "level" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "unsafeFreeze" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-10)) "<-" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,10)) "takeWhile" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-29 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,7)) "undoneLits" Nothing),DP (0,-3)),((G AnnDcolon),DP (0,1))])
                              (SigPatIn 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-9 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: lvl}))) 
                               (HsWB 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:14-29 }
                                 Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsTyVar 
                                  (Unqual {OccName: FrozenLevelArray}))) 
                                (PlaceHolder) 
                                (PlaceHolder) 
                                (PlaceHolder)))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-69 }
                              Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "l" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-54 }
                                Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-43 }
                                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-37 }
                                    Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: gets}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:39-43 }
                                    Just (Ann (DP (0,-2)) (ColDelta 32) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "lvl" Nothing] [((G AnnVal),DP (0,-2))])
                                    (HsVar 
                                     (Unqual {OccName: level}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:45-47 }
                                  Just (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "!" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: >>=}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:49-54 }
                                  Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: liftST}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:56 }
                                Just (Ann (DP (0,0)) (ColDelta 49) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: .}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:58-69 }
                                Just (Ann (DP (0,0)) (ColDelta 51) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: unsafeFreeze}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7-74 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-12),DP (0,-7)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,6)) "trail" Nothing] [((AnnComment DComment (DP (0,-10),DP (0,-5)) "forM_" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,11)) "undoneLits" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7-16 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: undoneLits}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-74 }
                              Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-55 }
                                Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-29 }
                                  Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: takeWhile}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:31-55 }
                                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 }
                                    Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 Ref "delta-19"),DP (0,0))])
                                    (HsLam 
                                     (MG 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 }
                                        Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "undoOne" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])
                                        (Match 
                                         (Nothing) 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:33 }
                                           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (VarPat 
                                            (Unqual {OccName: l})))] 
                                         (Nothing) 
                                         (GRHSs 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-54 }
                                            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                            (GRHS 
                                             [] 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-54 }
                                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                              (OpApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-50 }
                                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                (OpApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-40 }
                                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: lvl}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:42 }
                                                  Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,1)) "m" Nothing] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: !}))) 
                                                 (PlaceHolder) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:44-50 }
                                                  Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                  (HsPar 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:45-49 }
                                                    Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                                    (HsApp 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:45-47 }
                                                      Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: var}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:49 }
                                                      Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: l}))))))))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:52 }
                                                Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: >}))) 
                                               (PlaceHolder) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:54 }
                                                Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsOverLit {HsOverLit:0}))))))] 
                                          (EmptyLocalBinds))))] 
                                      [] 
                                      (PlaceHolder) 
                                      (FromSource)))))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:57-63 }
                                Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftM}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:65-74 }
                                Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:65-68 }
                                  Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: gets}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:70-74 }
                                  Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: trail}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-42 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-42 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-22 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-11 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: forM_}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:13-22 }
                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,1)) "modify" Nothing] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: undoneLits}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:24 }
                                Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:26-42 }
                                Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,1) [DComment (DP (0,0),DP (0,2)) "dl" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:26-30 }
                                  Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                  (HsVar 
                                   (Unqual {OccName: const}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:32-42 }
                                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:33-41 }
                                    Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:33-39 }
                                      Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: undoOne}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:41 }
                                      Just (Ann (DP (0,0)) (ColDelta 34) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "propQ" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: m}))))))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-52 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,8)) "Seq.empty" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-52 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: modify}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:14 }
                                Just (Ann (DP (0,-2)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,3)) "compactDB" Nothing] [((G AnnVal),DP (0,-2))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 Ref "delta-20"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:17 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22-52 }
                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22-52 }
                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22 }
                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:25-31 }
                                              Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:25-26 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: dl})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:30-31 }
                                                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                                (HsVar 
                                                 (Exact {Name: []}))) 
                                               (False))),
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:34-50 }
                                              Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:34-38 }
                                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: propQ})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:42-50 }
                                                Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Qual {ModuleName: Seq} {OccName: empty}))) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:205:7-15 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:205:7-15 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: compactDB}))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-38 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-9),DP (0,6)) "unsafeFreezeAss" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,11)) "simplifyDB" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-38 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-23 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-21 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: unsafeFreezeAss}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:23 }
                                  Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: m}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:25-27 }
                                Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: >>=}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:29-38 }
                                Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: simplifyDB}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1-81 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,14)) "reportSolution" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1-14 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: reportSolution}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-81 }
       Just (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-81 }
         Just (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-5)) "do" Nothing),DP (0,-7)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-26 }
           Just (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Solution}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:31-81 }
           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:31-40 }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:31-38 }
               Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:40 }
               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:42-81 }
             Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:43-50 }
                Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Solution}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:53-57 }
                Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Stats}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:60-80 }
                Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:60-64 }
                  Just (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:66-80 }
                  Just (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: ResolutionTrace})))))])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:1-14 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: reportSolution})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:1-14 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: reportSolution})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:16 }
            Just (Ann (DP (0,-10)) (ColDelta 16) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,5)) "stats" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,13)) "extractStats" Nothing] [((G AnnVal),DP (0,-10))])
            (VarPat 
             (Unqual {OccName: s})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,18)-(215,42)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,20)-(215,42)
                }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(210,5)-(215,42) Ref "delta-21"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:5-25 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "case" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:5-9 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: stats}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:14-25 }
                    Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "of" Nothing] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: extractStats}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(211,5)-(215,42)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(211,5)-(215,42)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(212,7)-(215,42) Ref "delta-22"),DP (0,0))])
                    (HsCase 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:211:10 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,3)) "Sat" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: s}))) 
                     (MG 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-43 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-11 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-9 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: Sat})) 
                            (PrefixCon 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:11 }
                               Just (Ann (DP (0,-1)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "Unsat" Nothing] [((G AnnVal),DP (0,-1))])
                               (WildPat 
                                (PlaceHolder)))])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:15-43 }
                            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,3) [DComment (DP (0,1),DP (0,2)) "_" Nothing] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:18-43 }
                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:18-23 }
                                Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: return}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:25-43 }
                                Just (Ann (DP (0,5)) (ColDelta 18) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (ExplicitTuple 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:26 }
                                   Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                                   (Present 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:26 }
                                     Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: s}))))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:29-33 }
                                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                                   (Present 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:29-33 }
                                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: stats}))))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:36-42 }
                                   Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                                   (Present 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:36-42 }
                                     Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: Nothing})))))] 
                                 (Boxed)))))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,7)-(215,42)
                         }
                        Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:7-13 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:7-11 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: Unsat})) 
                            (PrefixCon 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:13 }
                               Just (Ann (DP (0,-6)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "resTrace" Nothing] [((G AnnVal),DP (0,-6))])
                               (WildPat 
                                (PlaceHolder)))])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,15)-(215,42)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,18)-(215,42)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(214,11)-(215,42) Ref "delta-23"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:11-41 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "return" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])
                                 (BindStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:11-18 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: resTrace}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:23-41 }
                                   Just (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "stats" Nothing] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:23-39 }
                                     Just (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-4))])
                                     (HsVar 
                                      (Unqual {OccName: constructResTrace}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:41 }
                                     Just (Ann (DP (0,-1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-13),DP (0,-12)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,9)) "resTrace" Nothing] [((G AnnVal),DP (0,-1))])
                                     (HsVar 
                                      (Unqual {OccName: s}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11-42 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11-42 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11-16 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: return}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:18-42 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (ExplicitTuple 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:19 }
                                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                        (Present 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:19 }
                                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: s}))))),
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:22-26 }
                                        Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                        (Present 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:22-26 }
                                          Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: stats}))))),
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:29-41 }
                                        Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                                        (Present 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:29-41 }
                                          Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:29-32 }
                                            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: Just}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:34-41 }
                                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: resTrace})))))))] 
                                      (Boxed))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1-29 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,60)) "-- | A default configuration based on the formula to solve." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,57)) "-- | A default configuration based on the formula to solve." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,32)) "--  * restarts every 100 conflicts" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,32)) "--  * restarts every 100 conflicts" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * requires 1.5 as many restarts after restarting as before, each time" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * requires 1.5 as many restarts after restarting as before, each time" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "--  * VSIDS to be enabled" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "--  * VSIDS to be enabled" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,26)) "--  * restarts to be enabled" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,13)) "defaultConfig" Nothing,DComment (DP (0,-13),DP (0,15)) "--  * restarts to be enabled" Nothing,DComment (DP (0,-14),DP (0,-12)) "::" Nothing,DComment (DP (0,1),DP (0,13)) "FunsatConfig" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1-13 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: defaultConfig}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:18-29 }
       Just (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "Cfg" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:18-29 }
         Just (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,-2))])
         (HsTyVar 
          (Unqual {OccName: FunsatConfig}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-9),DP (0,-8)) "{" Nothing,DComment (DP (0,1),DP (0,14)) "configRestart" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "100" Nothing,DComment (DP (0,1),DP (0,47)) "-- fromIntegral $ max (numVars f `div` 10) 100" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:1-13 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: defaultConfig})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:1-13 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: defaultConfig})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,15)-(231,50)
              }
             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,17)-(231,50)
                }
               Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])
               (RecordCon 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:17-19 }
                 Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: Cfg})) 
                (HsLit 
                 (HsString "" {FastString: "noPostTcExpr"})) 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:23-41 }
                   Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,-12)) "," Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,18)) "configRestartBump" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-1),DP (0,45)) "-- fromIntegral $ max (numVars f `div` 10) 100" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,-44),DP (0,-41)) "1.5" Nothing),DP (0,-44)),((G AnnComma),DP (1,23))])
                   (HsRecField 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:23-35 }
                     Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: configRestart})) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:39-41 }
                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsOverLit {HsOverLit:100})) 
                    (False))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:25-47 }
                   Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,-3)) "configUseVSIDS" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "True" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,23))])
                   (HsRecField 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:25-41 }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: configRestartBump})) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:45-47 }
                     Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsOverLit {HsOverLit:1.5})) 
                    (False))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:25-45 }
                   Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,3)) "configUseRestarts" Nothing),DP (0,-14)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,5)) "True" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((G AnnComma),DP (1,23))])
                   (HsRecField 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:25-38 }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: configUseVSIDS})) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:42-45 }
                     Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: True}))) 
                    (False))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:25-48 }
                   Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                   (HsRecField 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:25-41 }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: configUseRestarts})) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:45-48 }
                     Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: True}))) 
                    (False)))] 
                 (Nothing))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1-27 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (1,1),DP (1,19)) "-- * Preprocessing" Nothing,DComment (DP (1,1),DP (1,19)) "-- * Preprocessing" Nothing,DComment (DP (1,1),DP (1,33)) "-- | Some kind of preprocessing." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,30)) "-- | Some kind of preprocessing." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,22)) "--   * remove duplicates" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,13)) "preprocessCNF" Nothing,DComment (DP (0,-13),DP (0,11)) "--   * remove duplicates" Nothing,DComment (DP (0,-10),DP (0,-8)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1-13 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: preprocessCNF}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-27 }
       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-27 }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "f" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "clauses" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-20 }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: CNF}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:25-27 }
           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: CNF}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,12)) "simpClauses" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:1-13 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: preprocessCNF})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:1-13 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: preprocessCNF})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:15 }
            Just (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [DComment (DP (0,-9),DP (0,-4)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,11)) "simpClauses" Nothing] [((G AnnVal),DP (0,-7))])
            (VarPat 
             (Unqual {OccName: f})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,17)-(240,35)
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:19-54 }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
               (RecordUpd 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:19 }
                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: f}))) 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:21-53 }
                   Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,8)) "Set.map" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                   (HsRecField 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:21-27 }
                     Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: clauses})) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:31-53 }
                     Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:31-41 }
                       Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: simpClauses}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:43-53 }
                       Just (Ann (DP (0,-4)) (ColDelta 43) DP (0,1) [DComment (DP (0,-9),DP (0,-6)) "nub" Nothing,DComment (DP (0,1),DP (0,11)) "-- rm dups" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                       (HsPar 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:44-52 }
                         Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:44-50 }
                           Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: clauses}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:52 }
                           Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: f}))))))))) 
                    (False)))] 
                 (Nothing)) 
                [] 
                [] 
                []))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35 }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-21 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: simpClauses})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-21 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: simpClauses})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:23-35 }
                       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:25-35 }
                         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:25-31 }
                           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Qual {ModuleName: Set} {OccName: map}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:33-35 }
                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: nub})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1-42 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (0,1),DP (0,11)) "-- rm dups" Nothing,DComment (DP (1,1),DP (1,75)) "-- | Simplify the clause database.  Eventually should supersede, probably," Nothing,DComment (DP (1,1),DP (1,20)) "-- `preprocessCNF'." Nothing,DComment (DP (0,-19),DP (0,55)) "-- | Simplify the clause database.  Eventually should supersede, probably," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,17)) "-- `preprocessCNF'." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,32)) "-- Precondition: decision level 0." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "simplifyDB" Nothing,DComment (DP (0,-10),DP (0,24)) "-- Precondition: decision level 0." Nothing,DComment (DP (0,-23),DP (0,-21)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1-10 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: simplifyDB}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-42 }
       Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "mFr" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-42 }
         Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-9)) "=" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-25 }
           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IAssignment}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:30-42 }
           Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:30-39 }
             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:30-37 }
               Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:39 }
               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:41-42 }
             Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:1-10 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: simplifyDB})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:1-10 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: simplifyDB})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:12-14 }
            Just (Ann (DP (0,-67)) (ColDelta 12) DP (0,1) [DComment (DP (0,-8),DP (0,68)) "-- For each clause in the database, remove it if satisfied; if it contains a" Nothing] [((G AnnVal),DP (0,-67))])
            (VarPat 
             (Unqual {OccName: mFr})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,16)-(260,39)
              }
             Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,18)-(260,39)
                }
               Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(250,3)-(260,39) Ref "delta-24"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:3-31 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:3 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: n}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:8-31 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:8-14 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: numVars}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:16-22 }
                      Just (Ann (DP (0,5)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-4)) "get" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:24-31 }
                      Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:24-27 }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: gets}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:29-31 }
                        Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: cnf}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3-10 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "liftST" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: s}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:8-10 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: get}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,3)-(260,39)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "." Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,1),DP (0,3)) ".." Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,3)-(260,39)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:3-29 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:3-8 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: liftST}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:10 }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "l" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: .}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:12-29 }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:12-16 }
                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: forM_}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:18-29 }
                          Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing] [((G AnnOpenS),DP (0,-1)),((G AnnDotdot),DP (0,1)),((G AnnCloseS),DP (0,0))])
                          (ArithSeq 
                           (HsLit 
                            (HsString "" {FastString: "noPostTcExpr"})) 
                           (Nothing) 
                           (FromTo 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:19-21 }
                             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:19 }
                               Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: V}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:21 }
                               Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "i" Nothing] [((G AnnVal),DP (0,0))])
                               (HsOverLit {HsOverLit:1})))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:26-28 }
                             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:26 }
                               Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: V}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:28 }
                               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: n})))))))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:31 }
                      Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39) Ref "delta-25"),DP (0,0))])
                      (HsLam 
                       (MG 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39)
                           }
                          Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:34 }
                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: i})))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,39)-(260,39)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,39)-(260,39)
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:39-55 }
                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:39-42 }
                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: when}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:44-55 }
                                    Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                    (HsPar 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-54 }
                                      Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-49 }
                                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                        (OpApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-47 }
                                          Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: mFr}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:48 }
                                          Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: !}))) 
                                         (PlaceHolder) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:49 }
                                          Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: i}))))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:51-52 }
                                        Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: /=}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:54 }
                                        Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsOverLit {HsOverLit:0})))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:57 }
                                  Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: $}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,59)-(260,39)
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(260,39) Ref "delta-26"),DP (0,0))])
                                  (HsDo 
                                   (DoExpr) 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(254,75)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])
                                     (LetStmt 
                                      (HsValBinds 
                                       (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21 }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                          (FunBind 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9 }
                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (Unqual {OccName: l})) 
                                           (False) 
                                           (MG 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21 }
                                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "filterL" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
                                              (Match 
                                               (Just 
                                                ((,) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9 }
                                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (Unqual {OccName: l})) 
                                                 (False))) 
                                               [] 
                                               (Nothing) 
                                               (GRHSs 
                                                [
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:11-21 }
                                                  Just (Ann (DP (0,-1)) (ColDelta 2) DP (0,-1) [] [])
                                                  (GRHS 
                                                   [] 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:13-21 }
                                                    Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                                                    (HsApp 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:13 }
                                                      Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: L}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:15-21 }
                                                      Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                      (HsPar 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:16-20 }
                                                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                        (OpApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:16-18 }
                                                          Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: mFr}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:19 }
                                                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,0)) "_i" Nothing),DP (0,-2)),((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: !}))) 
                                                         (PlaceHolder) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:20 }
                                                          Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: i})))))))))))] 
                                                (EmptyLocalBinds))))] 
                                            [] 
                                            (PlaceHolder) 
                                            (FromSource)) 
                                           (WpHole) 
                                           (PlaceHolder) 
                                           [])),
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-75 }
                                          Just (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,3)) "map" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "filter" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "/=" Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,44)) "-- Remove unsat literal `negate l' from clauses." Nothing] [])
                                          (FunBind 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-15 }
                                            Just (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-44))])
                                            (Unqual {OccName: filterL})) 
                                           (False) 
                                           (MG 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-75 }
                                              Just (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                                              (Match 
                                               (Just 
                                                ((,) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-15 }
                                                  Just (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-44))])
                                                  (Unqual {OccName: filterL})) 
                                                 (False))) 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:17-18 }
                                                 Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (VarPat 
                                                  (Unqual {OccName: _i})))] 
                                               (Nothing) 
                                               (GRHSs 
                                                [
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:20-75 }
                                                  Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
                                                  (GRHS 
                                                   [] 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:22-75 }
                                                    Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                                    (HsApp 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:22-24 }
                                                      Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: map}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:26-75 }
                                                      Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                      (HsPar 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 }
                                                        Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 Ref "delta-27"),DP (0,0))])
                                                        (HsLam 
                                                         (MG 
                                                          [
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 }
                                                            Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                                            (Match 
                                                             (Nothing) 
                                                             [
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:28-38 }
                                                               Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                               (TuplePat 
                                                                [
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:29 }
                                                                  Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                  (VarPat 
                                                                   (Unqual {OccName: p}))),
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:32 }
                                                                  Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                  (VarPat 
                                                                   (Unqual {OccName: c}))),
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:35-37 }
                                                                  Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                  (VarPat 
                                                                   (Unqual {OccName: cid})))] 
                                                                (Boxed) 
                                                                []))] 
                                                             (Nothing) 
                                                             (GRHSs 
                                                              [
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43-74 }
                                                                Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                                                                (GRHS 
                                                                 [] 
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43-74 }
                                                                  Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                  (ExplicitTuple 
                                                                   [
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:44 }
                                                                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                                                     (Present 
                                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:44 }
                                                                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                       (HsVar 
                                                                        (Unqual {OccName: p}))))),
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-68 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                                                                     (Present 
                                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-68 }
                                                                       Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                                                       (HsApp 
                                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-66 }
                                                                         Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                                         (HsApp 
                                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-52 }
                                                                           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                           (HsVar 
                                                                            (Unqual {OccName: filter}))) 
                                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:54-66 }
                                                                           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                           (HsPar 
                                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:55-65 }
                                                                             Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                                                             (SectionR 
                                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:55-56 }
                                                                               Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                               (HsVar 
                                                                                (Unqual {OccName: /=}))) 
                                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:58-65 }
                                                                               Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
                                                                               (HsApp 
                                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:58-63 }
                                                                                 Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                                 (HsVar 
                                                                                  (Unqual {OccName: negate}))) 
                                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:65 }
                                                                                 Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                                 (HsVar 
                                                                                  (Unqual {OccName: l}))))))))))) 
                                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:68 }
                                                                         Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                         (HsVar 
                                                                          (Unqual {OccName: c}))))))),
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:71-73 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
                                                                     (Present 
                                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:71-73 }
                                                                       Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                       (HsVar 
                                                                        (Unqual {OccName: cid})))))] 
                                                                   (Boxed)))))] 
                                                              (EmptyLocalBinds))))] 
                                                          [] 
                                                          (PlaceHolder) 
                                                          (FromSource))))))))))] 
                                                (EmptyLocalBinds))))] 
                                            [] 
                                            (PlaceHolder) 
                                            (FromSource)) 
                                           (WpHole) 
                                           (PlaceHolder) 
                                           []))]} 
                                        [])))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-36 }
                                     Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,-4),DP (1,36)) "--     modifyArray (watches s) l filterL" Nothing,DComment (DP (0,-36),DP (0,12)) "-- Remove unsat literal `negate l' from clauses." Nothing,DComment (DP (1,-4),DP (1,36)) "--     modifyArray (watches s) l filterL" Nothing,DComment (DP (0,-36),DP (0,-36)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "modifyArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "learnt" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,8)) "filterL" Nothing] [])
                                     (BodyStmt 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-36 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-28 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-26 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-15 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: modifyArray}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:17-26 }
                                             Just (Ann (DP (0,-22)) (ColDelta 12) DP (0,1) [DComment (DP (0,-11),DP (0,23)) "-- Clauses containing `l' are Sat." Nothing] [((G AnnOpenP),DP (0,-22)),((G AnnCloseP),DP (0,0))])
                                             (HsPar 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:18-25 }
                                               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:18-23 }
                                                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: learnt}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:25 }
                                                 Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: s}))))))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:28 }
                                           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: l}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:30-36 }
                                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: filterL}))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (PlaceHolder))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-39 }
                                     Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,-4),DP (1,39)) "--     writeArray (watches s) (negate l) []" Nothing,DComment (DP (0,-39),DP (0,-5)) "-- Clauses containing `l' are Sat." Nothing,DComment (DP (1,-4),DP (1,39)) "--     writeArray (watches s) (negate l) []" Nothing,DComment (DP (0,-39),DP (0,-39)) "" Nothing,DComment (DP (0,0),DP (0,10)) "writeArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "learnt" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [])
                                     (BodyStmt 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-39 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-36 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-25 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-14 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: writeArray}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:16-25 }
                                             Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                             (HsPar 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:17-24 }
                                               Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:17-22 }
                                                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: learnt}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:24 }
                                                 Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: s}))))))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:27-36 }
                                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:28-35 }
                                             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:28-33 }
                                               Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: negate}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:35 }
                                               Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: l}))))))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:38-39 }
                                         Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                         (HsVar 
                                          (Exact {Name: []}))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (PlaceHolder)))] 
                                   (PlaceHolder)))))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1-74 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (1,15)) "-- * Internals" Nothing,DComment (DP (1,1),DP (1,15)) "-- * Internals" Nothing,DComment (DP (1,1),DP (1,71)) "-- | The DPLL procedure is modeled as a state transition system.  This" Nothing,DComment (DP (1,1),DP (1,71)) "-- | The DPLL procedure is modeled as a state transition system.  This" Nothing,DComment (DP (0,-70),DP (0,8)) "-- function takes one step in that transition system.  Given an unsatisfactory" Nothing,DComment (DP (1,1),DP (1,78)) "-- assignment, perform one state transition, producing a new assignment and a" Nothing,DComment (DP (0,-77),DP (0,1)) "-- function takes one step in that transition system.  Given an unsatisfactory" Nothing,DComment (DP (1,1),DP (1,14)) "-- new state." Nothing,DComment (DP (0,-13),DP (0,64)) "-- assignment, perform one state transition, producing a new assignment and a" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "solveStep" Nothing,DComment (DP (0,-9),DP (0,4)) "-- new state." Nothing,DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "Either" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1-9 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: solveStep}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-74 }
       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-74 }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-26 }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-24 }
             Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:26 }
             Just (Ann (DP (0,9)) (ColDelta 26) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "do" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:31-74 }
           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:31-40 }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:31-38 }
               Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:40 }
               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:42-74 }
             Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:43-73 }
               Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:43-64 }
                 Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:43-48 }
                   Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Either}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:50-64 }
                   Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsParTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:51-63 }
                     Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:51-61 }
                       Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: MAssignment}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:63 }
                       Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: s}))))))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:66-73 }
                 Just (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Solution}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:1-9 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: solveStep})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:1-9 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: solveStep})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:11 }
            Just (Ann (DP (0,-9)) (ColDelta 11) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-9))])
            (VarPat 
             (Unqual {OccName: m})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,13)-(292,40)
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,15)-(284,41)
                }
               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(270,5)-(284,41) Ref "delta-28"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-45 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-45 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-21 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-19 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: unsafeFreezeAss}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:21 }
                        Just (Ann (DP (0,-7)) (ColDelta 16) DP (0,1) [DComment (DP (0,-15),DP (0,-11)) "conf" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing] [((G AnnVal),DP (0,-7))])
                        (HsVar 
                         (Unqual {OccName: m}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:23-25 }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: >>=}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:27-45 }
                      Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: solveStepInvariants}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5-27 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-1)) "let" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,8)) "selector" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5-8 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: conf}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:13-27 }
                    Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:13-16 }
                      Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:18-27 }
                      Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: dpllConfig}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:5-71 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-10),DP (0,-9)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "if" Nothing,DComment (DP (0,1),DP (0,15)) "configUseVSIDS" Nothing,DComment (DP (0,1),DP (0,5)) "conf" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing,DComment (DP (0,1),DP (0,7)) "select" Nothing,DComment (DP (0,1),DP (0,5)) "else" Nothing,DComment (DP (0,1),DP (0,13)) "selectStatic" Nothing] [((G AnnLet),DP (0,0))])
                  (LetStmt 
                   (HsValBinds 
                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71 }
                       Just (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-16 }
                         Just (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                         (Unqual {OccName: selector})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71 }
                           Just (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-16 }
                               Just (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                               (Unqual {OccName: selector})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:18-71 }
                               Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:20-71 }
                                 Just (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,3)) "bcp" Nothing] [((G AnnIf),DP (0,-2)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])
                                 (HsIf 
                                  (Just 
                                   (HsLit 
                                    (HsString "" {FastString: "noSyntaxExpr"}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:23-41 }
                                   Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:23-36 }
                                     Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: configUseVSIDS}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:38-41 }
                                     Just (Ann (DP (0,14)) (ColDelta 29) DP (0,1) [DComment (DP (0,-14),DP (0,-13)) "m" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: conf}))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:48-53 }
                                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: select}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:60-71 }
                                   Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: selectStatic})))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        []))]} 
                     [])))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5-23 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-7)) "mFr" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,3),DP (0,5)) "<-" Nothing),DP (0,3)),((AnnComment DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5-14 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: maybeConfl}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:19-23 }
                    Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:19-21 }
                      Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: bcp}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:23 }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: m}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5-30 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,6),DP (0,7)) "m" Nothing] [((AnnComment DComment (DP (0,-3),DP (0,2)) "voArr" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,3))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5-7 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: mFr}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:14-30 }
                    Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:14-28 }
                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: unsafeFreezeAss}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:30 }
                      Just (Ann (DP (0,-1)) (ColDelta 25) DP (0,1) [DComment (DP (0,-15),DP (0,-11)) "gets" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "varOrderArr" Nothing] [((G AnnVal),DP (0,-1))])
                      (HsVar 
                       (Unqual {OccName: m}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5-42 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,9)) "varOrder" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "voFr" Nothing),DP (0,-5)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5-9 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: voArr}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:14-42 }
                    Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:14-17 }
                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:19-42 }
                      Just (Ann (DP (0,-9)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,10)) "FrozenVarOrder" Nothing] [((G AnnOpenP),DP (0,-9)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "`" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:20-41 }
                        Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:20-30 }
                          Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: varOrderArr}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:32 }
                          Just (Ann (DP (0,-3)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [((G AnnVal),DP (0,-3))])
                          (HsVar 
                           (Unqual {OccName: .}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:34-41 }
                          Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: varOrder}))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5-63 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "unsafeFreeze" Nothing,DComment (DP (0,1),DP (0,6)) "voArr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "s" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,2))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5-8 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: voFr}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:14-63 }
                    Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:14-27 }
                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: FrozenVarOrder}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:29-35 }
                      Just (Ann (DP (0,12)) (ColDelta 24) DP (0,1) [DComment (DP (0,-14),DP (0,-11)) "get" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:37-63 }
                      Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:37-42 }
                        Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: liftST}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:44-63 }
                        Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:45-62 }
                          Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:45-56 }
                            Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: unsafeFreeze}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:58-62 }
                            Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: voArr}))))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5-16 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,10)) "stepForward" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,5))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: s}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:14-16 }
                    Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: get}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,41)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,41)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,27)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,43)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,20)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,60)
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,28)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:278:5-15 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: stepForward}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:278:17 }
                                Just (Ann (DP (0,-12)) (ColDelta 12) DP (0,1) [DComment (DP (0,-5),DP (0,13)) "-- Check if unsat." Nothing] [((G AnnVal),DP (0,-12))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:11-28 }
                                Just (Ann (DP (1,6)) (ColDelta 6) DP (2,6) [DComment (DP (1,6),DP (1,11)) "unsat" Nothing,DComment (DP (0,-5),DP (0,13)) "-- Check if unsat." Nothing,DComment (DP (0,-12),DP (0,-2)) "maybeConfl" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,4)) "==>" Nothing,DComment (DP (0,1),DP (0,17)) "postProcessUnsat" Nothing,DComment (DP (0,1),DP (0,11)) "maybeConfl" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:11-26 }
                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:11-15 }
                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: unsat}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:17-26 }
                                    Just (Ann (DP (0,-42)) (ColDelta 12) DP (0,1) [DComment (DP (0,-5),DP (0,43)) "-- Unit propagation may reveal conflicts; check." Nothing] [((G AnnVal),DP (0,-42))])
                                    (HsVar 
                                     (Unqual {OccName: maybeConfl}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:28 }
                                  Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))))))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:30-32 }
                              Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: ==>}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:34-60 }
                              Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:34-49 }
                                Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: postProcessUnsat}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:51-60 }
                                Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: maybeConfl}))))))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:8-9 }
                            Just (Ann (DP (1,3)) (ColDelta 3) DP (2,3) [DComment (DP (1,3),DP (1,5)) "><" Nothing,DComment (DP (0,1),DP (0,11)) "maybeConfl" Nothing,DComment (DP (0,-10),DP (0,38)) "-- Unit propagation may reveal conflicts; check." Nothing,DComment (DP (0,-29),DP (0,-26)) ">=>" Nothing,DComment (DP (0,1),DP (0,9)) "backJump" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: ><}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:11-20 }
                            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: maybeConfl}))))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:30-32 }
                          Just (Ann (DP (0,-6)) (ColDelta 25) DP (0,9) [DComment (DP (0,-10),DP (0,15)) "-- No conflicts.  Decide." Nothing] [((G AnnVal),DP (0,-6))])
                          (HsVar 
                           (Unqual {OccName: >=>}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:34-43 }
                          Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:34-41 }
                            Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: backJump}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:43 }
                            Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: m}))))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:8-9 }
                        Just (Ann (DP (0,-2)) (ColDelta 3) DP (2,3) [DComment (DP (1,3),DP (1,5)) "><" Nothing,DComment (DP (0,1),DP (0,9)) "selector" Nothing,DComment (DP (0,-8),DP (0,17)) "-- No conflicts.  Decide." Nothing,DComment (DP (0,-16),DP (0,-13)) "mFr" Nothing,DComment (DP (0,1),DP (0,5)) "voFr" Nothing,DComment (DP (0,2),DP (0,5)) ">=>" Nothing,DComment (DP (0,1),DP (0,7)) "decide" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [((G AnnVal),DP (0,-2))])
                        (HsVar 
                         (Unqual {OccName: ><}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:11-27 }
                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:11-22 }
                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:11-18 }
                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: selector}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:20-22 }
                            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: mFr}))))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:24-27 }
                          Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: voFr}))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:30-32 }
                      Just (Ann (DP (0,2)) (ColDelta 25) DP (0,2) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: >=>}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:34-41 }
                      Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:34-39 }
                        Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: decide}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:41 }
                        Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: m}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(287,7)-(292,40)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-17 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: stepForward})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-71 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "step" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnEqual),DP (0,5))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-17 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: stepForward})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:19-25 }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:19-25 }
                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: Nothing})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:31-71 }
                       Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-71 }
                         Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-45 }
                           Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:34-44 }
                             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:34-38 }
                               Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "do" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: Right}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:40 }
                               Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: .}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:42-44 }
                               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: Sat}))))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:47-53 }
                           Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: liftM}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:55-71 }
                           Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:55-69 }
                             Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: unsafeFreezeAss}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:71 }
                             Just (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: m})))))))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,7)-(292,40)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:7-17 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: stepForward})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:19-29 }
                      Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "step" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:20-28 }
                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:20-23 }
                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: Just})) 
                         (PrefixCon 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:25-28 }
                            Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: step})))])))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,31)-(292,40)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,33)-(292,40)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(289,11)-(292,40) Ref "delta-29"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:11-19 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "case" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:11 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: r}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:16-19 }
                              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: step}))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(290,11)-(292,40)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,-3)) "r" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(290,11)-(292,40)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(291,13)-(292,40) Ref "delta-30"),DP (0,0))])
                              (HsCase 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:290:16 }
                                Just (Ann (DP (0,-4)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])
                                (HsVar 
                                 (Unqual {OccName: r}))) 
                               (MG 
                                [
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-73 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-19 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-19 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Nothing})) 
                                      (PrefixCon 
                                       [])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:21-73 }
                                      Just (Ann (DP (0,2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-3)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-73 }
                                        Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                        (OpApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-38 }
                                          Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-1)) "Left" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                          (HsPar 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:25-37 }
                                            Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                            (OpApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:25-29 }
                                              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: Right}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:31 }
                                              Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: .}))) 
                                             (PlaceHolder) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:33-37 }
                                              Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: Unsat}))))))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:40-46 }
                                          Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: liftM}))) 
                                         (PlaceHolder) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:48-73 }
                                          Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:48-53 }
                                            Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: liftST}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:55-73 }
                                            Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                            (HsPar 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:56-72 }
                                              Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:56-70 }
                                                Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: unsafeFreezeAss}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:72 }
                                                Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: m})))))))))))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13-40 }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13-18 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13-16 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Just})) 
                                      (PrefixCon 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:18 }
                                         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (VarPat 
                                          (Unqual {OccName: m})))])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:21-40 }
                                      Just (Ann (DP (0,2)) (ColDelta 8) DP (0,2) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-40 }
                                        Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                        (OpApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-36 }
                                          Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                          (OpApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-29 }
                                            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: return}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:31 }
                                            Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: .}))) 
                                           (PlaceHolder) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:33-36 }
                                            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: Left}))))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:38 }
                                          Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: $}))) 
                                         (PlaceHolder) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:40 }
                                          Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: m})))))))] 
                                    (EmptyLocalBinds))))] 
                                [] 
                                (PlaceHolder) 
                                (FromSource)))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1-73 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,53)) "-- | /Precondition:/ problem determined to be unsat." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,50)) "-- | /Precondition:/ problem determined to be unsat." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,74)) "-- Records id of conflicting clause in trace before failing.  Always returns" Nothing,DComment (DP (1,1),DP (1,14)) "-- `Nothing'." Nothing,DComment (DP (0,-13),DP (0,63)) "-- Records id of conflicting clause in trace before failing.  Always returns" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,13)) "-- `Nothing'." Nothing,DComment (DP (0,-13),DP (0,3)) "postProcessUnsat" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1-16 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: postProcessUnsat}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-73 }
       Just (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "maybeConfl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-73 }
         Just (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-49 }
           Just (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-25 }
             Just (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-7))])
             (HsTyVar 
              (Unqual {OccName: Maybe}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:27-49 }
             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:28-30 }
                Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Lit}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:33-38 }
                Just (Ann (DP (0,0)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Clause}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:41-48 }
                Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ClauseId})))])))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:54-73 }
           Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:54-63 }
             Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:54-61 }
               Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:63 }
               Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:65-73 }
             Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:66-72 }
               Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:66-70 }
                 Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Maybe}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:72 }
                 Just (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: a}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:1-16 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: postProcessUnsat})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,-8)) "$" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "thd" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "." Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "fromJust" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:1-16 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: postProcessUnsat})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:18-27 }
            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-12),DP (0,-12)) "" Nothing,DComment (DP (0,0),DP (0,13)) "traceClauseId" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: maybeConfl})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,29)-(303,19)
              }
             Just (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,31)-(301,18)
                }
               Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(300,5)-(301,18) Ref "delta-31"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-47 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-47 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-17 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: traceClauseId}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:19 }
                      Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-13),DP (0,-7)) "return" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21-47 }
                      Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21-36 }
                        Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:22-35 }
                          Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:22-24 }
                            Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: thd}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:26 }
                            Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: .}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:28-35 }
                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: fromJust}))))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:38-47 }
                        Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: maybeConfl}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5-18 }
                  Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5-18 }
                    Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5-10 }
                      Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:12-18 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: Nothing}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19 }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-7 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: thd})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-7 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: thd})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:9-15 }
                      Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (TuplePat 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:10 }
                         Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                         (WildPat 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:12 }
                         Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                         (WildPat 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:14 }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (VarPat 
                          (Unqual {OccName: i})))] 
                       (Boxed) 
                       []))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:17-19 }
                       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:19 }
                         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: i})))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1-51 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,79)) "-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed," Nothing,DComment (DP (1,1),DP (1,45)) "-- this should be optimised away to nothing." Nothing,DComment (DP (0,-44),DP (0,34)) "-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed," Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,19)) "solveStepInvariants" Nothing,DComment (DP (0,-19),DP (0,25)) "-- this should be optimised away to nothing." Nothing,DComment (DP (0,-24),DP (0,-22)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-19),DP (0,-9)) "{-# INLINE" Nothing),DP (0,-19)),((AnnComment DComment (DP (0,1),DP (0,20)) "solveStepInvariants" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1-19 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: solveStepInvariants}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-51 }
       Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-51 }
         Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,0)) "#-}" Nothing),DP (0,-3)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-34 }
           Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IAssignment}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:39-51 }
           Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:39-48 }
             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:39-46 }
               Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:48 }
               Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:50-51 }
             Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1-34 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-8)) "_m" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "assert" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:12-30 }
       Just (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,9)) "solveStepInvariants" Nothing] [((G AnnVal),DP (0,-8))])
       (Unqual {OccName: solveStepInvariants})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,2)) "True" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:1-19 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: solveStepInvariants})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:1-19 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: solveStepInvariants})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:21-22 }
            Just (Ann (DP (0,8)) (ColDelta 21) DP (0,1) [DComment (DP (0,-15),DP (0,-15)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: _m})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,24)-(314,14)
              }
             Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,26)-(314,14)
                }
               Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:26-36 }
                 Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:26-31 }
                   Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: assert}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:33-36 }
                   Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: True}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:38 }
                 Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,40)-(314,14)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(310,5)-(314,14) Ref "delta-32"),DP (0,0))])
                 (HsDo 
                  (DoExpr) 
                  [
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:5-12 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,35)) "-- no dups in decision list or trail" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                    (BindStmt 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:5 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: s}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:10-12 }
                      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: get}))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(314,14)
                     }
                    Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "assert" Nothing,DComment (DP (0,-6),DP (0,30)) "-- no dups in decision list or trail" Nothing,DComment (DP (0,-29),DP (0,-28)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "nub" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
                    (BodyStmt 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(314,14)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(313,60)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:5-53 }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:5-10 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: assert}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:12-53 }
                            Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-5),DP (0,1)) "assert" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,4)) "trail" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-52 }
                              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-27 }
                                Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-25 }
                                  Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,4)) "trail" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:14-24 }
                                    Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                    (OpApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:14-19 }
                                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: length}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:21 }
                                      Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: .}))) 
                                     (PlaceHolder) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:23-24 }
                                      Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "." Nothing] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: dl}))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:27 }
                                  Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:29-30 }
                                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: ==}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32-52 }
                                Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32-50 }
                                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-49 }
                                    Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                    (OpApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-44 }
                                      Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-38 }
                                        Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: length}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:40 }
                                        Just (Ann (DP (0,-3)) (ColDelta 35) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing] [((G AnnVal),DP (0,-3))])
                                        (HsVar 
                                         (Unqual {OccName: .}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:42-44 }
                                        Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: nub}))))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:46 }
                                      Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "." Nothing] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: .}))) 
                                     (PlaceHolder) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:48-49 }
                                      Just (Ann (DP (0,-1)) (ColDelta 43) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "nub" Nothing] [((G AnnVal),DP (0,-1))])
                                      (HsVar 
                                       (Unqual {OccName: dl}))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:52 }
                                  Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))))))))))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:55 }
                          Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: $}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:6-60 }
                          Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:6-11 }
                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: assert}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:13-60 }
                            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-59 }
                              Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-31 }
                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-29 }
                                  Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:15-28 }
                                    Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                    (OpApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:15-20 }
                                      Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: length}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:22 }
                                      Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: .}))) 
                                     (PlaceHolder) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:24-28 }
                                      Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: trail}))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:31 }
                                  Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:33-34 }
                                Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: ==}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36-59 }
                                Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36-57 }
                                  Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-56 }
                                    Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                    (OpApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-48 }
                                      Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-42 }
                                        Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: length}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:44 }
                                        Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: .}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:46-48 }
                                        Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: nub}))))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:50 }
                                      Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: .}))) 
                                     (PlaceHolder) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:52-56 }
                                      Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: trail}))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:59 }
                                  Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))))))))))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:62 }
                        Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: $}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:6-14 }
                        Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:6-11 }
                          Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: return}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:13-14 }
                          Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (HsVar 
                           (Exact {Name: ()}))))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (PlaceHolder)))] 
                  (PlaceHolder)))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1-16 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,16)) "-- ** Internals" Nothing,DComment (DP (1,1),DP (1,16)) "-- ** Internals" Nothing,DComment (DP (1,1),DP (1,75)) "-- | Value of the `level' array if corresponding variable unassigned.  Had" Nothing,DComment (DP (1,1),DP (1,26)) "-- better be less that 0." Nothing,DComment (DP (0,-25),DP (0,49)) "-- | Value of the `level' array if corresponding variable unassigned.  Had" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "noLevel" Nothing,DComment (DP (0,-7),DP (0,18)) "-- better be less that 0." Nothing,DComment (DP (0,-17),DP (0,-15)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Level" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1-7 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: noLevel}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:12-16 }
       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "-" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:12-16 }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: Level}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-5),DP (0,-4)) "1" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-7 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: noLevel})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-7 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: noLevel})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:9-12 }
             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:11-12 }
               Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnMinus),DP (0,0))])
               (NegApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:12 }
                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsOverLit {HsOverLit:1})) 
                (HsLit 
                 (HsString "" {FastString: "noSyntaxExpr"}))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,1)-(335,55)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,38)) "-- *** Boolean constraint propagation" Nothing,DComment (DP (1,1),DP (1,38)) "-- *** Boolean constraint propagation" Nothing,DComment (DP (1,1),DP (1,79)) "-- | Assign a new literal, and enqueue any implied assignments.  If a conflict" Nothing,DComment (DP (1,1),DP (1,73)) "-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise" Nothing,DComment (DP (0,-72),DP (0,6)) "-- | Assign a new literal, and enqueue any implied assignments.  If a conflict" Nothing,DComment (DP (1,1),DP (1,73)) "-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise" Nothing,DComment (DP (0,-72),DP (0,6)) "-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts" Nothing,DComment (DP (1,1),DP (1,24)) "-- with the assignment." Nothing,DComment (DP (0,-23),DP (0,55)) "-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,21)) "-- with the assignment." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,72)) "-- If no new clauses are unit (i.e. no implied assignments), simply update" Nothing,DComment (DP (1,1),DP (1,21)) "-- watched literals." Nothing,DComment (DP (0,-20),DP (0,54)) "-- If no new clauses are unit (i.e. no implied assignments), simply update" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "bcpLit" Nothing,DComment (DP (0,-6),DP (0,14)) "-- watched literals." Nothing,DComment (DP (0,-13),DP (0,-11)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:1-6 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: bcpLit}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,11)-(335,55)
        }
       Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,11)-(335,55)
          }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,9),DP (0,53)) "-- ^ Assigned literal which might propagate." Nothing),DP (0,9)),((G AnnRarrow),DP (1,11))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:11-23 }
           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:11-21 }
             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:23 }
             Just (Ann (DP (0,6)) (ColDelta 23) DP (0,1) [DComment (DP (0,-11),DP (0,-9)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "Lit" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(334,14)-(335,55)
            }
           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,5)) "FunMonad" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Maybe" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "Lit" Nothing),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,41)) "-- ^ Assigned literal which might propagate." Nothing),DP (0,-3)),((AnnComment DComment (DP (0,-41),DP (0,-40)) "," Nothing),DP (0,-41)),((AnnComment DComment (DP (0,1),DP (0,7)) "Clause" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "bcpLit" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "m" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnRarrow),DP (1,11))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:334:14-16 }
             Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Lit}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:14-55 }
             Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:14-23 }
               Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:14-21 }
                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: FunMonad}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:23 }
                 Just (Ann (DP (0,7)) (ColDelta 23) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "do" Nothing] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: s}))))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:25-55 }
               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:26-54 }
                 Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:26-30 }
                   Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Maybe}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:32-54 }
                   Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsTupleTy 
                    (HsBoxedOrConstraintTuple) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:33-35 }
                      Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: Lit}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:38-43 }
                      Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: Clause}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:46-53 }
                      Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: ClauseId})))])))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:1-6 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: bcpLit})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,4)) "gets" Nothing),DP (0,0)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,12),DP (0,26)) "-- no conflict" Nothing),DP (0,12)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:1-6 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: bcpLit})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:8 }
            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ws" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:10 }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: l})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,12)-(380,45)
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,14)-(349,20)
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(337,5)-(349,20) Ref "delta-33"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:5-22 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,5)) "clauses" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1)),((AnnComment DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),(AnnSemiSep,DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:5-6 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: ws}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:11-22 }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:11-14 }
                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:16-22 }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "<-" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: watches}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:26-42 }
                  Just (Ann (DP (0,-8)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,9)) "readArray" Nothing] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:26-27 }
                    Just (Ann (DP (0,-8)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-8))])
                    (VarPat 
                     (Unqual {OccName: ls}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:32-42 }
                    Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:32-35 }
                      Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:37-42 }
                      Just (Ann (DP (0,0)) (ColDelta 32) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "ws" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: learnt}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5-38 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-4)) "l" Nothing] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5-11 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: clauses}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:16-38 }
                    Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:16-21 }
                      Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:23 }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:25-38 }
                      Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:25-36 }
                        Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:25-33 }
                          Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: readArray}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:35-36 }
                          Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: ws}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:38 }
                        Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: l}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5-38 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5-11 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: learnts}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:16-38 }
                    Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:16-21 }
                      Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:23 }
                      Just (Ann (DP (0,-4)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,10)) "writeArray" Nothing] [((G AnnVal),DP (0,-4))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:25-38 }
                      Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:25-36 }
                        Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:25-33 }
                          Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: readArray}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:35-36 }
                          Just (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "ws" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: ls}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:38 }
                        Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ";" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: l}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-55 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,9)) "writeArray" Nothing,DComment (DP (0,1),DP (0,3)) "ls" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-55 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-10 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:12 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:14-55 }
                      Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-55 Ref "delta-34"),DP (0,0))])
                      (HsDo 
                       (DoExpr) 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-34 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-34 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [(AnnSemiSep,DP (0,1))])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-31 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-29 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-26 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: writeArray}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:28-29 }
                                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: ws}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:31 }
                               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: l}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:33-34 }
                             Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                             (HsVar 
                              (Exact {Name: []}))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-55 }
                         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-55 }
                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-52 }
                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-50 }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-47 }
                                 Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: writeArray}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:49-50 }
                                 Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: ls}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:52 }
                               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: l}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:54-55 }
                             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                             (HsVar 
                              (Exact {Name: []}))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder)))] 
                       (PlaceHolder))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,5)-(349,20)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (4,0) [DComment (DP (1,0),DP (1,73)) "-- Update wather lists for normal & learnt clauses; if conflict is found," Nothing,DComment (DP (1,0),DP (1,46)) "-- return that and don't update anything else." Nothing,DComment (DP (0,-46),DP (0,27)) "-- Update wather lists for normal & learnt clauses; if conflict is found," Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,45)) "-- return that and don't update anything else." Nothing,DComment (DP (0,-45),DP (0,-44)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "catchError" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,5)-(349,20)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:5-32 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-1)) "#-}" Nothing),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6-31 }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                        (SectionR 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6-17 }
                          Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-10)) "" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,7)) "{-# SCC" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "\"bcpWatches\"" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: catchError}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:19-31 }
                          Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:19-24 }
                            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: return}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:26 }
                            Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: .}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:28-31 }
                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: Just}))))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:34 }
                      Just (Ann (DP (0,-3)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "forM_" Nothing] [((G AnnVal),DP (0,-3))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,36)-(349,20)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(349,20) Ref "delta-35"),DP (0,0))])
                      (HsDo 
                       (DoExpr) 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55)
                          }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "f" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnValStr),DP (0,1)),((AnnComment DComment (DP (0,-11),DP (0,-9)) "->" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])
                           (HsSCC "{-# SCC" {FastString: "bcpWatches"} 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,32)-(346,55)
                              }
                             Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [DComment (DP (0,-3),DP (0,8)) "modifyArray" Nothing] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:32-52 }
                               Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:32-36 }
                                 Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                                 (HsVar 
                                  (Unqual {OccName: forM_}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:38-52 }
                                 Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,5)) "const" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:39-51 }
                                   Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:39-43 }
                                     Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: tails}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:45-51 }
                                     Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "ws" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: clauses}))))))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,54)-(346,55)
                                }
                               Just (Ann (DP (0,0)) (ColDelta 47) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,55)-(346,54)
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:55-67 }
                                   Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: updateWatches}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:9-54 }
                                   Just (Ann (DP (0,-5)) (ColDelta 2) DP (1,2) [DComment (DP (0,-13),DP (0,-12)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "{-# SCC" Nothing] [((G AnnOpenP),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                   (HsPar 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 }
                                     Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 Ref "delta-36"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,0),DP (0,12)) "\"bcpLearnts\"" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:12 }
                                            Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: f}))),
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:14 }
                                            Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: l})))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-53 }
                                             Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-53 }
                                               Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                               (OpApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-24 }
                                                 Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: liftST}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:26 }
                                                 Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: $}))) 
                                                (PlaceHolder) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-53 }
                                                 Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-43 }
                                                   Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-41 }
                                                     Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-38 }
                                                       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: modifyArray}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:40-41 }
                                                       Just (Ann (DP (0,-4)) (ColDelta 30) DP (0,1) [DComment (DP (0,-11),DP (0,-8)) "#-}" Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "tails" Nothing] [((G AnnVal),DP (0,-4))])
                                                       (HsVar 
                                                        (Unqual {OccName: ws}))))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:43 }
                                                     Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: l}))))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:45-53 }
                                                   Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:46-52 }
                                                     Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:46-50 }
                                                       Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "learnts" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: const}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:52 }
                                                       Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: f})))))))))))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))))))))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55)
                          }
                         Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,12)) "updateWatches" Nothing] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "f" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnValStr),DP (0,1)),((AnnComment DComment (DP (0,-11),DP (0,-9)) "->" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])
                           (HsSCC "{-# SCC" {FastString: "bcpLearnts"} 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,32)-(348,55)
                              }
                             Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [DComment (DP (0,-3),DP (0,8)) "modifyArray" Nothing] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:32-52 }
                               Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:32-36 }
                                 Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                                 (HsVar 
                                  (Unqual {OccName: forM_}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:38-52 }
                                 Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,5)) "const" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:39-51 }
                                   Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:39-43 }
                                     Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: tails}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:45-51 }
                                     Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "ls" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: learnts}))))))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,54)-(348,55)
                                }
                               Just (Ann (DP (0,0)) (ColDelta 47) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,55)-(348,54)
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:55-67 }
                                   Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: updateWatches}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:9-54 }
                                   Just (Ann (DP (0,-4)) (ColDelta 2) DP (1,2) [DComment (DP (0,-13),DP (0,-12)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                                   (HsPar 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 }
                                     Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 Ref "delta-37"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:12 }
                                            Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: f}))),
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:14 }
                                            Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: l})))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-53 }
                                             Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-53 }
                                               Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                               (OpApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-24 }
                                                 Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: liftST}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:26 }
                                                 Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: $}))) 
                                                (PlaceHolder) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-53 }
                                                 Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-43 }
                                                   Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-41 }
                                                     Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-38 }
                                                       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: modifyArray}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:40-41 }
                                                       Just (Ann (DP (0,-7)) (ColDelta 30) DP (0,1) [DComment (DP (0,-6),DP (0,8)) "-- no conflict" Nothing] [((G AnnVal),DP (0,-7))])
                                                       (HsVar 
                                                        (Unqual {OccName: ls}))))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:43 }
                                                     Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: l}))))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:45-53 }
                                                   Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:46-52 }
                                                     Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:46-50 }
                                                       Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: const}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:52 }
                                                       Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: f})))))))))))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))))))))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7-20 }
                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7-20 }
                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7-12 }
                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])
                             (HsVar 
                              (Unqual {OccName: return}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:14-20 }
                             Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: Nothing}))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder)))] 
                       (PlaceHolder))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(358,5)-(380,45)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-17 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: updateWatches})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-34 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-17 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: updateWatches})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:19 }
                      Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21-22 }
                      Just (Ann (DP (0,-3)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "alter" Nothing] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21-22 }
                        Just (Ann (DP (0,-3)) (ColDelta 16) DP (0,1) [] [((G AnnOpenS),DP (0,-3)),((G AnnCloseS),DP (0,0))])
                        (Exact {Name: []})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:24-34 }
                       Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:26-34 }
                         Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:26-31 }
                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: return}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:33-34 }
                           Just (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) "@" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "watchRef" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                           (HsVar 
                            (Exact {Name: ()})))))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,5)-(380,45)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,6),DP (0,7)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ":" Nothing,DComment (DP (0,1),DP (0,12)) "restClauses" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:5-17 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: updateWatches})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:19-23 }
                      Just (Ann (DP (0,-10)) (ColDelta 14) DP (0,1) [DComment (DP (0,-11),DP (0,-11)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-10))])
                      (VarPat 
                       (Unqual {OccName: alter}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:25-64 }
                      Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-63 }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:51 }
                          Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (Exact {Name: :})) 
                         (InfixCon 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-49 }
                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "m" Nothing),DP (0,-1)),((G AnnAt),DP (0,0))])
                           (AsPat 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-30 }
                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: annCl})) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:32-49 }
                             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (TuplePat 
                              [
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:33-40 }
                                Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: watchRef}))),
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:43 }
                                Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: c}))),
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:46-48 }
                                Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: cid})))] 
                              (Boxed) 
                              [])))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:53-63 }
                           Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: restClauses}))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,66)-(380,45)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 61) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,68)-(380,45)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(360,7)-(380,45) Ref "delta-38"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:7-30 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,-2)) "q" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:7-9 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: mFr}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:14-30 }
                              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:14-28 }
                                Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: unsafeFreezeAss}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:30 }
                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-15),DP (0,-9)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "x" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: m}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,7)-(362,57)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,9)) "watchRef" Nothing] [((G AnnLarrow),DP (0,3))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:7 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: q}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,14)-(362,57)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:14-19 }
                                Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:21 }
                                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,23)-(362,57)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,26)-(362,57) Ref "delta-39"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-53 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                                   (BindStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-31 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (TuplePat 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:27 }
                                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: x}))),
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:30 }
                                        Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: y})))] 
                                      (Boxed) 
                                      [])) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:36-53 }
                                     Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "if" Nothing] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:36-44 }
                                       Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                       (HsVar 
                                        (Unqual {OccName: readSTRef}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:46-53 }
                                       Just (Ann (DP (0,-3)) (ColDelta 20) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing] [((G AnnVal),DP (0,-3))])
                                       (HsVar 
                                        (Unqual {OccName: watchRef}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-57 }
                                   Just (Ann (DP (0,-42)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,-3)) "y" Nothing,DComment (DP (0,1),DP (0,5)) "else" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (1,-19),DP (1,42)) "-- l,q are the (negated) literals being watched for clause c." Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-57 }
                                     Just (Ann (DP (0,-42)) (ColDelta 0) DP (1,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-31 }
                                       Just (Ann (DP (0,-42)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-42))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:33 }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:35-57 }
                                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])
                                       (HsIf 
                                        (Just 
                                         (HsLit 
                                          (HsString "" {FastString: "noSyntaxExpr"}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:38-43 }
                                         Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                                         (OpApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:38 }
                                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: x}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:40-41 }
                                           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: ==}))) 
                                          (PlaceHolder) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:43 }
                                           Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: l}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:50 }
                                         Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: y}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:57 }
                                         Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: x}))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,2)) "if" Nothing,DComment (DP (0,-2),DP (0,59)) "-- l,q are the (negated) literals being watched for clause c." Nothing,DComment (DP (0,-58),DP (0,-52)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,11)) "isTrueUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,1),DP (0,37)) "-- if other true, clause already sat" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,37)) "-- if other true, clause already sat" Nothing),DP (0,1)),((G AnnThen),DP (1,1)),((G AnnElse),DP (1,1))])
                              (HsIf 
                               (Just 
                                (HsLit 
                                 (HsString "" {FastString: "noSyntaxExpr"}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-35 }
                                Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "then" Nothing] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-17 }
                                  Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-15 }
                                    Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,-2))])
                                    (HsVar 
                                     (Unqual {OccName: negate}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:17 }
                                    Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "alter" Nothing] [((G AnnVal),DP (0,-1))])
                                    (HsVar 
                                     (Unqual {OccName: q}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:19-31 }
                                  Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-6)) "annCl" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,0),DP (0,1)) ":" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: isTrueUnder}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:33-35 }
                                  Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: mFr}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:13-28 }
                                Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:13-26 }
                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:13-17 }
                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: alter}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:19-26 }
                                    Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                    (HsPar 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:20-25 }
                                      Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                      (SectionL 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:20-24 }
                                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: annCl}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:25 }
                                        Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Exact {Name: :}))))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:28 }
                                  Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: l}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,10)-(380,45)
                                 }
                                Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-2),DP (0,2)) "case" Nothing,DComment (DP (0,1),DP (0,5)) "find" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,12)-(380,45) Ref "delta-41"),DP (0,0))])
                                (HsCase 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,15)-(368,58)
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,15)-(368,56)
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:15-18 }
                                      Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: find}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,20)-(368,56)
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                      (HsPar 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55)
                                         }
                                        Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55) Ref "delta-40"),DP (0,0))])
                                        (HsLam 
                                         (MG 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55)
                                             }
                                            Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                            (Match 
                                             (Nothing) 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:22 }
                                               Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (VarPat 
                                                (Unqual {OccName: x})))] 
                                             (Nothing) 
                                             (GRHSs 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,27)-(368,55)
                                                 }
                                                Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                (GRHS 
                                                 [] 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,27)-(368,55)
                                                   }
                                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                  (OpApp 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-56 }
                                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                    (OpApp 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-44 }
                                                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                      (OpApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-39 }
                                                        Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                        (OpApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27 }
                                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: x}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:29-30 }
                                                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "&&" Nothing] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: /=}))) 
                                                         (PlaceHolder) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:32-39 }
                                                          Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "not" Nothing] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:32-37 }
                                                            Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                                            (HsVar 
                                                             (Unqual {OccName: negate}))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:39 }
                                                            Just (Ann (DP (0,-11)) (ColDelta 18) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isFalseUnder" Nothing] [((G AnnVal),DP (0,-11))])
                                                            (HsVar 
                                                             (Unqual {OccName: q}))))))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:41-42 }
                                                        Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: &&}))) 
                                                       (PlaceHolder) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:44 }
                                                        Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: x}))))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:46-47 }
                                                      Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: /=}))) 
                                                     (PlaceHolder) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:49-56 }
                                                      Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:49-54 }
                                                        Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: negate}))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:56 }
                                                        Just (Ann (DP (0,0)) (ColDelta 35) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: l}))))))) 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:27-28 }
                                                    Just (Ann (DP (0,2)) (ColDelta 6) DP (1,6) [DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing,DComment (DP (1,-9),DP (1,-9)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Just" Nothing,DComment (DP (0,1),DP (0,3)) "l'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: &&}))) 
                                                   (PlaceHolder) 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:30-55 }
                                                    Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                                    (HsApp 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:30-32 }
                                                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: not}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:34-55 }
                                                      Just (Ann (DP (0,-44)) (ColDelta 13) DP (0,1) [DComment (DP (0,-3),DP (0,45)) "-- found unassigned literal, negate l', to watch" Nothing] [((G AnnOpenP),DP (0,-44)),((G AnnCloseP),DP (0,0))])
                                                      (HsPar 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:35-54 }
                                                        Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                                        (OpApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:35 }
                                                          Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: x}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:37-50 }
                                                          Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: isFalseUnder}))) 
                                                         (PlaceHolder) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:52-54 }
                                                          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: mFr})))))))))))))] 
                                              (EmptyLocalBinds))))] 
                                          [] 
                                          (PlaceHolder) 
                                          (FromSource)))))))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:58 }
                                    Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: c}))))) 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,12)-(371,39)
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:12-18 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (ConPatIn 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:12-15 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (Unqual {OccName: Just})) 
                                        (PrefixCon 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:17-18 }
                                           Just (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [((G AnnVal),DP (0,-3))])
                                           (VarPat 
                                            (Unqual {OccName: l'})))])))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,20)-(371,39)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,23)-(371,39)
                                           }
                                          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(370,14)-(371,39) Ref "delta-42"),DP (0,0))])
                                          (HsDo 
                                           (DoExpr) 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-56 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (BodyStmt 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-56 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (OpApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-19 }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: liftST}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:21 }
                                                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "alter" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: $}))) 
                                                (PlaceHolder) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:23-56 }
                                                 Just (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "annCl" Nothing] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:23-41 }
                                                   Just (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:23-32 }
                                                     Just (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-3))])
                                                     (HsVar 
                                                      (Unqual {OccName: writeSTRef}))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:34-41 }
                                                     Just (Ann (DP (0,-2)) (ColDelta 20) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing] [((G AnnVal),DP (0,-2))])
                                                     (HsVar 
                                                      (Unqual {OccName: watchRef}))))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:43-56 }
                                                   Just (Ann (DP (0,3)) (ColDelta 29) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "l'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (ExplicitTuple 
                                                    [
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:44 }
                                                      Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                                                      (Present 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:44 }
                                                        Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: q}))))),
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:47-55 }
                                                      Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
                                                      (Present 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:47-55 }
                                                        Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:47-52 }
                                                          Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: negate}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:54-55 }
                                                          Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: l'})))))))] 
                                                    (Boxed))))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (PlaceHolder))),
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-39 }
                                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                             (BodyStmt 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-39 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-27 }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-18 }
                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: alter}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:20-27 }
                                                   Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:21-26 }
                                                     Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                     (SectionL 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:21-25 }
                                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: annCl}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:26 }
                                                       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Exact {Name: :}))))))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:29-39 }
                                                 Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                 (HsPar 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:30-38 }
                                                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:30-35 }
                                                     Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: negate}))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:37-38 }
                                                     Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: l'}))))))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (PlaceHolder)))] 
                                           (PlaceHolder)))))] 
                                      (EmptyLocalBinds)))),
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,12)-(380,45)
                                     }
                                    Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,6),DP (0,45)) "-- all other lits false, clause is unit" Nothing] [])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:12-18 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (ConPatIn 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:12-18 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (Unqual {OccName: Nothing})) 
                                        (PrefixCon 
                                         [])))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,20)-(380,45)
                                         }
                                        Just (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,10)) "incNumImpl" Nothing] [((G AnnRarrow),DP (0,-4))])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,23)-(380,45)
                                           }
                                          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(374,14)-(380,45) Ref "delta-43"),DP (0,0))])
                                          (HsDo 
                                           (DoExpr) 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:374:14-23 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (BodyStmt 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:374:14-23 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: incNumImpl}))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (PlaceHolder))),
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-29 }
                                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-10),DP (0,-5)) "alter" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])
                                             (BodyStmt 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-29 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-27 }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-18 }
                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: alter}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:20-27 }
                                                   Just (Ann (DP (0,-6)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,7)) "isConsistent" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:21-26 }
                                                     Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                     (SectionL 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:21-25 }
                                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: annCl}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:26 }
                                                       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Exact {Name: :}))))))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:29 }
                                                 Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: l}))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (PlaceHolder))),
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14-65 }
                                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,7)) "enqueue" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-8)) "when" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "not" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "isConsistent" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                                             (BindStmt 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14-25 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (VarPat 
                                                (Unqual {OccName: isConsistent}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-65 }
                                               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-49 }
                                                 Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-38 }
                                                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-36 }
                                                     Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: enqueue}))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:38 }
                                                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: m}))))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:40-49 }
                                                   Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:41-48 }
                                                     Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:41-46 }
                                                       Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "do" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: negate}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:48 }
                                                       Just (Ann (DP (0,-25)) (ColDelta 34) DP (0,1) [DComment (DP (0,-4),DP (0,26)) "-- unit literal is conflicting" Nothing] [((G AnnVal),DP (0,-25))])
                                                       (HsVar 
                                                        (Unqual {OccName: q}))))))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:51-65 }
                                                 Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                 (HsPar 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:52-64 }
                                                   Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:52-55 }
                                                     Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: Just}))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:57-64 }
                                                     Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                     (ExplicitTuple 
                                                      [
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:58 }
                                                        Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])
                                                        (Present 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:58 }
                                                          Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: c}))))),
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:61-63 }
                                                        Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])
                                                        (Present 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:61-63 }
                                                          Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: cid})))))] 
                                                      (Boxed))))))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})))),
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,14)-(380,45)
                                              }
                                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                             (BodyStmt 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,14)-(380,45)
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (OpApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:14-36 }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:14-17 }
                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: when}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:19-36 }
                                                   Just (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "alter" Nothing] [((G AnnOpenP),DP (0,-3)),((AnnComment DComment (DP (0,-12),DP (0,-1)) "restClauses" Nothing),DP (0,-12)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:20-35 }
                                                     Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:20-22 }
                                                       Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: not}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:24-35 }
                                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: isConsistent}))))))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:38 }
                                                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "++" Nothing] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: $}))) 
                                                (PlaceHolder) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,40)-(380,45)
                                                  }
                                                 Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(378,17)-(380,45) Ref "delta-44"),DP (0,0))])
                                                 (HsDo 
                                                  (DoExpr) 
                                                  [
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-40 }
                                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                    (BodyStmt 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-40 }
                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-38 }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-21 }
                                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: alter}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:23-38 }
                                                          Just (Ann (DP (0,-4)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,5)) "clearQueue" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                                                          (HsPar 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:24-37 }
                                                            Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                            (SectionL 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:24-34 }
                                                              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: restClauses}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:36-37 }
                                                              Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: ++}))))))))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:40 }
                                                        Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: l}))))) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (PlaceHolder))),
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:379:17-26 }
                                                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                                    (BodyStmt 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:379:17-26 }
                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: clearQueue}))) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (PlaceHolder))),
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17-45 }
                                                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                                    (BodyStmt 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17-45 }
                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17-26 }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: throwError}))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:28-45 }
                                                        Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                        (ExplicitTuple 
                                                         [
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-36 }
                                                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                                           (Present 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-36 }
                                                             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                                             (HsApp 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-34 }
                                                               Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: negate}))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:36 }
                                                               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: q}))))))),
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:39 }
                                                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                                                           (Present 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:39 }
                                                             Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: c}))))),
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:42-44 }
                                                           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                                           (Present 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:42-44 }
                                                             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: cid})))))] 
                                                         (Boxed))))) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (PlaceHolder)))] 
                                                  (PlaceHolder))))) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (HsLit 
                                               (HsString "" {FastString: "noSyntaxExpr"})) 
                                              (PlaceHolder)))] 
                                           (PlaceHolder)))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:5-32 }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "_" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])
               (InlineSig 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:16-28 }
                 Just (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [DComment (DP (0,-10),DP (0,3)) "updateWatches" Nothing] [((G AnnVal),DP (0,-2))])
                 (Unqual {OccName: updateWatches})) 
                (InlinePragma "{-# INLINE" 
                 (Inline) 
                 (Nothing) 
                 (AlwaysActive) 
                 (FunLike))))])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1-66 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,79)) "-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict" Nothing,DComment (DP (1,1),DP (1,62)) "-- is found it is returned exactly as described for `bcpLit'." Nothing,DComment (DP (0,-61),DP (0,17)) "-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "bcp" Nothing,DComment (DP (0,-3),DP (0,58)) "-- is found it is returned exactly as described for `bcpLit'." Nothing,DComment (DP (0,-57),DP (0,-55)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1-3 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: bcp}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-66 }
       Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-66 }
         Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-20 }
           Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-18 }
             Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:20 }
             Just (Ann (DP (0,9)) (ColDelta 20) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "do" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:25-66 }
           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:25-34 }
             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:25-32 }
               Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:34 }
               Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:36-66 }
             Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:37-65 }
               Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:37-41 }
                 Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Maybe}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:43-65 }
                 Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsTupleTy 
                  (HsBoxedOrConstraintTuple) 
                  [
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:44-46 }
                    Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: Lit}))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:49-54 }
                    Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: Clause}))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:57-64 }
                    Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: ClauseId})))])))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:1-3 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: bcp})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:1-3 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: bcp})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:5 }
            Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "q" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,7)-(390,49)
              }
             Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,9)-(390,49)
                }
               Just (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,4)) "gets" Nothing] [((G AnnDo),DP (0,-3)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(386,3)-(390,49) Ref "delta-45"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:3-17 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "if" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:3 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: q}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:8-17 }
                    Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,7)) "Seq.null" Nothing] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:8-11 }
                      Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:13-17 }
                      Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: propQ}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,-2)) "q" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (1,1))])
                    (HsIf 
                     (Just 
                      (HsLit 
                       (HsString "" {FastString: "noSyntaxExpr"}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:6-15 }
                      Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "else" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:6-13 }
                        Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,-2))])
                        (HsVar 
                         (Qual {ModuleName: Seq} {OccName: null}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:15 }
                        Just (Ann (DP (0,4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: q}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:22-35 }
                      Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:22-27 }
                        Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: return}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:29-35 }
                        Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: Nothing}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(388,9)-(390,49)
                       }
                      Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(389,6)-(390,49) Ref "delta-46"),DP (0,0))])
                      (HsDo 
                       (DoExpr) 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:6-17 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "bcpLit" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                         (BindStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:6 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: p}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:11-17 }
                           Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: dequeue}))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-49 }
                         Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-4)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,6)) "maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "bcp" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-49 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-15 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-13 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-11 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: bcpLit}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:13 }
                                 Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: m}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:15 }
                               Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: p}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:17-19 }
                             Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: >>=}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:21-49 }
                             Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:21-33 }
                               Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:21-25 }
                                 Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: maybe}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:27-33 }
                                 Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:28-32 }
                                   Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:28-30 }
                                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: bcp}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:32 }
                                     Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: m}))))))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:35-49 }
                               Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:36-48 }
                                 Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:36-41 }
                                   Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: return}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:43 }
                                   Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: .}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:45-48 }
                                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: Just}))))))))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder)))] 
                       (PlaceHolder))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1-52 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (3,1),DP (3,17)) "-- *** Decisions" Nothing,DComment (DP (1,1),DP (1,17)) "-- *** Decisions" Nothing,DComment (DP (1,1),DP (1,77)) "-- | Find and return a decision variable.  A /decision variable/ must be (1)" Nothing,DComment (DP (1,1),DP (1,74)) "-- undefined under the assignment and (2) it or its negation occur in the" Nothing,DComment (DP (0,-73),DP (0,3)) "-- | Find and return a decision variable.  A /decision variable/ must be (1)" Nothing,DComment (DP (1,1),DP (1,12)) "-- formula." Nothing,DComment (DP (0,-11),DP (0,62)) "-- undefined under the assignment and (2) it or its negation occur in the" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,9)) "-- formula." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,72)) "-- Select a decision variable, if possible, and return it and the adjusted" Nothing,DComment (DP (1,1),DP (1,15)) "-- `VarOrder'." Nothing,DComment (DP (0,-14),DP (0,60)) "-- Select a decision variable, if possible, and return it and the adjusted" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "select" Nothing,DComment (DP (0,-6),DP (0,8)) "-- `VarOrder'." Nothing,DComment (DP (0,-7),DP (0,-5)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,15)) "FrozenVarOrder" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,4)) "{-# INLINE" Nothing),DP (0,-6)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1-6 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: select}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-52 }
       Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-52 }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-4)) "select" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,4)) "#-}" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-21 }
           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IAssignment}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:26-52 }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:26-39 }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FrozenVarOrder}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:44-52 }
             Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:44-48 }
               Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:50-52 }
               Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Var}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1-21 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:12-17 }
       Just (Ann (DP (0,-9)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-4)) "select" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,12)) "varOrderGet" Nothing] [((G AnnVal),DP (0,-9))])
       (Unqual {OccName: select})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-6 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: select})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-6 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: select})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:8-20 }
             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:10-20 }
               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: varOrderGet})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1-45 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "selectStatic" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-2)) "{-# INLINE" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,13)) "selectStatic" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1-12 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: selectStatic}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-45 }
       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-45 }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,0)) "#-}" Nothing),DP (0,-3)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-27 }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IAssignment}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:32-45 }
           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:32 }
             Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: a}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:37-45 }
             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:37-41 }
               Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:43-45 }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Var}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1-27 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "m" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "find" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:12-23 }
       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "selectStatic" Nothing] [((G AnnVal),DP (0,-1))])
       (Unqual {OccName: selectStatic})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isUndefUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "range" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "bounds" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-12 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: selectStatic})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-12 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: selectStatic})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:14 }
            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:16 }
            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (WildPat 
             (PlaceHolder)))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:18-63 }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:20-63 }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:20-42 }
                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:20-23 }
                   Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: find}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:25-42 }
                   Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsPar 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26-41 }
                     Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                     (SectionR 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26-39 }
                       Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: isUndefUnder}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:41 }
                       Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: m}))))))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:44-63 }
                 Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsPar 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-62 }
                   Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-58 }
                     Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-49 }
                       Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: range}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:51 }
                       Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: .}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:53-58 }
                       Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: bounds}))))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:60 }
                     Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: $}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:62 }
                     Just (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: m})))))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1-68 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,76)) "-- | Assign given decision variable.  Records the current assignment before" Nothing,DComment (DP (1,1),DP (1,62)) "-- deciding on the decision variable indexing the assignment." Nothing,DComment (DP (0,-61),DP (0,14)) "-- | Assign given decision variable.  Records the current assignment before" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "decide" Nothing,DComment (DP (0,-6),DP (0,55)) "-- deciding on the decision variable indexing the assignment." Nothing,DComment (DP (0,-54),DP (0,-52)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1-6 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: decide}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-68 }
       Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-68 }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-23 }
           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-21 }
             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:23 }
             Just (Ann (DP (0,7)) (ColDelta 23) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:28-68 }
           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:28-30 }
             Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Var}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:35-68 }
             Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:35-44 }
               Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:35-42 }
                 Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: FunMonad}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:44 }
                 Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: s}))))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:46-68 }
               Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:47-67 }
                 Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:47-51 }
                   Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Maybe}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:53-67 }
                   Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsParTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:54-66 }
                     Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:54-64 }
                       Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: MAssignment}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:66 }
                       Just (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: s}))))))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:1-6 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: decide})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:1-6 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: decide})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:8 }
            Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ld" Nothing] [((G AnnVal),DP (0,-1))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:10 }
            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: v})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,12)-(420,17)
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,14)-(420,17)
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(414,3)-(420,17) Ref "delta-47"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:3-22 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])
                  (LetStmt 
                   (HsValBinds 
                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-8 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: ld})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-8 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: ld})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:10-22 }
                               Just (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:12-22 }
                                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "dl" Nothing] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:12 }
                                   Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: L}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:14-22 }
                                   Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                   (HsPar 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:15-21 }
                                     Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:15-19 }
                                       Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: unVar}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:21 }
                                       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: v})))))))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        []))]} 
                     [])))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-20 }
                  Just (Ann (DP (0,-43)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,43)) "--   trace (\"decide \" ++ show ld) $ return ()" Nothing] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-13 }
                    Just (Ann (DP (0,-43)) (ColDelta 0) DP (1,0) [] [((G AnnOpenP),DP (0,-43)),((G AnnCloseP),DP (0,0))])
                    (ParPat 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:4-12 }
                      Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                      (ConPatIn 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:4-5 }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: SC})) 
                       (RecCon 
                        (HsRecFields 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:7-11 }
                           Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnEqual),DP (0,0))])
                           (HsRecField 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:7-8 }
                             Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: dl})) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:10-11 }
                             Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: dl}))) 
                            (False)))] 
                         (Nothing))))))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:18-20 }
                    Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: get}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:417:3-17 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,-2),DP (1,43)) "--   trace (\"decide \" ++ show ld) $ return ()" Nothing,DComment (DP (0,-43),DP (0,-43)) "" Nothing,DComment (DP (0,0),DP (0,15)) "incNumDecisions" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:417:3-17 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: incNumDecisions}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-32 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-15),DP (0,-9)) "modify" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "ld" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-32 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-8 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: modify}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:10 }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "enqueue" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 }
                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,1)) "m" Nothing] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 Ref "delta-48"),DP (0,0))])
                      (HsLam 
                       (MG 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 }
                          Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "ld" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:13 }
                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: s})))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18-32 }
                              Just (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing] [])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18-32 }
                                Just (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                (RecordUpd 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18 }
                                  Just (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-5))])
                                  (HsVar 
                                   (Unqual {OccName: s}))) 
                                 (HsRecFields 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:21-30 }
                                    Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                    (HsRecField 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:21-22 }
                                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (Unqual {OccName: dl})) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:26-30 }
                                      Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:26-27 }
                                        Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: ld}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:28 }
                                        Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Exact {Name: :}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:29-30 }
                                        Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: dl}))))) 
                                     (False)))] 
                                  (Nothing)) 
                                 [] 
                                 [] 
                                 []))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-22 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-22 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-14 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-11 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-9 }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: enqueue}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:11 }
                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: m}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:13-14 }
                        Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,4)) "Just" Nothing] [((G AnnVal),DP (0,-3))])
                        (HsVar 
                         (Unqual {OccName: ld}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:16-22 }
                      Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: Nothing}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-17 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-6),DP (0,-5)) "m" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-17 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-8 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:10 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:12-17 }
                      Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:12-15 }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: Just}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:17 }
                        Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: m}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,1)-(432,46)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (3,1),DP (3,20)) "-- *** Backtracking" Nothing,DComment (DP (1,1),DP (1,20)) "-- *** Backtracking" Nothing,DComment (DP (1,1),DP (1,77)) "-- | Non-chronological backtracking.  The current returns the learned clause" Nothing,DComment (DP (1,1),DP (1,76)) "-- implied by the first unique implication point cut of the conflict graph." Nothing,DComment (DP (0,-75),DP (0,1)) "-- | Non-chronological backtracking.  The current returns the learned clause" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "backJump" Nothing,DComment (DP (0,-8),DP (0,67)) "-- implied by the first unique implication point cut of the conflict graph." Nothing,DComment (DP (0,-66),DP (0,-64)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:1-8 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: backJump}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,13)-(432,46)
        }
       Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,13)-(432,46)
          }
         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnRarrow),DP (1,10))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:13-25 }
           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:13-23 }
             Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:25 }
             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(429,13)-(432,46)
            }
           Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((AnnComment DComment (DP (1,13),DP (1,27)) "-- clause @c@." Nothing),DP (1,13)),((AnnComment DComment (DP (0,-14),DP (0,47)) "-- ^ @(l, c)@, where attempting to assign @l@ conflicted with" Nothing),DP (0,-14)),((AnnComment DComment (DP (1,10),DP (1,12)) "->" Nothing),DP (1,10)),((AnnComment DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,6)) "-- clause @c@." Nothing),DP (0,-8)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "s" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Maybe" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "MAssignment" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,8)) "backJump" Nothing),DP (0,0)),((G AnnRarrow),DP (3,10))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:13-35 }
             Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:14-16 }
                Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,60)) "-- ^ @(l, c)@, where attempting to assign @l@ conflicted with" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Lit}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:19-24 }
                Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Clause}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:27-34 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ClauseId})))])) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:13-46 }
             Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:13-22 }
               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:13-20 }
                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: FunMonad}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:22 }
                 Just (Ann (DP (0,-5)) (ColDelta 22) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "@" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,10)) "_conflict" Nothing] [((G AnnVal),DP (0,-5))])
                 (HsTyVar 
                  (Unqual {OccName: s}))))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:24-46 }
               Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:25-45 }
                 Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:25-29 }
                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Maybe}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:31-45 }
                   Just (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "," Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "SC" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                   (HsParTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:32-44 }
                     Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:32-42 }
                       Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: MAssignment}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:44 }
                       Just (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: s}))))))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "reason" Nothing,DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,0),DP (0,7)) "_reason" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:1-8 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: backJump})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:1-8 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: backJump})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:10 }
            Just (Ann (DP (0,-4)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,9)) "_theTrail" Nothing] [((G AnnVal),DP (0,-4))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:12-30 }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnAt),DP (0,0))])
            (AsPat 
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:12 }
              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: c})) 
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:14-30 }
              Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
              (TuplePat 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:15 }
                 Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])
                 (WildPat 
                  (PlaceHolder))),
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:18-26 }
                 Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-5)) "gets" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,6)) "trail" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
                 (VarPat 
                  (Unqual {OccName: _conflict}))),
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:29 }
                 Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (WildPat 
                  (PlaceHolder)))] 
               (Boxed) 
               []))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,32)-(463,19)
              }
             Just (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,34)-(463,19)
                }
               Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:34-36 }
                 Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: get}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:38-40 }
                 Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: >>=}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19) Ref "delta-49"),DP (0,0))])
                 (HsLam 
                  (MG 
                   [
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19)
                      }
                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                     (Match 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:43-69 }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (ParPat 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:44-68 }
                          Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                          (ConPatIn 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:44-45 }
                            Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: SC})) 
                           (RecCon 
                            (HsRecFields 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:47-51 }
                               Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,0)),((G AnnComma),DP (0,0))])
                               (HsRecField 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:47-48 }
                                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (Unqual {OccName: dl})) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:50-51 }
                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: dl}))) 
                                (False))),
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:54-67 }
                               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnEqual),DP (0,0))])
                               (HsRecField 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:54-59 }
                                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (Unqual {OccName: reason})) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:61-67 }
                                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: _reason}))) 
                                (False)))] 
                             (Nothing)))))))] 
                      (Nothing) 
                      (GRHSs 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,74)-(463,19)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                         (GRHS 
                          [] 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,74)-(463,19)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(434,5)-(463,19) Ref "delta-50"),DP (0,0))])
                           (HsDo 
                            (DoExpr) 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:5-27 }
                              Just (Ann (DP (0,-57)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:5-13 }
                                Just (Ann (DP (0,-57)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-57))])
                                (VarPat 
                                 (Unqual {OccName: _theTrail}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:18-27 }
                                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:18-21 }
                                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: gets}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:23-27 }
                                  Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: trail}))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:5-15 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (6,0) [DComment (DP (1,-4),DP (1,51)) "--     trace (\"trail = \" ++ show _theTrail) $ return ()" Nothing,DComment (DP (0,-55),DP (0,6)) "--     trace (\"********** conflict = \" ++ show c) $ return ()" Nothing,DComment (DP (1,-4),DP (1,51)) "--     trace (\"trail = \" ++ show _theTrail) $ return ()" Nothing,DComment (DP (0,-55),DP (0,22)) "--     trace (\"dlits (\" ++ show (length dl) ++ \") = \" ++ show dl) $ return ()" Nothing,DComment (DP (1,-4),DP (1,45)) "--          ++ \"reason: \" ++ Map.showTree _reason" Nothing,DComment (DP (0,-49),DP (0,28)) "--     trace (\"dlits (\" ++ show (length dl) ++ \") = \" ++ show dl) $ return ()" Nothing,DComment (DP (1,-4),DP (1,12)) "--           ) (" Nothing,DComment (DP (0,-16),DP (0,33)) "--          ++ \"reason: \" ++ Map.showTree _reason" Nothing,DComment (DP (1,-4),DP (1,12)) "--           ) (" Nothing,DComment (DP (0,-12),DP (0,-12)) "" Nothing,DComment (DP (0,0),DP (0,11)) "incNumConfl" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,17)) "incNumConflTotal" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:5-15 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-3)) "levelArr" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),(AnnSemiSep,DP (0,1))])
                                (HsVar 
                                 (Unqual {OccName: incNumConfl}))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:19-34 }
                              Just (Ann (DP (0,-14)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,15)) "FrozenLevelArray" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:19-34 }
                                Just (Ann (DP (0,-14)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-14))])
                                (HsVar 
                                 (Unqual {OccName: incNumConflTotal}))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,5)-(442,70)
                               }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:5-32 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnDcolon),DP (0,1))])
                                (SigPatIn 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:5-12 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (VarPat 
                                   (Unqual {OccName: levelArr}))) 
                                 (HsWB 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:17-32 }
                                   Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsTyVar 
                                    (Unqual {OccName: FrozenLevelArray}))) 
                                  (PlaceHolder) 
                                  (PlaceHolder) 
                                  (PlaceHolder)))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,37)-(442,70)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,40)-(442,70) Ref "delta-51"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:40-47 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "liftST" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                                   (BindStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:40 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (VarPat 
                                      (Unqual {OccName: s}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:45-47 }
                                     Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: get}))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-70 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "$" Nothing,DComment (DP (0,1),DP (0,13)) "unsafeFreeze" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "level" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-35),DP (1,-35)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "learntCl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "learntClId" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "newLevel" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-70 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (1,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-45 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftST}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:47 }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:49-70 }
                                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:49-60 }
                                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: unsafeFreeze}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:62-70 }
                                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:63-69 }
                                           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:63-67 }
                                             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: level}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:69 }
                                             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: s}))))))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(443,5)-(445,36)
                               }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:5-36 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "m" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                (TuplePat 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:6-13 }
                                   Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "do" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "mFr" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: learntCl}))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:16-25 }
                                   Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-8)) "<-" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: learntClId}))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:28-35 }
                                   Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: newLevel})))] 
                                 (Boxed) 
                                 [])) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(444,9)-(445,36)
                                 }
                                Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(444,12)-(445,36) Ref "delta-52"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:12-35 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,4)) "analyse" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])
                                   (BindStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:12-14 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (VarPat 
                                      (Unqual {OccName: mFr}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:19-35 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:19-33 }
                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: unsafeFreezeAss}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:35 }
                                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-14),DP (0,-11)) "mFr" Nothing,DComment (DP (0,1),DP (0,9)) "levelArr" Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: m}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-36 }
                                   Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (1,-7),DP (1,-7)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-36 }
                                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-34 }
                                       Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-31 }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-22 }
                                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-18 }
                                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])
                                             (HsVar 
                                              (Unqual {OccName: analyse}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:20-22 }
                                             Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: mFr}))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:24-31 }
                                           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: levelArr}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:33-34 }
                                         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: dl}))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:36 }
                                       Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: c}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5-12 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "let" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: s}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:10-12 }
                                Just (Ann (DP (0,-17)) (ColDelta 5) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,18)) "numDecisionsToUndo" Nothing] [((G AnnVal),DP (0,-17))])
                                (HsVar 
                                 (Unqual {OccName: get}))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(447,5)-(449,82)
                               }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,15),DP (0,16)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,1),DP (0,2)) "-" Nothing,DComment (DP (0,1),DP (0,9)) "newLevel" Nothing] [((G AnnLet),DP (0,0))])
                              (LetStmt 
                               (HsValBinds 
                                (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (FunBind 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-26 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (Unqual {OccName: numDecisionsToUndo})) 
                                    (False) 
                                    (MG 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-18),DP (0,-15)) "dl'" Nothing),DP (0,-18)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "drop" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "numDecisionsToUndo" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                                       (Match 
                                        (Just 
                                         ((,) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-26 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (Unqual {OccName: numDecisionsToUndo})) 
                                          (False))) 
                                        [] 
                                        (Nothing) 
                                        (GRHSs 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:28-49 }
                                           Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
                                           (GRHS 
                                            [] 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-49 }
                                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                                             (OpApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-38 }
                                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-35 }
                                                 Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: length}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:37-38 }
                                                 Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: dl}))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:40 }
                                               Just (Ann (DP (0,-1)) (ColDelta 31) DP (0,1) [DComment (DP (0,0),DP (0,2)) "dl" Nothing] [((G AnnVal),DP (0,-1))])
                                               (HsVar 
                                                (Unqual {OccName: -}))) 
                                              (PlaceHolder) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:42-49 }
                                               Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: newLevel})))))))] 
                                         (EmptyLocalBinds))))] 
                                     [] 
                                     (PlaceHolder) 
                                     (FromSource)) 
                                    (WpHole) 
                                    (PlaceHolder) 
                                    [])),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                   (FunBind 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-11 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (Unqual {OccName: dl'})) 
                                    (False) 
                                    (MG 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,7)) "undoneLits" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])
                                       (Match 
                                        (Just 
                                         ((,) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-11 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (Unqual {OccName: dl'})) 
                                          (False))) 
                                        [] 
                                        (Nothing) 
                                        (GRHSs 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:13-40 }
                                           Just (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])
                                           (GRHS 
                                            [] 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:15-40 }
                                             Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:15-37 }
                                               Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:15-18 }
                                                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: drop}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:20-37 }
                                                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: numDecisionsToUndo}))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:39-40 }
                                               Just (Ann (DP (0,-1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-18),DP (0,-17)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "takeWhile" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,3)) "lit" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [((G AnnVal),DP (0,-1))])
                                               (HsVar 
                                                (Unqual {OccName: dl})))))))] 
                                         (EmptyLocalBinds))))] 
                                     [] 
                                     (PlaceHolder) 
                                     (FromSource)) 
                                    (WpHole) 
                                    (PlaceHolder) 
                                    [])),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-82 }
                                   Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,8)) "levelArr" Nothing,DComment (DP (0,1),DP (0,2)) "!" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,4)) "lit" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ">" Nothing,DComment (DP (0,1),DP (0,9)) "newLevel" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "trail" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "forM_" Nothing] [])
                                   (FunBind 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-18 }
                                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])
                                     (Unqual {OccName: undoneLits})) 
                                    (False) 
                                    (MG 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-82 }
                                       Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-8),DP (0,2)) "undoneLits" Nothing),DP (0,-8)),((G AnnEqual),DP (0,1))])
                                       (Match 
                                        (Just 
                                         ((,) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-18 }
                                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])
                                           (Unqual {OccName: undoneLits})) 
                                          (False))) 
                                        [] 
                                        (Nothing) 
                                        (GRHSs 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:20-82 }
                                           Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
                                           (GRHS 
                                            [] 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:22-82 }
                                             Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:22-72 }
                                               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:22-30 }
                                                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: takeWhile}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:32-72 }
                                                 Just (Ann (DP (0,-6)) (ColDelta 23) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "undoOne" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])
                                                 (HsPar 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 }
                                                   Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 Ref "delta-53"),DP (0,0))])
                                                   (HsLam 
                                                    (MG 
                                                     [
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 }
                                                       Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                                       (Match 
                                                        (Nothing) 
                                                        [
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:34-36 }
                                                          Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (VarPat 
                                                           (Unqual {OccName: lit})))] 
                                                        (Nothing) 
                                                        (GRHSs 
                                                         [
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-71 }
                                                           Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                                           (GRHS 
                                                            [] 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-71 }
                                                             Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [])
                                                             (OpApp 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-60 }
                                                               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [])
                                                               (OpApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-48 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: levelArr}))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:50 }
                                                                 Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-7),DP (0,5)) "-- backtrack" Nothing] [((G AnnVal),DP (0,-4))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: !}))) 
                                                                (PlaceHolder) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:52-60 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                 (HsPar 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:53-59 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                                   (HsApp 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:53-55 }
                                                                     Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: var}))) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:57-59 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: lit}))))))))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:62 }
                                                               Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: >}))) 
                                                              (PlaceHolder) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:64-71 }
                                                               Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: newLevel})))))))] 
                                                         (EmptyLocalBinds))))] 
                                                     [] 
                                                     (PlaceHolder) 
                                                     (FromSource)))))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:74-82 }
                                               Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (HsPar 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:75-81 }
                                                 Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:75-79 }
                                                   Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: trail}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:81 }
                                                   Just (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: s})))))))))))] 
                                         (EmptyLocalBinds))))] 
                                     [] 
                                     (PlaceHolder) 
                                     (FromSource)) 
                                    (WpHole) 
                                    (PlaceHolder) 
                                    []))]} 
                                 [])))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-40 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-40 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-20 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-9 }
                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: forM_}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:11-20 }
                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,-2)) "mFr" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: undoneLits}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:22 }
                                  Just (Ann (DP (0,-5)) (ColDelta 17) DP (0,1) [DComment (DP (0,-9),DP (0,6)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-5))])
                                  (HsVar 
                                   (Unqual {OccName: $}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:24-40 }
                                  Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:24-28 }
                                    Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: const}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:30-40 }
                                    Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "m" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                    (HsPar 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:31-39 }
                                      Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:31-37 }
                                        Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: undoOne}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:39 }
                                        Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: m}))))))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5-28 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,13)) "-- backtrack" Nothing] [((AnnComment DComment (DP (0,-3),DP (0,3)) "assert" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5-7 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: mFr}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:12-28 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:12-26 }
                                  Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: unsafeFreezeAss}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:28 }
                                  Just (Ann (DP (0,-3)) (ColDelta 23) DP (0,1) [DComment (DP (0,-15),DP (0,-14)) "(" Nothing,DComment (DP (0,0),DP (0,18)) "numDecisionsToUndo" Nothing] [((G AnnVal),DP (0,-3))])
                                  (HsVar 
                                   (Unqual {OccName: m}))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,34)
                               }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,4)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,34)
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,11)
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (OpApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(454,40)
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                    (OpApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(453,33)
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:5-35 }
                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                        (HsApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:5-10 }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: assert}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:12-35 }
                                          Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-5),DP (0,1)) "assert" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                          (HsPar 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:13-34 }
                                            Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                            (OpApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:13-30 }
                                              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: numDecisionsToUndo}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:32 }
                                              Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-18),DP (0,-17)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "null" Nothing,DComment (DP (0,1),DP (0,9)) "learntCl" Nothing] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: >}))) 
                                             (PlaceHolder) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:34 }
                                              Just (Ann (DP (0,0)) (ColDelta 29) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                              (HsOverLit {HsOverLit:0})))))))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:37 }
                                        Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: $}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:6-33 }
                                        Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
                                        (HsApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:6-11 }
                                          Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: assert}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:13-33 }
                                          Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                          (HsPar 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:14-32 }
                                            Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:14-16 }
                                              Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: not}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:18-32 }
                                              Just (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-3),DP (0,5)) "learntCl" Nothing] [((G AnnOpenP),DP (0,-4)),((AnnComment DComment (DP (0,-8),DP (0,3)) "isUnitUnder" Nothing),DP (0,-8)),((G AnnCloseP),DP (0,0))])
                                              (HsPar 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:19-31 }
                                                Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                                (HsApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:19-22 }
                                                  Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: null}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:24-31 }
                                                  Just (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: learntCl}))))))))))))))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:35 }
                                      Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: $}))) 
                                     (PlaceHolder) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:6-40 }
                                      Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:6-11 }
                                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: assert}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:13-40 }
                                        Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                        (HsPar 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:14-39 }
                                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                          (OpApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:14-21 }
                                            Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: learntCl}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:23-35 }
                                            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-9)) "dl" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,2),DP (0,3)) "=" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,4)) "dl'" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: isUnitUnder}))) 
                                           (PlaceHolder) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:37-39 }
                                            Just (Ann (DP (0,-16)) (ColDelta 32) DP (0,1) [DComment (DP (0,0),DP (0,17)) "-- undo decisions" Nothing] [((G AnnVal),DP (0,-16))])
                                            (HsVar 
                                             (Unqual {OccName: mFr}))))))))))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:42 }
                                    Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: $}))) 
                                   (PlaceHolder) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:6-11 }
                                    Just (Ann (DP (0,-2)) (ColDelta 1) DP (1,1) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing] [((G AnnVal),DP (0,-2))])
                                    (HsVar 
                                     (Unqual {OccName: modify}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:13 }
                                  Just (Ann (DP (0,-14)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "<-" Nothing,DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-14))])
                                  (HsVar 
                                   (Unqual {OccName: $}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 }
                                  Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 Ref "delta-54"),DP (0,0))])
                                  (HsLam 
                                   (MG 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 }
                                      Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                      (Match 
                                       (Nothing) 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:16 }
                                         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (VarPat 
                                          (Unqual {OccName: s})))] 
                                       (Nothing) 
                                       (GRHSs 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21-34 }
                                          Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                          (GRHS 
                                           [] 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21-34 }
                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                            (RecordUpd 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21 }
                                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: s}))) 
                                             (HsRecFields 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:24-32 }
                                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,2))])
                                                (HsRecField 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:24-25 }
                                                  Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (Unqual {OccName: dl})) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:30-32 }
                                                  Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: dl'}))) 
                                                 (False)))] 
                                              (Nothing)) 
                                             [] 
                                             [] 
                                             []))))] 
                                        (EmptyLocalBinds))))] 
                                    [] 
                                    (PlaceHolder) 
                                    (FromSource)))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5-28 }
                              Just (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,18)) "-- undo decisions" Nothing,DComment (DP (1,-4),DP (1,56)) "--     trace (\"new mFr: \" ++ showAssignment mFr) $ return ()" Nothing] [((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5-7 }
                                Just (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-56))])
                                (VarPat 
                                 (Unqual {OccName: mFr}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:12-28 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:12-26 }
                                  Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: unsafeFreezeAss}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:28 }
                                  Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: m}))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-45 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (4,0) [DComment (DP (1,-4),DP (1,56)) "--     trace (\"new mFr: \" ++ showAssignment mFr) $ return ()" Nothing,DComment (DP (0,-56),DP (0,17)) "-- TODO once I'm sure this works I don't need getUnit, I can just use the" Nothing,DComment (DP (1,0),DP (1,18)) "-- uip of the cut." Nothing,DComment (DP (0,-18),DP (0,55)) "-- TODO once I'm sure this works I don't need getUnit, I can just use the" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "watchClause" Nothing,DComment (DP (0,-11),DP (0,7)) "-- uip of the cut." Nothing,DComment (DP (0,-6),DP (0,-5)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "learntCl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "learntClId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-45 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-40 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-17 }
                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-15 }
                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: watchClause}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:17 }
                                      Just (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-11),DP (0,-4)) "enqueue" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "getUnit" Nothing] [((G AnnVal),DP (0,-6))])
                                      (HsVar 
                                       (Unqual {OccName: m}))))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:19-40 }
                                    Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-4)) "mFr" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                    (ExplicitTuple 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:20-27 }
                                       Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:20-27 }
                                         Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,4)) "learntCl" Nothing),DP (0,-4)),((G AnnComma),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: learntCl}))))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:30-39 }
                                       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:30-39 }
                                         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: learntClId})))))] 
                                     (Boxed))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:42-45 }
                                  Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: True}))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-66 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "learntCl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "learntClId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-66 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-36 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-13 }
                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-11 }
                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: enqueue}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:13 }
                                      Just (Ann (DP (0,-18)) (ColDelta 8) DP (0,1) [DComment (DP (0,-5),DP (0,19)) "-- learntCl is asserting" Nothing] [((G AnnVal),DP (0,-18))])
                                      (HsVar 
                                       (Unqual {OccName: m}))))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:15-36 }
                                    Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                    (HsPar 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:16-35 }
                                      Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:16-31 }
                                        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                        (HsApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:16-22 }
                                          Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: getUnit}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:24-31 }
                                          Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: learntCl}))))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:33-35 }
                                        Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: mFr}))))))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:38-66 }
                                  Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:39-65 }
                                    Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:39-42 }
                                      Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: Just}))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:44-65 }
                                      Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                      (ExplicitTuple 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:45-52 }
                                         Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                                         (Present 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:45-52 }
                                           Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: learntCl}))))),
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:55-64 }
                                         Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [])
                                         (Present 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:55-64 }
                                           Just (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: learntClId})))))] 
                                       (Boxed))))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-19 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,-4),DP (0,20)) "-- learntCl is asserting" Nothing,DComment (DP (0,-19),DP (0,-18)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-19 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-10 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: return}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:12 }
                                  Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: $}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:14-19 }
                                  Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:14-17 }
                                    Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: Just}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:19 }
                                    Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: m}))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder)))] 
                            (PlaceHolder)))))] 
                       (EmptyLocalBinds))))] 
                   [] 
                   (PlaceHolder) 
                   (FromSource))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1-46 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (3,1),DP (3,72)) "-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and" Nothing,DComment (DP (1,1),DP (1,72)) "-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and" Nothing,DComment (DP (0,-71),DP (0,3)) "-- executing @cmd@.  The traditional @do-while@ semantics, in other words." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "doWhile" Nothing,DComment (DP (0,-7),DP (0,67)) "-- executing @cmd@.  The traditional @do-while@ semantics, in other words." Nothing,DComment (DP (0,-66),DP (0,-64)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1-7 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: doWhile}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-46 }
       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "body" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20 }
         Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,-1))])
         [
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20 }
           Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) "do" Nothing),DP (0,0)),((G AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:13-19 }
             Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:13-17 }
               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Monad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:19 }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [DComment (DP (0,-4),DP (0,0)) "test" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m})))))))]) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25-46 }
         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25-28 }
           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25 }
             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: m}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:27-28 }
             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33-46 }
           Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33-38 }
             Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33 }
               Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:35-38 }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Bool}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:43-46 }
             Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:43 }
               Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:45-46 }
               Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsTupleTy 
                (HsBoxedOrConstraintTuple) 
                [])))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:1-7 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: doWhile})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:1-7 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: doWhile})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:9-12 }
            Just (Ann (DP (0,2)) (ColDelta 9) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,4)) "body" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: body}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:14-17 }
            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: test})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,19)-(473,41)
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,21)-(473,41)
                }
               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(471,3)-(473,41) Ref "delta-55"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:471:3-6 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:471:3-6 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: body}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3-24 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,10)) "shouldContinue" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "test" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-10)) "when" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,15)) "shouldContinue" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3-16 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: shouldContinue}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:21-24 }
                    Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: test}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-41 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,8)) "doWhile" Nothing,DComment (DP (0,1),DP (0,5)) "body" Nothing,DComment (DP (0,1),DP (0,5)) "test" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-41 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-21 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-6 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: when}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:8-21 }
                        Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: shouldContinue}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:23 }
                      Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:25-41 }
                      Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:25-36 }
                        Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:25-31 }
                          Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: doWhile}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:33-36 }
                          Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: body}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:38-41 }
                        Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: test}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,1)-(480,45)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,76)) "-- | Analyse a the conflict graph and produce a learned clause.  We use the" Nothing,DComment (DP (1,1),DP (1,40)) "-- First UIP cut of the conflict graph." Nothing,DComment (DP (0,-39),DP (0,36)) "-- | Analyse a the conflict graph and produce a learned clause.  We use the" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,37)) "-- First UIP cut of the conflict graph." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,69)) "-- May undo part of the trail, but not past the current decision level." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "analyse" Nothing,DComment (DP (0,-7),DP (0,64)) "-- May undo part of the trail, but not past the current decision level." Nothing,DComment (DP (0,-63),DP (0,-61)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,17)) "FrozenLevelArray" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:1-7 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: analyse}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,12)-(480,45)
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,12)-(480,45)
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-3)) "FunMonad" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:12-22 }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IAssignment}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,27)-(480,45)
            }
           Just (Ann (DP (0,-3)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,4)) "Clause" Nothing] [((AnnComment DComment (DP (0,-13),DP (0,-12)) "," Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "Int" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:27-42 }
             Just (Ann (DP (0,-3)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,-3))])
             (HsTyVar 
              (Unqual {OccName: FrozenLevelArray}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,47)-(480,45)
              }
             Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ")" Nothing] [((G AnnRarrow),DP (0,1))])
             (HsFunTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:47-51 }
               Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
               (HsListTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:48-50 }
                 Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Lit}))))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,56)-(480,45)
                }
               Just (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnRarrow),DP (1,9))])
               (HsFunTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:56-78 }
                 Just (Ann (DP (0,0)) (ColDelta 56) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsTupleTy 
                  (HsBoxedOrConstraintTuple) 
                  [
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:57-59 }
                    Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: Lit}))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:62-67 }
                    Just (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: Clause}))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:70-77 }
                    Just (Ann (DP (0,1)) (ColDelta 70) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: ClauseId})))])) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:12-45 }
                 Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:12-21 }
                   Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:12-19 }
                     Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: FunMonad}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:21 }
                     Just (Ann (DP (0,-33)) (ColDelta 21) DP (0,1) [DComment (DP (0,-8),DP (0,34)) "-- ^ learned clause and new decision level" Nothing] [((G AnnVal),DP (0,-33))])
                     (HsTyVar 
                      (Unqual {OccName: s}))))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:23-45 }
                   Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsTupleTy 
                    (HsBoxedOrConstraintTuple) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:24-29 }
                      Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: Clause}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:32-39 }
                      Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: ClauseId}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:42-44 }
                      Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: Int})))])))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "analyse" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,0),DP (0,42)) "-- ^ learned clause and new decision level" Nothing,DComment (DP (0,-41),DP (0,-33)) "levelArr" Nothing,DComment (DP (0,1),DP (0,6)) "dlits" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "cLit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "cClause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "cCid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:1-7 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: analyse})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:1-7 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: analyse})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:9-11 }
            Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,-1))])
            (VarPat 
             (Unqual {OccName: mFr}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:13-20 }
            Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "get" Nothing] [((G AnnVal),DP (0,-1))])
            (VarPat 
             (Unqual {OccName: levelArr}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:22-26 }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: dlits}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:28-48 }
            Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (TuplePat 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:29-32 }
               Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
               (VarPat 
                (Unqual {OccName: cLit}))),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:35-41 }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
               (VarPat 
                (Unqual {OccName: cClause}))),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:44-47 }
               Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (VarPat 
                (Unqual {OccName: cCid})))] 
             (Boxed) 
             []))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,50)-(573,81)
              }
             Just (Ann (DP (0,-1)) (ColDelta 50) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,52)-(500,12)
                }
               Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(483,5)-(500,12) Ref "delta-56"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:5-13 }
                  Just (Ann (DP (0,-66)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:5-6 }
                    Just (Ann (DP (0,-66)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-66))])
                    (VarPat 
                     (Unqual {OccName: st}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:11-13 }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: get}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5-35 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (14,0) [DComment (DP (1,-4),DP (1,63)) "--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut" Nothing,DComment (DP (0,-67),DP (0,3)) "--     trace (\"mFr: \" ++ showAssignment mFr) $ assert True (return ())" Nothing,DComment (DP (1,-4),DP (1,63)) "--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut" Nothing,DComment (DP (0,-67),DP (0,3)) "--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)" Nothing,DComment (DP (1,-4),DP (1,42)) "--                       (firstUIP conflGraph)" Nothing,DComment (DP (0,-46),DP (0,24)) "--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)" Nothing,DComment (DP (1,-4),DP (1,42)) "--                       (firstUIP conflGraph)" Nothing,DComment (DP (0,-46),DP (0,23)) "--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c" Nothing,DComment (DP (1,-4),DP (1,40)) "--                      :: Gr CGNodeAnnot ()" Nothing,DComment (DP (0,-44),DP (0,25)) "--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c" Nothing,DComment (DP (1,-4),DP (1,40)) "--                      :: Gr CGNodeAnnot ()" Nothing,DComment (DP (0,-44),DP (0,26)) "--     trace (\"graphviz graph:\\n\" ++ graphviz' conflGraph) $ return ()" Nothing,DComment (DP (1,-4),DP (1,50)) "--     trace (\"cut: \" ++ show firstUIPCut) $ return ()" Nothing,DComment (DP (0,-54),DP (0,16)) "--     trace (\"graphviz graph:\\n\" ++ graphviz' conflGraph) $ return ()" Nothing,DComment (DP (1,-4),DP (1,50)) "--     trace (\"cut: \" ++ show firstUIPCut) $ return ()" Nothing,DComment (DP (0,-54),DP (0,5)) "--     trace (\"topSort: \" ++ show topSortNodes) $ return ()" Nothing,DComment (DP (1,-4),DP (1,55)) "--     trace (\"topSort: \" ++ show topSortNodes) $ return ()" Nothing,DComment (DP (0,-59),DP (0,23)) "--     trace (\"dlits (\" ++ show (length dlits) ++ \"): \" ++ show dlits) $ return ()" Nothing,DComment (DP (1,-4),DP (1,78)) "--     trace (\"dlits (\" ++ show (length dlits) ++ \"): \" ++ show dlits) $ return ()" Nothing,DComment (DP (0,-82),DP (0,18)) "--     trace (\"learnt: \" ++ show (map (\\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()" Nothing,DComment (DP (1,-4),DP (1,67)) "--     outputConflict \"conflict.dot\" (graphviz' conflGraph) $ return ()" Nothing,DComment (DP (0,-71),DP (0,29)) "--     trace (\"learnt: \" ++ show (map (\\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()" Nothing,DComment (DP (1,-4),DP (1,32)) "--     return $ (learntCl, newLevel)" Nothing,DComment (DP (0,-36),DP (0,35)) "--     outputConflict \"conflict.dot\" (graphviz' conflGraph) $ return ()" Nothing,DComment (DP (1,-4),DP (1,32)) "--     return $ (learntCl, newLevel)" Nothing,DComment (DP (0,-32),DP (0,-32)) "" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,14)) "unsafeThawAss" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: m}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:10-35 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:10-15 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:17 }
                      Just (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,5)) "firstUIPBFS" Nothing] [((G AnnVal),DP (0,-4))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:19-35 }
                      Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:19-31 }
                        Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: unsafeThawAss}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:33-35 }
                        Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: mFr}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5-55 }
                  Just (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,-2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "cnf" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "reason" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,56)) "--     trace (\"firstUIPBFS learned: \" ++ show a) $ return ()" Nothing] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5 }
                    Just (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-56))])
                    (VarPat 
                     (Unqual {OccName: a}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-55 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-43 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-22 }
                        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-20 }
                          Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: firstUIPBFS}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:22 }
                          Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: m}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:24-43 }
                        Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-42 }
                          Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-37 }
                            Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-31 }
                              Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: numVars}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:33 }
                              Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: .}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:35-37 }
                              Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: cnf}))))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:39 }
                            Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: $}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:41-42 }
                            Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: st}))))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:45-55 }
                      Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:46-54 }
                        Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:46-51 }
                          Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: reason}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:53-54 }
                          Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: st}))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5-12 }
                  Just (Ann (DP (0,-3)) (ColDelta 0) DP (2,0) [DComment (DP (1,-4),DP (1,56)) "--     trace (\"firstUIPBFS learned: \" ++ show a) $ return ()" Nothing,DComment (DP (0,-56),DP (0,-56)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (1,-2),DP (1,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5-12 }
                    Just (Ann (DP (0,-3)) (ColDelta 0) DP (2,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5-10 }
                      Just (Ann (DP (0,-3)) (ColDelta 0) DP (2,0) [] [((G AnnVal),DP (0,-3))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:12 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: a}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:5-15 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: firstUIPBFS})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "liftST" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:5-15 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: firstUIPBFS})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:17 }
                      Just (Ann (DP (0,-5)) (ColDelta 12) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,15)) "resolveSourcesR" Nothing] [((G AnnVal),DP (0,-5))])
                      (VarPat 
                       (Unqual {OccName: m}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:19-23 }
                      Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: nVars}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:25-33 }
                      Just (Ann (DP (0,0)) (ColDelta 20) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: reasonMap})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,35)-(563,56)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 30) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,38)-(563,56)
                          }
                         Just (Ann (DP (0,-5)) (ColDelta 33) DP (0,2) [DComment (DP (0,-1),DP (0,7)) "newSTRef" Nothing] [((G AnnDo),DP (0,-5)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(507,7)-(563,56) Ref "delta-57"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:7-45 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-15),DP (0,-12)) "let" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,16)) "addResolveSource" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:7-21 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: resolveSourcesR}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:26-45 }
                              Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:26-31 }
                                Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:33 }
                                Just (Ann (DP (0,-3)) (ColDelta 26) DP (0,1) [DComment (DP (0,-4),DP (0,4)) "clauseId" Nothing] [((G AnnVal),DP (0,-3))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:35-45 }
                                Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:35-42 }
                                  Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: newSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:44-45 }
                                  Just (Ann (DP (0,6)) (ColDelta 37) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "=" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                  (HsVar 
                                   (Exact {Name: []}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,7)-(509,62)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,17)) "-- trace sources" Nothing] [((G AnnLet),DP (0,0))])
                            (LetStmt 
                             (HsValBinds 
                              (ValBindsIn {Bag(Located (HsBind RdrName)): 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62)
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                 (FunBind 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:11-26 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (Unqual {OccName: addResolveSource})) 
                                  (False) 
                                  (MG 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,15)) "resolveSourcesR" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
                                     (Match 
                                      (Just 
                                       ((,) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:11-26 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (Unqual {OccName: addResolveSource})) 
                                        (False))) 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:28-35 }
                                        Just (Ann (DP (0,-7)) (ColDelta 17) DP (0,1) [DComment (DP (0,-12),DP (0,-6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-7))])
                                        (VarPat 
                                         (Unqual {OccName: clauseId})))] 
                                      (Nothing) 
                                      (GRHSs 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,37)-(509,62)
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])
                                         (GRHS 
                                          [] 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:15-62 }
                                           Just (Ann (DP (0,-22)) (ColDelta 4) DP (1,4) [DComment (DP (0,14),DP (0,15)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "clauseId" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,26)) "-- Literals we should process." Nothing] [])
                                           (OpApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:15-20 }
                                             Just (Ann (DP (0,-22)) (ColDelta 4) DP (1,4) [] [((G AnnVal),DP (0,-22))])
                                             (HsVar 
                                              (Unqual {OccName: liftST}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:22 }
                                             Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: $}))) 
                                            (PlaceHolder) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:24-62 }
                                             Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:24-50 }
                                               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:24-34 }
                                                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: modifySTRef}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:36-50 }
                                                 Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: resolveSourcesR}))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:52-62 }
                                               Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (HsPar 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:53-61 }
                                                 Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                                 (SectionL 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:53-60 }
                                                   Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: clauseId}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:61 }
                                                   Just (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Exact {Name: :})))))))))))))] 
                                       (EmptyLocalBinds))))] 
                                   [] 
                                   (PlaceHolder) 
                                   (FromSource)) 
                                  (WpHole) 
                                  (PlaceHolder) 
                                  []))]} 
                               [])))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7-59 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "seenArr" Nothing,DComment (DP (0,-7),DP (0,23)) "-- Literals we should process." Nothing,DComment (DP (0,-21),DP (0,-19)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "newSTUArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,6)) "nVars" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,1)) "counterR" Nothing),DP (0,-7)),((G AnnLarrow),DP (0,2))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7-13 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: seenArr}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:19-59 }
                              Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:19-24 }
                                Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:26 }
                                Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:28-59 }
                                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:28-53 }
                                  Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:28-38 }
                                    Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: newSTUArray}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:40-53 }
                                    Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-11),DP (0,-3)) "newSTRef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "0" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,33)) "-- Number of unprocessed current-level" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                    (ExplicitTuple 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41-43 }
                                       Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41-43 }
                                         Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "Int" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41 }
                                           Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "::" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: V}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:43 }
                                           Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsOverLit {HsOverLit:1})))))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:46-52 }
                                       Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
                                       (Present 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:46-52 }
                                         Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:46 }
                                           Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: V}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:48-52 }
                                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: nVars})))))))] 
                                     (Boxed))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:55-59 }
                                  Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: False}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7-46 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7-14 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: counterR}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:19-46 }
                              Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:19-24 }
                                Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:26 }
                                Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:28-46 }
                                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:28-35 }
                                  Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: newSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:37-46 }
                                  Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:38-45 }
                                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnDcolon),DP (0,1))])
                                    (ExprWithTySig 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:38 }
                                      Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsOverLit {HsOverLit:0})) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:43-45 }
                                      Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
                                      (HsForAllTy 
                                       (Implicit) 
                                       (Nothing) 
                                       (HsQTvs 
                                        [] 
                                        []) 
                                       ({ <no location info> }
                                        Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
                                        []) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:43-45 }
                                        Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsTyVar 
                                         (Unqual {OccName: Int}))))) 
                                     (PlaceHolder))))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7-34 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (0,1),DP (0,23)) "-- lits we know about." Nothing,DComment (DP (0,-22),DP (0,16)) "-- Number of unprocessed current-level" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,2)) "pR" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,9)) "newSTRef" Nothing,DComment (DP (0,1),DP (0,5)) "cLit" Nothing,DComment (DP (0,1),DP (0,45)) "-- Invariant: literal from current dec. lev." Nothing,DComment (DP (0,-32),DP (0,-10)) "-- lits we know about." Nothing] [((AnnComment DComment (DP (0,-2),DP (0,10)) "out_learnedR" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7-8 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: pR}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:13-34 }
                              Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:13-18 }
                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:20 }
                                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:22-34 }
                                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:22-29 }
                                  Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: newSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:31-34 }
                                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: cLit}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7-42 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,5)) "newSTRef" Nothing,DComment (DP (0,-4),DP (0,40)) "-- Invariant: literal from current dec. lev." Nothing,DComment (DP (0,-39),DP (0,-38)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7-18 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: out_learnedR}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:23-42 }
                              Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:23-28 }
                                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:30 }
                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:32-42 }
                                Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:32-39 }
                                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: newSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:41-42 }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                  (HsVar 
                                   (Exact {Name: []}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7-41 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-9)) "let" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "reasonL" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7-18 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: out_btlevelR}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:23-41 }
                              Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:23-28 }
                                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:30 }
                                Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "if" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:32-41 }
                                Just (Ann (DP (0,-3)) (ColDelta 25) DP (0,1) [DComment (DP (0,0),DP (0,4)) "cLit" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:32-39 }
                                  Just (Ann (DP (0,-3)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-3))])
                                  (HsVar 
                                   (Unqual {OccName: newSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:41 }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [DComment (DP (0,-4),DP (0,0)) "then" Nothing] [((G AnnVal),DP (0,0))])
                                  (HsOverLit {HsOverLit:0})))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,7)-(522,47)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,7)) "cClause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "cCid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnLet),DP (0,0))])
                            (LetStmt 
                             (HsValBinds 
                              (ValBindsIn {Bag(Located (HsBind RdrName)): 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47)
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                 (FunBind 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:11-17 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (Unqual {OccName: reasonL})) 
                                  (False) 
                                  (MG 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                     (Match 
                                      (Just 
                                       ((,) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:11-17 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (Unqual {OccName: reasonL})) 
                                        (False))) 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:19 }
                                        Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: l})))] 
                                      (Nothing) 
                                      (GRHSs 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,21)-(522,47)
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
                                         (GRHS 
                                          [] 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,23)-(522,47)
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (1,12))])
                                           (HsIf 
                                            (Just 
                                             (HsLit 
                                              (HsString "" {FastString: "noSyntaxExpr"}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:26-34 }
                                             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "else" Nothing] [])
                                             (OpApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:26 }
                                               Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                               (HsVar 
                                                (Unqual {OccName: l}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:28-29 }
                                               Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: ==}))) 
                                              (PlaceHolder) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:31-34 }
                                               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: cLit}))))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:41-55 }
                                             Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                             (ExplicitTuple 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:42-48 }
                                                Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                                                (Present 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:42-48 }
                                                  Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: cClause}))))),
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:51-54 }
                                                Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])
                                                (Present 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:51-54 }
                                                  Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: cCid})))))] 
                                              (Boxed))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,25)-(522,47)
                                              }
                                             Just (Ann (DP (1,14)) (ColDelta 14) DP (1,14) [DComment (DP (0,-2),DP (0,1)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "rid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,29)-(521,49) NotNeeded),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "l" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "rid" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnIn),DP (1,0))])
                                             (HsLet 
                                              (HsValBinds 
                                               (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                                [
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,29)-(521,49)
                                                   }
                                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                                  (PatBind 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:29-36 }
                                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,16)) "Map.findWithDefault" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                                    (TuplePat 
                                                     [
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:30 }
                                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                       (VarPat 
                                                        (Unqual {OccName: r}))),
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:33-35 }
                                                       Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (VarPat 
                                                        (Unqual {OccName: rid})))] 
                                                     (Boxed) 
                                                     [])) 
                                                   (GRHSs 
                                                    [
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,38)-(521,49)
                                                       }
                                                      Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                                                      (GRHS 
                                                       [] 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(520,33)-(521,49)
                                                         }
                                                        Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,14),DP (0,15)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "error" Nothing,DComment (DP (0,1),DP (0,19)) "\"analyse: reasonL\"" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(520,33)-(521,39)
                                                           }
                                                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:33-78 }
                                                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:33-51 }
                                                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Qual {ModuleName: Map} {OccName: findWithDefault}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:53-78 }
                                                              Just (Ann (DP (0,3)) (ColDelta 24) DP (0,1) [DComment (DP (0,-19),DP (0,-18)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,10)) "reasonMap" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                              (HsPar 
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:54-77 }
                                                                Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                                                (HsApp 
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:54-58 }
                                                                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                  (HsVar 
                                                                   (Unqual {OccName: error}))) 
                                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:60-77 }
                                                                  Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                  (HsLit 
                                                                   (HsString "\"analyse: reasonL\"" {FastString: "analyse: reasonL"}))))))))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:33-39 }
                                                            Just (Ann (DP (0,-6)) (ColDelta 4) DP (1,4) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,2)) "in" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,7)) "without" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])
                                                            (HsPar 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:34-38 }
                                                              Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                                                              (HsApp 
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:34-36 }
                                                                Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                (HsVar 
                                                                 (Unqual {OccName: var}))) 
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:38 }
                                                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                (HsVar 
                                                                 (Unqual {OccName: l}))))))))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:41-49 }
                                                          Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: reasonMap})))))))] 
                                                    (EmptyLocalBinds)) 
                                                   (PlaceHolder) 
                                                   (PlaceHolder) 
                                                   ((,) 
                                                    [] 
                                                    [])))]} 
                                                [])) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:28-47 }
                                               Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (ExplicitTuple 
                                                [
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29-41 }
                                                  Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                                  (Present 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29-41 }
                                                    Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                                    (OpApp 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29 }
                                                      Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: r}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:31-39 }
                                                      Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: without}))) 
                                                     (PlaceHolder) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:41 }
                                                      Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: l}))))))),
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:44-46 }
                                                  Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                                                  (Present 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:44-46 }
                                                    Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: rid})))))] 
                                                (Boxed)))))))))] 
                                       (EmptyLocalBinds))))] 
                                   [] 
                                   (PlaceHolder) 
                                   (FromSource)) 
                                  (WpHole) 
                                  (PlaceHolder) 
                                  []))]} 
                               [])))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(525,7)-(554,54)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (2,0),DP (2,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,0),DP (0,7)) "doWhile" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,9)) "counterR" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(525,7)-(554,54)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:7-61 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (HsPar 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8-60 }
                                  Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                                  (SectionR 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8-16 }
                                    Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-5)) "do" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "p" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: doWhile}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:18-60 }
                                    Just (Ann (DP (0,-5)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [((G AnnOpenP),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                    (HsPar 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:19-59 }
                                      Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:19-29 }
                                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                        (HsApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:19-23 }
                                          Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: liftM}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:25-29 }
                                          Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                          (HsPar 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:26-28 }
                                            Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                                            (SectionR 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:26 }
                                              Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: >}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:28 }
                                              Just (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "readSTRef" Nothing] [((G AnnVal),DP (0,-7))])
                                              (HsOverLit {HsOverLit:0})))))))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:31-59 }
                                        Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                        (HsPar 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:32-58 }
                                          Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                          (OpApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:32-37 }
                                            Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: liftST}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:39 }
                                            Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "pR" Nothing] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: $}))) 
                                           (PlaceHolder) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:41-58 }
                                            Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:41-49 }
                                              Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: readSTRef}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:51-58 }
                                              Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: counterR}))))))))))))))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:63 }
                                Just (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,9)-(554,54)
                                 }
                                Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,12)-(554,54) Ref "delta-58"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:12-37 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "let" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                                   (BindStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:12 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (VarPat 
                                      (Unqual {OccName: p}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:17-37 }
                                     Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:17-22 }
                                       Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftST}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:24 }
                                       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,2)) "p_reason" Nothing] [((G AnnVal),DP (0,-1))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:26-37 }
                                       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:26-34 }
                                         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: readSTRef}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:36-37 }
                                         Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [DComment (DP (0,-8),DP (0,-3)) "p_rid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: pR}))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:12-44 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,5)) "reasonL" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing] [((G AnnLet),DP (0,0))])
                                   (LetStmt 
                                    (HsValBinds 
                                     (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-44 }
                                        Just (Ann (DP (0,-9)) (ColDelta 0) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                        (PatBind 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-32 }
                                          Just (Ann (DP (0,-9)) (ColDelta 0) DP (0,1) [] [((G AnnOpenP),DP (0,-9)),((G AnnCloseP),DP (0,0))])
                                          (TuplePat 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:17-24 }
                                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                             (VarPat 
                                              (Unqual {OccName: p_reason}))),
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:27-31 }
                                             Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,5)) "p_rid" Nothing] [((G AnnVal),DP (0,-4))])
                                             (VarPat 
                                              (Unqual {OccName: p_rid})))] 
                                           (Boxed) 
                                           [])) 
                                         (GRHSs 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:34-44 }
                                            Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
                                            (GRHS 
                                             [] 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:36-44 }
                                              Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:36-42 }
                                                Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: reasonL}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:44 }
                                                Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: p})))))))] 
                                          (EmptyLocalBinds)) 
                                         (PlaceHolder) 
                                         (PlaceHolder) 
                                         ((,) 
                                          [] 
                                          [])))]} 
                                      [])))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-30 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-30 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-24 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: traceClauseId}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:26-30 }
                                       Just (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-13),DP (0,3)) "addResolveSource" Nothing] [((G AnnVal),DP (0,-2))])
                                       (HsVar 
                                        (Unqual {OccName: p_rid}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-33 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,3)) "p_rid" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-33 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-27 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: addResolveSource}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:29-33 }
                                       Just (Ann (DP (0,-3)) (ColDelta 17) DP (0,1) [DComment (DP (0,-16),DP (0,-11)) "forM_" Nothing,DComment (DP (0,1),DP (0,9)) "p_reason" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "bump" Nothing] [((G AnnVal),DP (0,-3))])
                                       (HsVar 
                                        (Unqual {OccName: p_rid}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-38 }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "." Nothing,DComment (DP (0,1),DP (0,4)) "var" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-38 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-25 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-16 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: forM_}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:18-25 }
                                         Just (Ann (DP (0,-20)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,21)) "-- For each unseen reason," Nothing] [((G AnnVal),DP (0,-20))])
                                         (HsVar 
                                          (Unqual {OccName: p_reason}))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:27-38 }
                                       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:28-37 }
                                         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                         (OpApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:28-31 }
                                           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: bump}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:33 }
                                           Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: .}))) 
                                          (PlaceHolder) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:35-37 }
                                           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: var}))))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,12)-(543,33)
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (4,0) [DComment (DP (1,0),DP (1,26)) "-- For each unseen reason," Nothing,DComment (DP (0,-26),DP (0,15)) "-- > from the current level, bump counter" Nothing,DComment (DP (1,0),DP (1,41)) "-- > from the current level, bump counter" Nothing,DComment (DP (0,-41),DP (0,3)) "-- > from lower level, put in learned clause" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,-6),DP (0,38)) "-- > from lower level, put in learned clause" Nothing,DComment (DP (0,-37),DP (0,-36)) "." Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,9)) "p_reason" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "q" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,12)-(543,33)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:12-34 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:12-17 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: liftST}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:19 }
                                         Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,5)) "seenq" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: .}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:21-34 }
                                         Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:21-25 }
                                           Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                           (HsVar 
                                            (Unqual {OccName: forM_}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:27-34 }
                                           Just (Ann (DP (0,-5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "readArray" Nothing] [((G AnnVal),DP (0,-5))])
                                           (HsVar 
                                            (Unqual {OccName: p_reason}))))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:36 }
                                       Just (Ann (DP (0,-4)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "seenArr" Nothing] [((G AnnVal),DP (0,-4))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33)
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33) Ref "delta-59"),DP (0,0))])
                                       (HsLam 
                                        (MG 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33)
                                            }
                                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                           (Match 
                                            (Nothing) 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:39 }
                                              Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (VarPat 
                                               (Unqual {OccName: q})))] 
                                            (Nothing) 
                                            (GRHSs 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,44)-(543,33)
                                                }
                                               Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing] [])
                                               (GRHS 
                                                [] 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,44)-(543,33)
                                                  }
                                                 Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(535,14)-(543,33) Ref "delta-60"),DP (0,0))])
                                                 (HsDo 
                                                  (DoExpr) 
                                                  [
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:14-47 }
                                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "when" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                                                    (BindStmt 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:14-18 }
                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (VarPat 
                                                       (Unqual {OccName: seenq}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:23-47 }
                                                      Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "not" Nothing] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:23-39 }
                                                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:23-31 }
                                                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: readArray}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:33-39 }
                                                          Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [DComment (DP (0,-8),DP (0,-3)) "seenq" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: seenArr}))))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:41-47 }
                                                        Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                        (HsPar 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:42-46 }
                                                          Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:42-44 }
                                                            Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: var}))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:46 }
                                                            Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: q}))))))))) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})))),
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(536,14)-(543,33)
                                                     }
                                                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                                    (BodyStmt 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(536,14)-(543,33)
                                                       }
                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                      (OpApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:14-29 }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:14-17 }
                                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                          (HsVar 
                                                           (Unqual {OccName: when}))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:19-29 }
                                                          Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                          (HsPar 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:20-28 }
                                                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:20-22 }
                                                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,-1)) "" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,10)) "writeArray" Nothing),DP (0,0)),((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: not}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:24-28 }
                                                              Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: seenq}))))))))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:31 }
                                                        Just (Ann (DP (0,-6)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,7)) "seenArr" Nothing] [((G AnnVal),DP (0,-6))])
                                                        (HsVar 
                                                         (Unqual {OccName: $}))) 
                                                       (PlaceHolder) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(537,16)-(543,33)
                                                         }
                                                        Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,6),DP (0,7)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(537,19)-(543,33) Ref "delta-61"),DP (0,0))])
                                                        (HsDo 
                                                         (DoExpr) 
                                                         [
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-49 }
                                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                           (BodyStmt 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-49 }
                                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                             (HsApp 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-44 }
                                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                               (HsApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-36 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-28 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: writeArray}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:30-36 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "if" Nothing,DComment (DP (0,1),DP (0,7)) "levelL" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: seenArr}))))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:38-44 }
                                                                 Just (Ann (DP (0,-8)) (ColDelta 19) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "==" Nothing,DComment (DP (0,1),DP (0,13)) "currentLevel" Nothing] [((G AnnOpenP),DP (0,-8)),((G AnnCloseP),DP (0,0))])
                                                                 (HsPar 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:39-43 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                                   (HsApp 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:39-41 }
                                                                     Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: var}))) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:43 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: q}))))))))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:46-49 }
                                                               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: True}))))) 
                                                            (HsLit 
                                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                                            (HsLit 
                                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                                            (PlaceHolder))),
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33)
                                                            }
                                                           Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                                           (BodyStmt 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33)
                                                              }
                                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-1)) "counterR" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "+" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,1)),((G AnnElse),DP (1,1))])
                                                             (HsIf 
                                                              (Just 
                                                               (HsLit 
                                                                (HsString "" {FastString: "noSyntaxExpr"}))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-45 }
                                                               Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "then" Nothing] [])
                                                               (OpApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-29 }
                                                                 Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-27 }
                                                                   Just (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,-2))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: levelL}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:29 }
                                                                   Just (Ann (DP (0,-7)) (ColDelta 10) DP (0,1) [DComment (DP (0,-3),DP (0,8)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-7))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: q}))))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:31-32 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: ==}))) 
                                                                (PlaceHolder) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:34-45 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: currentLevel}))))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:25-50 }
                                                               Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                               (HsApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:25-44 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:25-35 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: modifySTRef}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:37-44 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-11),DP (0,-9)) "if" Nothing,DComment (DP (0,1),DP (0,7)) "levelL" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: counterR}))))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:46-50 }
                                                                 Just (Ann (DP (0,6)) (ColDelta 27) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                 (HsPar 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:47-49 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                                                   (SectionR 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:47 }
                                                                     Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: +}))) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:49 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsOverLit {HsOverLit:1})))))))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(540,25)-(543,33)
                                                                }
                                                               Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "out_learnedR" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "q" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ":" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,1)),((AnnComment DComment (DP (1,-7),DP (1,27)) "-- Select next literal to look at:" Nothing),DP (1,-7)),((G AnnElse),DP (1,1))])
                                                               (HsIf 
                                                                (Just 
                                                                 (HsLit 
                                                                  (HsString "" {FastString: "noSyntaxExpr"}))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-39 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                                                 (OpApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-35 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                                                   (HsApp 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-33 }
                                                                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: levelL}))) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:35 }
                                                                     Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,11)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-4))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: q}))))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:37 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: >}))) 
                                                                  (PlaceHolder) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:39 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                   (HsOverLit {HsOverLit:0})))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(541,25)-(542,68)
                                                                  }
                                                                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(541,28)-(542,68) Ref "delta-62"),DP (0,0))])
                                                                 (HsDo 
                                                                  (DoExpr) 
                                                                  [
                                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-56 }
                                                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                                    (BodyStmt 
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-56 }
                                                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                                      (HsApp 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-51 }
                                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                                        (HsApp 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-38 }
                                                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: modifySTRef}))) 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:40-51 }
                                                                          Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: out_learnedR}))))) 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:53-56 }
                                                                        Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "max" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                                                        (HsPar 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:54-55 }
                                                                          Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                                                          (SectionL 
                                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:54 }
                                                                            Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                            (HsVar 
                                                                             (Unqual {OccName: q}))) 
                                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:55 }
                                                                            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                            (HsVar 
                                                                             (Exact {Name: :}))))))))) 
                                                                     (HsLit 
                                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                     (HsLit 
                                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                     (PlaceHolder))),
                                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-68 }
                                                                    Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "levelL" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-8),DP (1,-8)) "" Nothing,DComment (DP (0,0),DP (0,4)) "else" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])
                                                                    (BodyStmt 
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-68 }
                                                                      Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                                                      (OpApp 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-51 }
                                                                        Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                                                        (HsApp 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-38 }
                                                                          Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: modifySTRef}))) 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:40-51 }
                                                                          Just (Ann (DP (0,6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: out_btlevelR}))))) 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:53 }
                                                                        Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                        (HsVar 
                                                                         (Unqual {OccName: $}))) 
                                                                       (PlaceHolder) 
                                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:55-68 }
                                                                        Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                                                                        (HsApp 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:55-57 }
                                                                          Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: max}))) 
                                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:59-68 }
                                                                          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                          (HsPar 
                                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:60-67 }
                                                                            Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                                                            (HsApp 
                                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:60-65 }
                                                                              Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                              (HsVar 
                                                                               (Unqual {OccName: levelL}))) 
                                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:67 }
                                                                              Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                              (HsVar 
                                                                               (Unqual {OccName: q}))))))))))) 
                                                                     (HsLit 
                                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                     (HsLit 
                                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                     (PlaceHolder)))] 
                                                                  (PlaceHolder))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:25-33 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:25-30 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: return}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:32-33 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                   (HsVar 
                                                                    (Exact {Name: ()}))))))))) 
                                                            (HsLit 
                                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                                            (HsLit 
                                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                                            (PlaceHolder)))] 
                                                         (PlaceHolder))))) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (HsLit 
                                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                                     (PlaceHolder)))] 
                                                  (PlaceHolder)))))] 
                                             (EmptyLocalBinds))))] 
                                         [] 
                                         (PlaceHolder) 
                                         (FromSource)))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(550,22)
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,33)) "-- Select next literal to look at:" Nothing,DComment (DP (0,-33),DP (0,-32)) "`" Nothing,DComment (DP (0,0),DP (0,7)) "doWhile" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,3)) "pR" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,10)) "readArray" Nothing,DComment (DP (0,1),DP (0,8)) "seenArr" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "var" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(550,22)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(546,41)
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,13)-(546,40)
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                                         (SectionR 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:13-21 }
                                           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: doWhile}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,23)-(546,40)
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,2)) "trail" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,24)-(546,39)
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                             (OpApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,24)-(546,33)
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                               (OpApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:24-72 }
                                                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:24-29 }
                                                   Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: liftST}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:31-72 }
                                                   Just (Ann (DP (0,-3)) (ColDelta 19) DP (0,1) [DComment (DP (0,-6),DP (0,-3)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-71 }
                                                     Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                     (OpApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-65 }
                                                       Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                       (OpApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-43 }
                                                         Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-40 }
                                                           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: readSTRef}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:42-43 }
                                                           Just (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "." Nothing,DComment (DP (0,1),DP (0,4)) "not" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: pR}))))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:45-47 }
                                                         Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: >>=}))) 
                                                        (PlaceHolder) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:49-65 }
                                                         Just (Ann (DP (0,2)) (ColDelta 37) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "do" Nothing] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:49-57 }
                                                           Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: readArray}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:59-65 }
                                                           Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: seenArr}))))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:67 }
                                                       Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: .}))) 
                                                      (PlaceHolder) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:69-71 }
                                                       Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: var}))))))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:24-26 }
                                                 Just (Ann (DP (0,1)) (ColDelta 12) DP (1,12) [DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "head" Nothing] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: >>=}))) 
                                                (PlaceHolder) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:28-33 }
                                                 Just (Ann (DP (0,-2)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [((G AnnVal),DP (0,-2))])
                                                 (HsVar 
                                                  (Unqual {OccName: return}))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:35 }
                                               Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing] [((G AnnVal),DP (0,-1))])
                                               (HsVar 
                                                (Unqual {OccName: .}))) 
                                              (PlaceHolder) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:37-39 }
                                               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: not}))))))))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:43 }
                                       Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(546,45)-(550,22)
                                        }
                                       Just (Ann (DP (0,-34)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,35)) "-- a dec. var. only if the counter =" Nothing] [((G AnnDo),DP (0,-34)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(547,14)-(550,22) Ref "delta-63"),DP (0,0))])
                                       (HsDo 
                                        (DoExpr) 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:14-41 }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                                          (BindStmt 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:14 }
                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: p}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:19-41 }
                                            Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                                            (OpApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:19-22 }
                                              Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: head}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:24-30 }
                                              Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: liftM}))) 
                                             (PlaceHolder) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:32-41 }
                                              Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:32-35 }
                                                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: gets}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:37-41 }
                                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: trail}))))))) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})))),
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-37 }
                                          Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (0,1),DP (0,32)) "-- 1, i.e., loop terminates now" Nothing,DComment (DP (0,-31),DP (0,5)) "-- a dec. var. only if the counter =" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "writeSTRef" Nothing,DComment (DP (0,1),DP (0,3)) "pR" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,5),DP (0,36)) "-- 1, i.e., loop terminates now" Nothing] [])
                                          (BodyStmt 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-37 }
                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                            (OpApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-19 }
                                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: liftST}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:21 }
                                              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "undoOne" Nothing] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: $}))) 
                                             (PlaceHolder) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:23-37 }
                                              Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,1)) "m" Nothing] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:23-35 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [])
                                                (HsApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:23-32 }
                                                  Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: writeSTRef}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:34-35 }
                                                  Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: pR}))))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:37 }
                                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: p}))))))) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (PlaceHolder))),
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14-22 }
                                          Just (Ann (DP (0,-61)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,61)) "-- Invariant states p is from current level, so when we're done" Nothing] [])
                                          (BodyStmt 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14-22 }
                                            Just (Ann (DP (0,-61)) (ColDelta 0) DP (1,0) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14-20 }
                                              Just (Ann (DP (0,-61)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-61))])
                                              (HsVar 
                                               (Unqual {OccName: undoOne}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:22 }
                                              Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: m}))))) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (HsLit 
                                            (HsString "" {FastString: "noSyntaxExpr"})) 
                                           (PlaceHolder)))] 
                                        (PlaceHolder))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-54 }
                                   Just (Ann (DP (0,1)) (ColDelta 0) DP (4,0) [DComment (DP (1,0),DP (1,59)) "-- with it, we've thrown away one lit. from counting toward" Nothing,DComment (DP (0,-59),DP (0,4)) "-- Invariant states p is from current level, so when we're done" Nothing,DComment (DP (1,0),DP (1,11)) "-- counter." Nothing,DComment (DP (0,-11),DP (0,48)) "-- with it, we've thrown away one lit. from counting toward" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,-6),DP (0,5)) "-- counter." Nothing,DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "modifySTRef" Nothing,DComment (DP (0,1),DP (0,9)) "counterR" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,2)) "-" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-5),DP (1,-5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-54 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-17 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftST}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:19 }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:21-54 }
                                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:21-40 }
                                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:21-31 }
                                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: modifySTRef}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:33-40 }
                                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,-11),DP (0,-2)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,3)) "pR" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: counterR}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:42-54 }
                                         Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 }
                                           Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 Ref "delta-64"),DP (0,0))])
                                           (HsLam 
                                            (MG 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 }
                                               Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                               (Match 
                                                (Nothing) 
                                                [
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:44 }
                                                  Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (VarPat 
                                                   (Unqual {OccName: c})))] 
                                                (Nothing) 
                                                (GRHSs 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49-53 }
                                                   Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                   (GRHS 
                                                    [] 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49-53 }
                                                     Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                     (OpApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49 }
                                                       Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: c}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:51 }
                                                       Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: -}))) 
                                                      (PlaceHolder) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:53 }
                                                       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsOverLit {HsOverLit:1}))))))] 
                                                 (EmptyLocalBinds))))] 
                                             [] 
                                             (PlaceHolder) 
                                             (FromSource)))))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7-32 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "liftST" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: p}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:12-32 }
                              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:12-17 }
                                Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:19 }
                                Just (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-8))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:21-32 }
                                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:21-29 }
                                  Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: readSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:31-32 }
                                  Just (Ann (DP (0,-9)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,10)) "out_learnedR" Nothing] [((G AnnVal),DP (0,-9))])
                                  (HsVar 
                                   (Unqual {OccName: pR}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-51 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,8),DP (0,9)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-51 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:14 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "bump" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:16-51 }
                                Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "var" Nothing] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:16-39 }
                                  Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:16-26 }
                                    Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                    (HsVar 
                                     (Unqual {OccName: modifySTRef}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:28-39 }
                                    Just (Ann (DP (0,7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: out_learnedR}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:41-51 }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:42-50 }
                                    Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
                                    (SectionL 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:42-49 }
                                      Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:42-47 }
                                        Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: negate}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:49 }
                                        Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: p}))))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:50 }
                                      Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Exact {Name: :}))))))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-20 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-20 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-16 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-10 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: bump}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:12 }
                                  Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,7)) "out_learned" Nothing] [((G AnnVal),DP (0,-6))])
                                  (HsVar 
                                   (Unqual {OccName: .}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:14-16 }
                                  Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: var}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:18 }
                                Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:20 }
                                Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnVal),DP (0,-1))])
                                (HsVar 
                                 (Unqual {OccName: p}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7-52 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,13)) "out_learnedR" Nothing] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7-17 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: out_learned}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:22-52 }
                              Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:22-27 }
                                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:29 }
                                Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:31-52 }
                                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:31-39 }
                                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: readSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:41-52 }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: out_learnedR}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7-52 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-11),DP (0,4)) "learnedClauseId" Nothing),DP (0,-11)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7-17 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: out_btlevel}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:22-52 }
                              Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:22-27 }
                                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:29 }
                                Just (Ann (DP (0,-8)) (ColDelta 22) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "nextTraceId" Nothing] [((G AnnVal),DP (0,-8))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:31-52 }
                                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:31-39 }
                                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: readSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:41-52 }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: out_btlevelR}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7-36 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-15),DP (0,5)) "storeResolvedSources" Nothing),DP (0,-15)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7-21 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: learnedClauseId}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:26-36 }
                              Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: nextTraceId}))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-58 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-9),DP (0,6)) "resolveSourcesR" Nothing,DComment (DP (0,1),DP (0,16)) "learnedClauseId" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-58 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-42 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-26 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: storeResolvedSources}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:28-42 }
                                  Just (Ann (DP (0,-8)) (ColDelta 21) DP (0,1) [DComment (DP (0,-20),DP (0,-7)) "traceClauseId" Nothing,DComment (DP (0,1),DP (0,16)) "learnedClauseId" Nothing] [((G AnnVal),DP (0,-8))])
                                  (HsVar 
                                   (Unqual {OccName: resolveSourcesR}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:44-58 }
                                Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: learnedClauseId}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-35 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-35 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-19 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: traceClauseId}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:21-35 }
                                Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-13),DP (0,-7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "out_learned" Nothing] [((G AnnVal),DP (0,-5))])
                                (HsVar 
                                 (Unqual {OccName: learnedClauseId}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7-56 }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-10),DP (0,-9)) "," Nothing,DComment (DP (0,1),DP (0,16)) "learnedClauseId" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,12)) "out_btlevel" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7-56 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7-12 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: return}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:14-56 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (ExplicitTuple 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:15-25 }
                                   Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                   (Present 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:15-25 }
                                     Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: out_learned}))))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:28-42 }
                                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                                   (Present 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:28-42 }
                                     Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: learnedClauseId}))))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:45-55 }
                                   Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])
                                   (Present 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:45-55 }
                                     Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: out_btlevel})))))] 
                                 (Boxed))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31 }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,10)) "-- helpers" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "-- helpers" Nothing,DComment (DP (0,-10),DP (0,2)) "currentLevel" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing,DComment (DP (0,1),DP (0,6)) "dlits" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-16 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: currentLevel})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-6)) "levelL" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "levelArr" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-16 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: currentLevel})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:18-31 }
                       Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:20-31 }
                         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:20-25 }
                           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: length}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:27-31 }
                           Just (Ann (DP (0,-2)) (ColDelta 22) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing] [((G AnnVal),DP (0,-2))])
                           (HsVar 
                            (Unqual {OccName: dlits})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31 }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-10 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: levelL})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-10 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: levelL})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:12 }
                      Just (Ann (DP (0,-13)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,14)) "storeResolvedSources" Nothing] [((G AnnVal),DP (0,-13))])
                      (VarPat 
                       (Unqual {OccName: l})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:14-31 }
                       Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:16-31 }
                         Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:16-23 }
                           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: levelArr}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:24 }
                           Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: !}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:25-31 }
                           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "clauseId" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:26-30 }
                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:26-28 }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: var}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:30 }
                               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: l})))))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,5)-(573,81)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,7),DP (0,8)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:5-24 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: storeResolvedSources})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,5)-(573,81)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,1)) "readSTRef" Nothing),DP (0,-8)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:5-24 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: storeResolvedSources})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:26-28 }
                      Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-18),DP (0,-18)) "" Nothing,DComment (DP (0,0),DP (0,10)) "rsReversed" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnVal),DP (0,-1))])
                      (VarPat 
                       (Unqual {OccName: rsR}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:30-37 }
                      Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: clauseId})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,39)-(573,81)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 34) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,41)-(573,81)
                          }
                         Just (Ann (DP (0,-2)) (ColDelta 36) DP (0,1) [DComment (DP (0,0),DP (0,3)) "rsR" Nothing] [((G AnnDo),DP (0,-2)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(569,7)-(573,81) Ref "delta-65"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:7-42 }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:7-16 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: rsReversed}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:21-42 }
                              Just (Ann (DP (0,-12)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,13)) "resolutionTrace" Nothing] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:21-26 }
                                Just (Ann (DP (0,-12)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-12))])
                                (HsVar 
                                 (Unqual {OccName: liftST}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:28 }
                                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:30-42 }
                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:30-38 }
                                  Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: readSTRef}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:40-42 }
                                  Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing] [((G AnnVal),DP (0,-1))])
                                  (HsVar 
                                   (Unqual {OccName: rsR}))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,7)-(573,81)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,7)-(573,81)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:7-32 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:7-16 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: modifySlot}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:18-32 }
                                  Just (Ann (DP (0,-8)) (ColDelta 11) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,15)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-8))])
                                  (HsVar 
                                   (Unqual {OccName: resolutionTrace}))))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:34 }
                                Just (Ann (DP (0,6)) (ColDelta 27) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "=" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: $}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81) Ref "delta-66"),DP (0,0))])
                                (HsLam 
                                 (MG 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81)
                                     }
                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                    (Match 
                                     (Nothing) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:37 }
                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: s}))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:39-40 }
                                       Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: rt})))] 
                                     (Nothing) 
                                     (GRHSs 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,9)-(573,81)
                                         }
                                        Just (Ann (DP (1,-27)) (ColDelta -27) DP (1,-27) [] [])
                                        (GRHS 
                                         [] 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,9)-(573,81)
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta -27) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                          (RecordUpd 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:571:9 }
                                            Just (Ann (DP (0,0)) (ColDelta -27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s}))) 
                                           (HsRecFields 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,11)-(573,80)
                                               }
                                              Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-9)) "rt" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "resSourceMap" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
                                              (HsRecField 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:571:11-25 }
                                                Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (Unqual {OccName: resolutionTrace})) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,15)-(573,80)
                                                 }
                                                Just (Ann (DP (1,-21)) (ColDelta -21) DP (1,-21) [DComment (DP (0,3),DP (0,4)) "=" Nothing] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                                (RecordUpd 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:572:15-16 }
                                                  Just (Ann (DP (0,0)) (ColDelta -21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: rt}))) 
                                                 (HsRecFields 
                                                  [
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,18)-(573,79)
                                                     }
                                                    Just (Ann (DP (0,0)) (ColDelta -18) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,2)) "Map.insert" Nothing),DP (0,-8)),((G AnnEqual),DP (0,1))])
                                                    (HsRecField 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:572:18-29 }
                                                      Just (Ann (DP (0,0)) (ColDelta -18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (Unqual {OccName: resSourceMap})) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-79 }
                                                      Just (Ann (DP (1,-14)) (ColDelta -14) DP (1,-14) [DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "reverse" Nothing,DComment (DP (0,1),DP (0,11)) "rsReversed" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "resSourceMap" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-61 }
                                                        Just (Ann (DP (0,0)) (ColDelta -14) DP (0,0) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-40 }
                                                          Just (Ann (DP (0,0)) (ColDelta -14) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-31 }
                                                            Just (Ann (DP (0,0)) (ColDelta -14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Qual {ModuleName: Map} {OccName: insert}))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:33-40 }
                                                            Just (Ann (DP (0,1)) (ColDelta -3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: clauseId}))))) 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:42-61 }
                                                          Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                          (HsPar 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:43-60 }
                                                            Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:43-49 }
                                                              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: reverse}))) 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:51-60 }
                                                              Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: rsReversed}))))))))) 
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:63-79 }
                                                        Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                        (HsPar 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:64-78 }
                                                          Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:64-75 }
                                                            Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: resSourceMap}))) 
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:77-78 }
                                                            Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                            (HsVar 
                                                             (Unqual {OccName: rt}))))))))) 
                                                     (False)))] 
                                                  (Nothing)) 
                                                 [] 
                                                 [] 
                                                 [])) 
                                               (False)))] 
                                            (Nothing)) 
                                           [] 
                                           [] 
                                           []))))] 
                                      (EmptyLocalBinds))))] 
                                  [] 
                                  (PlaceHolder) 
                                  (FromSource)))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,5)-(505,53)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnDcolon),DP (0,1))])
               (TypeSig 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:5-15 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: firstUIPBFS}))] 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,20)-(505,53)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                 (HsForAllTy 
                  (Implicit) 
                  (Nothing) 
                  (HsQTvs 
                   [] 
                   []) 
                  ({ <no location info> }
                   Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
                   []) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,20)-(505,53)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "Clause" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])
                   (HsFunTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:20-32 }
                     Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:20-30 }
                       Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: MAssignment}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:32 }
                       Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-11),DP (0,-3)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: s}))))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,37)-(505,53)
                      }
                     Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
                     (HsFunTy 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:37-39 }
                       Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: Int}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,44)-(505,53)
                        }
                       Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "," Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,4)) "Int" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,0),DP (1,0)) "" Nothing),DP (1,0)),((AnnComment DComment (DP (0,0),DP (0,11)) "firstUIPBFS" Nothing),DP (0,0)),((G AnnRarrow),DP (1,12))])
                       (HsFunTy 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:44-52 }
                         Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: ReasonMap}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:20-53 }
                         Just (Ann (DP (0,-4)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,6)) "nVars" Nothing] [])
                         (HsAppTy 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:20-29 }
                           Just (Ann (DP (0,-4)) (ColDelta 15) DP (0,1) [] [])
                           (HsAppTy 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:20-27 }
                             Just (Ann (DP (0,-4)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-4))])
                             (HsTyVar 
                              (Unqual {OccName: FunMonad}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:29 }
                             Just (Ann (DP (0,-5)) (ColDelta 24) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "reasonMap" Nothing] [((G AnnVal),DP (0,-5))])
                             (HsTyVar 
                              (Unqual {OccName: s}))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:31-53 }
                           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsTupleTy 
                            (HsBoxedOrConstraintTuple) 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:32-37 }
                              Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((G AnnComma),DP (0,0))])
                              (HsTyVar 
                               (Unqual {OccName: Clause}))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:40-47 }
                              Just (Ann (DP (0,0)) (ColDelta 35) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                              (HsTyVar 
                               (Unqual {OccName: ClauseId}))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:50-52 }
                              Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsTyVar 
                               (Unqual {OccName: Int})))])))))))))))) 
                (PlaceHolder)))])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1-41 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,76)) "-- | Delete the assignment to last-assigned literal.  Undoes the trail, the" Nothing,DComment (DP (1,1),DP (1,46)) "-- assignment, sets `noLevel', undoes reason." Nothing,DComment (DP (0,-45),DP (0,30)) "-- | Delete the assignment to last-assigned literal.  Undoes the trail, the" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,43)) "-- assignment, sets `noLevel', undoes reason." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "-- Does /not/ touch `dl'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "undoOne" Nothing,DComment (DP (0,-7),DP (0,18)) "-- Does /not/ touch `dl'." Nothing,DComment (DP (0,-17),DP (0,-15)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,3)) "{-# INLINE" Nothing),DP (0,-7)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1-7 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: undoOne}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-41 }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-41 }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-24 }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-22 }
             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:24 }
             Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [DComment (DP (0,-11),DP (0,-4)) "undoOne" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:29-41 }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:29-38 }
             Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:29-36 }
               Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:38 }
               Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:40-41 }
             Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1-22 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-4)) "do" Nothing),DP (0,-6)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:12-18 }
       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-3)) "undoOne" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: undoOne})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:1-7 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: undoOne})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:1-7 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: undoOne})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:9 }
            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "trl" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,11)-(592,57)
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,13)-(592,57)
                }
               Just (Ann (DP (0,-3)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,4)) "gets" Nothing] [((G AnnDo),DP (0,-3)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(583,5)-(592,57) Ref "delta-67"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:5-21 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:5-7 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: trl}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:12-21 }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:12-15 }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:17-21 }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: trail}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5-21 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-3),DP (0,1)) "case" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5-7 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: lvl}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:12-21 }
                    Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "trl" Nothing] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:12-15 }
                      Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:17-21 }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "of" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: level}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(585,5)-(592,57)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(585,5)-(592,57)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(586,7)-(592,57) Ref "delta-68"),DP (0,0))])
                    (HsCase 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:585:10-12 }
                      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: trl}))) 
                     (MG 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-48 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-8 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-8 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                             (Exact {Name: []})) 
                            (PrefixCon 
                             [])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:16-48 }
                            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,7) [DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,4)) "trl'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:19-48 }
                              Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:19-23 }
                                Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: error}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:25-48 }
                                Just (Ann (DP (0,4)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])
                                (HsLit 
                                 (HsString "\"undoOne of empty trail\"" {FastString: "undoOne of empty trail"})))))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,7)-(592,57)
                         }
                        Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:7-14 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,6)) "liftST" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (ParPat 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:8-13 }
                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:9 }
                               Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Exact {Name: :})) 
                              (InfixCon 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:8 }
                                Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: l}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:10-13 }
                                Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: trl'}))))))))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,16)-(592,57)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,19)-(592,57)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(588,11)-(592,57) Ref "delta-69"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-33 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-33 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-20 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-16 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftST}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:18 }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:20 }
                                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: m}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:22-31 }
                                     Just (Ann (DP (0,-8)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,9)) "writeArray" Nothing] [((G AnnBackquote),DP (0,-8)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: unassign}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:33 }
                                     Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "lvl" Nothing] [((G AnnVal),DP (0,-1))])
                                     (HsVar 
                                      (Unqual {OccName: l}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-49 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "noLevel" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-49 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-16 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: liftST}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:18 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-49 }
                                     Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-41 }
                                       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-33 }
                                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-29 }
                                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: writeArray}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:31-33 }
                                           Just (Ann (DP (0,6)) (ColDelta 20) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: lvl}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:35-41 }
                                         Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:36-40 }
                                           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:36-38 }
                                             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: var}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:40 }
                                             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: l}))))))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:43-49 }
                                       Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: noLevel}))))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,11)-(592,57)
                                  }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,11)-(592,57)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:11-16 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: modify}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:18 }
                                     Just (Ann (DP (0,-3)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "trail" Nothing] [((G AnnVal),DP (0,-3))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57)
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57) Ref "delta-70"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57)
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:21 }
                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: s})))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(591,13)-(592,57)
                                              }
                                             Just (Ann (DP (1,-7)) (ColDelta -7) DP (1,-7) [DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "trl'" Nothing] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(591,13)-(592,57)
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                               (RecordUpd 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:13 }
                                                 Just (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: s}))) 
                                                (HsRecFields 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:16-30 }
                                                   Just (Ann (DP (0,1)) (ColDelta -4) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,1)) "reason" Nothing),DP (0,-5)),((G AnnEqual),DP (0,4)),((AnnComment DComment (DP (0,-4),DP (0,6)) "Map.delete" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "var" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "reason" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((G AnnComma),DP (1,-6))])
                                                   (HsRecField 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:16-20 }
                                                     Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (Unqual {OccName: trail})) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:27-30 }
                                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: trl'}))) 
                                                    (False))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:16-55 }
                                                   Just (Ann (DP (0,1)) (ColDelta -4) DP (0,1) [] [((G AnnEqual),DP (0,3))])
                                                   (HsRecField 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:16-21 }
                                                     Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (Unqual {OccName: reason})) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:27-55 }
                                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:27-44 }
                                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:27-36 }
                                                         Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Qual {ModuleName: Map} {OccName: delete}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:38-44 }
                                                         Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:39-43 }
                                                           Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                                                           (HsApp 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:39-41 }
                                                             Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: var}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:43 }
                                                             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: l}))))))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:46-55 }
                                                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:47-54 }
                                                         Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:47-52 }
                                                           Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: reason}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:54 }
                                                           Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: s}))))))))) 
                                                    (False)))] 
                                                 (Nothing)) 
                                                [] 
                                                [] 
                                                []))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,55)) "-- | Increase the recorded activity of given variable." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "bump" Nothing,DComment (DP (0,-4),DP (0,50)) "-- | Increase the recorded activity of given variable." Nothing,DComment (DP (0,-49),DP (0,-47)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-4),DP (0,6)) "{-# INLINE" Nothing),DP (0,-4)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1-4 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: bump}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-28 }
       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-28 }
         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,4)) "bump" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-11 }
           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Var}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:16-28 }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:16-25 }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:16-23 }
               Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:25 }
               Just (Ann (DP (0,5)) (ColDelta 25) DP (0,1) [DComment (DP (0,-7),DP (0,-4)) "#-}" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:27-28 }
             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1-19 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:12-15 }
       Just (Ann (DP (0,-9)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-6)) "bump" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,12)) "varOrderMod" Nothing] [((G AnnVal),DP (0,-9))])
       (Unqual {OccName: bump})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "+" Nothing,DComment (DP (0,1),DP (0,7)) "varInc" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-4 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: bump})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-4 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: bump})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:6 }
            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: v})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:8-33 }
             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:10-33 }
               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:10-22 }
                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:10-20 }
                   Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: varOrderMod}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:22 }
                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: v}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:24-33 }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsPar 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:25-32 }
                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                   (SectionR 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:25 }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: +}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:27-32 }
                     Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: varInc})))))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1-16 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,54)) "-- | Constant amount by which a variable is `bump'ed." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "varInc" Nothing,DComment (DP (0,-6),DP (0,47)) "-- | Constant amount by which a variable is `bump'ed." Nothing,DComment (DP (0,-46),DP (0,-44)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Double" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1-6 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: varInc}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:11-16 }
       Just (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "1.0" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:11-16 }
         Just (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-2))])
         (HsTyVar 
          (Unqual {OccName: Double}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-6 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: varInc})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-6 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: varInc})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:8-12 }
             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:10-12 }
               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsOverLit {HsOverLit:1.0}))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1-41 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (3,1),DP (3,29)) "-- *** Impossible to satisfy" Nothing,DComment (DP (1,1),DP (1,29)) "-- *** Impossible to satisfy" Nothing,DComment (DP (1,1),DP (1,41)) "-- | /O(1)/.  Test for unsatisfiability." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,38)) "-- | /O(1)/.  Test for unsatisfiability." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,76)) "-- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting" Nothing,DComment (DP (1,1),DP (1,77)) "-- clause and there are no decision literals in @m@.''  But we were deciding" Nothing,DComment (DP (0,-76),DP (0,2)) "-- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting" Nothing,DComment (DP (1,1),DP (1,76)) "-- on all literals *without* creating a conflicting clause.  So now we also" Nothing,DComment (DP (0,-75),DP (0,1)) "-- clause and there are no decision literals in @m@.''  But we were deciding" Nothing,DComment (DP (1,1),DP (1,56)) "-- test whether we've made all possible decisions, too." Nothing,DComment (DP (0,-55),DP (0,20)) "-- on all literals *without* creating a conflicting clause.  So now we also" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "unsat" Nothing,DComment (DP (0,-5),DP (0,50)) "-- test whether we've made all possible decisions, too." Nothing,DComment (DP (0,-49),DP (0,-47)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,12)) "FunsatState" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,5)) "{-# INLINE" Nothing),DP (0,-5)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1-5 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: unsat}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-41 }
       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-41 }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-16 }
           Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-14 }
             Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Maybe}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:16 }
             Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "unsat" Nothing] [((G AnnVal),DP (0,-1))])
             (HsTyVar 
              (Unqual {OccName: a}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-41 }
           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "#-}" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-33 }
             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-31 }
               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunsatState}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:33 }
               Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:38-41 }
             Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Bool}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:12-16 }
       Just (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-5)) "unsat" Nothing,DComment (DP (0,1),DP (0,14)) "maybeConflict" Nothing] [((G AnnVal),DP (0,-8))])
       (Unqual {OccName: unsat})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "SC" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,8)) "isUnsat" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:1-5 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: unsat})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-2),DP (0,11)) "maybeConflict" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnWhere),DP (1,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:1-5 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: unsat})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:7-19 }
            Just (Ann (DP (0,-3)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "where" Nothing] [((G AnnVal),DP (0,-3))])
            (VarPat 
             (Unqual {OccName: maybeConflict}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:21-31 }
            Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,7)) "isUnsat" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "&&" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:22-30 }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "null" Nothing),DP (0,-2)),((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:22-23 }
                Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: SC})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:25-29 }
                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnEqual),DP (0,0))])
                   (HsRecField 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:25-26 }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: dl})) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:28-29 }
                     Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "dl" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                     (VarPat 
                      (Unqual {OccName: dl}))) 
                    (False)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,33)-(616,53)
              }
             Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:35-41 }
               Just (Ann (DP (0,-4)) (ColDelta 35) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "isJust" Nothing] [((G AnnVal),DP (0,-4))])
               (HsVar 
                (Unqual {OccName: isUnsat})))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53 }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-17 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: isUnsat})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-17 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: isUnsat})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:19-53 }
                       Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:21-53 }
                         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                         (HsPar 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-52 }
                           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-28 }
                             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-25 }
                               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,35)) "-- or BitSet.size bad == numVars cnf" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: null}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:27-28 }
                               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: dl}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:30-31 }
                             Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: &&}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:33-52 }
                             Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:33-38 }
                               Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: isJust}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:40-52 }
                               Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: maybeConflict})))))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1-26 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (10,1) [DComment (DP (1,21),DP (1,57)) "-- or BitSet.size bad == numVars cnf" Nothing,DComment (DP (3,1),DP (3,14)) "-- ** Helpers" Nothing,DComment (DP (1,1),DP (1,14)) "-- ** Helpers" Nothing,DComment (DP (1,1),DP (1,25)) "-- *** Clause compaction" Nothing,DComment (DP (1,1),DP (1,25)) "-- *** Clause compaction" Nothing,DComment (DP (1,1),DP (1,51)) "-- | Keep the smaller half of the learned clauses." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "compactDB" Nothing,DComment (DP (0,-9),DP (0,41)) "-- | Keep the smaller half of the learned clauses." Nothing,DComment (DP (0,-40),DP (0,-38)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1-9 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: compactDB}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-26 }
       Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-26 }
         Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-23 }
           Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-21 }
             Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-1))])
             (HsTyVar 
              (Unqual {OccName: FunMonad}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:23 }
             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:25-26 }
           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
           (HsTupleTy 
            (HsBoxedOrConstraintTuple) 
            [])))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:1-9 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: compactDB})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-5)) "" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "n" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "numVars" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:1-9 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: compactDB})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,11)-(640,50)
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,13)-(640,50)
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(628,5)-(640,50) Ref "delta-71"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:5-33 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "lArr" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:5 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: n}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:10-33 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:10-16 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: numVars}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:18-24 }
                      Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-5)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing] [((G AnnBackquote),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,5)) "learnt" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:26-33 }
                      Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:26-29 }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: gets}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:31-33 }
                        Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: cnf}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5-23 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-4),DP (0,3)) "clauses" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5-8 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: lArr}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:13-23 }
                    Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:13-16 }
                      Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:18-23 }
                      Just (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnVal),DP (0,-4))])
                      (HsVar 
                       (Unqual {OccName: learnt}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,5)-(633,48)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "nub" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,10)) "Fl.concat" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:5-11 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: clauses}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,16)-(633,48)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:16-41 }
                      Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:16-21 }
                        Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: liftST}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:23 }
                        Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: $}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:25-41 }
                        Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-7)) "(" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,0),DP (0,1)) "-" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "n" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) ".." Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:26-40 }
                          Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:26-28 }
                            Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "forM" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: nub}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:30 }
                            Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: .}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:32-40 }
                            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "L" Nothing] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Qual {ModuleName: Fl} {OccName: concat}))))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:43-49 }
                      Just (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,0),DP (0,1)) "L" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "n" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(631,25)-(633,48)
                       }
                      Just (Ann (DP (1,20)) (ColDelta 20) DP (1,20) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:25-45 }
                        Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:25-28 }
                          Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: forM}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:30-45 }
                          Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing] [((G AnnOpenS),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "val" Nothing),DP (0,0)),((G AnnDotdot),DP (0,1)),((G AnnCloseS),DP (0,0))])
                          (ArithSeq 
                           (HsLit 
                            (HsString "" {FastString: "noPostTcExpr"})) 
                           (Nothing) 
                           (FromTo 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:31-37 }
                             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:31 }
                               Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: L}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:33-37 }
                               Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,0),DP (0,2)) "->" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:34-36 }
                                 Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnMinus),DP (0,0))])
                                 (NegApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:36 }
                                   Just (Ann (DP (0,-1)) (ColDelta 31) DP (0,1) [DComment (DP (0,0),DP (0,2)) "do" Nothing] [((G AnnVal),DP (0,-1))])
                                   (HsVar 
                                    (Unqual {OccName: n}))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})))))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:42-44 }
                             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:42 }
                               Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: L}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:44 }
                               Just (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: n})))))))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,28)-(633,48)
                         }
                        Just (Ann (DP (1,23)) (ColDelta 23) DP (1,23) [DComment (DP (0,-1),DP (0,8)) "readArray" Nothing,DComment (DP (0,1),DP (0,5)) "lArr" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,11)) "writeArray" Nothing,DComment (DP (0,1),DP (0,5)) "lArr" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "`" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,2)) "2" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47) Ref "delta-72"),DP (0,0))])
                          (HsLam 
                           (MG 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47)
                               }
                              Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                              (Match 
                               (Nothing) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:30 }
                                 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: v})))] 
                               (Nothing) 
                               (GRHSs 
                                [
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,35)-(633,47)
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                  (GRHS 
                                   [] 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,35)-(633,47)
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,38)-(633,47) Ref "delta-73"),DP (0,0))])
                                    (HsDo 
                                     (DoExpr) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:38-60 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,3)) "return" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1)),(AnnSemiSep,DP (0,1))])
                                       (BindStmt 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:38-40 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (VarPat 
                                          (Unqual {OccName: val}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:45-60 }
                                         Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:45-58 }
                                           Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:45-53 }
                                             Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: readArray}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:55-58 }
                                             Just (Ann (DP (0,6)) (ColDelta 17) DP (0,1) [DComment (DP (0,-9),DP (0,-6)) "val" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: lArr}))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:60 }
                                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: v}))))) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-83 }
                                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                                       (BodyStmt 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-83 }
                                         Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-80 }
                                           Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-78 }
                                             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-73 }
                                               Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: writeArray}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:75-78 }
                                               Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: lArr}))))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:80 }
                                             Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: v}))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:82-83 }
                                           Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                           (HsVar 
                                            (Exact {Name: []}))))) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (PlaceHolder))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38-47 }
                                       Just (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [DComment (DP (1,-33),DP (1,-33)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "clauses'" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "take" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,8)) "clauses" Nothing] [])
                                       (BodyStmt 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38-47 }
                                         Just (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38-43 }
                                           Just (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-2))])
                                           (HsVar 
                                            (Unqual {OccName: return}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:45-47 }
                                           Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "`" Nothing,DComment (DP (0,0),DP (0,3)) "div" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: val}))))) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (PlaceHolder)))] 
                                     (PlaceHolder)))))] 
                                (EmptyLocalBinds))))] 
                            [] 
                            (PlaceHolder) 
                            (FromSource)))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,5)-(635,74)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLet),DP (0,0))])
                  (LetStmt 
                   (HsValBinds 
                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74)
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:9-16 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: clauses'})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:9-16 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: clauses'})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,18)-(635,74)
                                }
                               Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,20)-(635,74)
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:20-48 }
                                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:20-23 }
                                     Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: take}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:25-48 }
                                     Just (Ann (DP (0,-3)) (ColDelta 16) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,7)) "sortBy" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-47 }
                                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-39 }
                                         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-31 }
                                           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: length}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:33-39 }
                                           Just (Ann (DP (0,-6)) (ColDelta 24) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "comparing" Nothing] [((G AnnVal),DP (0,-6))])
                                           (HsVar 
                                            (Unqual {OccName: clauses}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:41-45 }
                                         Just (Ann (DP (0,0)) (ColDelta 32) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnBackquote),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,5)) "length" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: div}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:47 }
                                         Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsOverLit {HsOverLit:2})))))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:20 }
                                   Just (Ann (DP (0,1)) (ColDelta 11) DP (1,11) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "clauses" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: $}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:22-74 }
                                   Just (Ann (DP (0,-6)) (ColDelta 13) DP (0,1) [DComment (DP (0,-1),DP (0,7)) "clauses'" Nothing] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:22-66 }
                                     Just (Ann (DP (0,-6)) (ColDelta 13) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:22-27 }
                                       Just (Ann (DP (0,-6)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                                       (HsVar 
                                        (Unqual {OccName: sortBy}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:29-66 }
                                       Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:30-65 }
                                         Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:30-38 }
                                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: comparing}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:40-65 }
                                           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:41-64 }
                                             Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                             (OpApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:41-46 }
                                               Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: length}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:48 }
                                               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: .}))) 
                                              (PlaceHolder) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:50-64 }
                                               Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (HsPar 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 }
                                                 Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 Ref "delta-74"),DP (0,0))])
                                                 (HsLam 
                                                  (MG 
                                                   [
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 }
                                                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                                     (Match 
                                                      (Nothing) 
                                                      [
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:52-58 }
                                                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                        (TuplePat 
                                                         [
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:53 }
                                                           Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                           (WildPat 
                                                            (PlaceHolder))),
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:55 }
                                                           Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                           (VarPat 
                                                            (Unqual {OccName: s}))),
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:57 }
                                                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (WildPat 
                                                            (PlaceHolder)))] 
                                                         (Boxed) 
                                                         []))] 
                                                      (Nothing) 
                                                      (GRHSs 
                                                       [
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:63 }
                                                         Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                                                         (GRHS 
                                                          [] 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:63 }
                                                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: s})))))] 
                                                       (EmptyLocalBinds))))] 
                                                   [] 
                                                   (PlaceHolder) 
                                                   (FromSource)))))))))))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:68-74 }
                                     Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: clauses})))))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        []))]} 
                     [])))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,5)-(640,50)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,5)-(640,50)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:5-10 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:12 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,14)-(640,50)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:14-27 }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:14-18 }
                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: forM_}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:20-27 }
                          Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,1),DP (0,4)) "wCl" Nothing] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: clauses'}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,14)-(640,50)
                         }
                        Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-8),DP (0,-7)) "@" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49) Ref "delta-75"),DP (0,0))])
                          (HsLam 
                           (MG 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49)
                               }
                              Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                              (Match 
                               (Nothing) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:17-29 }
                                 Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "x" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnAt),DP (0,0))])
                                 (AsPat 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:17-19 }
                                   Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (Unqual {OccName: wCl})) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:21-29 }
                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                   (TuplePat 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:22 }
                                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                      (VarPat 
                                       (Unqual {OccName: r}))),
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:25 }
                                      Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnVal),DP (0,-1)),((G AnnComma),DP (0,0))])
                                      (WildPat 
                                       (PlaceHolder))),
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:28 }
                                      Just (Ann (DP (0,-8)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,9)) "readSTRef" Nothing] [((G AnnVal),DP (0,-8))])
                                      (WildPat 
                                       (PlaceHolder)))] 
                                    (Boxed) 
                                    []))))] 
                               (Nothing) 
                               (GRHSs 
                                [
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,34)-(640,49)
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                                  (GRHS 
                                   [] 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,34)-(640,49)
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(638,17)-(640,49) Ref "delta-76"),DP (0,0))])
                                    (HsDo 
                                     (DoExpr) 
                                     [
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-37 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                                       (BindStmt 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-22 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (TuplePat 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:18 }
                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,10)) "modifyArray" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: x}))),
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:21 }
                                            Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: y})))] 
                                          (Boxed) 
                                          [])) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:27-37 }
                                         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:27-35 }
                                           Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: readSTRef}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:37 }
                                           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,1) [DComment (DP (0,-7),DP (0,-3)) "lArr" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: r}))))) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-49 }
                                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,5)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "wCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                       (BodyStmt 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-49 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                         (OpApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-34 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-32 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-27 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: modifyArray}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:29-32 }
                                               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: lArr}))))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:34 }
                                             Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: x}))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:36 }
                                           Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: $}))) 
                                          (PlaceHolder) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:38-49 }
                                           Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:38-42 }
                                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: const}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:44-49 }
                                             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                             (HsPar 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:45-48 }
                                               Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                               (SectionL 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:45-47 }
                                                 Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: wCl}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:48 }
                                                 Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Exact {Name: :}))))))))))) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (PlaceHolder))),
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-49 }
                                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                       (BodyStmt 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-49 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                         (OpApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-34 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-32 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-27 }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: modifyArray}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:29-32 }
                                               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: lArr}))))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:34 }
                                             Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: y}))))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:36 }
                                           Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: $}))) 
                                          (PlaceHolder) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:38-49 }
                                           Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:38-42 }
                                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: const}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:44-49 }
                                             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                             (HsPar 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:45-48 }
                                               Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                                               (SectionL 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:45-47 }
                                                 Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: wCl}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:48 }
                                                 Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Exact {Name: :}))))))))))) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (HsLit 
                                         (HsString "" {FastString: "noSyntaxExpr"})) 
                                        (PlaceHolder)))] 
                                     (PlaceHolder)))))] 
                                (EmptyLocalBinds))))] 
                            [] 
                            (PlaceHolder) 
                            (FromSource)))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,1)-(656,30)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (13,1) [DComment (DP (1,1),DP (1,24)) "-- *** Unit propagation" Nothing,DComment (DP (1,1),DP (1,24)) "-- *** Unit propagation" Nothing,DComment (DP (1,1),DP (1,78)) "-- | Add clause to the watcher lists, unless clause is a singleton; if clause" Nothing,DComment (DP (1,1),DP (1,78)) "-- | Add clause to the watcher lists, unless clause is a singleton; if clause" Nothing,DComment (DP (0,-77),DP (0,1)) "-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict," Nothing,DComment (DP (1,1),DP (1,78)) "-- `True' otherwise.  This function should be called exactly once per clause," Nothing,DComment (DP (0,-77),DP (0,1)) "-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict," Nothing,DComment (DP (1,1),DP (1,74)) "-- per run.  It should not be called to reconstruct the watcher list when" Nothing,DComment (DP (0,-73),DP (0,4)) "-- `True' otherwise.  This function should be called exactly once per clause," Nothing,DComment (DP (1,1),DP (1,16)) "-- propagating." Nothing,DComment (DP (0,-15),DP (0,58)) "-- per run.  It should not be called to reconstruct the watcher list when" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,13)) "-- propagating." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,65)) "-- Currently the watched literals in each clause are the first two." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,65)) "-- Currently the watched literals in each clause are the first two." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,38)) "-- Also adds unique clause ids to trace." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "watchClause" Nothing,DComment (DP (0,-11),DP (0,29)) "-- Also adds unique clause ids to trace." Nothing,DComment (DP (0,-28),DP (0,-26)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:1-11 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: watchClause}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,16)-(656,30)
        }
       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,16)-(656,30)
          }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,4),DP (0,5)) ")" Nothing),DP (0,4)),((G AnnRarrow),DP (1,13))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:16-28 }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:16-26 }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:28 }
             Just (Ann (DP (0,-5)) (ColDelta 28) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing] [((G AnnVal),DP (0,-5))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(654,16)-(656,30)
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,27)) "-- ^ Is this clause learned?" Nothing),DP (0,-1)),((G AnnRarrow),DP (1,13))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:16-33 }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:17-22 }
                Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "Bool" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Clause}))),
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:25-32 }
                Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ClauseId})))])) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(655,16)-(656,30)
              }
             Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,4)) "FunMonad" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "Bool" Nothing),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,30)) "-- ^ Is this clause learned?" Nothing),DP (0,2)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "{-# INLINE" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,12)) "watchClause" Nothing),DP (0,1)),((G AnnRarrow),DP (1,13))])
             (HsFunTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:655:16-19 }
               Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Bool}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:16-30 }
               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:16-25 }
                 Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:16-23 }
                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: FunMonad}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:25 }
                   Just (Ann (DP (0,-2)) (ColDelta 25) DP (0,1) [DComment (DP (0,0),DP (0,3)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])
                   (HsTyVar 
                    (Unqual {OccName: s}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:27-30 }
                 Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Bool}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1-26 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "m" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "c" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "cid" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:12-22 }
       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,1)) "watchClause" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: watchClause})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,5)) "isLearnt" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:1-11 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: watchClause})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:1-11 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: watchClause})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:13 }
            Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,4)) "case" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnVal),DP (0,-1))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:15-22 }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (TuplePat 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:16 }
               Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
               (VarPat 
                (Unqual {OccName: c}))),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:19-21 }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (VarPat 
                (Unqual {OccName: cid})))] 
             (Boxed) 
             [])),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:24-31 }
            Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: isLearnt})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,33)-(678,25)
              }
             Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,35)-(678,25)
                }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25) Ref "delta-77"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25)
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "->" Nothing),DP (0,-1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(660,7)-(678,25) Ref "delta-78"),DP (0,0))])
                    (HsCase 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:659:10 }
                      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: c}))) 
                     (MG 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-23 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-8 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-8 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                             (Exact {Name: []})) 
                            (PrefixCon 
                             [])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:10-23 }
                            Just (Ann (DP (0,0)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:13-23 }
                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:13-18 }
                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: return}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:20-23 }
                                Just (Ann (DP (0,-3)) (ColDelta 13) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "result" Nothing] [((G AnnVal),DP (0,-3))])
                                (HsVar 
                                 (Unqual {OccName: True})))))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,7)-(668,29)
                         }
                        Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,2)) "<-" Nothing,DComment (DP (0,1),DP (0,8)) "enqueue" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:7-9 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                           (ListPat 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:8 }
                              Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: l})))] 
                            (PlaceHolder) 
                            (Nothing)))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,11)-(668,29)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,14)-(668,29)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,17)-(668,29) Ref "delta-79"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:17-53 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-6),DP (0,2)) "levelArr" Nothing),DP (0,-6)),((G AnnLarrow),DP (0,1))])
                                 (BindStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:17-22 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: result}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-53 }
                                   Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-37 }
                                     Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-35 }
                                       Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-33 }
                                         Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                         (HsVar 
                                          (Unqual {OccName: enqueue}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:35 }
                                         Just (Ann (DP (0,-4)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "gets" Nothing,DComment (DP (0,1),DP (0,6)) "level" Nothing] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: m}))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:37 }
                                       Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: l}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:39-53 }
                                     Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:40-52 }
                                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:40-43 }
                                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: Just}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:45-52 }
                                         Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (ExplicitTuple 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:46 }
                                            Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])
                                            (Present 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:46 }
                                              Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: c}))))),
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:49-51 }
                                            Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                                            (Present 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:49-51 }
                                              Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: cid})))))] 
                                          (Boxed))))))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17-38 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "liftST" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                                 (BindStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17-24 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: levelArr}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:29-38 }
                                   Just (Ann (DP (0,-7)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "writeArray" Nothing] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:29-32 }
                                     Just (Ann (DP (0,-7)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                                     (HsVar 
                                      (Unqual {OccName: gets}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:34-38 }
                                     Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: level}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-54 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,6)) "levelArr" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-54 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-22 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: liftST}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:24 }
                                     Just (Ann (DP (0,-2)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing] [((G AnnVal),DP (0,-2))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-54 }
                                     Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-52 }
                                       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-44 }
                                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-35 }
                                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: writeArray}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:37-44 }
                                           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [DComment (DP (0,-9),DP (0,-1)) "isLearnt" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: levelArr}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:46-52 }
                                         Just (Ann (DP (0,8)) (ColDelta 29) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "(" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:47-51 }
                                           Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:47-49 }
                                             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: var}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:51 }
                                             Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: l}))))))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:54 }
                                       Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsOverLit {HsOverLit:0})))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,17)-(667,84)
                                  }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,17)-(667,84)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:17-35 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:17-20 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: when}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:22-35 }
                                       Just (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "modifySlot" Nothing] [((G AnnOpenP),DP (0,-7)),((AnnComment DComment (DP (0,-5),DP (0,10)) "resolutionTrace" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:23-34 }
                                         Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:23-25 }
                                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: not}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:27-34 }
                                           Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: isLearnt}))))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,37)-(667,84)
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,19)-(667,83)
                                        }
                                       Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,8),DP (0,9)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:19-44 }
                                         Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:19-28 }
                                           Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: modifySlot}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:30-44 }
                                           Just (Ann (DP (0,-10)) (ColDelta 13) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,15)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-10))])
                                           (HsVar 
                                            (Unqual {OccName: resolutionTrace}))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:46 }
                                         Just (Ann (DP (0,-21)) (ColDelta 29) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,0),DP (0,2)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,23)) "resTraceOriginalSingles" Nothing] [((G AnnVal),DP (0,-21))])
                                         (HsVar 
                                          (Unqual {OccName: $}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83)
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83) Ref "delta-80"),DP (0,0))])
                                         (HsLam 
                                          (MG 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83)
                                              }
                                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                             (Match 
                                              (Nothing) 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:49 }
                                                Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (VarPat 
                                                 (Unqual {OccName: s}))),
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:51-52 }
                                                Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (VarPat 
                                                 (Unqual {OccName: rt})))] 
                                              (Nothing) 
                                              (GRHSs 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,23)-(667,83)
                                                  }
                                                 Just (Ann (DP (1,-25)) (ColDelta -25) DP (1,-25) [DComment (DP (0,11),DP (0,12)) "=" Nothing] [])
                                                 (GRHS 
                                                  [] 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,23)-(667,83)
                                                    }
                                                   Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                                   (RecordUpd 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:23 }
                                                     Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: s}))) 
                                                    (HsRecFields 
                                                     [
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,25)-(667,82)
                                                        }
                                                       Just (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnEqual),DP (0,0))])
                                                       (HsRecField 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:25-39 }
                                                         Just (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (Unqual {OccName: resolutionTrace})) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,41)-(667,82)
                                                          }
                                                         Just (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                                         (RecordUpd 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:41-42 }
                                                           Just (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: rt}))) 
                                                          (HsRecFields 
                                                           [
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,44)-(667,81)
                                                              }
                                                             Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((AnnComment DComment (DP (0,-19),DP (0,-18)) "(" Nothing),DP (0,-19)),((AnnComment DComment (DP (0,0),DP (0,1)) "c" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "cid" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ":" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,23)) "resTraceOriginalSingles" Nothing),DP (0,0)),((G AnnEqual),DP (0,0))])
                                                             (HsRecField 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:44-66 }
                                                               Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                               (Unqual {OccName: resTraceOriginalSingles})) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-81 }
                                                               Just (Ann (DP (0,18)) (ColDelta 0) DP (1,0) [DComment (DP (0,12),DP (0,14)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-31),DP (1,-31)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,1),DP (0,7)) "result" Nothing] [])
                                                               (OpApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-54 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                 (ExplicitTuple 
                                                                  [
                                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:49 }
                                                                    Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                                                                    (Present 
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:49 }
                                                                      Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                      (HsVar 
                                                                       (Unqual {OccName: c}))))),
                                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:51-53 }
                                                                    Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])
                                                                    (Present 
                                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:51-53 }
                                                                      Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                      (HsVar 
                                                                       (Unqual {OccName: cid})))))] 
                                                                  (Boxed))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:55 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Exact {Name: :}))) 
                                                                (PlaceHolder) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:56-81 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:56-78 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: resTraceOriginalSingles}))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:80-81 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: rt}))))))) 
                                                              (False)))] 
                                                           (Nothing)) 
                                                          [] 
                                                          [] 
                                                          [])) 
                                                        (False)))] 
                                                     (Nothing)) 
                                                    [] 
                                                    [] 
                                                    []))))] 
                                               (EmptyLocalBinds))))] 
                                           [] 
                                           (PlaceHolder) 
                                           (FromSource)))))))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17-29 }
                                 Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-10),DP (1,-10)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17-29 }
                                   Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17-22 }
                                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])
                                     (HsVar 
                                      (Unqual {OccName: return}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:24-29 }
                                     Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: result}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,7)-(678,25)
                         }
                        Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "!!" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "!!" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:7 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (WildPat 
                            (PlaceHolder)))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,9)-(678,25)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,12)-(678,25)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(678,25) Ref "delta-81"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(672,66)
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])
                                 (LetStmt 
                                  (HsValBinds 
                                   (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56 }
                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                      (FunBind 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19 }
                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (Unqual {OccName: p})) 
                                       (False) 
                                       (MG 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56 }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "_insert" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
                                          (Match 
                                           (Just 
                                            ((,) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19 }
                                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (Unqual {OccName: p})) 
                                             (False))) 
                                           [] 
                                           (Nothing) 
                                           (GRHSs 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:21-56 }
                                              Just (Ann (DP (0,-1)) (ColDelta 2) DP (0,-1) [] [])
                                              (GRHS 
                                               [] 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:23-56 }
                                                Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                (ExplicitTuple 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-38 }
                                                   Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                                                   (Present 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-38 }
                                                     Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnComma),DP (0,0))])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-29 }
                                                       Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: negate}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:31-38 }
                                                       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "annCl" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-1),DP (0,1)) "cl" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:32-37 }
                                                         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                                         (OpApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:32 }
                                                           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: c}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:34-35 }
                                                           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: !!}))) 
                                                          (PlaceHolder) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:37 }
                                                           Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])
                                                           (HsOverLit {HsOverLit:0})))))))))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:41-55 }
                                                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                                                   (Present 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:41-55 }
                                                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:41-46 }
                                                       Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: negate}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:48-55 }
                                                       Just (Ann (DP (0,-27)) (ColDelta 29) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "list" Nothing,DComment (DP (0,1),DP (0,30)) "-- avoid watching dup clauses" Nothing] [((G AnnOpenP),DP (0,-27)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:49-54 }
                                                         Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                                                         (OpApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:49 }
                                                           Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: c}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:51-52 }
                                                           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: !!}))) 
                                                          (PlaceHolder) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:54 }
                                                           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                           (HsOverLit {HsOverLit:1}))))))))))] 
                                                 (Boxed)))))] 
                                            (EmptyLocalBinds))))] 
                                        [] 
                                        (PlaceHolder) 
                                        (FromSource)) 
                                       (WpHole) 
                                       (PlaceHolder) 
                                       [])),
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(670,19)-(672,66)
                                       }
                                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                      (FunBind 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:19-25 }
                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (Unqual {OccName: _insert})) 
                                       (False) 
                                       (MG 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(670,19)-(672,66)
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                          (Match 
                                           (Just 
                                            ((,) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:19-25 }
                                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (Unqual {OccName: _insert})) 
                                             (False))) 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:27-39 }
                                             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "|" Nothing,DComment (DP (0,1),DP (0,4)) "any" Nothing] [((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((G AnnAt),DP (0,0))])
                                             (AsPat 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:27-31 }
                                               Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                               (Unqual {OccName: annCl})) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:33-39 }
                                               Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "->" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                               (TuplePat 
                                                [
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:34 }
                                                  Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                  (WildPat 
                                                   (PlaceHolder))),
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:37-38 }
                                                  Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                  (VarPat 
                                                   (Unqual {OccName: cl})))] 
                                                (Boxed) 
                                                [])))),
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:41-44 }
                                             Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (VarPat 
                                              (Unqual {OccName: list})))] 
                                           (Nothing) 
                                           (GRHSs 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:23-60 }
                                              Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,-4),DP (0,-2)) "cl" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,0),DP (0,29)) "-- avoid watching dup clauses" Nothing,DComment (DP (0,-28),DP (0,-27)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "list" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "list" Nothing] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                                              (GRHS 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-53 }
                                                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                 (BodyStmt 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-53 }
                                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-48 }
                                                     Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-27 }
                                                       Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: any}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:29-48 }
                                                       Just (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "otherwise" Nothing] [((G AnnOpenP),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 }
                                                         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 Ref "delta-82"),DP (0,0))])
                                                         (HsLam 
                                                          (MG 
                                                           [
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 }
                                                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                                             (Match 
                                                              (Nothing) 
                                                              [
                                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:31-36 }
                                                                Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                (TuplePat 
                                                                 [
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:32 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                   (WildPat 
                                                                    (PlaceHolder))),
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:35 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                   (VarPat 
                                                                    (Unqual {OccName: c})))] 
                                                                 (Boxed) 
                                                                 []))] 
                                                              (Nothing) 
                                                              (GRHSs 
                                                               [
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-47 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                                                 (GRHS 
                                                                  [] 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-47 }
                                                                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                                                   (OpApp 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-42 }
                                                                     Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: cl}))) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:44-45 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: ==}))) 
                                                                    (PlaceHolder) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:47 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: c})))))))] 
                                                               (EmptyLocalBinds))))] 
                                                           [] 
                                                           (PlaceHolder) 
                                                           (FromSource)))))))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:50-53 }
                                                     Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: list}))))) 
                                                  (HsLit 
                                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                                  (HsLit 
                                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                                  (PlaceHolder)))] 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:57-60 }
                                                Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: list}))))),
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:23-66 }
                                              Just (Ann (DP (0,-3)) (ColDelta 4) DP (1,4) [DComment (DP (0,-4),DP (0,1)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,4)) "list" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnVbar),DP (0,-3)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "$" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,9)) "newSTRef" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "p" Nothing),DP (0,1)),((G AnnEqual),DP (0,21))])
                                              (GRHS 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:25-33 }
                                                 Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                 (BodyStmt 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:25-33 }
                                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: otherwise}))) 
                                                  (HsLit 
                                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                                  (HsLit 
                                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                                  (PlaceHolder)))] 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:57-66 }
                                                Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])
                                                (OpApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:57-61 }
                                                  Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: annCl}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:62 }
                                                  Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Exact {Name: :}))) 
                                                 (PlaceHolder) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:63-66 }
                                                  Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: list})))))))] 
                                            (EmptyLocalBinds))))] 
                                        [] 
                                        (PlaceHolder) 
                                        (FromSource)) 
                                       (WpHole) 
                                       (PlaceHolder) 
                                       []))]} 
                                    [])))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15-38 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "let" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                                 (BindStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: r}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:20-38 }
                                   Just (Ann (DP (0,-4)) (ColDelta 5) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "annCl" Nothing] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:20-25 }
                                     Just (Ann (DP (0,-4)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-4))])
                                     (HsVar 
                                      (Unqual {OccName: liftST}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:27 }
                                     Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:29-38 }
                                     Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,0),DP (0,1)) "r" Nothing] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:29-36 }
                                       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: newSTRef}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:38 }
                                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: p}))))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(674,15)-(676,73)
                                  }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLet),DP (0,0))])
                                 (LetStmt 
                                  (HsValBinds 
                                   (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37 }
                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                      (FunBind 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-23 }
                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (Unqual {OccName: annCl})) 
                                       (False) 
                                       (MG 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37 }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                          (Match 
                                           (Just 
                                            ((,) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-23 }
                                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (Unqual {OccName: annCl})) 
                                             (False))) 
                                           [] 
                                           (Nothing) 
                                           (GRHSs 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:25-37 }
                                              Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])
                                              (GRHS 
                                               [] 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:27-37 }
                                                Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "arr" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,11)) "modifyArray" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                (ExplicitTuple 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:28 }
                                                   Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                                   (Present 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:28 }
                                                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: r}))))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:31 }
                                                   Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                                                   (Present 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:31 }
                                                     Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "do" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: c}))))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:34-36 }
                                                   Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                                                   (Present 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:34-36 }
                                                     Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: cid})))))] 
                                                 (Boxed)))))] 
                                            (EmptyLocalBinds))))] 
                                        [] 
                                        (PlaceHolder) 
                                        (FromSource)) 
                                       (WpHole) 
                                       (PlaceHolder) 
                                       [])),
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,19)-(676,73)
                                       }
                                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,8),DP (0,11)) "arr" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "fst" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                      (FunBind 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:19-23 }
                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (Unqual {OccName: addCl})) 
                                       (False) 
                                       (MG 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,19)-(676,73)
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                          (Match 
                                           (Just 
                                            ((,) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:19-23 }
                                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (Unqual {OccName: addCl})) 
                                             (False))) 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:25-27 }
                                             Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (VarPat 
                                              (Unqual {OccName: arr})))] 
                                           (Nothing) 
                                           (GRHSs 
                                            [
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,29)-(676,73)
                                               }
                                              Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
                                              (GRHS 
                                               [] 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,31)-(676,73)
                                                 }
                                                Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,34)-(676,73) Ref "delta-83"),DP (0,0))])
                                                (HsDo 
                                                 (DoExpr) 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-73 }
                                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                   (BodyStmt 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-73 }
                                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                     (OpApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-56 }
                                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-48 }
                                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-44 }
                                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: modifyArray}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:46-48 }
                                                           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: arr}))))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:50-56 }
                                                         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:51-55 }
                                                           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                                           (HsApp 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:51-53 }
                                                             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: fst}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:55 }
                                                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: p}))))))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:58 }
                                                       Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: $}))) 
                                                      (PlaceHolder) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:60-73 }
                                                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:60-64 }
                                                         Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: const}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:66-73 }
                                                         Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:67-72 }
                                                           Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                                                           (SectionL 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:67-71 }
                                                             Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: annCl}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:72 }
                                                             Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Exact {Name: :}))))))))))) 
                                                    (HsLit 
                                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                                    (HsLit 
                                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                                    (PlaceHolder))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-73 }
                                                   Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (1,-19),DP (1,-19)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "get" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,6)) "addCl" Nothing] [])
                                                   (BodyStmt 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-73 }
                                                     Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                                     (OpApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-56 }
                                                       Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-48 }
                                                         Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-44 }
                                                           Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                                                           (HsVar 
                                                            (Unqual {OccName: modifyArray}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:46-48 }
                                                           Just (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "." Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "if" Nothing,DComment (DP (0,1),DP (0,9)) "isLearnt" Nothing] [((G AnnVal),DP (0,-6))])
                                                           (HsVar 
                                                            (Unqual {OccName: arr}))))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:50-56 }
                                                         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:51-55 }
                                                           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                                           (HsApp 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:51-53 }
                                                             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: snd}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:55 }
                                                             Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "then" Nothing] [((G AnnVal),DP (0,-2))])
                                                             (HsVar 
                                                              (Unqual {OccName: p}))))))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:58 }
                                                       Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: $}))) 
                                                      (PlaceHolder) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:60-73 }
                                                       Just (Ann (DP (0,-4)) (ColDelta 26) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "learnt" Nothing] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:60-64 }
                                                         Just (Ann (DP (0,-4)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,-4))])
                                                         (HsVar 
                                                          (Unqual {OccName: const}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:66-73 }
                                                         Just (Ann (DP (0,-3)) (ColDelta 32) DP (0,1) [DComment (DP (0,0),DP (0,4)) "else" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:67-72 }
                                                           Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                                                           (SectionL 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:67-71 }
                                                             Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: annCl}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:72 }
                                                             Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,5)) "watches" Nothing),DP (0,-2)),((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Exact {Name: :}))))))))))) 
                                                    (HsLit 
                                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                                    (HsLit 
                                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                                    (PlaceHolder)))] 
                                                 (PlaceHolder)))))] 
                                            (EmptyLocalBinds))))] 
                                        [] 
                                        (PlaceHolder) 
                                        (FromSource)) 
                                       (WpHole) 
                                       (PlaceHolder) 
                                       []))]} 
                                    [])))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-77 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,4)) ")" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-77 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-36 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-28 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-17 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: get}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:19-21 }
                                         Just (Ann (DP (0,-2)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,3)) "return" Nothing] [((G AnnVal),DP (0,-2))])
                                         (HsVar 
                                          (Unqual {OccName: >>=}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:23-28 }
                                         Just (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,0),DP (0,4)) "True" Nothing] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: liftST}))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:30 }
                                       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: .}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:32-36 }
                                       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: addCl}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:38 }
                                     Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: .}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:40-77 }
                                     Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:41-76 }
                                       Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])
                                       (HsIf 
                                        (Just 
                                         (HsLit 
                                          (HsString "" {FastString: "noSyntaxExpr"}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:44-51 }
                                         Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: isLearnt}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:58-63 }
                                         Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: learnt}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:70-76 }
                                         Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: watches}))))))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15-25 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15-25 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15-20 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: return}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:22-25 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: True}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,1)-(693,26)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (1,1),DP (1,76)) "-- | Enqueue literal in the `propQ' and place it in the current assignment." Nothing,DComment (DP (1,1),DP (1,76)) "-- | Enqueue literal in the `propQ' and place it in the current assignment." Nothing,DComment (DP (0,-75),DP (0,1)) "-- If this conflicts with an existing assignment, returns @False@; otherwise" Nothing,DComment (DP (1,1),DP (1,73)) "-- returns @True@.  In case there is a conflict, the assignment is /not/" Nothing,DComment (DP (0,-72),DP (0,4)) "-- If this conflicts with an existing assignment, returns @False@; otherwise" Nothing,DComment (DP (1,1),DP (1,12)) "-- altered." Nothing,DComment (DP (0,-11),DP (0,61)) "-- returns @True@.  In case there is a conflict, the assignment is /not/" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,9)) "-- altered." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,68)) "-- Also records decision level, modifies trail, and records reason for" Nothing,DComment (DP (1,1),DP (1,15)) "-- assignment." Nothing,DComment (DP (0,-14),DP (0,56)) "-- Also records decision level, modifies trail, and records reason for" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "enqueue" Nothing,DComment (DP (0,-7),DP (0,7)) "-- assignment." Nothing,DComment (DP (0,-6),DP (0,-4)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:1-7 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: enqueue}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,12)-(693,26)
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,12)-(693,26)
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (1,9))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:12-24 }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:12-22 }
             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MAssignment}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:24 }
             Just (Ann (DP (0,9)) (ColDelta 24) DP (0,1) [DComment (DP (0,-11),DP (0,-8)) "Lit" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(688,12)-(693,26)
            }
           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,42)) "-- ^ The literal that has been assigned true." Nothing),DP (0,-3)),((AnnComment DComment (DP (1,9),DP (1,11)) "->" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,6)) "Maybe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-5),DP (0,40)) "-- ^ The literal that has been assigned true." Nothing),DP (0,-5)),((AnnComment DComment (DP (0,-39),DP (0,-38)) "(" Nothing),DP (0,-39)),((AnnComment DComment (DP (0,0),DP (0,6)) "Clause" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnRarrow),DP (2,9))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:688:12-14 }
             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Lit}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(690,12)-(693,26)
              }
             Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (1,12),DP (1,65)) "-- non-@Nothing@ value here adjusts the `reason' map." Nothing),DP (1,12)),((AnnComment DComment (DP (0,-53),DP (0,2)) "-- ^ The reason for enqueuing the literal.  Including a" Nothing),DP (0,-53)),((AnnComment DComment (DP (1,9),DP (1,11)) "->" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,45)) "-- non-@Nothing@ value here adjusts the `reason' map." Nothing),DP (0,-8)),((AnnComment DComment (DP (0,-44),DP (0,-43)) "s" Nothing),DP (0,-44)),((AnnComment DComment (DP (0,1),DP (0,5)) "Bool" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "{-# INLINE" Nothing),DP (0,0)),((G AnnRarrow),DP (3,9))])
             (HsFunTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:12-35 }
               Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:12-16 }
                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Maybe}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:18-35 }
                 Just (Ann (DP (0,-49)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,50)) "-- ^ The reason for enqueuing the literal.  Including a" Nothing] [((G AnnOpenP),DP (0,-49)),((G AnnCloseP),DP (0,0))])
                 (HsTupleTy 
                  (HsBoxedOrConstraintTuple) 
                  [
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:19-24 }
                    Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: Clause}))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:27-34 }
                    Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: ClauseId})))])))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:12-26 }
               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:12-21 }
                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:12-19 }
                   Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: FunMonad}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:21 }
                   Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-8),DP (0,-1)) "enqueue" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])
                   (HsTyVar 
                    (Unqual {OccName: s}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:23-26 }
                 Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Bool}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1-22 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:12-18 }
       Just (Ann (DP (0,-58)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,59)) "-- enqueue _m l _r | trace (\"enqueue \" ++ show l) $ False = undefined" Nothing] [((G AnnVal),DP (0,-58))])
       (Unqual {OccName: enqueue})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "enqueue" Nothing,DComment (DP (0,-7),DP (0,62)) "-- enqueue _m l _r | trace (\"enqueue \" ++ show l) $ False = undefined" Nothing,DComment (DP (0,-61),DP (0,-60)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:1-7 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: enqueue})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:1-7 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: enqueue})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:9 }
            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:11 }
            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: l}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:13 }
            Just (Ann (DP (0,-14)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-14))])
            (VarPat 
             (Unqual {OccName: r})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,15)-(709,19)
              }
             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,17)-(709,19)
                }
               Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(697,5)-(709,19) Ref "delta-84"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:5-28 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,1)) "case" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:5-7 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: mFr}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:12-28 }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "l" Nothing] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:12-26 }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: unsafeFreezeAss}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:28 }
                      Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-15),DP (0,-14)) "`" Nothing,DComment (DP (0,0),DP (0,11)) "statusUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing] [((G AnnVal),DP (0,-1))])
                      (HsVar 
                       (Unqual {OccName: m}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,3)) "of" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(699,7)-(709,19) Ref "delta-85"),DP (0,0))])
                    (HsCase 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:10-28 }
                      Just (Ann (DP (0,-2)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing] [])
                      (OpApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:10 }
                        Just (Ann (DP (0,-2)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-2))])
                        (HsVar 
                         (Unqual {OccName: l}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:12-24 }
                        Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-10)) "b" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: statusUnder}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:26-28 }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,1)) "b" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: mFr}))))) 
                     (MG 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-25 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-13 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-11 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: Right})) 
                            (PrefixCon 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:13 }
                               Just (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "Left" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
                               (VarPat 
                                (Unqual {OccName: b})))])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:15-25 }
                            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:18-25 }
                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:18-23 }
                                Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: return}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:25 }
                                Just (Ann (DP (0,5)) (ColDelta 18) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "do" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: b})))))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,7)-(709,19)
                         }
                        Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,9),DP (0,37)) "-- conflict/already assigned" Nothing] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:7-13 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:7-10 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Unqual {OccName: Left})) 
                            (PrefixCon 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12-13 }
                               Just (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [])
                               (ConPatIn 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12-13 }
                                 Just (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                 (Exact {Name: ()})) 
                                (PrefixCon 
                                 [])))])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,15)-(709,19)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,18)-(709,19)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(701,9)-(709,19) Ref "delta-86"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-29 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-29 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-18 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-14 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftST}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:16 }
                                       Just (Ann (DP (0,-29)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,30)) "-- assign decision level for literal" Nothing] [((G AnnVal),DP (0,-29))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:18 }
                                       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: m}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:20-27 }
                                     Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: assign}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:29 }
                                     Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: l}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,9)-(704,52)
                                  }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "gets" Nothing,DComment (DP (0,-4),DP (0,32)) "-- assign decision level for literal" Nothing,DComment (DP (0,-31),DP (0,-30)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "level" Nothing,DComment (DP (0,1),DP (0,4)) "&&&" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "levelArr" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "dlInt" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,9)-(704,52)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:9-38 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:9-12 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: gets}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:14-38 }
                                       Just (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,4)) "liftST" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:15-37 }
                                         Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                         (OpApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:15-19 }
                                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: level}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:21-23 }
                                           Just (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,10)) "writeArray" Nothing] [((G AnnVal),DP (0,-8))])
                                           (HsVar 
                                            (Unqual {OccName: &&&}))) 
                                          (PlaceHolder) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:25-37 }
                                           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:26-36 }
                                             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                             (OpApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:26-31 }
                                               Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: length}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:33 }
                                               Just (Ann (DP (0,-5)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,6)) "levelArr" Nothing] [((G AnnVal),DP (0,-5))])
                                               (HsVar 
                                                (Unqual {OccName: .}))) 
                                              (PlaceHolder) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:35-36 }
                                               Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: dl}))))))))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:40-42 }
                                     Just (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: >>=}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52)
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52) Ref "delta-87"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52)
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:45-61 }
                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                            (TuplePat 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:46-53 }
                                               Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-2)) "dlInt" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
                                               (VarPat 
                                                (Unqual {OccName: levelArr}))),
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:56-60 }
                                               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (VarPat 
                                                (Unqual {OccName: dlInt})))] 
                                             (Boxed) 
                                             []))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:11-52 }
                                             Just (Ann (DP (0,-4)) (ColDelta -33) DP (1,-33) [DComment (DP (1,-35),DP (1,-35)) "" Nothing,DComment (DP (0,0),DP (0,6)) "modify" Nothing] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:11-52 }
                                               Just (Ann (DP (0,-4)) (ColDelta -33) DP (1,-33) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:11-16 }
                                                 Just (Ann (DP (0,-4)) (ColDelta -33) DP (1,-33) [] [((G AnnVal),DP (0,-4))])
                                                 (HsVar 
                                                  (Unqual {OccName: liftST}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:18-52 }
                                                 Just (Ann (DP (0,1)) (ColDelta -26) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) ")" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])
                                                 (HsPar 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-51 }
                                                   Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-45 }
                                                     Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-37 }
                                                       Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-28 }
                                                         Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: writeArray}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:30-37 }
                                                         Just (Ann (DP (0,-2)) (ColDelta -14) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "trail" Nothing] [((G AnnVal),DP (0,-2))])
                                                         (HsVar 
                                                          (Unqual {OccName: levelArr}))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:39-45 }
                                                       Just (Ann (DP (0,1)) (ColDelta -5) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) ":" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:40-44 }
                                                         Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:40-42 }
                                                           Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: var}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:44 }
                                                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "trail" Nothing] [((G AnnVal),DP (0,-1))])
                                                           (HsVar 
                                                            (Unqual {OccName: l}))))))))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:47-51 }
                                                     Just (Ann (DP (0,0)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,1)) "s" Nothing] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: dlInt})))))))))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,9)-(706,52)
                                  }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,9)-(706,52)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:9-14 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: modify}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:16 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52)
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52) Ref "delta-88"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52)
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:19 }
                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: s})))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,24)-(706,52)
                                              }
                                             Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,24)-(706,52)
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                               (RecordUpd 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:24 }
                                                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: s}))) 
                                                (HsRecFields 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:27-47 }
                                                   Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,3)) "l" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,-9),DP (1,-9)) "" Nothing),DP (1,-9)),((AnnComment DComment (DP (0,0),DP (0,4)) "when" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "isJust" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,7))])
                                                   (HsRecField 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:27-31 }
                                                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (Unqual {OccName: trail})) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:35-47 }
                                                     Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                                                     (OpApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:35 }
                                                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: l}))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:37 }
                                                       Just (Ann (DP (0,-3)) (ColDelta 19) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "propQ" Nothing] [((G AnnVal),DP (0,-3))])
                                                       (HsVar 
                                                        (Exact {Name: :}))) 
                                                      (PlaceHolder) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:39-47 }
                                                       Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:40-46 }
                                                         Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:40-44 }
                                                           Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Unqual {OccName: trail}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:46 }
                                                           Just (Ann (DP (0,-3)) (ColDelta 28) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "s" Nothing,DComment (DP (0,1),DP (0,7)) "Seq.|>" Nothing] [((G AnnVal),DP (0,-3))])
                                                           (HsVar 
                                                            (Unqual {OccName: s}))))))))) 
                                                    (False))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:27-50 }
                                                   Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                                   (HsRecField 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:27-31 }
                                                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (Unqual {OccName: propQ})) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-50 }
                                                     Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                                                     (OpApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-41 }
                                                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-39 }
                                                         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: propQ}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:41 }
                                                         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: s}))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:43-48 }
                                                       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Qual {ModuleName: Seq} {OccName: |>}))) 
                                                      (PlaceHolder) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:50 }
                                                       Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: l}))))) 
                                                    (False)))] 
                                                 (Nothing)) 
                                                [] 
                                                [] 
                                                []))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,83)
                                  }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,83)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,27)
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:9-23 }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:9-12 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: when}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:14-23 }
                                         Just (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "modifySlot" Nothing] [((G AnnOpenP),DP (0,-7)),((AnnComment DComment (DP (0,-1),DP (0,5)) "reason" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                         (HsPar 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:15-22 }
                                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                           (HsApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:15-20 }
                                             Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: isJust}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:22 }
                                             Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: r}))))))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:25 }
                                       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:11-27 }
                                       Just (Ann (DP (0,-4)) (ColDelta 2) DP (1,2) [DComment (DP (0,3),DP (0,4)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,6)) "reason" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,11)) "Map.insert" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "fromJust" Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:11-20 }
                                         Just (Ann (DP (0,-4)) (ColDelta 2) DP (1,2) [] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: modifySlot}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:22-27 }
                                         Just (Ann (DP (0,2)) (ColDelta 13) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "True" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: reason}))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:29 }
                                     Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 }
                                     Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 Ref "delta-89"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:32 }
                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: s}))),
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:34 }
                                            Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: m})))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39-83 }
                                             Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39-83 }
                                               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                               (RecordUpd 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39 }
                                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: s}))) 
                                                (HsRecFields 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:41-82 }
                                                   Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                                   (HsRecField 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:41-46 }
                                                     Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (Unqual {OccName: reason})) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-82 }
                                                     Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-80 }
                                                       Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-67 }
                                                         Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-59 }
                                                           Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (HsVar 
                                                            (Qual {ModuleName: Map} {OccName: insert}))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:61-67 }
                                                           Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                           (HsPar 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:62-66 }
                                                             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                                                             (HsApp 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:62-64 }
                                                               Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: var}))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:66 }
                                                               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: l}))))))))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:69-80 }
                                                         Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:70-79 }
                                                           Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
                                                           (HsApp 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:70-77 }
                                                             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: fromJust}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:79 }
                                                             Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: r}))))))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:82 }
                                                       Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: m}))))) 
                                                    (False)))] 
                                                 (Nothing)) 
                                                [] 
                                                [] 
                                                []))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9-19 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9-19 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9-14 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: return}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:16-19 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: True}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1-25 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,53)) "-- | Pop the `propQ'.  Error (crash) if it is empty." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "dequeue" Nothing,DComment (DP (0,-7),DP (0,45)) "-- | Pop the `propQ'.  Error (crash) if it is empty." Nothing,DComment (DP (0,-44),DP (0,-42)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,4)) "Lit" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,3)) "{-# INLINE" Nothing),DP (0,-7)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1-7 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: dequeue}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-25 }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-25 }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-21 }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-19 }
             Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FunMonad}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:21 }
             Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-8),DP (0,-1)) "dequeue" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:23-25 }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Lit}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1-22 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:12-18 }
       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-3)) "dequeue" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,-1))])
       (Unqual {OccName: dequeue})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:1-7 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: dequeue})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "q" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:1-7 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: dequeue})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,9)-(720,18)
              }
             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,11)-(720,18)
                }
               Just (Ann (DP (0,-3)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,4)) "gets" Nothing] [((G AnnDo),DP (0,-3)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(715,5)-(720,18) Ref "delta-90"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:5-19 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "case" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:5 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: q}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:10-19 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:10-13 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:15-19 }
                      Just (Ann (DP (0,-4)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,5)) "Seq.viewl" Nothing] [((G AnnVal),DP (0,-4))])
                      (HsVar 
                       (Unqual {OccName: propQ}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(716,5)-(720,18)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "q" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(716,5)-(720,18)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "error" Nothing),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(717,7)-(720,18) Ref "delta-91"),DP (0,0))])
                    (HsCase 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:10-20 }
                      Just (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,10)) "Seq.EmptyL" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:10-18 }
                        Just (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-7))])
                        (HsVar 
                         (Qual {ModuleName: Seq} {OccName: viewl}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:20 }
                        Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: q}))))) 
                     (MG 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-50 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-16 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-16 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Qual {ModuleName: Seq} {OccName: EmptyL})) 
                            (PrefixCon 
                             [])))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:18-50 }
                            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-10),DP (0,-7)) "top" Nothing,DComment (DP (0,1),DP (0,7)) "Seq.:<" Nothing] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:21-50 }
                              Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:21-25 }
                                Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: error}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:27-50 }
                                Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])
                                (HsLit 
                                 (HsString "\"dequeue of empty propQ\"" {FastString: "dequeue of empty propQ"})))))))] 
                          (EmptyLocalBinds)))),
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,7)-(720,18)
                         }
                        Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                        (Match 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:7-19 }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:11-16 }
                             Just (Ann (DP (0,-4)) (ColDelta 4) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "modify" Nothing] [((G AnnVal),DP (0,-4))])
                             (Qual {ModuleName: Seq} {OccName: :<})) 
                            (InfixCon 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:7-9 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: top}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:18-19 }
                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: q'}))))))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,21)-(720,18)
                             }
                            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing] [((G AnnRarrow),DP (0,0))])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,24)-(720,18)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(719,9)-(720,18) Ref "delta-92"),DP (0,0))])
                              (HsDo 
                               (DoExpr) 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-36 }
                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-36 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-14 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: modify}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:16 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 }
                                     Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "top" Nothing] [((G AnnLam),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 Ref "delta-93"),DP (0,0))])
                                     (HsLam 
                                      (MG 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 }
                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                         (Match 
                                          (Nothing) 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:19 }
                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (VarPat 
                                             (Unqual {OccName: s})))] 
                                          (Nothing) 
                                          (GRHSs 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24-36 }
                                             Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                             (GRHS 
                                              [] 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24-36 }
                                               Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                               (RecordUpd 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24 }
                                                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: s}))) 
                                                (HsRecFields 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:26-35 }
                                                   Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                                   (HsRecField 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:26-30 }
                                                     Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (Unqual {OccName: propQ})) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:34-35 }
                                                     Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: q'}))) 
                                                    (False)))] 
                                                 (Nothing)) 
                                                [] 
                                                [] 
                                                []))))] 
                                           (EmptyLocalBinds))))] 
                                       [] 
                                       (PlaceHolder) 
                                       (FromSource)))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder))),
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9-18 }
                                 Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                 (BodyStmt 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9-18 }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9-14 }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: return}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:16-18 }
                                     Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: top}))))) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"})) 
                                  (PlaceHolder)))] 
                               (PlaceHolder)))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1-27 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,24)) "-- | Clear the `propQ'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "clearQueue" Nothing,DComment (DP (0,-10),DP (0,13)) "-- | Clear the `propQ'." Nothing,DComment (DP (0,-12),DP (0,-10)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1-10 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: clearQueue}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-27 }
       Just (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "clearQueue" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-27 }
         Just (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-24 }
           Just (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-22 }
             Just (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-7))])
             (HsTyVar 
              (Unqual {OccName: FunMonad}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:24 }
             Just (Ann (DP (0,-2)) (ColDelta 24) DP (0,1) [DComment (DP (0,0),DP (0,3)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:26-27 }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
           (HsTupleTy 
            (HsBoxedOrConstraintTuple) 
            [])))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1-25 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "=" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,7)) "modify" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:12-21 }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: clearQueue})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,-2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,5)) "propQ" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "Seq.empty" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-10 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: clearQueue})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-10 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: clearQueue})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:12-48 }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:14-48 }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:14-19 }
                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: modify}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:21 }
                 Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 }
                 Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 Ref "delta-94"),DP (0,0))])
                 (HsLam 
                  (MG 
                   [
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 }
                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                     (Match 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:24 }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: s})))] 
                      (Nothing) 
                      (GRHSs 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29-48 }
                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                         (GRHS 
                          [] 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29-48 }
                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                           (RecordUpd 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29 }
                             Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: s}))) 
                            (HsRecFields 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:31-47 }
                               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                               (HsRecField 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:31-35 }
                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (Unqual {OccName: propQ})) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:39-47 }
                                 Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Qual {ModuleName: Seq} {OccName: empty}))) 
                                (False)))] 
                             (Nothing)) 
                            [] 
                            [] 
                            []))))] 
                       (EmptyLocalBinds))))] 
                   [] 
                   (PlaceHolder) 
                   (FromSource))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1-57 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,33)) "-- *** Dynamic variable ordering" Nothing,DComment (DP (1,1),DP (1,33)) "-- *** Dynamic variable ordering" Nothing,DComment (DP (1,1),DP (1,67)) "-- | Modify priority of variable; takes care of @Double@ overflow." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,11)) "varOrderMod" Nothing,DComment (DP (0,-11),DP (0,55)) "-- | Modify priority of variable; takes care of @Double@ overflow." Nothing,DComment (DP (0,-54),DP (0,-52)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "Double" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "Double" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1-11 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: varOrderMod}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-57 }
       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-57 }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-18 }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Var}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-57 }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-40 }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:24-39 }
               Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
               (HsFunTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:24-29 }
                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Double}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:34-39 }
                 Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Double}))))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:45-57 }
             Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:45-54 }
               Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:45-52 }
                 Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: FunMonad}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:54 }
                 Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: s}))))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:56-57 }
               Just (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsTupleTy 
                (HsBoxedOrConstraintTuple) 
                [])))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:1-11 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: varOrderMod})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:1-11 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: varOrderMod})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:13 }
            Just (Ann (DP (0,-9)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,2)) "vo" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "varOrderArr" Nothing] [((G AnnVal),DP (0,-9))])
            (VarPat 
             (Unqual {OccName: v}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:15 }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: f})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,17)-(739,65)
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,19)-(735,42)
                }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(732,5)-(735,42) Ref "delta-95"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:5-43 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,7)) "vActivity" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:5-6 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: vo}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:11-43 }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:11-21 }
                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: varOrderArr}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:23-29 }
                      Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-7),DP (0,-5)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnBackquote),DP (0,-1)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "$" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,10)) "readArray" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:31-43 }
                      Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:31-34 }
                        Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: gets}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:36-43 }
                        Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: varOrder}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5-40 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-5)) "vo" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing] [((AnnComment DComment (DP (0,-9),DP (0,-5)) "when" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "f" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "vActivity" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5-13 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: vActivity}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:18-40 }
                    Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:18-23 }
                      Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:25 }
                      Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ">" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:27-40 }
                      Just (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "1e100" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:27-38 }
                        Just (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:27-35 }
                          Just (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,-3))])
                          (HsVar 
                           (Unqual {OccName: readArray}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:37-38 }
                          Just (Ann (DP (0,-14)) (ColDelta 32) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,18)) "rescaleActivities" Nothing] [((G AnnVal),DP (0,-14))])
                          (HsVar 
                           (Unqual {OccName: vo}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:40 }
                        Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: v}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-53 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,11),DP (0,13)) "vo" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-53 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-30 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-8 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: when}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:10-30 }
                        Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,2)) "liftST" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "vo" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "v" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11-29 }
                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11-21 }
                            Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11 }
                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: f}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:13-21 }
                              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: vActivity}))))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:23 }
                            Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-8),DP (0,2)) "writeArray" Nothing] [((G AnnVal),DP (0,-1))])
                            (HsVar 
                             (Unqual {OccName: >}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:25-29 }
                            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsOverLit {HsOverLit:1e100})))))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:32 }
                      Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "f" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:34-53 }
                      Just (Ann (DP (0,-8)) (ColDelta 29) DP (0,1) [DComment (DP (0,0),DP (0,9)) "vActivity" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:34-50 }
                        Just (Ann (DP (0,-8)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,-8))])
                        (HsVar 
                         (Unqual {OccName: rescaleActivities}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:52-53 }
                        Just (Ann (DP (0,9)) (ColDelta 47) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) ")" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: vo}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-42 }
                  Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-42 }
                    Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-10 }
                      Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                      (HsVar 
                       (Unqual {OccName: liftST}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:12 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-42 }
                      Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-28 }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-26 }
                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-23 }
                            Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: writeArray}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:25-26 }
                            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: vo}))))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:28 }
                          Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: v}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:30-42 }
                        Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:31-41 }
                          Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:31 }
                            Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: f}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:33-41 }
                            Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: vActivity}))))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:5-21 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: rescaleActivities})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:5-21 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: rescaleActivities})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:23-24 }
                      Just (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [DComment (DP (0,-13),DP (0,-13)) "" Nothing,DComment (DP (0,0),DP (0,7)) "indices" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,6)) "range" Nothing] [((G AnnVal),DP (0,-2))])
                      (VarPat 
                       (Unqual {OccName: vo})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,26)-(739,65)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,28)-(739,65)
                          }
                         Just (Ann (DP (0,-4)) (ColDelta 23) DP (0,1) [DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [])
                         (OpApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:28-33 }
                           Just (Ann (DP (0,-4)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,-4))])
                           (HsVar 
                            (Unqual {OccName: liftST}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:35 }
                           Just (Ann (DP (0,-8)) (ColDelta 30) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "`" Nothing,DComment (DP (0,1),DP (0,10)) "getBounds" Nothing] [((G AnnVal),DP (0,-8))])
                           (HsVar 
                            (Unqual {OccName: $}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,37)-(739,65)
                            }
                           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(738,9)-(739,65) Ref "delta-96"),DP (0,0))])
                           (HsDo 
                            (DoExpr) 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:9-45 }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-2)) "forM_" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,8)) "indices" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:9-15 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: indices}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:20-45 }
                                Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:20-24 }
                                  Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: range}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:26-32 }
                                  Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "->" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,12)) "modifyArray" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: liftM}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:34-45 }
                                  Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:34-42 }
                                    Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: getBounds}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:44-45 }
                                    Just (Ann (DP (0,0)) (ColDelta 35) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "vo" Nothing] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: vo}))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-65 }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "i" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "*" Nothing,DComment (DP (0,1),DP (0,7)) "1e-100" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-65 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-21 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-13 }
                                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: forM_}))) 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:15-21 }
                                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: indices}))))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:23-65 }
                                  Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 }
                                    Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 Ref "delta-97"),DP (0,0))])
                                    (HsLam 
                                     (MG 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 }
                                        Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                        (Match 
                                         (Nothing) 
                                         [
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:25 }
                                           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (VarPat 
                                            (Unqual {OccName: i})))] 
                                         (Nothing) 
                                         (GRHSs 
                                          [
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-64 }
                                            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                            (GRHS 
                                             [] 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-64 }
                                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                              (OpApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-45 }
                                                Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                (HsApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-43 }
                                                  Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                  (HsApp 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-40 }
                                                    Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: modifyArray}))) 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:42-43 }
                                                    Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: vo}))))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:45 }
                                                  Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: i}))))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:47 }
                                                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: $}))) 
                                               (PlaceHolder) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:49-64 }
                                                Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                                (HsApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:49-53 }
                                                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: const}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:55-64 }
                                                  Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                  (HsPar 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:56-63 }
                                                    Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                                                    (SectionR 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:56 }
                                                      Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                      (HsVar 
                                                       (Unqual {OccName: *}))) 
                                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:58-63 }
                                                      Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                      (HsOverLit {HsOverLit:1e-100}))))))))))))] 
                                          (EmptyLocalBinds))))] 
                                      [] 
                                      (PlaceHolder) 
                                      (FromSource)))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder)))] 
                            (PlaceHolder)))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1-57 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,69)) "-- | Retrieve the maximum-priority variable from the variable order." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "varOrderGet" Nothing,DComment (DP (0,-11),DP (0,57)) "-- | Retrieve the maximum-priority variable from the variable order." Nothing,DComment (DP (0,-56),DP (0,-54)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,15)) "FrozenVarOrder" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing] [((AnnComment DComment (DP (0,-11),DP (0,-1)) "{-# INLINE" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,12)) "varOrderGet" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1-11 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: varOrderGet}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-57 }
       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-57 }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,0)) "#-}" Nothing),DP (0,-3)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-26 }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IAssignment}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:31-57 }
           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:31-44 }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FrozenVarOrder}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:49-57 }
             Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:49-53 }
               Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:55-57 }
               Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Var}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1-26 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-7)) "mFr" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,14)) "FrozenVarOrder" Nothing),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:12-22 }
       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,1)) "varOrderGet" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: varOrderGet})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,10)) "voFr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:1-11 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: varOrderGet})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:1-11 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: varOrderGet})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:13-15 }
            Just (Ann (DP (0,-64)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,65)) "-- find highest var undef under mFr, then find one with highest activity" Nothing] [((G AnnVal),DP (0,-64))])
            (VarPat 
             (Unqual {OccName: mFr}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:17-37 }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:18-36 }
              Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
              (ConPatIn 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:18-31 }
                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: FrozenVarOrder})) 
               (PrefixCon 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:33-36 }
                  Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: voFr})))])))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,39)-(761,64)
              }
             Just (Ann (DP (0,-1)) (ColDelta 39) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-68 }
               Just (Ann (DP (0,-3)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,6)) "(" Nothing,DComment (DP (0,-1),DP (0,71)) "-- find highest var undef under mFr, then find one with highest activity" Nothing,DComment (DP (0,-71),DP (0,-70)) "`" Nothing,DComment (DP (0,0),DP (0,4)) "fmap" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,8)) "goUndef" Nothing,DComment (DP (0,1),DP (0,13)) "highestIndex" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,5)) "start" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,11)) "goActivity" Nothing,DComment (DP (0,1),DP (0,6)) "start" Nothing,DComment (DP (0,1),DP (0,6)) "start" Nothing,DComment (DP (1,3),DP (1,8)) "where" Nothing] [])
               (OpApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-33 }
                 Just (Ann (DP (0,-3)) (ColDelta 5) DP (2,5) [] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                 (HsPar 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6-32 }
                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                   (SectionR 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6-11 }
                     Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: fmap}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:13-32 }
                     Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:13-19 }
                       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: goUndef}))) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:21-32 }
                       Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: highestIndex}))))))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:35 }
                 Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 }
                 Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 Ref "delta-98"),DP (0,0))])
                 (HsLam 
                  (MG 
                   [
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 }
                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                     (Match 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:38-42 }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: start})))] 
                      (Nothing) 
                      (GRHSs 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-68 }
                         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                         (GRHS 
                          [] 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-68 }
                           Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-62 }
                             Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-56 }
                               Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: goActivity}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:58-62 }
                               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: start}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:64-68 }
                             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: start})))))))] 
                       (EmptyLocalBinds))))] 
                   [] 
                   (PlaceHolder) 
                   (FromSource))))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38 }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-16 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: highestIndex})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-1)) "maxActivity" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "v" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-16 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: highestIndex})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:18-38 }
                       Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-38 }
                         Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,2)) "v'" Nothing] [])
                         (OpApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-31 }
                           Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-22 }
                             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                             (HsVar 
                              (Unqual {OccName: snd}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:24 }
                             Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: .}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:26-31 }
                             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "if" Nothing] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: bounds}))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:33 }
                           Just (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "voFr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "v" Nothing] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: $}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:35-38 }
                           Just (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,0),DP (0,1)) ">" Nothing] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: voFr})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57 }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,1)) "voFr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,2)) "v'" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,5)) "else" Nothing,DComment (DP (0,1),DP (0,3)) "v'" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-15 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: maxActivity})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-15 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: maxActivity})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:17 }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: v}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:19-20 }
                      Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: v'})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:22-57 }
                       Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:24-57 }
                         Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])
                         (HsIf 
                          (Just 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-42 }
                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-39 }
                             Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-32 }
                               Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-30 }
                                 Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: voFr}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:31 }
                                 Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: !}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:32 }
                                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: v}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:34 }
                               Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: >}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:36-39 }
                               Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: voFr}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:40 }
                             Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: !}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:41-42 }
                             Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: v'}))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:49 }
                           Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: v}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:56-57 }
                           Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: v'})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(753,5)-(756,57)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,60)) "-- @goActivity current highest@ returns highest-activity var" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "goActivity" Nothing,DComment (DP (0,-10),DP (0,50)) "-- @goActivity current highest@ returns highest-activity var" Nothing,DComment (DP (0,-49),DP (0,-48)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "h" Nothing,DComment (DP (0,3),DP (0,4)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "h" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-14 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: goActivity})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-30 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "!" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "h" Nothing),DP (0,0)),((G AnnEqual),DP (0,3))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-14 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: goActivity})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-21 }
                      Just (Ann (DP (0,-10)) (ColDelta 0) DP (0,-10) [] [((G AnnBang),DP (0,1))])
                      (BangPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:17-21 }
                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (ParPat 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:18-20 }
                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:18 }
                            Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: V})) 
                           (PrefixCon 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:20 }
                              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])
                              (NPat 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:20 }
                                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))]){HsOverLit:0}) 
                               (Nothing) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"}))))]))))))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-24 }
                      Just (Ann (DP (0,-17)) (ColDelta 0) DP (0,-17) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "n" Nothing),DP (0,0)),((G AnnBang),DP (0,1))])
                      (BangPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:24 }
                        Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: h})))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:28-30 }
                       Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:30 }
                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: h})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,5)-(756,57)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "if" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isUndefUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-14 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: goActivity})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-23 }
                      Just (Ann (DP (0,-10)) (ColDelta 0) DP (0,-10) [] [((G AnnBang),DP (0,1))])
                      (BangPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:17-23 }
                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnAt),DP (0,0))])
                        (AsPat 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:17 }
                          Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: v})) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:19-23 }
                          Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (ParPat 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:20-22 }
                            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                            (ConPatIn 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:20 }
                              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (Unqual {OccName: V})) 
                             (PrefixCon 
                              [
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:22 }
                                Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: n})))]))))))))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-26 }
                      Just (Ann (DP (0,-19)) (ColDelta 0) DP (0,-19) [] [((G AnnBang),DP (0,1))])
                      (BangPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:26 }
                        Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: h})))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,28)-(756,57)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,30)-(756,57)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "n" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,1)) "-" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "1" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "v" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "maxActivity" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,25)),((G AnnElse),DP (1,25))])
                         (HsIf 
                          (Just 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:33-52 }
                           Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "then" Nothing] [])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:33 }
                             Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                             (HsVar 
                              (Unqual {OccName: v}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:35-48 }
                             Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "goActivity" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "V" Nothing),DP (0,0)),((G AnnBackquote),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: isUndefUnder}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:50-52 }
                             Just (Ann (DP (0,-1)) (ColDelta 45) DP (0,1) [DComment (DP (0,0),DP (0,2)) "$!" Nothing] [((G AnnVal),DP (0,-1))])
                             (HsVar 
                              (Unqual {OccName: mFr}))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:35-75 }
                           Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:35-55 }
                             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:35-44 }
                               Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: goActivity}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:46-55 }
                               Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47-54 }
                                 Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47-52 }
                                   Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47 }
                                     Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: V}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:49-50 }
                                     Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $!}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:52 }
                                     Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: n}))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:53 }
                                   Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: -}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:54 }
                                   Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsOverLit {HsOverLit:1})))))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:57-75 }
                             Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:58-74 }
                               Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:58 }
                                 Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: v}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:60-72 }
                                 Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: maxActivity}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:74 }
                                 Just (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: h}))))))))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:35-57 }
                           Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:35-55 }
                             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:35-44 }
                               Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: goActivity}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:46-55 }
                               Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                               (HsPar 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47-54 }
                                 Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47-52 }
                                   Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47 }
                                     Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: V}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:49-50 }
                                     Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $!}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:52 }
                                     Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: n}))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:53 }
                                   Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: -}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:54 }
                                   Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsOverLit {HsOverLit:1})))))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:57 }
                             Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: h})))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(759,5)-(761,64)
                }
               Just (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,46)) "-- returns highest var that is undef under mFr" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "goUndef" Nothing,DComment (DP (0,-7),DP (0,39)) "-- returns highest var that is undef under mFr" Nothing,DComment (DP (0,-38),DP (0,-37)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-11 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: goUndef})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-28 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "n" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-11 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: goUndef})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-18 }
                      Just (Ann (DP (0,-7)) (ColDelta 0) DP (0,-7) [] [((G AnnBang),DP (0,1))])
                      (BangPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:14-18 }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (ParPat 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:15-17 }
                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:15 }
                            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: V})) 
                           (PrefixCon 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:17 }
                              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])
                              (NPat 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:17 }
                                Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))]){HsOverLit:0}) 
                               (Nothing) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"}))))])))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:20-28 }
                       Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:22-28 }
                         Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Nothing})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(760,5)-(761,64)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-6)) "|" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isUndefUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing] [])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-11 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: goUndef})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-20 }
                      Just (Ann (DP (0,-7)) (ColDelta 0) DP (0,-7) [] [((G AnnBang),DP (0,1))])
                      (BangPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:14-20 }
                        Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnAt),DP (0,0))])
                        (AsPat 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:14 }
                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: v})) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:16-20 }
                          Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (ParPat 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:17-19 }
                            Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                            (ConPatIn 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:17 }
                              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (Unqual {OccName: V})) 
                             (PrefixCon 
                              [
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:19 }
                                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: n})))])))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:22-52 }
                       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24-43 }
                          Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24-43 }
                            Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24 }
                              Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: v}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:26-39 }
                              Just (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "otherwise" Nothing] [((G AnnBackquote),DP (0,-7)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: isUndefUnder}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:41-43 }
                              Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: mFr}))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:47-52 }
                         Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:47-50 }
                           Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: Just}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:52 }
                           Just (Ann (DP (0,-2)) (ColDelta 47) DP (0,1) [DComment (DP (0,-4),DP (0,3)) "goUndef" Nothing] [((G AnnVal),DP (0,-2))])
                           (HsVar 
                            (Unqual {OccName: v}))))))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:22-64 }
                       Just (Ann (DP (1,17)) (ColDelta 17) DP (1,17) [DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,3)) "$!" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,0),DP (0,1)) "-" Nothing,DComment (DP (0,0),DP (0,1)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,12))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:24-32 }
                          Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:24-32 }
                            Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: otherwise}))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:47-64 }
                         Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:47-53 }
                           Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: goUndef}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:55-64 }
                           Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56-63 }
                             Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56-61 }
                               Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56 }
                                 Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: V}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:58-59 }
                                 Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: $!}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:61 }
                                 Just (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: n}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:62 }
                               Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: -}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:63 }
                               Just (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsOverLit {HsOverLit:1}))))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1-29 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,55)) "-- | Generate a new clause identifier (always unique)." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "nextTraceId" Nothing,DComment (DP (0,-11),DP (0,43)) "-- | Generate a new clause identifier (always unique)." Nothing,DComment (DP (0,-42),DP (0,-40)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,4)) "Int" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1-11 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: nextTraceId}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-29 }
       Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-29 }
         Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-25 }
           Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-23 }
             Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-1))])
             (HsTyVar 
              (Unqual {OccName: FunMonad}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:25 }
             Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:27-29 }
           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:1-11 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: nextTraceId})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-7)) "" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,7)) "counter" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:1-11 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: nextTraceId})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,13)-(770,21)
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,15)-(770,21)
                }
               Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(767,5)-(770,21) Ref "delta-99"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:5-55 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,3)) "modifySlot" Nothing),DP (0,-7)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:5-11 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: counter}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:16-55 }
                    Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:16-19 }
                      Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:21-55 }
                      Just (Ann (DP (0,-10)) (ColDelta 16) DP (0,1) [DComment (DP (0,-4),DP (0,11)) "resolutionTrace" Nothing] [((G AnnOpenP),DP (0,-10)),((AnnComment DComment (DP (0,-15),DP (0,-13)) "->" Nothing),DP (0,-15)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:22-54 }
                        Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:22-36 }
                          Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: resTraceIdCount}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:38 }
                          Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing] [((G AnnVal),DP (0,-1))])
                          (HsVar 
                           (Unqual {OccName: .}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:40-54 }
                          Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: resolutionTrace}))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,5)-(769,66)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,5)-(769,66)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:5-30 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:5-14 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: modifySlot}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:16-30 }
                        Just (Ann (DP (0,-11)) (ColDelta 11) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-11))])
                        (HsVar 
                         (Unqual {OccName: resolutionTrace}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:32 }
                      Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66) Ref "delta-100"),DP (0,0))])
                      (HsLam 
                       (MG 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66)
                           }
                          Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:35 }
                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,14)) "resTraceIdCount" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: s}))),
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:37-38 }
                             Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: rt})))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9-66 }
                              Just (Ann (DP (0,-2)) (ColDelta -25) DP (1,-25) [DComment (DP (0,8),DP (0,9)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "succ" Nothing,DComment (DP (0,1),DP (0,8)) "counter" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (1,-29),DP (1,-29)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9-66 }
                                Just (Ann (DP (0,-2)) (ColDelta -25) DP (1,-25) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                (RecordUpd 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9 }
                                  Just (Ann (DP (0,-2)) (ColDelta -25) DP (1,-25) [] [((G AnnVal),DP (0,-2))])
                                  (HsVar 
                                   (Unqual {OccName: s}))) 
                                 (HsRecFields 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:12-65 }
                                    Just (Ann (DP (0,1)) (ColDelta -22) DP (0,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-13)) "$!" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,8)) "counter" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                                    (HsRecField 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:12-26 }
                                      Just (Ann (DP (0,0)) (ColDelta -22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (Unqual {OccName: resolutionTrace})) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:30-65 }
                                      Just (Ann (DP (0,1)) (ColDelta -4) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                      (RecordUpd 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:30-31 }
                                        Just (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: rt}))) 
                                       (HsRecFields 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:34-63 }
                                          Just (Ann (DP (0,1)) (ColDelta 0) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                          (HsRecField 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:34-48 }
                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (Unqual {OccName: resTraceIdCount})) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:52-63 }
                                            Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:52-55 }
                                              Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: succ}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:57-63 }
                                              Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: counter}))))) 
                                           (False)))] 
                                        (Nothing)) 
                                       [] 
                                       [] 
                                       [])) 
                                     (False)))] 
                                  (Nothing)) 
                                 [] 
                                 [] 
                                 []))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-21 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-21 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-10 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:12-13 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $!}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:15-21 }
                      Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: counter}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1-42 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,43)) "-- | Add the given clause id to the trace." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,13)) "traceClauseId" Nothing,DComment (DP (0,-13),DP (0,29)) "-- | Add the given clause id to the trace." Nothing,DComment (DP (0,-28),DP (0,-26)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1-13 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: traceClauseId}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-42 }
       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "cid" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-42 }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "=" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-25 }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: ClauseId}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:30-42 }
           Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:30-39 }
             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:30-37 }
               Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:39 }
               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:41-42 }
             Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:1-13 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: traceClauseId})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,13)) "resolutionTrace" Nothing),DP (0,-2)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:1-13 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: traceClauseId})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:15-17 }
            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,10)) "modifySlot" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: cid})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,19)-(776,51)
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,21)-(776,51)
                }
               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51) Ref "delta-101"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51)
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:5-30 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:5-14 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: modifySlot}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:16-30 }
                        Just (Ann (DP (0,-10)) (ColDelta 11) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,15)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-10))])
                        (HsVar 
                         (Unqual {OccName: resolutionTrace}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:32 }
                      Just (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: $}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51)
                       }
                      Just (Ann (DP (0,-7)) (ColDelta 29) DP (0,1) [DComment (DP (0,0),DP (0,8)) "resTrace" Nothing] [((G AnnLam),DP (0,-7)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51) Ref "delta-102"),DP (0,0))])
                      (HsLam 
                       (MG 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51)
                           }
                          Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:35 }
                             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: s}))),
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:37-38 }
                             Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (VarPat 
                              (Unqual {OccName: rt})))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9-51 }
                              Just (Ann (DP (1,-25)) (ColDelta -25) DP (1,-25) [DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,3)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9-51 }
                                Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
                                (RecordUpd 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9 }
                                  Just (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))) 
                                 (HsRecFields 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:11-50 }
                                    Just (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                    (HsRecField 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:11-25 }
                                      Just (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (Unqual {OccName: resolutionTrace})) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:29-50 }
                                      Just (Ann (DP (0,1)) (ColDelta -5) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])
                                      (RecordUpd 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:29-30 }
                                        Just (Ann (DP (0,0)) (ColDelta -5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: rt}))) 
                                       (HsRecFields 
                                        [
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:33-48 }
                                          Just (Ann (DP (0,1)) (ColDelta -1) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                          (HsRecField 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:33-40 }
                                            Just (Ann (DP (0,0)) (ColDelta -1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (Unqual {OccName: resTrace})) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:44-48 }
                                            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                            (ExplicitList 
                                             (PlaceHolder) 
                                             (Nothing) 
                                             [
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:45-47 }
                                               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: cid})))])) 
                                           (False)))] 
                                        (Nothing)) 
                                       [] 
                                       [] 
                                       [])) 
                                     (False)))] 
                                  (Nothing)) 
                                 [] 
                                 [] 
                                 []))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-48 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,41)) "-- *** Generic state transition notation" Nothing,DComment (DP (1,1),DP (1,41)) "-- *** Generic state transition notation" Nothing,DComment (DP (1,1),DP (1,75)) "-- | Guard a transition action.  If the boolean is true, return the action" Nothing,DComment (DP (1,1),DP (1,55)) "-- given as an argument.  Otherwise, return `Nothing'." Nothing,DComment (DP (0,-54),DP (0,20)) "-- | Guard a transition action.  If the boolean is true, return the action" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,53)) "-- given as an argument.  Otherwise, return `Nothing'." Nothing,DComment (DP (0,-53),DP (0,-50)) "==>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-5 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "{-# INLINE" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
        (Unqual {OccName: ==>}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-48 }
       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18 }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18 }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "#-}" Nothing),DP (0,-1)),((G AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:11-17 }
             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:11-15 }
               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Monad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:17 }
               Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "==>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m})))))))]) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:23-48 }
         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:23-26 }
           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Bool}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31-48 }
           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31-33 }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31 }
               Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:33 }
               Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:38-48 }
             Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:38-42 }
               Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:44-48 }
               Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:45-47 }
                 Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:45 }
                   Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: m}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:47 }
                   Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: a}))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:12-16 }
       Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "==>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) "amb" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,6)) "guard" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])
       (Unqual {OccName: ==>})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,3)) ">>" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,4)) "amb" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
       (Unqual {OccName: ==>})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (Unqual {OccName: ==>})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:7 }
            Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: b}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:9-11 }
            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: amb})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:13-35 }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-35 }
               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-21 }
                 Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-19 }
                   Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: guard}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:21 }
                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: b}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:23-24 }
                 Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: >>}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:26-35 }
                 Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:26-31 }
                   Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: return}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:33-35 }
                   Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: amb})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1-12 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "infixr" Nothing,DComment (DP (0,1),DP (0,2)) "6" Nothing,DComment (DP (0,1),DP (0,4)) "==>" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])
    (SigD 
     (FixSig 
      (FixitySig 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:10-12 }
         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: ==>}))] {Fixity: infixr 6})))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-58 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,18)) "-- | @flip fmap@." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,16)) "-- | @flip fmap@." Nothing,DComment (DP (0,-16),DP (0,-13)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-5 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "{-# INLINE" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
        (Unqual {OccName: >=>}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-58 }
       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18 }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18 }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "#-}" Nothing),DP (0,-1)),((G AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:11-17 }
             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:11-15 }
               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Monad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:17 }
               Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m})))))))]) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-58 }
         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-29 }
           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-27 }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Maybe}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:29 }
             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: a}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-58 }
           Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-43 }
             Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:35-42 }
               Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
               (HsFunTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:35 }
                 Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: a}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:40-42 }
                 Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:40 }
                   Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: m}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:42 }
                   Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: b}))))))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:48-58 }
             Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:48-52 }
               Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:54-58 }
               Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:55-57 }
                 Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:55 }
                   Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: m}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:57 }
                   Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: b}))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:12-16 }
       Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "flip" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,2)) "fmap" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
       (Unqual {OccName: >=>})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
       (Unqual {OccName: >=>})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (Unqual {OccName: >=>})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:7-17 }
             Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:9-17 }
               Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:9-12 }
                 Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: flip}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:14-17 }
                 Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: fmap})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1-12 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "infixr" Nothing,DComment (DP (0,1),DP (0,2)) "6" Nothing,DComment (DP (0,1),DP (0,4)) ">=>" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])
    (SigD 
     (FixSig 
      (FixitySig 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:10-12 }
         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: >=>}))] {Fixity: infixr 6})))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-62 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,73)) "-- | Choice of state transitions.  Choose the leftmost action that isn't" Nothing,DComment (DP (1,1),DP (1,45)) "-- @Nothing@, or return @Nothing@ otherwise." Nothing,DComment (DP (0,-44),DP (0,28)) "-- | Choice of state transitions.  Choose the leftmost action that isn't" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,43)) "-- @Nothing@, or return @Nothing@ otherwise." Nothing,DComment (DP (0,-43),DP (0,-41)) "><" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-1),DP (0,1)) "><" Nothing),DP (0,-1)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-4 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "a1" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
        (Unqual {OccName: ><}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-62 }
       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "a2" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17 }
         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17 }
           Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((G AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:10-16 }
             Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:10-14 }
               Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Monad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:16 }
               Just (Ann (DP (0,5)) (ColDelta 16) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: m})))))))]) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-62 }
         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-32 }
           Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-26 }
             Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Maybe}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:28-32 }
             Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:29-31 }
               Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:29 }
                 Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: m}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:31 }
                 Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: a}))))))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-62 }
           Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-47 }
             Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-41 }
               Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:43-47 }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:44-46 }
                 Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:44 }
                   Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: m}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:46 }
                   Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: a}))))))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:52-62 }
             Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:52-56 }
               Just (Ann (DP (0,0)) (ColDelta 52) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:58-62 }
               Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:59-61 }
                 Just (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:59 }
                   Just (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: m}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:61 }
                   Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: a}))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:4-5 }
       Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: ><})) 
      (True) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:4-5 }
             Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: ><})) 
            (True))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:1-2 }
            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: a1}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:7-8 }
            Just (Ann (DP (0,-2)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "case" Nothing] [((G AnnVal),DP (0,-2))])
            (VarPat 
             (Unqual {OccName: a2})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,10)-(804,30)
              }
             Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(801,5)-(804,30)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,0),DP (0,2)) "a1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,3)) "a2" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing),DP (0,-1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(802,7)-(804,30) Ref "delta-103"),DP (0,0))])
               (HsCase 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:10-17 }
                 Just (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing] [((G AnnOpenP),DP (0,-5)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
                 (ExplicitTuple 
                  [
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:11-12 }
                    Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                    (Present 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:11-12 }
                      Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: a1}))))),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:15-16 }
                    Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                    (Present 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:15-16 }
                      Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: a2})))))] 
                  (Boxed))) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-35 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-24 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) ")" Nothing),DP (0,-7)),((G AnnCloseP),DP (0,0))])
                      (TuplePat 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:8-14 }
                         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                         (ConPatIn 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:8-14 }
                           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-3)) "Just" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
                           (Unqual {OccName: Nothing})) 
                          (PrefixCon 
                           []))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:17-23 }
                         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,1)) "_" Nothing] [])
                         (ConPatIn 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:17-23 }
                           Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (Unqual {OccName: Nothing})) 
                          (PrefixCon 
                           [])))] 
                       (Boxed) 
                       []))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:26-35 }
                       Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:29-35 }
                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Nothing})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-30 }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-5)) "a1" Nothing] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-17 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (TuplePat 
                       [
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:8-13 }
                         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnComma),DP (0,0))])
                         (ConPatIn 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:8-11 }
                           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (Unqual {OccName: Just})) 
                          (PrefixCon 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:13 }
                             Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (WildPat 
                              (PlaceHolder)))]))),
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:16 }
                         Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (WildPat 
                          (PlaceHolder)))] 
                       (Boxed) 
                       []))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:26-30 }
                       Just (Ann (DP (0,8)) (ColDelta 19) DP (0,8) [] [((G AnnRarrow),DP (0,0))])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:29-30 }
                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: a1})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:7-30 }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:7 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:26-30 }
                       Just (Ann (DP (0,18)) (ColDelta 19) DP (0,18) [] [((G AnnRarrow),DP (0,0))])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:29-30 }
                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: a2})))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1-11 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "infixl" Nothing,DComment (DP (0,1),DP (0,2)) "5" Nothing,DComment (DP (0,1),DP (0,3)) "><" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])
    (SigD 
     (FixSig 
      (FixitySig 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:10-11 }
         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: ><}))] {Fixity: infixl 5})))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1-25 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,12)) "-- *** Misc" Nothing,DComment (DP (1,1),DP (1,12)) "-- *** Misc" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,15)) "initialActivity" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Double" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1-15 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: initialActivity}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:20-25 }
       Just (Ann (DP (0,-2)) (ColDelta 20) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "1.0" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:20-25 }
         Just (Ann (DP (0,-2)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,-2))])
         (HsTyVar 
          (Unqual {OccName: Double}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-15 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: initialActivity})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-15 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: initialActivity})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:17-21 }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:19-21 }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsOverLit {HsOverLit:1.0}))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1-65 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,6)) "Error" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "noMsg" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:10-38 }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
          []) 
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:10-38 }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:10-14 }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Error}))) 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:16-38 }
            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "=" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (HsTupleTy 
             (HsBoxedOrConstraintTuple) 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:17-19 }
               Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) ")" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Lit}))),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:22-27 }
               Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,5)) "noMsg" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Clause}))),
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:30-37 }
               Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: ClauseId})))])))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-65 }
         Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [])
         (FunBind 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-50 }
           Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: noMsg})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-65 }
             Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-50 }
                 Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: noMsg})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:52-65 }
                 Just (Ann (DP (0,-1)) (ColDelta 52) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:54-65 }
                   Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (ExplicitTuple 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55-57 }
                      Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [])
                      (Present 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55-57 }
                        Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnComma),DP (0,0))])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55 }
                          Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: L}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:57 }
                          Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsOverLit {HsOverLit:0})))))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61 }
                      Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [])
                      (Present 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61 }
                        Just (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (0,0))])
                        (HsVar 
                         (Exact {Name: []}))))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:64 }
                      Just (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [])
                      (Present 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:64 }
                        Just (Ann (DP (0,0)) (ColDelta 64) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsOverLit {HsOverLit:0}))))] 
                    (Boxed)))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1-34 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:10-17 }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
          []) 
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:10-17 }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:10-14 }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Error}))) 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:16-17 }
            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (HsTupleTy 
             (HsBoxedOrConstraintTuple) 
             [])))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-34 }
         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
         (FunBind 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-29 }
           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: noMsg})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-34 }
             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-29 }
                 Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: noMsg})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:31-34 }
                 Just (Ann (DP (0,-1)) (ColDelta 31) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:33-34 }
                   Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsVar 
                    (Exact {Name: ()})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(817,1)-(826,34)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,12)) "VerifyError" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "[" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "Clause" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:817:6-16 }
       Just (Ann (DP (0,-7)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,8)) "SatError" Nothing] [((G AnnVal),DP (0,-7))])
       (Unqual {OccName: VerifyError})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:5-39 }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,3),DP (0,4)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Either" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((AnnComment DComment (DP (1,7),DP (1,66)) "-- ^ Indicates a unsatisfactory assignment that was claimed" Nothing),DP (1,7)),((AnnComment DComment (DP (0,-59),DP (0,2)) "-- satisfactory.  Each clause is tagged with its status using" Nothing),DP (0,-59)),((AnnComment DComment (DP (1,7),DP (1,45)) "-- 'Funsat.Types.Model'@.statusUnder@." Nothing),DP (1,7)),((AnnComment DComment (DP (0,-38),DP (0,23)) "-- satisfactory.  Each clause is tagged with its status using" Nothing),DP (0,-38)),((AnnComment DComment (DP (1,7),DP (1,45)) "-- 'Funsat.Types.Model'@.statusUnder@." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "|" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,11)) "UnsatError" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,16)) "ResolutionError" Nothing),DP (0,1)),((G AnnVbar),DP (5,5))])
         (ConDecl 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:5-12 }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: SatError}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:14-39 }
             Just (Ann (DP (0,-52)) (ColDelta 14) DP (0,1) [DComment (DP (0,-6),DP (0,53)) "-- ^ Indicates a unsatisfactory assignment that was claimed" Nothing] [((G AnnOpenS),DP (0,-52)),((G AnnCloseS),DP (0,0))])
             (HsListTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:15-38 }
               Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsTupleTy 
                (HsBoxedOrConstraintTuple) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:16-21 }
                  Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Clause}))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:24-37 }
                  Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                  (HsAppTy 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:24-32 }
                    Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:24-29 }
                      Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: Either}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:31-32 }
                      Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (HsTupleTy 
                       (HsBoxedOrConstraintTuple) 
                       [])))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:34-37 }
                    Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: Bool})))))]))))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:7-32 }
         Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:7-16 }
            Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: UnsatError}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:18-32 }
             Just (Ann (DP (0,-47)) (ColDelta 18) DP (0,1) [DComment (DP (0,-10),DP (0,48)) "-- ^ Indicates an error in the resultion checking process." Nothing] [((G AnnVal),DP (0,-47))])
             (HsTyVar 
              (Unqual {OccName: ResolutionError})))]) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:20-34 }
         Just (Ann (DP (1,20)) (ColDelta 20) DP (3,20) [DComment (DP (1,7),DP (1,65)) "-- ^ Indicates an error in the resultion checking process." Nothing,DComment (DP (1,20),DP (1,28)) "deriving" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Show" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:30-33 }
           Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
             []) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:30-33 }
             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Show})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1-71 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,75)) "-- | Verify the solution.  In case of `Sat', checks that the assignment is" Nothing,DComment (DP (1,1),DP (1,74)) "-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a" Nothing,DComment (DP (0,-73),DP (0,1)) "-- | Verify the solution.  In case of `Sat', checks that the assignment is" Nothing,DComment (DP (1,1),DP (1,58)) "-- resolution-based checker on a trace of the SAT solver." Nothing,DComment (DP (0,-57),DP (0,16)) "-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "verify" Nothing,DComment (DP (0,-6),DP (0,51)) "-- resolution-based checker on a trace of the SAT solver." Nothing,DComment (DP (0,-50),DP (0,-48)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,12)) "VerifyError" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1-6 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: verify}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-71 }
       Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "sol" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-71 }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,0)) "maybeRT" Nothing),DP (0,-7)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-18 }
           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Solution}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-71 }
           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "cnf" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-43 }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-27 }
               Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Maybe}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:29-43 }
               Just (Ann (DP (0,4)) (ColDelta 29) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "=" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: ResolutionTrace}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:48-71 }
             Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
             (HsFunTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:48-50 }
               Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: CNF}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:55-71 }
               Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:55-59 }
                 Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Maybe}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:61-71 }
                 Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: VerifyError}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:1-6 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: verify})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) ")" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "True" Nothing),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:1-6 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: verify})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:8-10 }
            Just (Ann (DP (0,-15)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,16)) "-- m is well-formed" Nothing] [((G AnnVal),DP (0,-15))])
            (VarPat 
             (Unqual {OccName: sol}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:12-18 }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: maybeRT}))),
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:20-22 }
            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: cnf})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,24)-(848,35)
              }
             Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(835,5)-(846,30)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (3,5) [DComment (DP (1,1),DP (1,90)) "--    Fl.all (\\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]" Nothing,DComment (DP (0,-86),DP (0,-67)) "-- m is well-formed" Nothing,DComment (DP (1,1),DP (1,90)) "--    Fl.all (\\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]" Nothing,DComment (DP (0,-85),DP (0,-81)) "case" Nothing,DComment (DP (0,1),DP (0,4)) "sol" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "m" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,7)-(846,30) Ref "delta-104"),DP (0,0))])
               (HsCase 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:835:10-12 }
                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,3)) "Sat" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: sol}))) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,7)-(842,48)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:7-11 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:7-9 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: Sat})) 
                       (PrefixCon 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:11 }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (VarPat 
                           (Unqual {OccName: m})))])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,13)-(842,48)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "let" Nothing] [((G AnnRarrow),DP (0,-1))])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,11)-(842,48)
                          }
                         Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "unsatClauses" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "toList" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81) NotNeeded),DP (0,0)),((G AnnIn),DP (1,0))])
                         (HsLet 
                          (HsValBinds 
                           (ValBindsIn {Bag(Located (HsBind RdrName)): 
                            [
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (FunBind 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:15-26 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (Unqual {OccName: unsatClauses})) 
                               (False) 
                               (MG 
                                [
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81)
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                                  (Match 
                                   (Just 
                                    ((,) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:15-26 }
                                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (Unqual {OccName: unsatClauses})) 
                                     (False))) 
                                   [] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,28)-(839,81)
                                       }
                                      Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,30)-(839,81)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                                        (OpApp 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,30)-(838,60)
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                                          (OpApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:30-35 }
                                            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: toList}))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:37 }
                                            Just (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [DComment (DP (0,-6),DP (0,4)) "Set.filter" Nothing] [((G AnnVal),DP (0,-3))])
                                            (HsVar 
                                             (Unqual {OccName: $}))) 
                                           (PlaceHolder) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:30-60 }
                                            Just (Ann (DP (1,15)) (ColDelta 15) DP (1,15) [DComment (DP (0,3),DP (0,4)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "isTrue" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "snd" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:30-39 }
                                              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Qual {ModuleName: Set} {OccName: filter}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:41-60 }
                                              Just (Ann (DP (0,0)) (ColDelta 26) DP (0,1) [DComment (DP (0,-10),DP (0,-3)) "Set.map" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                              (HsPar 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-59 }
                                                Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                                                (OpApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-53 }
                                                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
                                                  (OpApp 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-44 }
                                                    Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: not}))) 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:46 }
                                                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: .}))) 
                                                   (PlaceHolder) 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:48-53 }
                                                    Just (Ann (DP (0,0)) (ColDelta 33) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])
                                                    (HsVar 
                                                     (Unqual {OccName: isTrue}))))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:55 }
                                                  Just (Ann (DP (0,-8)) (ColDelta 40) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "c" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,11)) "statusUnder" Nothing] [((G AnnVal),DP (0,-8))])
                                                  (HsVar 
                                                   (Unqual {OccName: .}))) 
                                                 (PlaceHolder) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:57-59 }
                                                  Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: snd}))))))))))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:62 }
                                          Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: $}))) 
                                         (PlaceHolder) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:30-81 }
                                          Just (Ann (DP (0,-4)) (ColDelta 15) DP (1,15) [DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing,DComment (DP (0,1),DP (0,4)) "cnf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,2)) "in" Nothing,DComment (DP (0,1),DP (0,3)) "if" Nothing,DComment (DP (0,1),DP (0,5)) "null" Nothing,DComment (DP (0,1),DP (0,13)) "unsatClauses" Nothing] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:30-67 }
                                            Just (Ann (DP (0,-4)) (ColDelta 15) DP (1,15) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:30-36 }
                                              Just (Ann (DP (0,-4)) (ColDelta 15) DP (1,15) [] [((G AnnVal),DP (0,-4))])
                                              (HsVar 
                                               (Qual {ModuleName: Set} {OccName: map}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:38-67 }
                                              Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                              (HsPar 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 }
                                                Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 Ref "delta-105"),DP (0,0))])
                                                (HsLam 
                                                 (MG 
                                                  [
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 }
                                                    Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                                    (Match 
                                                     (Nothing) 
                                                     [
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:40 }
                                                       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                       (VarPat 
                                                        (Unqual {OccName: c})))] 
                                                     (Nothing) 
                                                     (GRHSs 
                                                      [
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45-66 }
                                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                        (GRHS 
                                                         [] 
                                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45-66 }
                                                          Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                          (ExplicitTuple 
                                                           [
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:46 }
                                                             Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                             (Present 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:46 }
                                                               Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: c}))))),
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49-65 }
                                                             Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                                                             (Present 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49-65 }
                                                               Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                                               (OpApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49 }
                                                                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: c}))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:51-63 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: statusUnder}))) 
                                                                (PlaceHolder) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:65 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: m})))))))] 
                                                           (Boxed)))))] 
                                                      (EmptyLocalBinds))))] 
                                                  [] 
                                                  (PlaceHolder) 
                                                  (FromSource)))))))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:69-81 }
                                            Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                            (HsPar 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:70-80 }
                                              Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:70-76 }
                                                Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: clauses}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:78-80 }
                                                Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: cnf})))))))))))))] 
                                    (EmptyLocalBinds))))] 
                                [] 
                                (PlaceHolder) 
                                (FromSource)) 
                               (WpHole) 
                               (PlaceHolder) 
                               []))]} 
                            [])) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(840,14)-(842,48)
                            }
                           Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (1,3)),((AnnComment DComment (DP (0,-7),DP (0,-3)) "Just" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "." Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "SatError" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "unsatClauses" Nothing),DP (0,1)),((AnnComment DComment (DP (1,-4),DP (1,-4)) "" Nothing),DP (1,-4)),((AnnComment DComment (DP (0,0),DP (0,5)) "Unsat" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((G AnnElse),DP (1,3))])
                           (HsIf 
                            (Just 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:17-33 }
                             Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "then" Nothing] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:17-20 }
                               Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                               (HsVar 
                                (Unqual {OccName: null}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:22-33 }
                               Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])
                               (HsVar 
                                (Unqual {OccName: unsatClauses}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:841:19-25 }
                             Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: Nothing}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-48 }
                             Just (Ann (DP (0,2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "->" Nothing] [])
                             (OpApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-33 }
                               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-22 }
                                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: Just}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:24 }
                                 Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: .}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:26-33 }
                                 Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: SatError}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:35 }
                               Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: $}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:37-48 }
                               Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: unsatClauses})))))))))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(843,7)-(846,30)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:7-13 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:7-11 }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: Unsat})) 
                       (PrefixCon 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:13 }
                          Just (Ann (DP (0,-2)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "case" Nothing] [((G AnnVal),DP (0,-2))])
                          (WildPat 
                           (PlaceHolder)))])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(843,15)-(846,30)
                        }
                       Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(844,11)-(846,30)
                          }
                         Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,-1),DP (0,25)) "Resolution.checkDepthFirst" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "fromJust" Nothing,DComment (DP (0,1),DP (0,8)) "maybeRT" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(845,13)-(846,30) Ref "delta-106"),DP (0,0))])
                         (HsCase 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:16-60 }
                           Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Left" Nothing] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:16-41 }
                             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                             (HsVar 
                              (Qual {ModuleName: Resolution} {OccName: checkDepthFirst}))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:43-60 }
                             Just (Ann (DP (0,0)) (ColDelta 36) DP (0,1) [DComment (DP (0,-24),DP (0,-22)) "er" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "UnsatError" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:44-59 }
                               Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:44-51 }
                                 Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: fromJust}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:53-59 }
                                 Just (Ann (DP (0,7)) (ColDelta 46) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "er" Nothing] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: maybeRT}))))))))) 
                          (MG 
                           [
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-45 }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-19 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                (ConPatIn 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-16 }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (Unqual {OccName: Left})) 
                                 (PrefixCon 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:18-19 }
                                    Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,1)) "Right" Nothing] [((G AnnVal),DP (0,0))])
                                    (VarPat 
                                     (Unqual {OccName: er})))])))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:21-45 }
                                 Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "_" Nothing] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-45 }
                                   Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-40 }
                                     Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-27 }
                                       Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: Just}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:29 }
                                       Just (Ann (DP (0,-2)) (ColDelta 16) DP (0,1) [DComment (DP (0,-4),DP (0,3)) "Nothing" Nothing] [((G AnnVal),DP (0,-2))])
                                       (HsVar 
                                        (Unqual {OccName: .}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:31-40 }
                                       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: UnsatError}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:42 }
                                     Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:44-45 }
                                     Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: er})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13-30 }
                             Just (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [DComment (DP (1,-10),DP (1,-10)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "isTrue" Nothing] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13-19 }
                                Just (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [])
                                (ConPatIn 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13-17 }
                                  Just (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-2))])
                                  (Unqual {OccName: Right})) 
                                 (PrefixCon 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:19 }
                                    Just (Ann (DP (0,-3)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing] [((G AnnVal),DP (0,-3))])
                                    (WildPat 
                                     (PlaceHolder)))])))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:21-30 }
                                 Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:24-30 }
                                   Just (Ann (DP (0,-3)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,4)) "True" Nothing] [((G AnnVal),DP (0,-3))])
                                   (HsVar 
                                    (Unqual {OccName: Nothing})))))] 
                               (EmptyLocalBinds))))] 
                           [] 
                           (PlaceHolder) 
                           (FromSource))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(847,9)-(848,35)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-14 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: isTrue})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-34 }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-14 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: isTrue})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:16-27 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:17-26 }
                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:17-21 }
                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: Right})) 
                         (PrefixCon 
                          [
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:23-26 }
                            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                            (ConPatIn 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:23-26 }
                              Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (Unqual {OccName: True})) 
                             (PrefixCon 
                              [])))])))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:29-34 }
                       Just (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:31-34 }
                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: True})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-35 }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,12))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-14 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: isTrue})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:16 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:29-35 }
                       Just (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:31-35 }
                         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: False})))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,1)-(873,5)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,40)) "---------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Statistics & trace" Nothing,DComment (DP (0,-21),DP (0,18)) "---------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Statistics & trace" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,9)) "statsNumConfl" Nothing),DP (0,-4)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:6-10 }
       Just (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: Stats})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,14)-(873,5)
          }
         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:14-18 }
            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Stats}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(855,5)-(873,5)
             }
            Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,2),DP (0,4)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Int64" Nothing] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,6)) "}" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,67)) "-- ^ Total number of unit implications since beginning of solving." Nothing),DP (0,1)),((G AnnCloseC),DP (2,5))])
            [
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:7-28 }
              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,31)) "-- ^ Number of conflicts since last restart." Nothing),DP (0,-13)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,51)) "-- ^ Number of conflicts since last restart." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,19)) "statsNumConflTotal" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:7-19 }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: statsNumConfl}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:24-28 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int64}))) 
               (Nothing))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:7-33 }
              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-18),DP (0,34)) "-- ^ Number of conflicts since beginning of solving." Nothing),DP (0,-18)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,59)) "-- ^ Number of conflicts since beginning of solving." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,15)) "statsNumLearnt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:7-24 }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: statsNumConflTotal}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:29-33 }
                Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int64}))) 
               (Nothing))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:7-29 }
              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,58)) "-- ^ Number of learned clauses currently in DB (fluctuates because DB is" Nothing),DP (0,-14)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,35)) "-- compacted every restart)." Nothing),DP (1,7)),((AnnComment DComment (DP (0,-28),DP (0,44)) "-- ^ Number of learned clauses currently in DB (fluctuates because DB is" Nothing),DP (0,-28)),((AnnComment DComment (DP (1,7),DP (1,35)) "-- compacted every restart)." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,18)) "statsAvgLearntLen" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Double" Nothing),DP (0,1)),((G AnnComma),DP (4,5))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:7-20 }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: statsNumLearnt}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:25-29 }
                Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int64}))) 
               (Nothing))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:7-33 }
              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,30)) "-- ^ Avg. number of literals per learnt clause." Nothing),DP (0,-17)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,54)) "-- ^ Avg. number of literals per learnt clause." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,18)) "statsNumDecisions" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:7-23 }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: statsAvgLearntLen}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:28-33 }
                Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Double}))) 
               (Nothing))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:7-32 }
              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,41)) "-- ^ Total number of decisions since beginning of solving." Nothing),DP (0,-17)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,65)) "-- ^ Total number of decisions since beginning of solving." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,13)) "statsNumImpl" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:7-23 }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: statsNumDecisions}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:28-32 }
                Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int64}))) 
               (Nothing))),
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:7-27 }
              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,54)) "-- ^ Total number of unit implications since beginning of solving." Nothing),DP (0,-12)),((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:7-18 }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: statsNumImpl}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:23-27 }
                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int64}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1-59 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,49)) "-- |  The show instance uses the wrapped string." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing,DComment (DP (0,-7),DP (0,41)) "-- |  The show instance uses the wrapped string." Nothing,DComment (DP (0,-40),DP (0,-29)) "ShowWrapped" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,11)) "WrapString" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,13)) "unwrapString" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "String" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnNewtype),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-6)) "Show" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,12)) "ShowWrapped" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:9-19 }
       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-7),DP (0,1)) "instance" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: ShowWrapped})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (NewType) 
       ({ <no location info> }
        Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:23-59 }
         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:23-32 }
            Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: WrapString}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:34-59 }
            Just (Ann (DP (0,-3)) (ColDelta 34) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "show" Nothing] [((G AnnOpenC),DP (0,-3)),((G AnnCloseC),DP (0,1))])
            [
             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:36-57 }
              Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-9)) "=" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,13)) "unwrapString" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:36-47 }
                 Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: unwrapString}))] 
               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:52-57 }
                Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: String}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1-51 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:10-25 }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
          []) 
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:10-25 }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:10-13 }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Show}))) 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:15-25 }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: ShowWrapped}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-51 }
         Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
         (FunBind 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-36 }
           Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: show})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-51 }
             Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-36 }
                 Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: show})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:38-51 }
                 Just (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:40-51 }
                   Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: unwrapString})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1-49 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,5)) "Show" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,10)) "statTable" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:10-19 }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
          []) 
         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:10-19 }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:10-13 }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Show}))) 
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:15-19 }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Stats}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-49 }
         Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
         (FunBind 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-30 }
           Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: show})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-49 }
             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-30 }
                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: show})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:32-49 }
                 Just (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:34-49 }
                   Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:34-37 }
                     Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: show}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:39 }
                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:41-49 }
                     Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: statTable})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1-47 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,59)) "-- | Convert statistics to a nice-to-display tabular form." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "statTable" Nothing,DComment (DP (0,-9),DP (0,49)) "-- | Convert statistics to a nice-to-display tabular form." Nothing,DComment (DP (0,-48),DP (0,-46)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,14)) "Tabular.Table" Nothing,DComment (DP (0,1),DP (0,12)) "ShowWrapped" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1-9 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: statTable}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-47 }
       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-47 }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-18 }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Stats}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:23-47 }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:23-35 }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Qual {ModuleName: Tabular} {OccName: Table}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:37-47 }
             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: ShowWrapped}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:1-9 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: statTable})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:1-9 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: statTable})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:11 }
            Just (Ann (DP (0,-9)) (ColDelta 11) DP (0,1) [DComment (DP (0,-5),DP (0,10)) "Tabular.mkTable" Nothing] [((G AnnVal),DP (0,-9))])
            (VarPat 
             (Unqual {OccName: s})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,13)-(894,59)
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(884,5)-(894,59)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
               (HsApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:884:5-19 }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Tabular} {OccName: mkTable}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,20)-(894,59)
                  }
                 Just (Ann (DP (1,20)) (ColDelta 20) DP (1,20) [DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,10)) "WrapString" Nothing,DComment (DP (0,1),DP (0,17)) "\"Num. Conflicts\"" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,1))])
                 (ExplicitList 
                  (PlaceHolder) 
                  (Nothing) 
                  [
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,22)-(886,63)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])
                    (ExplicitList 
                     (PlaceHolder) 
                     (Nothing) 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:23-49 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-16),DP (0,-15)) "$" Nothing),DP (0,-16)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,18)) "statsNumConflTotal" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])
                       (HsApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:34-49 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsLit 
                          (HsString "\"Num. Conflicts\"" {FastString: "Num. Conflicts"}))))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:23-62 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:34 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: $}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:36-62 }
                         Just (Ann (DP (0,-20)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,21)) "\"Num. Learned Clauses\"" Nothing] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:36-39 }
                           Just (Ann (DP (0,-20)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-20))])
                           (HsVar 
                            (Unqual {OccName: show}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:41-62 }
                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:42-61 }
                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:42-59 }
                               Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: statsNumConflTotal}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:61 }
                               Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: s})))))))))))])),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(887,22)-(888,59)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])
                    (ExplicitList 
                     (PlaceHolder) 
                     (Nothing) 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:23-55 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-22),DP (0,-21)) "$" Nothing),DP (0,-22)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,14)) "statsNumLearnt" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])
                       (HsApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:34-55 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsLit 
                          (HsString "\"Num. Learned Clauses\"" {FastString: "Num. Learned Clauses"}))))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:23-58 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:34 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: $}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:36-58 }
                         Just (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,22)) "\" --> Avg. Lits/Clause\"" Nothing] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:36-39 }
                           Just (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-21))])
                           (HsVar 
                            (Unqual {OccName: show}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:41-58 }
                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:42-57 }
                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:42-55 }
                               Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: statsNumLearnt}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:57 }
                               Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: s})))))))))))])),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(889,22)-(890,62)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])
                    (ExplicitList 
                     (PlaceHolder) 
                     (Nothing) 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:23-56 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-23),DP (0,-22)) "$" Nothing),DP (0,-23)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,17)) "statsAvgLearntLen" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])
                       (HsApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:34-56 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsLit 
                          (HsString "\" --> Avg. Lits/Clause\"" {FastString: " --> Avg. Lits/Clause"}))))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:23-61 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:34 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: $}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:36-61 }
                         Just (Ann (DP (0,-14)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,15)) "\"Num. Decisions\"" Nothing] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:36-39 }
                           Just (Ann (DP (0,-14)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-14))])
                           (HsVar 
                            (Unqual {OccName: show}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:41-61 }
                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:42-60 }
                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:42-58 }
                               Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: statsAvgLearntLen}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:60 }
                               Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: s})))))))))))])),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(891,22)-(892,62)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])
                    (ExplicitList 
                     (PlaceHolder) 
                     (Nothing) 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:23-49 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-16),DP (0,-15)) "$" Nothing),DP (0,-16)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,17)) "statsNumDecisions" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])
                       (HsApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:34-49 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsLit 
                          (HsString "\"Num. Decisions\"" {FastString: "Num. Decisions"}))))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:23-61 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:34 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: $}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:36-61 }
                         Just (Ann (DP (0,-17)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,18)) "\"Num. Propagations\"" Nothing] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:36-39 }
                           Just (Ann (DP (0,-17)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-17))])
                           (HsVar 
                            (Unqual {OccName: show}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:41-61 }
                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:42-60 }
                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:42-58 }
                               Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: statsNumDecisions}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:60 }
                               Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: s})))))))))))])),
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(893,22)-(894,57)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                    (ExplicitList 
                     (PlaceHolder) 
                     (Nothing) 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:23-52 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-19),DP (0,-18)) "$" Nothing),DP (0,-19)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,12)) "statsNumImpl" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "]" Nothing),DP (0,1)),((G AnnComma),DP (1,22))])
                       (HsApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:34-52 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsLit 
                          (HsString "\"Num. Propagations\"" {FastString: "Num. Propagations"}))))),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:23-56 }
                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:23-32 }
                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: WrapString}))) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:34 }
                         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: $}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:36-56 }
                         Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:36-39 }
                           Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: show}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:41-56 }
                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:42-55 }
                             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:42-53 }
                               Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: statsNumImpl}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:55 }
                               Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: s})))))))))))]))]))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1-30 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,65)) "-- | Converts statistics into a tabular, human-readable summary." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,11)) "statSummary" Nothing,DComment (DP (0,-11),DP (0,53)) "-- | Converts statistics into a tabular, human-readable summary." Nothing,DComment (DP (0,-52),DP (0,-50)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "String" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1-11 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: statSummary}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-30 }
       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-30 }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-20 }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Stats}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:25-30 }
           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: String}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:1-11 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: statSummary})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:1-11 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: statSummary})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:13 }
            Just (Ann (DP (0,-14)) (ColDelta 13) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "Tabular.mkTable" Nothing] [((G AnnVal),DP (0,-14))])
            (VarPat 
             (Unqual {OccName: s})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,15)-(903,43)
              }
             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,6)-(903,43)
                }
               Just (Ann (DP (1,6)) (ColDelta 6) DP (1,6) [] [])
               (HsApp 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:899:6-9 }
                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: show}))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,11)-(903,43)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsPar 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,12)-(903,42)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:899:12-26 }
                     Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Qual {ModuleName: Tabular} {OccName: mkTable}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,12)-(903,42)
                      }
                     Just (Ann (DP (1,12)) (ColDelta 12) DP (1,12) [DComment (DP (0,-15),DP (0,-14)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,0),DP (0,10)) "WrapString" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,18)) "statsNumConflTotal" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,13)) "\" Conflicts\"" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                     (ExplicitList 
                      (PlaceHolder) 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,13)-(903,41)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                        (ExplicitList 
                         (PlaceHolder) 
                         (Nothing) 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-69 }
                           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-9)) "++" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,19)) "\" Learned Clauses\"" Nothing),DP (0,1)),((G AnnComma),DP (1,13))])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-53 }
                             Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-23 }
                               Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: WrapString}))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:25 }
                               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: $}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:27-53 }
                               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:27-30 }
                                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: show}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:32-53 }
                                 Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:33-52 }
                                   Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:33-50 }
                                     Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "++" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: statsNumConflTotal}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:52 }
                                     Just (Ann (DP (0,-3)) (ColDelta 52) DP (0,1) [DComment (DP (0,-16),DP (0,-12)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,14)) "statsNumLearnt" Nothing] [((G AnnVal),DP (0,-3))])
                                     (HsVar 
                                      (Unqual {OccName: s}))))))))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:55-56 }
                             Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: ++}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:58-69 }
                             Just (Ann (DP (0,0)) (ColDelta 58) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                             (HsLit 
                              (HsString "\" Conflicts\"" {FastString: " Conflicts"}))))),
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(903,40)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(902,72)
                              }
                             Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(902,33)
                                }
                               Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-79 }
                                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-57 }
                                   Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-30 }
                                     Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-23 }
                                       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: WrapString}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:25 }
                                       Just (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "++" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:27-30 }
                                       Just (Ann (DP (0,-7)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,8)) "\" (avg \"" Nothing] [((G AnnVal),DP (0,-7))])
                                       (HsLit 
                                        (HsString "\"| \"" {FastString: "| "}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:32-33 }
                                     Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: ++}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:35-57 }
                                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:35-38 }
                                       Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: show}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:40-57 }
                                       Just (Ann (DP (0,-4)) (ColDelta 40) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "++" Nothing,DComment (DP (0,1),DP (0,7)) "printf" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:41-56 }
                                         Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:41-54 }
                                           Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: statsNumLearnt}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:56 }
                                           Just (Ann (DP (0,-14)) (ColDelta 56) DP (0,1) [DComment (DP (0,-10),DP (0,-4)) "\"%.2f\"" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,17)) "statsAvgLearntLen" Nothing] [((G AnnVal),DP (0,-14))])
                                           (HsVar 
                                            (Unqual {OccName: s}))))))))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:59-60 }
                                   Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: ++}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:62-79 }
                                   Just (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsLit 
                                    (HsString "\" Learned Clauses\"" {FastString: " Learned Clauses"}))))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:23-24 }
                                 Just (Ann (DP (1,23)) (ColDelta 23) DP (1,23) [DComment (DP (0,-9),DP (0,-8)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: ++}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:26-33 }
                                 Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsLit 
                                  (HsString "\" (avg \"" {FastString: " (avg "}))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:35-36 }
                               Just (Ann (DP (0,-6)) (ColDelta 35) DP (0,1) [DComment (DP (0,-8),DP (0,7)) "\" lits/clause)\"" Nothing] [((G AnnVal),DP (0,-6))])
                               (HsVar 
                                (Unqual {OccName: ++}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:38-72 }
                               Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:38-50 }
                                 Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:38-43 }
                                   Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: printf}))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:45-50 }
                                   Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "]" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                   (HsLit 
                                    (HsString "\"%.2f\"" {FastString: "%.2f"}))))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:52-72 }
                                 Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:53-71 }
                                   Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:53-69 }
                                     Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: statsAvgLearntLen}))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:71 }
                                     Just (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: s}))))))))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:23-24 }
                             Just (Ann (DP (1,23)) (ColDelta 23) DP (1,23) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: ++}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:26-40 }
                             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsLit 
                              (HsString "\" lits/clause)\"" {FastString: " lits/clause)"})))))]))]))))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1-32 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "extractStats" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1-12 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: extractStats}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-32 }
       Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-32 }
         Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-26 }
           Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-24 }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-1))])
             (HsTyVar 
              (Unqual {OccName: FunMonad}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:26 }
             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:28-32 }
           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Stats}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:1-12 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: extractStats})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-10)) "" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "gets" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "stats" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:1-12 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: extractStats})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,14)-(922,14)
              }
             Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,16)-(922,14)
                }
               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(908,3)-(922,14) Ref "delta-107"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:3-17 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "learntArr" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:3 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: s}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:8-17 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:8-11 }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: gets}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:13-17 }
                      Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: stats}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3-63 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,23)) "unsafeFreezeWatchArray" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "learnt" Nothing] [((AnnComment DComment (DP (0,-9),DP (0,-6)) "let" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "learnts" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3-11 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: learntArr}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-63 }
                    Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-54 }
                      Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-29 }
                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-18 }
                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: get}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:20-22 }
                          Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "nub" Nothing] [((G AnnVal),DP (0,-1))])
                          (HsVar 
                           (Unqual {OccName: >>=}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:24-29 }
                          Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "." Nothing] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: liftST}))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:31 }
                        Just (Ann (DP (0,-2)) (ColDelta 28) DP (0,1) [DComment (DP (0,-6),DP (0,3)) "Fl.concat" Nothing] [((G AnnVal),DP (0,-2))])
                        (HsVar 
                         (Unqual {OccName: .}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:33-54 }
                        Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: unsafeFreezeWatchArray}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:56 }
                      Just (Ann (DP (0,22)) (ColDelta 53) DP (0,1) [DComment (DP (0,-22),DP (0,-21)) ")" Nothing] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: .}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:58-63 }
                      Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: learnt}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,3)-(921,42)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLet),DP (0,0))])
                  (LetStmt 
                   (HsValBinds 
                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55)
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:7-13 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: learnts})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "[" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,4)) "map" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:7-13 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: learnts})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,15)-(912,55)
                                }
                               Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,17)-(912,55)
                                  }
                                 Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,4)) "sort" Nothing] [((G AnnDcolon),DP (0,1))])
                                 (ExprWithTySig 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,17)-(912,43)
                                    }
                                   Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:17-33 }
                                     Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,-3)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "\\" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "c" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                     (HsPar 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:18-32 }
                                       Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:18-20 }
                                         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: nub}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:22 }
                                         Just (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,1)) "." Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: .}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:24-32 }
                                         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Qual {ModuleName: Fl} {OccName: concat}))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(911,9)-(912,43)
                                      }
                                     Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "learntArr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenS),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,3)) "]" Nothing),DP (0,2)),((AnnComment DComment (DP (1,0),DP (1,0)) "" Nothing),DP (1,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "stats" Nothing),DP (0,0)),((G AnnVbar),DP (1,2)),((G AnnCloseS),DP (0,1))])
                                     (HsDo 
                                      (ListComp) 
                                      [
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:11-41 }
                                        Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnLarrow),DP (0,1))])
                                        (BindStmt 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:11 }
                                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (VarPat 
                                           (Unqual {OccName: i}))) 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16-41 }
                                          Just (Ann (DP (0,2)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16-31 }
                                            Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                            (HsPar 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:17-30 }
                                              Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                              (OpApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:17-21 }
                                                Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: range}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:23 }
                                                Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: .}))) 
                                               (PlaceHolder) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:25-30 }
                                                Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: bounds}))))))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:33-41 }
                                            Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: learntArr}))))) 
                                         (HsLit 
                                          (HsString "" {FastString: "noSyntaxExpr"})) 
                                         (HsLit 
                                          (HsString "" {FastString: "noSyntaxExpr"})))),
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-52 }
                                        Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                                        (LastStmt 
                                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-52 }
                                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-38 }
                                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-13 }
                                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: map}))) 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:15-38 }
                                              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                              (HsPar 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:16-37 }
                                                Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                                                (OpApp 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:16-19 }
                                                  Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: sort}))) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:21 }
                                                  Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "range" Nothing] [((G AnnVal),DP (0,-1))])
                                                  (HsVar 
                                                   (Unqual {OccName: .}))) 
                                                 (PlaceHolder) 
                                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:23-37 }
                                                  Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                  (HsPar 
                                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 }
                                                    Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 Ref "delta-108"),DP (0,0))])
                                                    (HsLam 
                                                     (MG 
                                                      [
                                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 }
                                                        Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                                        (Match 
                                                         (Nothing) 
                                                         [
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:25-31 }
                                                           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                           (TuplePat 
                                                            [
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:26 }
                                                              Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "bounds" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                              (WildPat 
                                                               (PlaceHolder))),
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:28 }
                                                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                              (VarPat 
                                                               (Unqual {OccName: c}))),
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:30 }
                                                              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (WildPat 
                                                               (PlaceHolder)))] 
                                                            (Boxed) 
                                                            []))] 
                                                         (Nothing) 
                                                         (GRHSs 
                                                          [
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:36 }
                                                            Just (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,7)) "learntArr" Nothing] [])
                                                            (GRHS 
                                                             [] 
                                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:36 }
                                                              Just (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-6))])
                                                              (HsVar 
                                                               (Unqual {OccName: c})))))] 
                                                          (EmptyLocalBinds))))] 
                                                      [] 
                                                      (PlaceHolder) 
                                                      (FromSource)))))))))))) 
                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:40-52 }
                                            Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                            (HsPar 
                                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:41-51 }
                                              Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                                              (OpApp 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:41-49 }
                                                Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: learntArr}))) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:50 }
                                                Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "]" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "Clause" Nothing),DP (0,0)),((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: !}))) 
                                               (PlaceHolder) 
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:51 }
                                                Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (HsVar 
                                                 (Unqual {OccName: i}))))))))) 
                                         (HsLit 
                                          (HsString "" {FastString: "noSyntaxExpr"}))))] 
                                      (PlaceHolder))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48-55 }
                                   Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])
                                   (HsForAllTy 
                                    (Implicit) 
                                    (Nothing) 
                                    (HsQTvs 
                                     [] 
                                     []) 
                                    ({ <no location info> }
                                     Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
                                     []) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48-55 }
                                     Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                                     (HsListTy 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:49-54 }
                                       Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsTyVar 
                                        (Unqual {OccName: Clause}))))))) 
                                  (PlaceHolder)))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        [])),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,7)-(921,42)
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:913:7-11 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: stats})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,7)-(921,42)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,2)) "Stats" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:913:7-11 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: stats})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,13)-(921,42)
                                }
                               Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(914,9)-(921,42)
                                  }
                                 Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,14)) "statsNumConfl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,9)) "numConfl" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])
                                 (RecordCon 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:9-13 }
                                   Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (Unqual {OccName: Stats})) 
                                  (HsLit 
                                   (HsString "" {FastString: "noPostTcExpr"})) 
                                  (HsRecFields 
                                   [
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:17-42 }
                                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,5)) "statsNumConflTotal" Nothing),DP (0,-13)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,9),DP (0,10)) "s" Nothing),DP (0,9)),((G AnnComma),DP (1,8))])
                                     (HsRecField 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:17-29 }
                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: statsNumConfl})) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:33-42 }
                                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:33-40 }
                                         Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: numConfl}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:42 }
                                         Just (Ann (DP (0,-9)) (ColDelta 35) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "numConflTotal" Nothing] [((G AnnVal),DP (0,-9))])
                                         (HsVar 
                                          (Unqual {OccName: s}))))) 
                                      (False))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:17-52 }
                                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-18),DP (0,-4)) "statsNumLearnt" Nothing),DP (0,-18)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "fromIntegral" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,3),DP (0,10)) "learnts" Nothing),DP (0,3)),((G AnnComma),DP (1,8))])
                                     (HsRecField 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:17-34 }
                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: statsNumConflTotal})) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:38-52 }
                                       Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:38-50 }
                                         Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: numConflTotal}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:52 }
                                         Just (Ann (DP (0,-3)) (ColDelta 45) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: s}))))) 
                                      (False))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:17-62 }
                                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,3)) "statsAvgLearntLen" Nothing),DP (0,-14)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,8))])
                                     (HsRecField 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:17-30 }
                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: statsNumLearnt})) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:34-62 }
                                       Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:34-45 }
                                         Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: fromIntegral}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:47 }
                                         Just (Ann (DP (0,11)) (ColDelta 40) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "=" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: $}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:49-62 }
                                         Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:49-54 }
                                           Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: length}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:56-62 }
                                           Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: learnts}))))))) 
                                      (False))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(917,17)-(919,53)
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,-5)) "fromIntegral" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "foldl'" Nothing),DP (0,0)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,8))])
                                     (HsRecField 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:917:17-33 }
                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: statsAvgLearntLen})) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(918,17)-(919,53)
                                        }
                                       Just (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "+" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "map" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing,DComment (DP (0,1),DP (0,8)) "learnts" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:17-64 }
                                         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:17-28 }
                                           Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: fromIntegral}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:30-64 }
                                           Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-12),DP (0,-11)) "/" Nothing,DComment (DP (0,1),DP (0,13)) "fromIntegral" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-63 }
                                             Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-42 }
                                               Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-40 }
                                                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-36 }
                                                   Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: foldl'}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:38-40 }
                                                   Just (Ann (DP (0,-9)) (ColDelta 31) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "(" Nothing,DComment (DP (0,0),DP (0,14)) "statsNumLearnt" Nothing] [((G AnnOpenP),DP (0,-9)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: +}))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:42 }
                                                 Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsOverLit {HsOverLit:0})))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:44-63 }
                                               Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                               (HsPar 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:45-62 }
                                                 Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:45-54 }
                                                   Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:45-47 }
                                                     Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: map}))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:49-54 }
                                                     Just (Ann (DP (0,-4)) (ColDelta 42) DP (0,1) [DComment (DP (0,0),DP (0,5)) "stats" Nothing] [((G AnnVal),DP (0,-4))])
                                                     (HsVar 
                                                      (Unqual {OccName: length}))))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:56-62 }
                                                   Just (Ann (DP (0,2)) (ColDelta 49) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: learnts}))))))))))))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:17 }
                                         Just (Ann (DP (0,1)) (ColDelta 10) DP (1,10) [DComment (DP (1,8),DP (1,9)) "," Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: /}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:19-53 }
                                         Just (Ann (DP (0,-15)) (ColDelta 12) DP (0,1) [DComment (DP (0,-1),DP (0,16)) "statsNumDecisions" Nothing] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:19-30 }
                                           Just (Ann (DP (0,-15)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-15))])
                                           (HsVar 
                                            (Unqual {OccName: fromIntegral}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:32-53 }
                                           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "s" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])
                                           (HsPar 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:33-52 }
                                             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:33-46 }
                                               Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: statsNumLearnt}))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:48-52 }
                                               Just (Ann (DP (0,-1)) (ColDelta 41) DP (0,1) [DComment (DP (0,-12),DP (0,-11)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "numDecisions" Nothing] [((G AnnVal),DP (0,-1))])
                                               (HsVar 
                                                (Unqual {OccName: stats}))))))))))) 
                                      (False))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:17-50 }
                                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,-5)) "statsNumImpl" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "numImpl" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (1,-4),DP (1,-4)) "" Nothing),DP (1,-4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "stats" Nothing),DP (0,1)),((G AnnComma),DP (1,8))])
                                     (HsRecField 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:17-33 }
                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: statsNumDecisions})) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:37-50 }
                                       Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:37-48 }
                                         Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: numDecisions}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:50 }
                                         Just (Ann (DP (0,7)) (ColDelta 43) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: s}))))) 
                                      (False))),
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:17-40 }
                                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                                     (HsRecField 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:17-28 }
                                       Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: statsNumImpl})) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:32-40 }
                                       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:32-38 }
                                         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: numImpl}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:40 }
                                         Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: s}))))) 
                                      (False)))] 
                                   (Nothing))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        []))]} 
                     [])))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3-14 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3-14 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3-8 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:10-14 }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: stats}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1-74 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,22)) "unsafeFreezeWatchArray" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "WatchArray" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "ST" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Array" Nothing,DComment (DP (0,1),DP (0,4)) "Lit" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,11)) "WatchedPair" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1-22 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: unsafeFreezeWatchArray}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-74 }
       Just (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "freeze" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-74 }
         Just (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-38 }
           Just (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-36 }
             Just (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,-5))])
             (HsTyVar 
              (Unqual {OccName: WatchArray}))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:38 }
             Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: s}))))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:43-74 }
           Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:43-46 }
             Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:43-44 }
               Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: ST}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:46 }
               Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:48-74 }
             Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:49-73 }
               Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:49-57 }
                 Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:49-53 }
                   Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Array}))) 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:55-57 }
                   Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Lit}))))) 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:59-73 }
                 Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                 (HsListTy 
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:60-72 }
                   Just (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:60-70 }
                     Just (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: WatchedPair}))) 
                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:72 }
                     Just (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: s}))))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-22 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: unsafeFreezeWatchArray})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31 }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-22 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: unsafeFreezeWatchArray})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:24-31 }
             Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:26-31 }
               Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: freeze})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1-59 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,17)) "constructResTrace" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1-17 }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: constructResTrace}))] 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-59 }
       Just (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "sol" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] [])
         []) 
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-59 }
         Just (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "=" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-29 }
           Just (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Solution}))) 
          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:34-59 }
           Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:34-43 }
             Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:34-41 }
               Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FunMonad}))) 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:43 }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: s}))))) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:45-59 }
             Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: ResolutionTrace}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:1-17 }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: constructResTrace})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:1-17 }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: constructResTrace})) 
            (False))) 
          [
           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:19-21 }
            Just (Ann (DP (0,6)) (ColDelta 19) DP (0,1) [DComment (DP (0,-13),DP (0,-13)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: sol})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,23)-(960,20)
              }
             Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,25)-(956,36)
                }
               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(930,5)-(956,36) Ref "delta-109"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:5-12 }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,13)) "watchesIndices" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:5 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: s}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:10-12 }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: get}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5-66 }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,7),DP (0,9)) "<-" Nothing,DComment (DP (0,1),DP (0,6)) "range" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "getBounds" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "watches" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-1)) "origClauseMap" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5-18 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: watchesIndices}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:23-66 }
                    Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:23-27 }
                      Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: range}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:29-35 }
                      Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: liftM}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:37-66 }
                      Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:37-42 }
                        Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: liftST}))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:44-66 }
                        Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:45-65 }
                          Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:45-53 }
                            Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: getBounds}))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:55-65 }
                            Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:56-64 }
                              Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:56-62 }
                                Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: watches}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:64 }
                                Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: s}))))))))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(932,5)-(941,28)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-9),DP (0,-4)) "foldM" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "origMap" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:932:5-17 }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: origClauseMap}))) 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,9)-(941,28)
                     }
                    Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,4),DP (0,5)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,9)-(940,23)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,9)-(939,33)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:9-13 }
                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: foldM}))) 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,15)-(939,33)
                           }
                          Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (HsPar 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32)
                             }
                            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32) Ref "delta-110"),DP (0,0))])
                            (HsLam 
                             (MG 
                              [
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32)
                                 }
                                Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,0),DP (0,2)) "<-" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
                                (Match 
                                 (Nothing) 
                                 [
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:17-23 }
                                   Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: origMap}))),
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:25 }
                                   Just (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing] [((G AnnVal),DP (0,0))])
                                   (VarPat 
                                    (Unqual {OccName: i})))] 
                                 (Nothing) 
                                 (GRHSs 
                                  [
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,30)-(939,32)
                                     }
                                    Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [])
                                    (GRHS 
                                     [] 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,30)-(939,32)
                                       }
                                      Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((G AnnDo),DP (0,-5)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(934,18)-(939,32) Ref "delta-111"),DP (0,0))])
                                      (HsDo 
                                       (DoExpr) 
                                       [
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:18-60 }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-1)) "return" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                                         (BindStmt 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:18-24 }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (VarPat 
                                            (Unqual {OccName: clauses}))) 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:29-60 }
                                           Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                           (OpApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:29-34 }
                                             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: liftST}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:36 }
                                             Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: $}))) 
                                            (PlaceHolder) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:38-60 }
                                             Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:38-58 }
                                               Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:38-46 }
                                                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: readArray}))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:48-58 }
                                                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                 (HsPar 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:49-57 }
                                                   Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:49-55 }
                                                     Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: watches}))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:57 }
                                                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: s}))))))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:60 }
                                               Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: i}))))))) 
                                          (HsLit 
                                           (HsString "" {FastString: "noSyntaxExpr"})) 
                                          (HsLit 
                                           (HsString "" {FastString: "noSyntaxExpr"})))),
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(935,18)-(939,32)
                                          }
                                         Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                         (BodyStmt 
                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(935,18)-(939,32)
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (OpApp 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:935:18-23 }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: return}))) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:935:25 }
                                             Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,1)) "foldr" Nothing] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: $}))) 
                                            (PlaceHolder) 
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,20)-(939,32)
                                              }
                                             Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "origMap" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,20)-(938,32)
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,20)-(937,62)
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])
                                                 (HsApp 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:20-24 }
                                                   Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                   (HsVar 
                                                    (Unqual {OccName: foldr}))) 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,26)-(937,62)
                                                    }
                                                   Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                   (HsPar 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61)
                                                      }
                                                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61) Ref "delta-112"),DP (0,0))])
                                                     (HsLam 
                                                      (MG 
                                                       [
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61)
                                                          }
                                                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-2),DP (0,5)) "origMap" Nothing),DP (0,-2)),((G AnnRarrow),DP (0,1))])
                                                         (Match 
                                                          (Nothing) 
                                                          [
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:28-48 }
                                                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                            (TuplePat 
                                                             [
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:29 }
                                                               Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,9)) "Map.insert" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                               (WildPat 
                                                                (PlaceHolder))),
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:32-37 }
                                                               Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                               (VarPat 
                                                                (Unqual {OccName: clause}))),
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:40-47 }
                                                               Just (Ann (DP (0,-7)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,8)) "clauseId" Nothing] [((G AnnVal),DP (0,-7))])
                                                               (VarPat 
                                                                (Unqual {OccName: clauseId})))] 
                                                             (Boxed) 
                                                             [])),
                                                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:50-56 }
                                                            Just (Ann (DP (0,-4)) (ColDelta 23) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "clause" Nothing] [((G AnnVal),DP (0,-4))])
                                                            (VarPat 
                                                             (Unqual {OccName: origMap})))] 
                                                          (Nothing) 
                                                          (GRHSs 
                                                           [
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-61 }
                                                             Just (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) ")" Nothing,DComment (DP (1,-1),DP (1,6)) "origMap" Nothing] [])
                                                             (GRHS 
                                                              [] 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-61 }
                                                               Just (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [])
                                                               (HsApp 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-53 }
                                                                 Just (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-46 }
                                                                   Just (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [])
                                                                   (HsApp 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-37 }
                                                                     Just (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [((G AnnVal),DP (0,-5))])
                                                                     (HsVar 
                                                                      (Qual {ModuleName: Map} {OccName: insert}))) 
                                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:39-46 }
                                                                     Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: clauseId}))))) 
                                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:48-53 }
                                                                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: clause}))))) 
                                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:55-61 }
                                                                 Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: origMap})))))))] 
                                                           (EmptyLocalBinds))))] 
                                                       [] 
                                                       (PlaceHolder) 
                                                       (FromSource)))))))) 
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:938:26-32 }
                                                 Just (Ann (DP (1,8)) (ColDelta 8) DP (1,8) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: origMap}))))) 
                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:939:26-32 }
                                               Just (Ann (DP (0,2)) (ColDelta 8) DP (1,8) [DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-3),DP (1,-3)) "" Nothing,DComment (DP (0,0),DP (0,9)) "Map.empty" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: clauses}))))))) 
                                          (HsLit 
                                           (HsString "" {FastString: "noSyntaxExpr"})) 
                                          (HsLit 
                                           (HsString "" {FastString: "noSyntaxExpr"})) 
                                          (PlaceHolder)))] 
                                       (PlaceHolder)))))] 
                                  (EmptyLocalBinds))))] 
                              [] 
                              (PlaceHolder) 
                              (FromSource)))))))) 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:940:15-23 }
                        Just (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Qual {ModuleName: Map} {OccName: empty}))))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:941:15-28 }
                      Just (Ann (DP (0,-9)) (ColDelta 10) DP (1,10) [DComment (DP (0,-9),DP (0,5)) "watchesIndices" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,15)) "singleClauseMap" Nothing] [((G AnnVal),DP (0,-9))])
                      (HsVar 
                       (Unqual {OccName: watchesIndices}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,5)-(949,57)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,-3)) "=" Nothing] [((G AnnLet),DP (0,0))])
                  (LetStmt 
                   (HsValBinds 
                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65)
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:9-23 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: singleClauseMap})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-6)) "foldr" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "clause" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:9-23 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: singleClauseMap})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,25)-(945,65)
                                }
                               Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(943,13)-(945,65)
                                  }
                                 Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,2),DP (0,3)) "," Nothing,DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,11)) "Map.insert" Nothing,DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,1),DP (0,7)) "clause" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(943,13)-(944,27)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:13-73 }
                                     Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:13-17 }
                                       Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: foldr}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:19-73 }
                                       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 }
                                         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "Map.empty" Nothing),DP (0,-1)),((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 Ref "delta-113"),DP (0,0))])
                                         (HsLam 
                                          (MG 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 }
                                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                             (Match 
                                              (Nothing) 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:21-38 }
                                                Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                (TuplePat 
                                                 [
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:22-27 }
                                                   Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                   (VarPat 
                                                    (Unqual {OccName: clause}))),
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:30-37 }
                                                   Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                   (VarPat 
                                                    (Unqual {OccName: clauseId})))] 
                                                 (Boxed) 
                                                 [])),
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:40 }
                                                Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (VarPat 
                                                 (Unqual {OccName: m})))] 
                                              (Nothing) 
                                              (GRHSs 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-72 }
                                                 Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                                                 (GRHS 
                                                  [] 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-72 }
                                                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-70 }
                                                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-63 }
                                                       Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-54 }
                                                         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Qual {ModuleName: Map} {OccName: insert}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:56-63 }
                                                         Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Unqual {OccName: clauseId}))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:65-70 }
                                                       Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                       (HsVar 
                                                        (Unqual {OccName: clause}))))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:72 }
                                                     Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: m})))))))] 
                                               (EmptyLocalBinds))))] 
                                           [] 
                                           (PlaceHolder) 
                                           (FromSource)))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:944:19-27 }
                                     Just (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Qual {ModuleName: Map} {OccName: empty}))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:19-65 }
                                   Just (Ann (DP (0,1)) (ColDelta 10) DP (1,10) [DComment (DP (0,-9),DP (0,-8)) "(" Nothing,DComment (DP (0,0),DP (0,23)) "resTraceOriginalSingles" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "anteMap" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                   (HsPar 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-64 }
                                     Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-60 }
                                       Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-42 }
                                         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: resTraceOriginalSingles}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:44 }
                                         Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: .}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:46-60 }
                                         Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: resolutionTrace}))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:62 }
                                       Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:64 }
                                       Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: s})))))))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        [])),
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,9)-(949,57)
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (FunBind 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:946:9-15 }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (Unqual {OccName: anteMap})) 
                        (False) 
                        (MG 
                         [
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,9)-(949,57)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,2)) "foldr" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])
                           (Match 
                            (Just 
                             ((,) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:946:9-15 }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: anteMap})) 
                              (False))) 
                            [] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,17)-(949,57)
                                }
                               Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(947,13)-(949,57)
                                  }
                                 Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "l" Nothing,DComment (DP (0,1),DP (0,8)) "anteMap" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,11)) "Map.insert" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "getAnteId" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "anteMap" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(947,13)-(948,27)
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:13-82 }
                                     Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:13-17 }
                                       Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: foldr}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:19-82 }
                                       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                       (HsPar 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 }
                                         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "Map.empty" Nothing),DP (0,-1)),((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 Ref "delta-114"),DP (0,0))])
                                         (HsLam 
                                          (MG 
                                           [
                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 }
                                             Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                                             (Match 
                                              (Nothing) 
                                              [
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:21 }
                                                Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                (VarPat 
                                                 (Unqual {OccName: l}))),
                                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:23-29 }
                                                Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (VarPat 
                                                 (Unqual {OccName: anteMap})))] 
                                              (Nothing) 
                                              (GRHSs 
                                               [
                                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-81 }
                                                 Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                                                 (GRHS 
                                                  [] 
                                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-81 }
                                                   Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                                   (HsApp 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-73 }
                                                     Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                                     (HsApp 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-51 }
                                                       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                                       (HsApp 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-43 }
                                                         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (HsVar 
                                                          (Qual {ModuleName: Map} {OccName: insert}))) 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:45-51 }
                                                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                         (HsPar 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:46-50 }
                                                           Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                                                           (HsApp 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:46-48 }
                                                             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: var}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:50 }
                                                             Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: l}))))))))) 
                                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:53-73 }
                                                       Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                       (HsPar 
                                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:54-72 }
                                                         Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                                                         (HsApp 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:54-64 }
                                                           Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                                                           (HsApp 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:54-62 }
                                                             Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: getAnteId}))) 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:64 }
                                                             Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                             (HsVar 
                                                              (Unqual {OccName: s}))))) 
                                                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:66-72 }
                                                           Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                           (HsPar 
                                                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:67-71 }
                                                             Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [])
                                                             (HsApp 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:67-69 }
                                                               Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: var}))) 
                                                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:71 }
                                                               Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                               (HsVar 
                                                                (Unqual {OccName: l}))))))))))))) 
                                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:75-81 }
                                                     Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                     (HsVar 
                                                      (Unqual {OccName: anteMap})))))))] 
                                               (EmptyLocalBinds))))] 
                                           [] 
                                           (PlaceHolder) 
                                           (FromSource)))))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:948:19-27 }
                                     Just (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Qual {ModuleName: Map} {OccName: empty}))))) 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:19-57 }
                                   Just (Ann (DP (0,8)) (ColDelta 10) DP (1,10) [DComment (DP (0,-9),DP (0,-8)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "litAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "finalAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,4)) "sol" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                   (HsPar 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-56 }
                                     Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-50 }
                                       Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-32 }
                                         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: litAssignment}))) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:34 }
                                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: .}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:36-50 }
                                         Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: finalAssignment}))))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:52 }
                                       Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:54-56 }
                                       Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: sol})))))))))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource)) 
                        (WpHole) 
                        (PlaceHolder) 
                        []))]} 
                     [])))),
                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(950,5)-(956,36)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(950,5)-(956,36)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:950:5-10 }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: return}))) 
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(956,36)
                       }
                      Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,19)) "initResolutionTrace" Nothing] [((AnnComment DComment (DP (0,7),DP (0,8)) "." Nothing),DP (0,7)),((AnnComment DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((G AnnOpenC),DP (1,2)),((G AnnCloseC),DP (0,1))])
                      (RecordUpd 
                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(953,29)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                        (HsPar 
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,8)-(953,28)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,8)-(952,46)
                             }
                            Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:951:8-26 }
                              Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: initResolutionTrace}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:8-46 }
                              Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-19),DP (0,-18)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "head" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "resTrace" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                              (HsPar 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:9-45 }
                                Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:9-12 }
                                  Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: head}))) 
                                 ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:14-45 }
                                  Just (Ann (DP (0,-10)) (ColDelta 9) DP (0,1) [DComment (DP (0,-4),DP (0,11)) "finalAssignment" Nothing] [((G AnnOpenP),DP (0,-10)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-44 }
                                    Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                    (OpApp 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-40 }
                                      Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                      (OpApp 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-22 }
                                        Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: resTrace}))) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:24 }
                                        Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: .}))) 
                                       (PlaceHolder) 
                                       ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:26-40 }
                                        Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,3)) "sol" Nothing] [((G AnnVal),DP (0,-2))])
                                        (HsVar 
                                         (Unqual {OccName: resolutionTrace}))))) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:42 }
                                      Just (Ann (DP (0,12)) (ColDelta 37) DP (0,1) [DComment (DP (0,-13),DP (0,-12)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: $}))) 
                                     (PlaceHolder) 
                                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:44 }
                                      Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: s}))))))))))))) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:8-28 }
                            Just (Ann (DP (0,0)) (ColDelta 3) DP (1,3) [DComment (DP (1,2),DP (1,3)) "{" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:9-27 }
                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:9-23 }
                                Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: finalAssignment}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:25-27 }
                                Just (Ann (DP (0,-11)) (ColDelta 20) DP (0,1) [DComment (DP (0,-15),DP (0,-3)) "traceSources" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "resSourceMap" Nothing] [((G AnnVal),DP (0,-11))])
                                (HsVar 
                                 (Unqual {OccName: sol}))))))))))) 
                       (HsRecFields 
                        [
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:9-57 }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,8)) "traceOriginalClauses" Nothing),DP (0,-12)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,15)) "singleClauseMap" Nothing),DP (0,0)),((G AnnComma),DP (1,2))])
                          (HsRecField 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:9-20 }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: traceSources})) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-57 }
                            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-53 }
                              Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-35 }
                                Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: resSourceMap}))) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:37 }
                                Just (Ann (DP (0,-8)) (ColDelta 32) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "origClauseMap" Nothing] [((G AnnVal),DP (0,-8))])
                                (HsVar 
                                 (Unqual {OccName: .}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:39-53 }
                                Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: resolutionTrace}))))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:55 }
                              Just (Ann (DP (0,-1)) (ColDelta 50) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "`" Nothing,DComment (DP (0,0),DP (0,9)) "Map.union" Nothing] [((G AnnVal),DP (0,-1))])
                              (HsVar 
                               (Unqual {OccName: $}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:57 }
                              Just (Ann (DP (0,0)) (ColDelta 52) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: s}))))) 
                           (False))),
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:9-72 }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-20),DP (0,-4)) "traceAntecedents" Nothing),DP (0,-20)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "anteMap" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (1,-2),DP (1,-2)) "" Nothing),DP (1,-2)),((AnnComment DComment (DP (0,0),DP (0,5)) "where" Nothing),DP (0,0)),((G AnnComma),DP (1,2))])
                          (HsRecField 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:9-28 }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: traceOriginalClauses})) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:32-72 }
                            Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:32-44 }
                              Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: origClauseMap}))) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:46-56 }
                              Just (Ann (DP (0,9)) (ColDelta 41) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "}" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                              (HsVar 
                               (Qual {ModuleName: Map} {OccName: union}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:58-72 }
                              Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: singleClauseMap}))))) 
                           (False))),
                         ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:9-34 }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                          (HsRecField 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:9-24 }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: traceAntecedents})) 
                           ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:28-34 }
                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: anteMap}))) 
                           (False)))] 
                        (Nothing)) 
                       [] 
                       [] 
                       [])))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:5-13 }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: getAnteId})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:5-13 }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: getAnteId})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:15 }
                      Just (Ann (DP (0,-13)) (ColDelta 10) DP (0,1) [DComment (DP (0,-5),DP (0,14)) "Map.findWithDefault" Nothing] [((G AnnVal),DP (0,-13))])
                      (VarPat 
                       (Unqual {OccName: s}))),
                     ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:17 }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: v})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,19)-(960,20)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,21)-(960,20)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:21-23 }
                           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: snd}))) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:25 }
                           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: $}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(959,9)-(960,20)
                            }
                           Just (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,3),DP (0,4)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,30)) "\"no reason for assigned var \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,5)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                           (HsApp 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(959,9)-(960,9)
                              }
                             Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:9-77 }
                               Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:9-27 }
                                 Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Qual {ModuleName: Map} {OccName: findWithDefault}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:29-77 }
                                 Just (Ann (DP (0,8)) (ColDelta 24) DP (0,1) [DComment (DP (0,-19),DP (0,-18)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "reason" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                 (HsPar 
                                  ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-76 }
                                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-66 }
                                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-34 }
                                       Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: error}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:36 }
                                       Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:38-66 }
                                       Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsLit 
                                        (HsString "\"no reason for assigned var \"" {FastString: "no reason for assigned var "}))))) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:68-69 }
                                     Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: ++}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:71-76 }
                                     Just (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:71-74 }
                                       Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: show}))) 
                                      ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:76 }
                                       Just (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: v}))))))))))) 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:9 }
                               Just (Ann (DP (0,8)) (ColDelta 4) DP (1,4) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: v}))))) 
                            ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:11-20 }
                             Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:12-19 }
                               Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:12-17 }
                                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: reason}))) 
                                ({ ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:19 }
                                 Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: s})))))))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (9,5)) "{-# LANGUAGE MultiParamTypeClasses\n            ,FunctionalDependencies\n            ,FlexibleInstances\n            ,FlexibleContexts\n            ,GeneralizedNewtypeDeriving\n            ,TypeSynonymInstances\n            ,TypeOperators\n            ,ParallelListComp\n            ,BangPatterns\n #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,21)) "{-# OPTIONS -cpp #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,21)) "{-# OPTIONS -cpp #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (6,1),DP (42,3)) "{-|\n\nFunsat aims to be a reasonably efficient modern SAT solver that is easy to\nintegrate as a backend to other projects.  SAT is NP-complete, and thus has\nreductions from many other interesting problems.  We hope this implementation is\nefficient enough to make it useful to solve medium-size, real-world problem\nmapped from another space.  We also have taken pains test the solver rigorously\nto encourage confidence in its output.\n\nOne particular nicetie facilitating integration of Funsat into other projects\nis the efficient calculation of an /unsatisfiable core/ for unsatisfiable\nproblems (see the \"Funsat.Resolution\" module).  In the case a problem is\nunsatisfiable, as a by-product of checking the proof of unsatisfiability,\nFunsat will generate a minimal set of input clauses that are also\nunsatisfiable.\n\nAnother is the ability to compile high-level circuits into CNF.  Seen the\n\"Funsat.Circuit\" module.\n\n* 07 Jun 2008 21:43:42: N.B. because of the use of mutable arrays in the ST\nmonad, the solver will actually give _wrong_ answers if you compile without\noptimisation.  Which is okay, 'cause that's really slow anyway.\n\n[@Bibliography@]\n\n  * ''Abstract DPLL and DPLL Modulo Theories''\n\n  * ''Chaff: Engineering an Efficient SAT solver''\n\n  * ''An Extensible SAT-solver'' by Niklas Een, Niklas Sorensson\n\n  * ''Efficient Conflict Driven Learning in a Boolean Satisfiability Solver''\nby Zhang, Madigan, Moskewicz, Malik\n\n  * ''SAT-MICRO: petit mais costaud!'' by Conchon, Kanig, and Lescuyer\n\n-}" Nothing),DP (6,1)),((AnnComment DComment (DP (-35,1),DP (1,3)) "{-|\n\nFunsat aims to be a reasonably efficient modern SAT solver that is easy to\nintegrate as a backend to other projects.  SAT is NP-complete, and thus has\nreductions from many other interesting problems.  We hope this implementation is\nefficient enough to make it useful to solve medium-size, real-world problem\nmapped from another space.  We also have taken pains test the solver rigorously\nto encourage confidence in its output.\n\nOne particular nicetie facilitating integration of Funsat into other projects\nis the efficient calculation of an /unsatisfiable core/ for unsatisfiable\nproblems (see the \"Funsat.Resolution\" module).  In the case a problem is\nunsatisfiable, as a by-product of checking the proof of unsatisfiability,\nFunsat will generate a minimal set of input clauses that are also\nunsatisfiable.\n\nAnother is the ability to compile high-level circuits into CNF.  Seen the\n\"Funsat.Circuit\" module.\n\n* 07 Jun 2008 21:43:42: N.B. because of the use of mutable arrays in the ST\nmonad, the solver will actually give _wrong_ answers if you compile without\noptimisation.  Which is okay, 'cause that's really slow anyway.\n\n[@Bibliography@]\n\n  * ''Abstract DPLL and DPLL Modulo Theories''\n\n  * ''Chaff: Engineering an Efficient SAT solver''\n\n  * ''An Extensible SAT-solver'' by Niklas Een, Niklas Sorensson\n\n  * ''Efficient Conflict Driven Learning in a Boolean Satisfiability Solver''\nby Zhang, Madigan, Moskewicz, Malik\n\n  * ''SAT-MICRO: petit mais costaud!'' by Conchon, Kanig, and Lescuyer\n\n-}" Nothing),DP (-35,1)),((AnnComment DComment (DP (0,-2),DP (0,4)) "module" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,14)) "Funsat.Solver" Nothing),DP (0,1)),((G AnnModule),DP (55,1)),((AnnComment DComment (DP (0,-6),DP (0,8)) "#ifndef TESTING" Nothing),DP (0,-6)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,10)) "where" Nothing),DP (1,5)),((G AnnWhere),DP (2,5)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(58,9)-(73,9) CN "(:)" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (2,9) [DComment (DP (1,9),DP (1,10)) "(" Nothing,DComment (DP (0,1),DP (0,15)) "-- * Interface" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((G AnnCloseP),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:59:11-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (1,11) [DComment (DP (0,1),DP (0,6)) "solve" Nothing,DComment (DP (0,-5),DP (0,9)) "-- * Interface" Nothing,DComment (DP (1,9),DP (1,10)) "," Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:59:11-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,1)) "solve1" Nothing),DP (0,-5)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:60:11-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:60:11-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,2)) "Solution" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-22 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-8),DP (0,10)) "-- ** Verification" Nothing),DP (0,-8)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,10)) "," Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,7)) "verify" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-6),DP (0,12)) "-- ** Verification" Nothing),DP (0,-6)),((G AnnComma),DP (2,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:63:11-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:63:11-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,5)) "VerifyError" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-25 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,8)) "-- ** Configuration" Nothing),DP (0,-11)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (1,9),DP (1,10)) "," Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,13)) "FunsatConfig" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-12),DP (0,7)) "-- ** Configuration" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (2,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-26 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,1)) "defaultConfig" Nothing),DP (0,-12)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:67:11-23 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:67:11-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-13),DP (0,9)) "-- * Solver statistics" Nothing),DP (0,-13)),((AnnComment DComment (DP (1,9),DP (1,10)) "," Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,6)) "Stats" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-5),DP (0,17)) "-- * Solver statistics" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,-17),DP (0,-16)) "(" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (2,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-19 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,6)) "ShowWrapped" Nothing),DP (0,-5)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,3)) "(" Nothing),DP (0,2)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-25 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,-2)) "statTable" Nothing),DP (0,-11)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:71:11-19 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:71:11-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,2)) "statSummary" Nothing),DP (0,-9)),((G AnnComma),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:72:11-21 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:72:11-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:1-29 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (13,1) [DComment (DP (1,1),DP (9,3)) "{-\n    This file is part of funsat.\n\n    funsat is free software: it is released under the BSD3 open source license.\n    You can find details of this license in the file LICENSE at the root of the\n    source tree.\n\n    Copyright 2008 Denis Bueno\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-\n    This file is part of funsat.\n\n    funsat is free software: it is released under the BSD3 open source license.\n    You can find details of this license in the file LICENSE at the root of the\n    source tree.\n\n    Copyright 2008 Denis Bueno\n-}" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "Control.Arrow" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "&&&" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:21-29 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-13),DP (0,4)) "Control.Exception" Nothing),DP (0,-13)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,5)) "assert" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:1-34 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,4),DP (0,5)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:25-34 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,2)) "Control.Monad.Error" Nothing),DP (0,-17)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,1)) "hiding" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:27-32 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:27-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:1-61 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,10)) "runErrorT" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:28-61 CN "(:)" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-19),DP (0,2)) "Control.Monad.MonadST" Nothing] [((G AnnHiding),DP (0,-1)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,8)) "MonadST" Nothing),DP (0,1)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:44-48 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:44-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:51-59 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:51-59 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:29-43 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((AnnComment DComment (DP (0,-21),DP (0,2)) "Control.Monad.ST.Strict" Nothing),DP (0,-21)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-41 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:1-30 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:1-55 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-23),DP (0,1)) "Control.Monad.State.Lazy" Nothing,DComment (DP (0,1),DP (0,7)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:33-55 CN "(:)" NotNeeded,
  (Ann (DP (0,12)) (ColDelta 33) DP (0,1) [DComment (DP (0,-24),DP (0,-11)) "Data.Array.ST" Nothing] [((G AnnHiding),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:49-53 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:49-53 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:1-20 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:1-25 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-13),DP (0,5)) "Data.Array.Unboxed" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:1-41 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-18),DP (0,-5)) "Data.Foldable" Nothing,DComment (DP (0,1),DP (0,7)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "sequence_" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:22-41 CN "(:)" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,1) [DComment (DP (0,-13),DP (0,-5)) "Data.Int" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,6)) "Int64" Nothing] [((G AnnHiding),DP (0,-1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) ")" Nothing),DP (0,-4)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:31-39 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:31-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:1-24 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:16-24 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,1)) "Data.List" Nothing),DP (0,-8)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-1)) "nub" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:18-22 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:18-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:1-44 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,4)) "tails" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "sortBy" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "sort" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:17-44 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "Data.Maybe" Nothing),DP (0,-9)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:19-21 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:19-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:24-28 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:24-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:31-36 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:31-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:39-42 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:39-42 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:1-17 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-10),DP (0,-2)) "Data.Ord" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "comparing" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:16-28 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,2)) "Data.STRef" Nothing),DP (0,-8)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:18-26 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:18-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:1-17 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:1-27 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-10),DP (0,3)) "Data.Sequence" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,4)) "Seq" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,23)) "-- import Debug.Trace (trace)" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:21-27 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:23-25 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:23-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:1-19 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,23)) "-- import Debug.Trace (trace)" Nothing,DComment (DP (0,-22),DP (0,-10)) "Funsat.Monad" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:1-19 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:1-68 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,5)) "Funsat.Resolution" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,20)) "initResolutionTrace" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:25-68 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,-5)) "Funsat.Types" Nothing),DP (0,-17)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-45 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:48-66 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:48-66 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:1-19 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,9)) "Funsat.Types.Internal" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:1-74 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-21),DP (0,-14)) "Prelude" Nothing,DComment (DP (0,1),DP (0,7)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,4)) "sum" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,10)) "concatMap" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "elem" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "foldr" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "foldl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "any" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "maximum" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:16-74 CN "(:)" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 16) DP (0,1) [DComment (DP (0,-7),DP (0,10)) "Funsat.Resolution" Nothing] [((G AnnHiding),DP (0,-9)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:25-27 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:25-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,16)) "ResolutionError" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:30-38 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:30-38 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:41-44 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:41-44 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:47-51 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:47-51 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) ")" Nothing),DP (0,-5)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:54-58 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:54-58 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:61-63 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:61-63 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:66-72 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:66-72 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:1-47 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:25-47 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,-6)) "Text.Printf" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,7)) "printf" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-45 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,-13)) ")" Nothing),DP (0,-14)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:19-28 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-2)) "qualified" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,14)) "Data.Foldable" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:21-26 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:21-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,5)) "as" Nothing,DComment (DP (0,1),DP (0,3)) "Fl" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-13),DP (0,-4)) "Data.List" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "List" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,-1)) "Data.Map" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "Map" Nothing),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,5)) "Data.Sequence" Nothing),DP (0,-8)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,1)) "as" Nothing,DComment (DP (0,1),DP (0,4)) "Seq" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-13),DP (0,-5)) "Data.Set" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "Set" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,9)) "Funsat.Resolution" Nothing),DP (0,-8)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,5)) "as" Nothing,DComment (DP (0,1),DP (0,11)) "Resolution" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-17),DP (0,-5)) "Text.Tabular" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,3)) "as" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "Tabular" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1-72 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (1,15)) "-- * Interface" Nothing,DComment (DP (1,1),DP (1,15)) "-- * Interface" Nothing,DComment (DP (1,1),DP (1,73)) "-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a" Nothing,DComment (DP (1,1),DP (1,73)) "-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a" Nothing,DComment (DP (0,-72),DP (0,4)) "-- solution, along with internal solver statistics and possibly a resolution" Nothing,DComment (DP (1,1),DP (1,74)) "-- trace.  The trace is for checking a proof of `Unsat', and thus is only" Nothing,DComment (DP (0,-73),DP (0,3)) "-- solution, along with internal solver statistics and possibly a resolution" Nothing,DComment (DP (1,1),DP (1,39)) "-- present when the result is `Unsat'." Nothing,DComment (DP (0,-38),DP (0,35)) "-- trace.  The trace is for checking a proof of `Unsat', and thus is only" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "solve" Nothing,DComment (DP (0,-5),DP (0,33)) "-- present when the result is `Unsat'." Nothing,DComment (DP (0,-32),DP (0,-30)) "::" Nothing,DComment (DP (0,1),DP (0,13)) "FunsatConfig" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-72 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "cfg" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-72 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,-8)) "fIn" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:26-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:26-72 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:33-72 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:34-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:44-48 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:51-55 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:51-71 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:57-71 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:7-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,-73)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,74)) "-- To solve, we simply take baby steps toward the solution using solveStep," Nothing] [((G AnnVal),DP (0,-73))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:11-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,15)-(169,27) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:5-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:5-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(131,5)-(132,9) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(131,5)-(144,26) CN "OpApp" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,5),DP (1,44)) "-- starting with an initial assignment." Nothing,DComment (DP (0,-39),DP (0,36)) "-- To solve, we simply take baby steps toward the solution using solveStep," Nothing,DComment (DP (1,1),DP (1,36)) "--     trace (\"input \" ++ show f) $" Nothing,DComment (DP (0,-31),DP (0,8)) "-- starting with an initial assignment." Nothing,DComment (DP (1,1),DP (1,36)) "--     trace (\"input \" ++ show f) $" Nothing,DComment (DP (0,-31),DP (0,-25)) "either" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "error" Nothing,DComment (DP (0,1),DP (0,28)) "\"solve: invariant violated\"" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:12-46 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "runST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:13-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:19-45 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:48-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:132:5-9 CN "HsVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:132:11 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 11) DP (0,1) [DComment (DP (0,-5),DP (0,10)) "evalSSTErrMonad" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:133:5-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(133,5)-(137,80) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(133,5)-(144,26) CN "HsApp" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,9)-(137,80) CN "HsPar" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,17)) "initialAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "newSTUArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,10)-(137,79) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,13)-(137,79) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:13-29 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:13-76 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-17),DP (0,-16)) "(" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "isUnsat" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "initialState" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,13)-(137,79) CN "(:)" Ref "delta-1",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:34-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:34-76 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:43-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,-16))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:43-74 CN "HsApp" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:43-76 CN "HsApp" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 30) DP (0,1) [DComment (DP (0,0),DP (0,17)) "initialAssignment" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:55-74 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56-58 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:58 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:61-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:61-73 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:63-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:64-70 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:64-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:76 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-24 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-58 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "then" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "if" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:17-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 4) DP (0,1) [DComment (DP (0,0),DP (0,7)) "isUnsat" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:29-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:29-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:42-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 29) DP (0,1) [DComment (DP (0,-12),DP (0,2)) "reportSolution" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-15),DP (0,-14)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Unsat" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((AnnComment DComment (DP (0,9),DP (0,12)) ">>=" Nothing),DP (0,9)),((AnnComment DComment (DP (0,1),DP (0,15)) "reportSolution" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,-8),DP (1,-8)) "" Nothing),DP (1,-8)),((AnnComment DComment (DP (0,0),DP (0,2)) "SC" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "cnf" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "f" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "clauses" Nothing),DP (0,1)),((G AnnElse),DP (1,11))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:16-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:29-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:29-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:44-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:45-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,16)) "initialAssignment" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:45-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-79 CN "OpApp" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "Set.empty" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:44-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:62-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,14)) (ColDelta 49) DP (0,1) [DComment (DP (0,-17),DP (0,-16)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:66-79 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(138,5)-(144,26) CN "RecordCon" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:9-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:9-38 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,4)) "watches" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:15-38 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "," Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,7)) "learnt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:18-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:18-36 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,3)) "undefined" Nothing),DP (0,-6)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:28-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:41-42 CN "Unqual" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:41-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 41) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "undefined" Nothing] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:46-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:9-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:9-27 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-2)) "propQ" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:19-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "Seq.empty" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:30-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:30-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 30) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "trail" Nothing] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,-3)) "level" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "undefined" Nothing),DP (0,1)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:39-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:9-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:9-25 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,-1)) "FunStats" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:17-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:28-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:28-37 CN "HsRecField" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 28) DP (0,1) [DComment (DP (0,-1),DP (0,7)) "numConfl" Nothing] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:36-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:40-44 CN "Unqual" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,-12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:40-56 CN "HsRecField" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 40) DP (0,1) [DComment (DP (0,0),DP (0,13)) "numConflTotal" Nothing] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "=" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "numDecisions" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "numImpl" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "}" Nothing),DP (0,0)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:48-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:9-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:9-85 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,1)) "reason" Nothing),DP (0,-5)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:17-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:17-85 CN "RecordCon" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,2)) "Map.empty" Nothing),DP (0,-7)),((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:26-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:26-37 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "," Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,9)) "varOrder" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:37 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:39-51 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:39-55 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-3)) "undefined" Nothing),DP (0,-12)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:55 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:57-68 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:57-72 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:72 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:74-80 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 74) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:74-84 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 74) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:84 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 84) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:9-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:9-26 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-6),DP (0,9)) "resolutionTrace" Nothing),DP (0,-6)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:18-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:29-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,-20)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,-20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:29-48 CN "HsRecField" NotNeeded,
  (Ann (DP (0,-20)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,21)) "PartialResolutionTrace" Nothing] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "Map.empty" Nothing),DP (0,1)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:40-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:9-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:9-66 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-5)) "dpllConfig" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "cfg" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (1,3),DP (1,8)) "where" Nothing),DP (1,3)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:27-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:50 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:52-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:55-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:58-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:9-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:9-24 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:22-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,41)) "-- If returns True, then problem is unsat." Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(146,5)-(169,27) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,1)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "preprocessCNF" Nothing,DComment (DP (0,1),DP (0,4)) "fIn" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:7-25 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 2) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:9-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:9-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:23-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5-67 CN "TypeSig" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "initialState" Nothing,DComment (DP (0,-12),DP (0,30)) "-- If returns True, then problem is unsat." Nothing,DComment (DP (0,-29),DP (0,-27)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "IAssignment" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-33 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-67 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-67 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 28) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:38-45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:38-47 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:38-67 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:49-67 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:50-60 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:63-66 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,5)-(169,27) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,5)-(169,27) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:18 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,12)) "initialLevel" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,20)-(169,27) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,22)-(169,27) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(150,7)-(169,27) Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:7-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:7-71 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-6)) "modify" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(150,7)-(169,27) CN "(:)" Ref "delta-2",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,5)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "newSTUArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "noLevel" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:23-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:23-71 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,0),DP (0,1)) "s" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "level" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:32-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:32-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:32-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:44-63 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 37) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "initialLevel" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45-47 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:47 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,1) [DComment (DP (0,0),DP (0,1)) "}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:50-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:50-62 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:52-62 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:53-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:53-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:65-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-46 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-46 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,8)) "initialWatches" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 CN "(:)" Ref "delta-3",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22-46 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-1)) "newSTArray" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:25-29 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:25-44 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,1)) "liftST" Nothing),DP (0,-5)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:33-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7-20 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7-81 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "-" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-8)) "modify" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:25-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:25-81 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "watches" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:34-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:34-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:34-81 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:45-78 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 38) DP (0,1) [DComment (DP (0,-9),DP (0,5)) "initialWatches" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46-62 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:48-62 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:49-61 CN "NegApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnMinus),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:51-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,1)) "}" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:52-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:52-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:65 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:65-77 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:65-77 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:67-77 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:68-74 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:68-76 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:76 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:80-81 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-50 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-50 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,8)) "initialLearnts" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 CN "(:)" Ref "delta-4",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22-50 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22-50 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,1)) "L" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "-" Nothing),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:25-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:25-48 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:35-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 19) DP (0,1) [DComment (DP (0,0),DP (0,10)) "newSTArray" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7-20 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7-81 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-8)) "modify" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:25-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:25-81 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:34-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:34-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:34-81 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:45-78 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 38) DP (0,1) [DComment (DP (0,-10),DP (0,4)) "initialLearnts" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46-62 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:48-62 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:49-61 CN "NegApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnMinus),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:51-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:52-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:52-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:65 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:65-77 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:65-77 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:67-77 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:68-74 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:68-76 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 61) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:76 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:80-81 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-49 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,9)) "initialVarOrder" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 CN "(:)" Ref "delta-5",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 Ref "delta-5"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22-49 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22-49 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,-13),DP (0,-2)) "newSTUArray" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "V" Nothing),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:25-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:25-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,1)) "liftST" Nothing),DP (0,-5)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:34-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7-82 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,16)) "initialActivity" Nothing] [((AnnComment DComment (DP (0,-15),DP (0,-9)) "modify" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:26-82 CN "OpApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "{" Nothing,DComment (DP (0,1),DP (0,9)) "varOrder" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:35-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:35-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:35-82 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:47-66 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,-13)) (ColDelta 40) DP (0,1) [DComment (DP (0,-10),DP (0,-2)) "VarOrder" Nothing,DComment (DP (0,1),DP (0,16)) "initialVarOrder" Nothing] [((G AnnOpenP),DP (0,-13)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48-50 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:50 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:53-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:53-65 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:55-65 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:56-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:56-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:64 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 57) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:68-82 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-61 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-61 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 CN "(:)" Ref "delta-6",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 Ref "delta-6"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22-61 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22-61 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:25-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:25-59 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:36-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:36-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:45-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(161,70) CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(169,27) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,69)) "-- Watch each clause, making sure to bork if we find a contradiction." Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,68)) "-- Watch each clause, making sure to bork if we find a contradiction." Nothing,DComment (DP (0,-68),DP (0,-67)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "catchError" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(169,27) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:8-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-5)) "const" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,8)-(161,69) CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:8-69 CN "HsPar" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,4),DP (0,5)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,4)) "True" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-68 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:15 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,5)) "forM_" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:17-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:17-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:24-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:25-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:25-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,13)) (ColDelta 34) DP (0,1) [DComment (DP (0,-14),DP (0,-13)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:44-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 CN "(:)" Ref "delta-7",
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 Ref "delta-7"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:49 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:54-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:54-68 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:54-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:61-68 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:62 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:64-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:64-67 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(161,74)-(169,27) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(169,27) Ref "delta-8"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:11-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(167,73) CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(167,73) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(169,27) CN "(:)" Ref "delta-8",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:17-27 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "->" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:18-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "cid" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,13)-(167,73) CN "HsPar" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "nextTraceId" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72) CN "(:)" Ref "delta-9",
  (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72) CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72) Ref "delta-9"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,20)-(167,72) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,20)-(167,72) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,23)-(167,72) Ref "delta-10"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:23-25 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:23-40 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,9)) "isConsistent" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,23)-(167,72) CN "(:)" Ref "delta-10",
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:30-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23-34 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23-66 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "watchClause" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-8)) "when" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "not" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "isConsistent" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:39-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 28) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:53-60 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:54 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:57-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:57-59 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:62-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:23-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:23-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(165,23)-(167,72) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(165,23)-(167,72) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:28-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,-46)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,47)) "-- conflict data is ignored here, so safe to fake" Nothing] [((G AnnOpenP),DP (0,-46)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:29-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:29-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:33-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:25-72 CN "HsPar" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 2) DP (2,2) [DComment (DP (1,2),DP (1,3)) "(" Nothing,DComment (DP (0,-1),DP (0,48)) "-- conflict data is ignored here, so safe to fake" Nothing,DComment (DP (0,-48),DP (0,-46)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,13)) "traceClauseId" Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,11)) "throwError" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-12),DP (1,-12)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing] [((G AnnOpenP),DP (0,-14)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:26-71 CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-71 Ref "delta-11"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-45 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [(AnnSemiSep,DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-71 CN "(:)" Ref "delta-11",
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:43-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:49-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:49-71 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:49-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:60-71 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61-63 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:63 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:70 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:70 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11-41 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:16-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:23-41 CN "HsPar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:24-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:24-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,12)) (ColDelta 29) DP (0,1) [DComment (DP (0,-12),DP (0,-11)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11-27 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:18-27 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:19 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:22-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:22-26 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1-57 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,59)) "-- | Solve with the default configuration `defaultConfig'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "solve1" Nothing,DComment (DP (0,-6),DP (0,52)) "-- | Solve with the default configuration `defaultConfig'." Nothing,DComment (DP (0,-51),DP (0,-49)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-57 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "solve" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-57 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:18-57 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 18) DP (0,1) [DComment (DP (0,-1),DP (0,12)) "defaultConfig" Nothing] [((G AnnOpenP),DP (0,-11)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:19-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:29-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:36-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:36-56 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:42-56 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:8-28 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:10-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:10-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:16-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1-54 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,73)) "-- | This function applies `solveStep' recursively until SAT instance is" Nothing,DComment (DP (1,1),DP (1,73)) "-- | This function applies `solveStep' recursively until SAT instance is" Nothing,DComment (DP (0,-72),DP (0,6)) "-- solved, starting with the given initial assignment.  It also implements the" Nothing,DComment (DP (1,1),DP (1,51)) "-- conflict-based restarting (see `FunsatConfig')." Nothing,DComment (DP (0,-50),DP (0,28)) "-- solved, starting with the given initial assignment.  It also implements the" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,14)) "stepToSolution" Nothing,DComment (DP (0,-14),DP (0,36)) "-- conflict-based restarting (see `FunsatConfig')." Nothing,DComment (DP (0,-35),DP (0,-33)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-54 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "assignment" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-54 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:36-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:36-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:36-54 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:47-54 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,7)) "assignment" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:16-25 CN "VarPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 16) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,4)) "step" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "solveStep" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,27)-(206,38) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 27) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,29)-(192,25) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(181,5)-(192,25) Ref "delta-12"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:5-8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:5-32 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,7)) "useRestarts" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(181,5)-(192,25) CN "(:)" Ref "delta-12",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:13-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:13-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5-15 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5-56 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-7)) "(" Nothing,DComment (DP (0,0),DP (0,17)) "configUseRestarts" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-11),DP (0,4)) "isTimeToRestart" Nothing),DP (0,-11)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:20-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:25-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 20) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "<-" Nothing,DComment (DP (0,1),DP (0,8)) "uncurry" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:26-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:26-55 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 39) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ">=" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:46-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:5-19 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,5)-(184,73) CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-4),DP (0,0)) "gets" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:24-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:24-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,24)-(184,73) CN "OpApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "numConfl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:32-37 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:33-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,3)) "stats" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:39-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-1)) "&&&" Nothing),DP (0,-4)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (1,11) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:16-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (1,11) [DComment (DP (0,0),DP (0,13)) "configRestart" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "case" Nothing,DComment (DP (0,1),DP (0,5)) "step" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:21-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-39 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-72 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:23-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:23-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:34-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:41-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:45-72 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:46-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:46-71 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:62-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(185,5)-(192,25) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(185,5)-(192,25) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "m" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,7)-(192,25) Ref "delta-13"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:185:10-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Left" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:7-12 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,7)-(191,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,7)-(192,25) CN "(:)" Ref "delta-13",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,0),DP (0,2)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "useRestarts" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,16)) "isTimeToRestart" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,14)-(191,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,17)-(191,35) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(191,35) Ref "delta-14"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:20-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(190,38) CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(190,38) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(191,35) CN "(:)" Ref "delta-14",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:25-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:26-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:26-55 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:38-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 18) DP (0,1) [DComment (DP (0,-11),DP (0,-11)) "" Nothing,DComment (DP (0,0),DP (0,6)) "_stats" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,13)) "extractStats" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:41-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,22)-(190,38) CN "HsPar" NotNeeded,
  (Ann (DP (0,-32)) (ColDelta 2) DP (1,2) [DComment (DP (1,-19),DP (1,34)) "--                          trace (\"Restarting...\") $" Nothing] [((G AnnOpenP),DP (0,-32)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,23)-(190,37) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,26)-(190,37) Ref "delta-15"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:26-31 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:26-47 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,26)-(190,37) CN "(:)" Ref "delta-15",
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:36-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 0) DP (3,0) [] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26-37 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 0) DP (3,0) [DComment (DP (1,-25),DP (1,28)) "--                          trace (\"Restarting...\") $" Nothing,DComment (DP (0,-53),DP (0,3)) "--                           trace (statSummary stats) $" Nothing,DComment (DP (1,-25),DP (1,31)) "--                           trace (statSummary stats) $" Nothing,DComment (DP (0,-31),DP (0,-31)) "" Nothing,DComment (DP (0,0),DP (0,10)) "resetState" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-6),DP (1,-6)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,14)) "stepToSolution" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 0) DP (3,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "m" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20-35 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 15) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "s" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7-25 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:15-25 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:18-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,10)) "resetState" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-8),DP (0,-8)) "" Nothing,DComment (DP (0,0),DP (0,6)) "modify" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,18)-(206,38) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,20)-(206,38) CN "HsDo" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,2)) "->" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(195,7)-(206,38) Ref "delta-16"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-70 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-70 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(195,7)-(206,38) CN "(:)" Ref "delta-16",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "stats" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "in" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "stats" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,8)) "numConfl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,-39)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,40)) "-- Require more conflicts before next restart." Nothing] [((G AnnVal),DP (0,-39))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 CN "(:)" Ref "delta-17",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 Ref "delta-17"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-70 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-70 CN "HsLet" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 NotNeeded),DP (0,0)),((G AnnIn),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:29-37 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:31-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:31-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:42-70 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:45-49 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:45-68 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:53-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:53-68 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:56-63 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:56-67 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:67 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:7-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:7-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,7)-(200,30) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "modifySlot" Nothing,DComment (DP (0,-10),DP (0,36)) "-- Require more conflicts before next restart." Nothing,DComment (DP (0,-35),DP (0,-25)) "dpllConfig" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,7)-(200,30) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:18-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 22) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,14)) "configRestart" Nothing] [((G AnnVal),DP (0,-12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30) CN "(:)" Ref "delta-18",
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30) Ref "delta-18"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:32 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:34 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,9)-(200,30) CN "GRHS" NotNeeded,
  (Ann (DP (1,-22)) (ColDelta -22) DP (1,-22) [DComment (DP (0,4),DP (0,5)) "=" Nothing,DComment (DP (0,1),DP (0,8)) "ceiling" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,17)) "configRestartBump" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,9)-(200,30) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -22) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:12-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,12)-(200,28) CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -19) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,25)-(200,28) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -6) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,-24),DP (1,-24)) "" Nothing),DP (1,-24)),((AnnComment DComment (DP (0,0),DP (0,3)) "lvl" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,17)) "FrozenLevelArray" Nothing),DP (0,1)),((G AnnCloseC),DP (1,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:28-40 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,28)-(199,84) CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -3) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:44-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,44)-(199,84) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,52)-(199,84) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:53-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:53-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,53)-(199,83) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:71 CN "HsVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 40) DP (0,1) [DComment (DP (0,-16),DP (0,-4)) "fromIntegral" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "configRestart" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,21)) (ColDelta 21) DP (1,21) [DComment (DP (0,10),DP (0,11)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-3),DP (1,-2)) "}" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:54-65 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:54-83 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:67-83 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:68-80 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:68-82 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:82 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-29 CN "SigPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,7)) "undoneLits" Nothing),DP (0,-3)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-69 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,2)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,6)) "level" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "unsafeFreeze" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-10)) "<-" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,10)) "takeWhile" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:14-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-69 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:39-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 32) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "lvl" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "!" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:49-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:58-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7-16 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7-74 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-12),DP (0,-7)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,6)) "trail" Nothing] [((AnnComment DComment (DP (0,-10),DP (0,-5)) "forM_" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,11)) "undoneLits" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-74 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:31-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 CN "(:)" Ref "delta-19",
  (Ann (DP (0,-1)) (ColDelta 25) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 Ref "delta-19"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "undoOne" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:33 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-50 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-54 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,1)) "m" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:44-50 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:45-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:54 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:57-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:65-68 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:65-74 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:70-74 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-42 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:13-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,1)) "modify" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:26-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,1) [DComment (DP (0,0),DP (0,2)) "dl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:32-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:33-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:33-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "propQ" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-52 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,8)) "Seq.empty" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,3)) "compactDB" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 CN "(:)" Ref "delta-20",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 Ref "delta-20"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22-52 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22-52 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:25-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:25-31 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:30-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:34-38 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:34-50 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:42-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:205:7-15 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:205:7-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-38 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-9),DP (0,6)) "unsafeFreezeAss" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,11)) "simplifyDB" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:25-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:29-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1-81 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,14)) "reportSolution" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-81 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-81 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-5)) "do" Nothing),DP (0,-7)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:31-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:31-40 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:31-81 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:42-81 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:43-50 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:53-57 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:60-64 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:60-80 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:66-80 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 16) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,5)) "stats" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,13)) "extractStats" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,18)-(215,42) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,20)-(215,42) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(210,5)-(215,42) Ref "delta-21"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:5-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:5-25 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "case" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(210,5)-(215,42) CN "(:)" Ref "delta-21",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:14-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(211,5)-(215,42) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(211,5)-(215,42) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(212,7)-(215,42) Ref "delta-22"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:211:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,3)) "Sat" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-11 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-43 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(212,7)-(215,42) CN "(:)" Ref "delta-22",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "stats" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:11 CN "WildPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "Unsat" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:15-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,3) [DComment (DP (0,1),DP (0,2)) "_" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:18-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:25-43 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 18) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:26 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:29-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:29-33 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:36-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:36-42 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:7-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,7)-(215,42) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "resTrace" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,15)-(215,42) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,18)-(215,42) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(214,11)-(215,42) Ref "delta-23"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:11-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:11-41 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "return" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(214,11)-(215,42) CN "(:)" Ref "delta-23",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [DComment (DP (0,0),DP (0,2)) "<-" Nothing,DComment (DP (0,1),DP (0,18)) "constructResTrace" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:23-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:23-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "stats" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-13),DP (0,-12)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,9)) "resTrace" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11-42 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:18-42 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:19 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:22-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:22-26 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:29-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:29-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:29-41 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:34-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1-29 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,60)) "-- | A default configuration based on the formula to solve." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,57)) "-- | A default configuration based on the formula to solve." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,32)) "--  * restarts every 100 conflicts" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,32)) "--  * restarts every 100 conflicts" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * requires 1.5 as many restarts after restarting as before, each time" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * requires 1.5 as many restarts after restarting as before, each time" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "--  * VSIDS to be enabled" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "--  * VSIDS to be enabled" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,26)) "--  * restarts to be enabled" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,13)) "defaultConfig" Nothing,DComment (DP (0,-13),DP (0,15)) "--  * restarts to be enabled" Nothing,DComment (DP (0,-14),DP (0,-12)) "::" Nothing,DComment (DP (0,1),DP (0,13)) "FunsatConfig" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:18-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "Cfg" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:18-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-9),DP (0,-8)) "{" Nothing,DComment (DP (0,1),DP (0,14)) "configRestart" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "100" Nothing,DComment (DP (0,1),DP (0,47)) "-- fromIntegral $ max (numVars f `div` 10) 100" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,15)-(231,50) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:17-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,17)-(231,50) CN "RecordCon" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:23-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:23-41 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,-12)) "," Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,18)) "configRestartBump" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-1),DP (0,45)) "-- fromIntegral $ max (numVars f `div` 10) 100" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,-44),DP (0,-41)) "1.5" Nothing),DP (0,-44)),((G AnnComma),DP (1,23))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:39-41 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:25-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:25-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,-3)) "configUseVSIDS" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "True" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,23))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:45-47 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:25-38 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:25-45 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,3)) "configUseRestarts" Nothing),DP (0,-14)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,5)) "True" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((G AnnComma),DP (1,23))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:42-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:25-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:25-48 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:45-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (1,1),DP (1,19)) "-- * Preprocessing" Nothing,DComment (DP (1,1),DP (1,19)) "-- * Preprocessing" Nothing,DComment (DP (1,1),DP (1,33)) "-- | Some kind of preprocessing." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,30)) "-- | Some kind of preprocessing." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,22)) "--   * remove duplicates" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,13)) "preprocessCNF" Nothing,DComment (DP (0,-13),DP (0,11)) "--   * remove duplicates" Nothing,DComment (DP (0,-10),DP (0,-8)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-27 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-27 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "f" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "clauses" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:25-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,12)) "simpClauses" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [DComment (DP (0,-9),DP (0,-4)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,11)) "simpClauses" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,17)-(240,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:19-54 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:21-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:21-53 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,8)) "Set.map" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:31-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:31-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:43-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 43) DP (0,1) [DComment (DP (0,-9),DP (0,-6)) "nub" Nothing,DComment (DP (0,1),DP (0,11)) "-- rm dups" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:44-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:44-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:23-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:25-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:25-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:33-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (0,1),DP (0,11)) "-- rm dups" Nothing,DComment (DP (1,1),DP (1,75)) "-- | Simplify the clause database.  Eventually should supersede, probably," Nothing,DComment (DP (1,1),DP (1,20)) "-- `preprocessCNF'." Nothing,DComment (DP (0,-19),DP (0,55)) "-- | Simplify the clause database.  Eventually should supersede, probably," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,17)) "-- `preprocessCNF'." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,32)) "-- Precondition: decision level 0." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "simplifyDB" Nothing,DComment (DP (0,-10),DP (0,24)) "-- Precondition: decision level 0." Nothing,DComment (DP (0,-23),DP (0,-21)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "mFr" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-9)) "=" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:30-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:30-39 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:30-42 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:41-42 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:12-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,-67)) (ColDelta 12) DP (0,1) [DComment (DP (0,-8),DP (0,68)) "-- For each clause in the database, remove it if satisfied; if it contains a" Nothing] [((G AnnVal),DP (0,-67))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,16)-(260,39) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,18)-(260,39) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(250,3)-(260,39) Ref "delta-24"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:3 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:3-31 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(250,3)-(260,39) CN "(:)" Ref "delta-24",
  (Ann (DP (1,0)) (ColDelta 3) DP (3,0) [DComment (DP (1,0),DP (1,59)) "-- literal whose negation is assigned, delete that literal." Nothing,DComment (DP (0,-59),DP (0,17)) "-- For each clause in the database, remove it if satisfied; if it contains a" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "n" Nothing,DComment (DP (0,-1),DP (0,58)) "-- literal whose negation is assigned, delete that literal." Nothing,DComment (DP (0,-57),DP (0,-55)) "<-" Nothing,DComment (DP (0,1),DP (0,8)) "numVars" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,4)) "cnf" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:8-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:8-31 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:16-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-4)) "get" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:24-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:29-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3-10 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "liftST" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:8-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:3-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:3-29 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,3)-(260,39) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "." Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,1),DP (0,3)) ".." Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,3)-(260,39) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "l" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:12-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:12-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:18-29 CN "ArithSeq" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing] [((G AnnOpenS),DP (0,-1)),((G AnnDotdot),DP (0,1)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:19-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:21 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "i" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:26-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39) CN "(:)" Ref "delta-25",
  (Ann (DP (0,-1)) (ColDelta 30) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39) Ref "delta-25"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:34 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:39-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:39-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,39)-(260,39) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,39)-(260,39) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:44-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:51-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:54 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,59)-(260,39) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(260,39) Ref "delta-26"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(254,75) CN "LetStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(260,39) CN "(:)" Ref "delta-26",
  (Ann (DP (1,0)) (ColDelta -28) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "filterL" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,9)-(254,75) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:11-21 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 2) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:13-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:15-21 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:16-20 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,0)) "_i" Nothing),DP (0,-2)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-44))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-75 CN "FunBind" NotNeeded,
  (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,3)) "map" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "filter" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "/=" Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,44)) "-- Remove unsat literal `negate l' from clauses." Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-75 CN "Match" NotNeeded,
  (Ann (DP (0,-44)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:17-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:20-75 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:22-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:22-75 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:26-75 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 CN "(:)" Ref "delta-27",
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 Ref "delta-27"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:28-38 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:29 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:32 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:35-37 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43-74 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43-74 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:44 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-68 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:54-66 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:55-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:55-65 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:58-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:58-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:65 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:71-73 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:71-73 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-36 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,-4),DP (1,36)) "--     modifyArray (watches s) l filterL" Nothing,DComment (DP (0,-36),DP (0,12)) "-- Remove unsat literal `negate l' from clauses." Nothing,DComment (DP (1,-4),DP (1,36)) "--     modifyArray (watches s) l filterL" Nothing,DComment (DP (0,-36),DP (0,-36)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "modifyArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "learnt" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,8)) "filterL" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:17-26 CN "HsPar" NotNeeded,
  (Ann (DP (0,-22)) (ColDelta 12) DP (0,1) [DComment (DP (0,-11),DP (0,23)) "-- Clauses containing `l' are Sat." Nothing] [((G AnnOpenP),DP (0,-22)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:18-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:30-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-39 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,-4),DP (1,39)) "--     writeArray (watches s) (negate l) []" Nothing,DComment (DP (0,-39),DP (0,-5)) "-- Clauses containing `l' are Sat." Nothing,DComment (DP (1,-4),DP (1,39)) "--     writeArray (watches s) (negate l) []" Nothing,DComment (DP (0,-39),DP (0,-39)) "" Nothing,DComment (DP (0,0),DP (0,10)) "writeArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "learnt" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:16-25 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:17-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:17-24 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:27-36 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:28-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:28-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:38-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1-74 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (1,15)) "-- * Internals" Nothing,DComment (DP (1,1),DP (1,15)) "-- * Internals" Nothing,DComment (DP (1,1),DP (1,71)) "-- | The DPLL procedure is modeled as a state transition system.  This" Nothing,DComment (DP (1,1),DP (1,71)) "-- | The DPLL procedure is modeled as a state transition system.  This" Nothing,DComment (DP (0,-70),DP (0,8)) "-- function takes one step in that transition system.  Given an unsatisfactory" Nothing,DComment (DP (1,1),DP (1,78)) "-- assignment, perform one state transition, producing a new assignment and a" Nothing,DComment (DP (0,-77),DP (0,1)) "-- function takes one step in that transition system.  Given an unsatisfactory" Nothing,DComment (DP (1,1),DP (1,14)) "-- new state." Nothing,DComment (DP (0,-13),DP (0,64)) "-- assignment, perform one state transition, producing a new assignment and a" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "solveStep" Nothing,DComment (DP (0,-9),DP (0,4)) "-- new state." Nothing,DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "Either" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-26 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-74 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-74 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 26) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:31-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:31-40 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:31-74 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:42-74 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:43-48 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:43-64 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:43-73 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:50-64 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:51-61 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:51-63 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:63 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:66-73 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 11) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,13)-(292,40) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,15)-(284,41) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(270,5)-(284,41) Ref "delta-28"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-45 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(270,5)-(284,41) CN "(:)" Ref "delta-28",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,4),DP (0,5)) "m" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,20)) "solveStepInvariants" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 16) DP (0,1) [DComment (DP (0,-15),DP (0,-11)) "conf" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,11)) "dpllConfig" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:23-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:27-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5-8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5-27 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-1)) "let" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,8)) "selector" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:13-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:13-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:18-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:5-71 CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-10),DP (0,-9)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "if" Nothing,DComment (DP (0,1),DP (0,15)) "configUseVSIDS" Nothing,DComment (DP (0,1),DP (0,5)) "conf" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing,DComment (DP (0,1),DP (0,7)) "select" Nothing,DComment (DP (0,1),DP (0,5)) "else" Nothing,DComment (DP (0,1),DP (0,13)) "selectStatic" Nothing] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71 CN "FunBind" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,7)) "maybeConfl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71 CN "Match" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 0) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:18-71 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:20-71 CN "HsIf" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,3)) "bcp" Nothing] [((G AnnIf),DP (0,-2)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:23-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:23-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:38-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,14)) (ColDelta 29) DP (0,1) [DComment (DP (0,-14),DP (0,-13)) "m" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:48-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:60-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5-23 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-7)) "mFr" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,3),DP (0,5)) "<-" Nothing),DP (0,3)),((AnnComment DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:19-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:19-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5-30 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,6),DP (0,7)) "m" Nothing] [((AnnComment DComment (DP (0,-3),DP (0,2)) "voArr" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:14-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:14-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 25) DP (0,1) [DComment (DP (0,-15),DP (0,-11)) "gets" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "varOrderArr" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5-42 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,9)) "varOrder" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "voFr" Nothing),DP (0,-5)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:14-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:14-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:19-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,10)) "FrozenVarOrder" Nothing] [((G AnnOpenP),DP (0,-9)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "`" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:20-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:20-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:34-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5-8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5-63 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "unsafeFreeze" Nothing,DComment (DP (0,1),DP (0,6)) "voArr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "s" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:14-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:14-63 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:29-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,12)) (ColDelta 24) DP (0,1) [DComment (DP (0,-14),DP (0,-11)) "get" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:37-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:37-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:44-63 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:45-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:45-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:58-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5-16 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,10)) "stepForward" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:14-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:278:5-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,28) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,60) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,20) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,43) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,27) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,41) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,41) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:278:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 12) DP (0,1) [DComment (DP (0,-5),DP (0,13)) "-- Check if unsat." Nothing] [((G AnnVal),DP (0,-12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:11-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:11-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:11-28 CN "HsApp" NotNeeded,
  (Ann (DP (1,6)) (ColDelta 6) DP (2,6) [DComment (DP (1,6),DP (1,11)) "unsat" Nothing,DComment (DP (0,-5),DP (0,13)) "-- Check if unsat." Nothing,DComment (DP (0,-12),DP (0,-2)) "maybeConfl" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,4)) "==>" Nothing,DComment (DP (0,1),DP (0,17)) "postProcessUnsat" Nothing,DComment (DP (0,1),DP (0,11)) "maybeConfl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:17-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,-42)) (ColDelta 12) DP (0,1) [DComment (DP (0,-5),DP (0,43)) "-- Unit propagation may reveal conflicts; check." Nothing] [((G AnnVal),DP (0,-42))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:34-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:34-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:51-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:8-9 CN "HsVar" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (2,3) [DComment (DP (1,3),DP (1,5)) "><" Nothing,DComment (DP (0,1),DP (0,11)) "maybeConfl" Nothing,DComment (DP (0,-10),DP (0,38)) "-- Unit propagation may reveal conflicts; check." Nothing,DComment (DP (0,-29),DP (0,-26)) ">=>" Nothing,DComment (DP (0,1),DP (0,9)) "backJump" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:11-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 25) DP (0,9) [DComment (DP (0,-10),DP (0,15)) "-- No conflicts.  Decide." Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:34-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:34-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:8-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (2,3) [DComment (DP (1,3),DP (1,5)) "><" Nothing,DComment (DP (0,1),DP (0,9)) "selector" Nothing,DComment (DP (0,-8),DP (0,17)) "-- No conflicts.  Decide." Nothing,DComment (DP (0,-16),DP (0,-13)) "mFr" Nothing,DComment (DP (0,1),DP (0,5)) "voFr" Nothing,DComment (DP (0,2),DP (0,5)) ">=>" Nothing,DComment (DP (0,1),DP (0,7)) "decide" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:11-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:11-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:20-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 25) DP (0,2) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:34-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:34-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-71 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "step" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(287,7)-(292,40) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(287,7)-(292,40) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 7) DP (2,0) [DComment (DP (0,-3),DP (0,52)) "-- Take the step chosen by the transition guards above." Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "stepForward" Nothing,DComment (DP (0,-11),DP (0,44)) "-- Take the step chosen by the transition guards above." Nothing,DComment (DP (0,-43),DP (0,-36)) "Nothing" Nothing,DComment (DP (0,5),DP (0,6)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "Sat" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:19-25 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:19-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:31-71 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-71 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:34-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "do" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:34-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:42-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:47-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:55-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:55-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,7)-(292,40) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:19-29 CN "ParPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "step" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:20-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:20-28 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:25-28 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,31)-(292,40) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,33)-(292,40) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(289,11)-(292,40) Ref "delta-29"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:11-19 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "case" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(289,11)-(292,40) CN "(:)" Ref "delta-29",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(290,11)-(292,40) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,-3)) "r" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(290,11)-(292,40) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(291,13)-(292,40) Ref "delta-30"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:290:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-73 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(291,13)-(292,40) CN "(:)" Ref "delta-30",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,6)) "Unsat" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:21-73 CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-3)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-38 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-1)) "Left" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-73 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:25-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:25-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:33-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:40-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:48-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:48-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:55-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:56-70 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:56-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13-40 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:18 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:21-40 CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 8) DP (0,2) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-40 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:33-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1-73 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,53)) "-- | /Precondition:/ problem determined to be unsat." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,50)) "-- | /Precondition:/ problem determined to be unsat." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,74)) "-- Records id of conflicting clause in trace before failing.  Always returns" Nothing,DComment (DP (1,1),DP (1,14)) "-- `Nothing'." Nothing,DComment (DP (0,-13),DP (0,63)) "-- Records id of conflicting clause in trace before failing.  Always returns" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,13)) "-- `Nothing'." Nothing,DComment (DP (0,-13),DP (0,3)) "postProcessUnsat" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-49 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-73 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "maybeConfl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-73 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:27-49 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:28-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:33-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:41-48 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:54-61 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:54-63 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:54-73 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:63 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:65-73 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:66-70 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:66-72 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:72 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-9),DP (0,-8)) "$" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "thd" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "." Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "fromJust" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:18-27 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-12),DP (0,-12)) "" Nothing,DComment (DP (0,0),DP (0,13)) "traceClauseId" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,29)-(303,19) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,31)-(301,18) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(300,5)-(301,18) Ref "delta-31"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-47 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(300,5)-(301,18) CN "(:)" Ref "delta-31",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,3),DP (0,4)) ")" Nothing,DComment (DP (0,1),DP (0,11)) "maybeConfl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-13),DP (0,-7)) "return" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21-36 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:22-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:22-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:28-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:38-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5-18 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5-18 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:12-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19 CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "thd" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "i" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:9-15 CN "TuplePat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:10 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:12 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:17-19 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1-51 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,79)) "-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed," Nothing,DComment (DP (1,1),DP (1,45)) "-- this should be optimised away to nothing." Nothing,DComment (DP (0,-44),DP (0,34)) "-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed," Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,19)) "solveStepInvariants" Nothing,DComment (DP (0,-19),DP (0,25)) "-- this should be optimised away to nothing." Nothing,DComment (DP (0,-24),DP (0,-22)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-19),DP (0,-9)) "{-# INLINE" Nothing),DP (0,-19)),((AnnComment DComment (DP (0,1),DP (0,20)) "solveStepInvariants" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-51 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-51 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,0)) "#-}" Nothing),DP (0,-3)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:39-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:39-48 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:39-51 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:48 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:50-51 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1-34 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-8)) "_m" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "assert" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:12-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,9)) "solveStepInvariants" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:1-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,2)) "True" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:21-22 CN "VarPat" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 21) DP (0,1) [DComment (DP (0,-15),DP (0,-15)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,24)-(314,14) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:26-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,26)-(314,14) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:33-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,40)-(314,14) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(310,5)-(314,14) Ref "delta-32"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:5-12 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,35)) "-- no dups in decision list or trail" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(310,5)-(314,14) CN "(:)" Ref "delta-32",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:10-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:5-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(313,60) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(314,14) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "assert" Nothing,DComment (DP (0,-6),DP (0,30)) "-- no dups in decision list or trail" Nothing,DComment (DP (0,-29),DP (0,-28)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "nub" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(314,14) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:12-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-5),DP (0,1)) "assert" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,4)) "trail" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-25 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,4)) "trail" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:14-24 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:23-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "." Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32-50 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 35) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:42-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "." Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:48-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 43) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "nub" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:6-60 CN "HsApp" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:13-60 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-29 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-59 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:15-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:15-28 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:24-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:33-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36-57 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-48 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:46-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:52-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:6-14 CN "HsApp" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:13-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1-16 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,16)) "-- ** Internals" Nothing,DComment (DP (1,1),DP (1,16)) "-- ** Internals" Nothing,DComment (DP (1,1),DP (1,75)) "-- | Value of the `level' array if corresponding variable unassigned.  Had" Nothing,DComment (DP (1,1),DP (1,26)) "-- better be less that 0." Nothing,DComment (DP (0,-25),DP (0,49)) "-- | Value of the `level' array if corresponding variable unassigned.  Had" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "noLevel" Nothing,DComment (DP (0,-7),DP (0,18)) "-- better be less that 0." Nothing,DComment (DP (0,-17),DP (0,-15)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Level" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:12-16 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "-" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:12-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-5),DP (0,-4)) "1" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:9-12 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:11-12 CN "NegApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnMinus),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:12 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,1)-(335,55) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,38)) "-- *** Boolean constraint propagation" Nothing,DComment (DP (1,1),DP (1,38)) "-- *** Boolean constraint propagation" Nothing,DComment (DP (1,1),DP (1,79)) "-- | Assign a new literal, and enqueue any implied assignments.  If a conflict" Nothing,DComment (DP (1,1),DP (1,73)) "-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise" Nothing,DComment (DP (0,-72),DP (0,6)) "-- | Assign a new literal, and enqueue any implied assignments.  If a conflict" Nothing,DComment (DP (1,1),DP (1,73)) "-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise" Nothing,DComment (DP (0,-72),DP (0,6)) "-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts" Nothing,DComment (DP (1,1),DP (1,24)) "-- with the assignment." Nothing,DComment (DP (0,-23),DP (0,55)) "-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,21)) "-- with the assignment." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,72)) "-- If no new clauses are unit (i.e. no implied assignments), simply update" Nothing,DComment (DP (1,1),DP (1,21)) "-- watched literals." Nothing,DComment (DP (0,-20),DP (0,54)) "-- If no new clauses are unit (i.e. no implied assignments), simply update" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "bcpLit" Nothing,DComment (DP (0,-6),DP (0,14)) "-- watched literals." Nothing,DComment (DP (0,-13),DP (0,-11)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:11-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:11-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,11)-(335,55) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,11)-(335,55) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,9),DP (0,53)) "-- ^ Assigned literal which might propagate." Nothing),DP (0,9)),((G AnnRarrow),DP (1,11))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 23) DP (0,1) [DComment (DP (0,-11),DP (0,-9)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "Lit" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:334:14-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(334,14)-(335,55) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,5)) "FunMonad" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Maybe" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "Lit" Nothing),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,41)) "-- ^ Assigned literal which might propagate." Nothing),DP (0,-3)),((AnnComment DComment (DP (0,-41),DP (0,-40)) "," Nothing),DP (0,-41)),((AnnComment DComment (DP (0,1),DP (0,7)) "Clause" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "bcpLit" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "m" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnRarrow),DP (1,11))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:14-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:14-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:14-55 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 23) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:25-55 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:26-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:26-54 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:32-54 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:33-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:38-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:46-53 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,4)) "gets" Nothing),DP (0,0)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,12),DP (0,26)) "-- no conflict" Nothing),DP (0,12)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:8 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ws" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:10 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,12)-(380,45) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,14)-(349,20) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(337,5)-(349,20) Ref "delta-33"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:5-22 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,5)) "clauses" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1)),((AnnComment DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),(AnnSemiSep,DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(337,5)-(349,20) CN "(:)" Ref "delta-33",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,0),DP (0,7)) "watches" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,3)) "ls" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,7)) "learnt" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:11-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:11-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:16-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:26-27 CN "VarPat" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:26-42 CN "BindStmt" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,9)) "readArray" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:32-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:32-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:37-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "ws" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5-38 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-4)) "l" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:16-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:25-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:25-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:25-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5-38 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:16-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,10)) "writeArray" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:25-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:25-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:25-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "ws" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ";" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-55 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,9)) "writeArray" Nothing,DComment (DP (0,1),DP (0,3)) "ls" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-55 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:14-55 CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-55 Ref "delta-34"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-34 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [(AnnSemiSep,DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-55 CN "(:)" Ref "delta-34",
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:28-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:33-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-55 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:38-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:49-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:54-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:5-32 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-1)) "#-}" Nothing),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,5)-(349,20) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (4,0) [DComment (DP (1,0),DP (1,73)) "-- Update wather lists for normal & learnt clauses; if conflict is found," Nothing,DComment (DP (1,0),DP (1,46)) "-- return that and don't update anything else." Nothing,DComment (DP (0,-46),DP (0,27)) "-- Update wather lists for normal & learnt clauses; if conflict is found," Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,45)) "-- return that and don't update anything else." Nothing,DComment (DP (0,-45),DP (0,-44)) "`" Nothing,DComment (DP (0,0),DP (0,10)) "catchError" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,5)-(349,20) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-10)) "" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,7)) "{-# SCC" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "\"bcpWatches\"" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6-31 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:19-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:19-31 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:28-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "forM_" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,36)-(349,20) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(349,20) Ref "delta-35"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55) CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55) CN "HsSCC" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "f" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnValStr),DP (0,1)),((AnnComment DComment (DP (0,-11),DP (0,-9)) "->" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(349,20) CN "(:)" Ref "delta-35",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "tails" Nothing,DComment (DP (0,1),DP (0,8)) "clauses" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "updateWatches" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:32-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:32-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,32)-(346,55) CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [DComment (DP (0,-3),DP (0,8)) "modifyArray" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:38-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,5)) "const" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:39-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:39-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:45-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "ws" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,54)-(346,55) CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:55-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,55)-(346,54) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:9-54 CN "HsPar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 2) DP (1,2) [DComment (DP (0,-13),DP (0,-12)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "{-# SCC" Nothing] [((G AnnOpenP),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 CN "(:)" Ref "delta-36",
  (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 Ref "delta-36"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,0),DP (0,12)) "\"bcpLearnts\"" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:28-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:40-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 30) DP (0,1) [DComment (DP (0,-11),DP (0,-8)) "#-}" Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "tails" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:45-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:46-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "learnts" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:46-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,12)) "updateWatches" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55) CN "HsSCC" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "f" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnValStr),DP (0,1)),((AnnComment DComment (DP (0,-11),DP (0,-9)) "->" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,7)) "liftST" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:32-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:32-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,32)-(348,55) CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [DComment (DP (0,-3),DP (0,8)) "modifyArray" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:38-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "(" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,5)) "const" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:39-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:39-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:45-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "ls" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,54)-(348,55) CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:55-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,55)-(348,54) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:9-54 CN "HsPar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 2) DP (1,2) [DComment (DP (0,-13),DP (0,-12)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 CN "(:)" Ref "delta-37",
  (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 Ref "delta-37"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:28-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:40-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 30) DP (0,1) [DComment (DP (0,-6),DP (0,8)) "-- no conflict" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:45-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:46-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:46-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7-20 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7-20 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:14-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:5-32 CN "InlineSig" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "_" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(357,5)-(380,45) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (7,0) [DComment (DP (0,-3),DP (0,66)) "-- updateWatches: `l' has been assigned, so we look at the clauses in" Nothing,DComment (DP (1,0),DP (1,69)) "-- updateWatches: `l' has been assigned, so we look at the clauses in" Nothing,DComment (DP (1,0),DP (1,67)) "-- annotated clause, find the status of its watched literals.  If a" Nothing,DComment (DP (0,-67),DP (0,2)) "-- which contain @negate l@, namely the watcher list for l.  For each" Nothing,DComment (DP (1,0),DP (1,67)) "-- annotated clause, find the status of its watched literals.  If a" Nothing,DComment (DP (0,-67),DP (0,4)) "-- conflict is found, the at-fault clause is returned through Left, and" Nothing,DComment (DP (1,0),DP (1,71)) "-- conflict is found, the at-fault clause is returned through Left, and" Nothing,DComment (DP (1,0),DP (1,8)) "-- list." Nothing,DComment (DP (0,-8),DP (0,63)) "-- the unprocessed clauses are placed back into the appropriate watcher" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "-- list." Nothing,DComment (DP (0,-8),DP (0,2)) "{-# INLINE" Nothing,DComment (DP (0,1),DP (0,14)) "updateWatches" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:16-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [DComment (DP (0,-10),DP (0,3)) "updateWatches" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-34 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(358,5)-(380,45) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:19 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21-22 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "alter" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21-22 CN "Exact" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 16) DP (0,1) [] [((G AnnOpenS),DP (0,-3)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:24-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:26-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:33-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) "@" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "watchRef" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:5-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,5)-(380,45) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,6),DP (0,7)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ":" Nothing,DComment (DP (0,1),DP (0,12)) "restClauses" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:19-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 14) DP (0,1) [DComment (DP (0,-11),DP (0,-11)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:25-64 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-49 CN "AsPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "m" Nothing),DP (0,-1)),((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-63 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:32-49 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:33-40 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:43 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:46-48 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:51 CN "Exact" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:53-63 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,66)-(380,45) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 61) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,68)-(380,45) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(360,7)-(380,45) Ref "delta-38"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:7-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:7-30 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,-2)) "q" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(360,7)-(380,45) CN "(:)" Ref "delta-38",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:14-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:14-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-15),DP (0,-9)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "x" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,7)-(362,57) CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,9)) "watchRef" Nothing] [((G AnnLarrow),DP (0,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,14)-(362,57) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,23)-(362,57) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,26)-(362,57) Ref "delta-39"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-31 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-53 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,26)-(362,57) CN "(:)" Ref "delta-39",
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:27 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:30 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:36-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:36-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "if" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:46-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 20) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,-42)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-42))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-57 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-42)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,-3)) "y" Nothing,DComment (DP (0,1),DP (0,5)) "else" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (1,-19),DP (1,42)) "-- l,q are the (negated) literals being watched for clause c." Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-57 CN "OpApp" NotNeeded,
  (Ann (DP (0,-42)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:35-57 CN "HsIf" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:38-43 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:40-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,2)) "if" Nothing,DComment (DP (0,-2),DP (0,59)) "-- l,q are the (negated) literals being watched for clause c." Nothing,DComment (DP (0,-58),DP (0,-52)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,11)) "isTrueUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,1),DP (0,37)) "-- if other true, clause already sat" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,37)) "-- if other true, clause already sat" Nothing),DP (0,1)),((G AnnThen),DP (1,1)),((G AnnElse),DP (1,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "then" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "alter" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:19-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-6)) "annCl" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,0),DP (0,1)) ":" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:33-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:13-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:13-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:19-26 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:20-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:20-25 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,10)-(380,45) CN "HsCase" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-2),DP (0,2)) "case" Nothing,DComment (DP (0,1),DP (0,5)) "find" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,12)-(380,45) Ref "delta-41"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:15-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,15)-(368,56) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,15)-(368,58) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,20)-(368,56) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55) CN "(:)" Ref "delta-40",
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55) CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55) Ref "delta-40"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:22 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-39 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,27)-(368,55) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,27)-(368,55) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "&&" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:32-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:32-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "not" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 18) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isFalseUnder" Nothing] [((G AnnVal),DP (0,-11))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:46-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:49-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:49-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:27-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 6) DP (1,6) [DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing,DComment (DP (1,-9),DP (1,-9)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Just" Nothing,DComment (DP (0,1),DP (0,3)) "l'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:30-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:34-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,-44)) (ColDelta 13) DP (0,1) [DComment (DP (0,-3),DP (0,45)) "-- found unassigned literal, negate l', to watch" Nothing] [((G AnnOpenP),DP (0,-44)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:35-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:37-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:52-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:12-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:12-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,12)-(371,39) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,12)-(380,45) CN "(:)" Ref "delta-41",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:17-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,20)-(371,39) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,23)-(371,39) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(370,14)-(371,39) Ref "delta-42"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-56 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(370,14)-(371,39) CN "(:)" Ref "delta-42",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-2),DP (0,8)) "writeSTRef" Nothing,DComment (DP (0,-3),DP (0,45)) "-- found unassigned literal, negate l', to watch" Nothing,DComment (DP (0,-44),DP (0,-36)) "watchRef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "q" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,3)) "l'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "alter" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:23-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:23-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "annCl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:34-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 20) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:43-56 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 29) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "l'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:44 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:47-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:47-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:47-55 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:54-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-39 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:20-27 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:21-26 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:29-39 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:30-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:30-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:37-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:12-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:12-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,12)-(380,45) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,6),DP (0,45)) "-- all other lits false, clause is unit" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,20)-(380,45) CN "GRHS" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,10)) "incNumImpl" Nothing] [((G AnnRarrow),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,23)-(380,45) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(374,14)-(380,45) Ref "delta-43"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:374:14-23 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:374:14-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(374,14)-(380,45) CN "(:)" Ref "delta-43",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,6),DP (0,45)) "-- all other lits false, clause is unit" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-29 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-10),DP (0,-5)) "alter" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:20-27 CN "HsPar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,7)) "isConsistent" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:21-26 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14-25 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14-65 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,7)) "enqueue" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-8)) "when" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "not" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "isConsistent" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:30-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:40-49 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:41-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "do" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:41-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,-25)) (ColDelta 34) DP (0,1) [DComment (DP (0,-4),DP (0,26)) "-- unit literal is conflicting" Nothing] [((G AnnVal),DP (0,-25))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:51-65 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:52-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:52-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:57-64 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:58 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:61-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:61-63 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:14-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:14-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,14)-(380,45) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,14)-(380,45) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:19-36 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "alter" Nothing] [((G AnnOpenP),DP (0,-3)),((AnnComment DComment (DP (0,-12),DP (0,-1)) "restClauses" Nothing),DP (0,-12)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:20-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:20-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:24-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "++" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,40)-(380,45) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(378,17)-(380,45) Ref "delta-44"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-40 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(378,17)-(380,45) CN "(:)" Ref "delta-44",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,2),DP (0,32)) "-- unit literal is conflicting" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:23-38 CN "HsPar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,5)) "clearQueue" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:24-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:24-37 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:36-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:379:17-26 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:379:17-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17-45 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:28-45 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-36 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:39 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:42-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:42-44 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1-66 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,79)) "-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict" Nothing,DComment (DP (1,1),DP (1,62)) "-- is found it is returned exactly as described for `bcpLit'." Nothing,DComment (DP (0,-61),DP (0,17)) "-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "bcp" Nothing,DComment (DP (0,-3),DP (0,58)) "-- is found it is returned exactly as described for `bcpLit'." Nothing,DComment (DP (0,-57),DP (0,-55)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-20 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-66 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-66 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 20) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:25-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:25-34 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:25-66 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:36-66 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:37-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:37-65 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:43-65 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:44-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:49-54 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:57-64 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "q" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,7)-(390,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,9)-(390,49) CN "HsDo" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,4)) "gets" Nothing] [((G AnnDo),DP (0,-3)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(386,3)-(390,49) Ref "delta-45"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:3 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:3-17 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "if" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(386,3)-(390,49) CN "(:)" Ref "delta-45",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [DComment (DP (0,2),DP (0,7)) "propQ" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:8-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:8-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,7)) "Seq.null" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,-2)) "q" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (1,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:6-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:6-15 CN "HsApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "else" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:15 CN "HsVar" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:22-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:22-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:29-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(388,9)-(390,49) CN "HsDo" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(389,6)-(390,49) Ref "delta-46"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:6-17 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "bcpLit" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(389,6)-(390,49) CN "(:)" Ref "delta-46",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [DComment (DP (0,0),DP (0,7)) "dequeue" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:11-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-13 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-15 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-49 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-4)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,6)) "maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "bcp" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:13 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:15 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:17-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:21-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:21-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:27-33 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:28-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:28-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:35-49 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:36-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:36-48 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:45-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1-52 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (3,1),DP (3,17)) "-- *** Decisions" Nothing,DComment (DP (1,1),DP (1,17)) "-- *** Decisions" Nothing,DComment (DP (1,1),DP (1,77)) "-- | Find and return a decision variable.  A /decision variable/ must be (1)" Nothing,DComment (DP (1,1),DP (1,74)) "-- undefined under the assignment and (2) it or its negation occur in the" Nothing,DComment (DP (0,-73),DP (0,3)) "-- | Find and return a decision variable.  A /decision variable/ must be (1)" Nothing,DComment (DP (1,1),DP (1,12)) "-- formula." Nothing,DComment (DP (0,-11),DP (0,62)) "-- undefined under the assignment and (2) it or its negation occur in the" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,9)) "-- formula." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,72)) "-- Select a decision variable, if possible, and return it and the adjusted" Nothing,DComment (DP (1,1),DP (1,15)) "-- `VarOrder'." Nothing,DComment (DP (0,-14),DP (0,60)) "-- Select a decision variable, if possible, and return it and the adjusted" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "select" Nothing,DComment (DP (0,-6),DP (0,8)) "-- `VarOrder'." Nothing,DComment (DP (0,-7),DP (0,-5)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,15)) "FrozenVarOrder" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,4)) "{-# INLINE" Nothing),DP (0,-6)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-52 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-52 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-4)) "select" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,4)) "#-}" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:26-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:26-52 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:44-48 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:44-52 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:50-52 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1-21 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:12-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-4)) "select" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,12)) "varOrderGet" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:8-20 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:10-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1-45 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "selectStatic" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing] [((AnnComment DComment (DP (0,-12),DP (0,-2)) "{-# INLINE" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,13)) "selectStatic" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-45 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-45 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,0)) "#-}" Nothing),DP (0,-3)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:32-45 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:37-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:37-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:43-45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "m" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "find" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:12-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "selectStatic" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isUndefUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "range" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "bounds" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:16 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:18-63 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:20-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:20-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:25-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26-41 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:44-63 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-62 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:53-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1-68 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,76)) "-- | Assign given decision variable.  Records the current assignment before" Nothing,DComment (DP (1,1),DP (1,62)) "-- deciding on the decision variable indexing the assignment." Nothing,DComment (DP (0,-61),DP (0,14)) "-- | Assign given decision variable.  Records the current assignment before" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "decide" Nothing,DComment (DP (0,-6),DP (0,55)) "-- deciding on the decision variable indexing the assignment." Nothing,DComment (DP (0,-54),DP (0,-52)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-68 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-68 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 23) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:28-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:28-68 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:35-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:35-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:35-68 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:46-68 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:47-51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:47-67 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:53-67 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:54-64 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:54-66 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:66 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:8 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "ld" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:10 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,12)-(420,17) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,14)-(420,17) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(414,3)-(420,17) Ref "delta-47"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:3-22 CN "LetStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(414,3)-(420,17) CN "(:)" Ref "delta-47",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "unVar" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "SC" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,1) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:10-22 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 3) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:12-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "dl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:14-22 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:15-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:15-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-13 CN "ParPat" NotNeeded,
  (Ann (DP (0,-43)) (ColDelta 0) DP (1,0) [] [((G AnnOpenP),DP (0,-43)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-20 CN "BindStmt" NotNeeded,
  (Ann (DP (0,-43)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,43)) "--   trace (\"decide \" ++ show ld) $ return ()" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:4-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:4-12 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:7-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:7-11 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnEqual),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:10-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:18-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:417:3-17 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,-2),DP (1,43)) "--   trace (\"decide \" ++ show ld) $ return ()" Nothing,DComment (DP (0,-43),DP (0,-43)) "" Nothing,DComment (DP (0,0),DP (0,15)) "incNumDecisions" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:417:3-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-32 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-15),DP (0,-9)) "modify" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "ld" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-32 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "enqueue" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 CN "(:)" Ref "delta-48",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,1)) "m" Nothing] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 Ref "delta-48"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "ld" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18-32 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:21-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:21-30 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:26-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:26-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-11 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-14 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-22 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:13-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,4)) "Just" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:16-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-17 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-6),DP (0,-5)) "m" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-17 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:12-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:12-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,1)-(432,46) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (3,1),DP (3,20)) "-- *** Backtracking" Nothing,DComment (DP (1,1),DP (1,20)) "-- *** Backtracking" Nothing,DComment (DP (1,1),DP (1,77)) "-- | Non-chronological backtracking.  The current returns the learned clause" Nothing,DComment (DP (1,1),DP (1,76)) "-- implied by the first unique implication point cut of the conflict graph." Nothing,DComment (DP (0,-75),DP (0,1)) "-- | Non-chronological backtracking.  The current returns the learned clause" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "backJump" Nothing,DComment (DP (0,-8),DP (0,67)) "-- implied by the first unique implication point cut of the conflict graph." Nothing,DComment (DP (0,-66),DP (0,-64)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:13-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:13-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,13)-(432,46) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,13)-(432,46) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnRarrow),DP (1,10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:13-35 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(429,13)-(432,46) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((AnnComment DComment (DP (1,13),DP (1,27)) "-- clause @c@." Nothing),DP (1,13)),((AnnComment DComment (DP (0,-14),DP (0,47)) "-- ^ @(l, c)@, where attempting to assign @l@ conflicted with" Nothing),DP (0,-14)),((AnnComment DComment (DP (1,10),DP (1,12)) "->" Nothing),DP (1,10)),((AnnComment DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,6)) "-- clause @c@." Nothing),DP (0,-8)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "s" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,5)) "Maybe" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "MAssignment" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,8)) "backJump" Nothing),DP (0,0)),((G AnnRarrow),DP (3,10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:14-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,60)) "-- ^ @(l, c)@, where attempting to assign @l@ conflicted with" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:27-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:13-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:13-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:13-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 22) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "@" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,10)) "_conflict" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:24-46 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:25-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:25-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:31-45 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "," Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "SC" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:32-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:32-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "reason" Nothing,DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,0),DP (0,7)) "_reason" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:10 CN "VarPat" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,9)) "_theTrail" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:12-30 CN "AsPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:14-30 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:15 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:18-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-5)) "gets" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,6)) "trail" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:29 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,32)-(463,19) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:34-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,34)-(463,19) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:38-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19) CN "(:)" Ref "delta-49",
  (Ann (DP (0,-1)) (ColDelta 42) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19) Ref "delta-49"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:43-69 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:44-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:44-68 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:47-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:47-51 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:50-51 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:54-59 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:54-67 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnEqual),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:61-67 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,74)-(463,19) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,74)-(463,19) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(434,5)-(463,19) Ref "delta-50"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:5-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-57)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-57))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:5-27 CN "BindStmt" NotNeeded,
  (Ann (DP (0,-57)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(434,5)-(463,19) CN "(:)" Ref "delta-50",
  (Ann (DP (0,-57)) (ColDelta -37) DP (1,0) [DComment (DP (1,-4),DP (1,57)) "--     trace (\"********** conflict = \" ++ show c) $ return ()" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:18-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:18-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:23-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:5-15 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (6,0) [DComment (DP (1,-4),DP (1,51)) "--     trace (\"trail = \" ++ show _theTrail) $ return ()" Nothing,DComment (DP (0,-55),DP (0,6)) "--     trace (\"********** conflict = \" ++ show c) $ return ()" Nothing,DComment (DP (1,-4),DP (1,51)) "--     trace (\"trail = \" ++ show _theTrail) $ return ()" Nothing,DComment (DP (0,-55),DP (0,22)) "--     trace (\"dlits (\" ++ show (length dl) ++ \") = \" ++ show dl) $ return ()" Nothing,DComment (DP (1,-4),DP (1,45)) "--          ++ \"reason: \" ++ Map.showTree _reason" Nothing,DComment (DP (0,-49),DP (0,28)) "--     trace (\"dlits (\" ++ show (length dl) ++ \") = \" ++ show dl) $ return ()" Nothing,DComment (DP (1,-4),DP (1,12)) "--           ) (" Nothing,DComment (DP (0,-16),DP (0,33)) "--          ++ \"reason: \" ++ Map.showTree _reason" Nothing,DComment (DP (1,-4),DP (1,12)) "--           ) (" Nothing,DComment (DP (0,-12),DP (0,-12)) "" Nothing,DComment (DP (0,0),DP (0,11)) "incNumConfl" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,17)) "incNumConflTotal" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:5-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-3)) "levelArr" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),(AnnSemiSep,DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:19-34 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,15)) "FrozenLevelArray" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:19-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:5-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:5-32 CN "SigPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,5)-(442,70) CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:17-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,37)-(442,70) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,40)-(442,70) Ref "delta-51"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:40 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:40-47 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "liftST" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,40)-(442,70) CN "(:)" Ref "delta-51",
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-70 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "$" Nothing,DComment (DP (0,1),DP (0,13)) "unsafeFreeze" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "level" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-35),DP (1,-35)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "learntCl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "learntClId" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "newLevel" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-70 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:49-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:49-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:62-70 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:63-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:63-69 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:69 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:5-36 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "m" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(443,5)-(445,36) CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:6-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "do" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "mFr" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:16-25 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-8)) "<-" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:28-35 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(444,9)-(445,36) CN "HsDo" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(444,12)-(445,36) Ref "delta-52"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:12-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:12-35 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,4)) "analyse" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(444,12)-(445,36) CN "(:)" Ref "delta-52",
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:19-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:19-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-14),DP (0,-11)) "mFr" Nothing,DComment (DP (0,1),DP (0,9)) "levelArr" Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-36 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (1,-7),DP (1,-7)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:20-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:24-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:33-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5-12 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "let" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:10-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,-17)) (ColDelta 5) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,18)) "numDecisionsToUndo" Nothing] [((G AnnVal),DP (0,-17))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(447,5)-(449,82) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,15),DP (0,16)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,1),DP (0,2)) "-" Nothing,DComment (DP (0,1),DP (0,9)) "newLevel" Nothing] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-18),DP (0,-15)) "dl'" Nothing),DP (0,-18)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "drop" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,19)) "numDecisionsToUndo" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(447,9)-(449,82) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:28-49 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:37-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 31) DP (0,1) [DComment (DP (0,0),DP (0,2)) "dl" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:42-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40 CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,7)) "undoneLits" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:13-40 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 4) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:15-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:15-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:15-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:20-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:39-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-18),DP (0,-17)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "takeWhile" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,3)) "lit" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-82 CN "FunBind" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,8)) "levelArr" Nothing,DComment (DP (0,1),DP (0,2)) "!" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,4)) "lit" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ">" Nothing,DComment (DP (0,1),DP (0,9)) "newLevel" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "trail" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "forM_" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-82 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-8),DP (0,2)) "undoneLits" Nothing),DP (0,-8)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:20-82 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:22-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:22-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:22-82 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:32-72 CN "HsPar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 23) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "undoOne" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 CN "(:)" Ref "delta-53",
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 Ref "delta-53"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:34-36 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-60 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-71 CN "GRHS" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-71 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-7),DP (0,5)) "-- backtrack" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:52-60 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:53-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:53-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:57-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:64-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:74-82 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:75-79 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:75-81 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:81 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-20 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-40 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-40 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:11-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,-2)) "mFr" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 17) DP (0,1) [DComment (DP (0,-9),DP (0,6)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:24-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:24-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:30-40 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "m" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:31-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:31-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5-28 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,13)) "-- backtrack" Nothing] [((AnnComment DComment (DP (0,-3),DP (0,3)) "assert" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:12-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:12-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 23) DP (0,1) [DComment (DP (0,-15),DP (0,-14)) "(" Nothing,DComment (DP (0,0),DP (0,18)) "numDecisionsToUndo" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:5-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(453,33) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(454,40) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,11) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,34) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,4)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,34) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:12-35 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-5),DP (0,1)) "assert" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:13-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:13-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-18),DP (0,-17)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "null" Nothing,DComment (DP (0,1),DP (0,9)) "learntCl" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:34 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:6-33 CN "HsApp" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:13-33 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:14-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:14-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:18-32 CN "HsPar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-3),DP (0,5)) "learntCl" Nothing] [((G AnnOpenP),DP (0,-4)),((AnnComment DComment (DP (0,-8),DP (0,3)) "isUnitUnder" Nothing),DP (0,-8)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:19-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:24-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:6-40 CN "HsApp" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:13-40 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:14-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:14-39 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:23-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-9)) "dl" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,2),DP (0,3)) "=" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,4)) "dl'" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:37-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 32) DP (0,1) [DComment (DP (0,0),DP (0,17)) "-- undo decisions" Nothing] [((G AnnVal),DP (0,-16))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 1) DP (1,1) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:13 CN "HsVar" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "<-" Nothing,DComment (DP (0,1),DP (0,16)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 CN "(:)" Ref "delta-54",
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 Ref "delta-54"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21-34 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:24-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:24-32 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-56))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5-28 CN "BindStmt" NotNeeded,
  (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,18)) "-- undo decisions" Nothing,DComment (DP (1,-4),DP (1,56)) "--     trace (\"new mFr: \" ++ showAssignment mFr) $ return ()" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:12-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:12-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-45 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (4,0) [DComment (DP (1,-4),DP (1,56)) "--     trace (\"new mFr: \" ++ showAssignment mFr) $ return ()" Nothing,DComment (DP (0,-56),DP (0,17)) "-- TODO once I'm sure this works I don't need getUnit, I can just use the" Nothing,DComment (DP (1,0),DP (1,18)) "-- uip of the cut." Nothing,DComment (DP (0,-18),DP (0,55)) "-- TODO once I'm sure this works I don't need getUnit, I can just use the" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "watchClause" Nothing,DComment (DP (0,-11),DP (0,7)) "-- uip of the cut." Nothing,DComment (DP (0,-6),DP (0,-5)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "learntCl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "learntClId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-11),DP (0,-4)) "enqueue" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "getUnit" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:19-40 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-4)) "mFr" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:20-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,4)) "learntCl" Nothing),DP (0,-4)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:20-27 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:30-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:30-39 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:42-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-13 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-66 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "learntCl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "learntClId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:13 CN "HsVar" NotNeeded,
  (Ann (DP (0,-18)) (ColDelta 8) DP (0,1) [DComment (DP (0,-5),DP (0,19)) "-- learntCl is asserting" Nothing] [((G AnnVal),DP (0,-18))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:15-36 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:16-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:16-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:16-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:24-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:33-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:38-66 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:39-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:39-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:44-65 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:45-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:45-52 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:55-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:55-64 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-19 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,-4),DP (0,20)) "-- learntCl is asserting" Nothing,DComment (DP (0,-19),DP (0,-18)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-19 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:14-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:14-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1-46 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (3,1),DP (3,72)) "-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and" Nothing,DComment (DP (1,1),DP (1,72)) "-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and" Nothing,DComment (DP (0,-71),DP (0,3)) "-- executing @cmd@.  The traditional @do-while@ semantics, in other words." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "doWhile" Nothing,DComment (DP (0,-7),DP (0,67)) "-- executing @cmd@.  The traditional @do-while@ semantics, in other words." Nothing,DComment (DP (0,-66),DP (0,-64)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20 CN "(:)" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) "do" Nothing),DP (0,0)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "body" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:13-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:13-19 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [DComment (DP (0,-4),DP (0,0)) "test" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:27-28 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:35-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:43-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:45-46 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:9-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 9) DP (0,1) [DComment (DP (0,-5),DP (0,-5)) "" Nothing,DComment (DP (0,0),DP (0,4)) "body" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:14-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,19)-(473,41) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,21)-(473,41) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(471,3)-(473,41) Ref "delta-55"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:471:3-6 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:471:3-6 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(471,3)-(473,41) CN "(:)" Ref "delta-55",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3-16 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3-24 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,10)) "shouldContinue" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "test" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-10)) "when" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,15)) "shouldContinue" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:21-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-6 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-41 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,8)) "doWhile" Nothing,DComment (DP (0,1),DP (0,5)) "body" Nothing,DComment (DP (0,1),DP (0,5)) "test" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:8-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:25-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:25-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:25-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:33-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:38-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,1)-(480,45) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,76)) "-- | Analyse a the conflict graph and produce a learned clause.  We use the" Nothing,DComment (DP (1,1),DP (1,40)) "-- First UIP cut of the conflict graph." Nothing,DComment (DP (0,-39),DP (0,36)) "-- | Analyse a the conflict graph and produce a learned clause.  We use the" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,37)) "-- First UIP cut of the conflict graph." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,69)) "-- May undo part of the trail, but not past the current decision level." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "analyse" Nothing,DComment (DP (0,-7),DP (0,64)) "-- May undo part of the trail, but not past the current decision level." Nothing,DComment (DP (0,-63),DP (0,-61)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,17)) "FrozenLevelArray" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:12-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,12)-(480,45) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,12)-(480,45) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-3)) "FunMonad" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:27-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,27)-(480,45) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,4)) "Clause" Nothing] [((AnnComment DComment (DP (0,-13),DP (0,-12)) "," Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "Int" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:47-51 CN "HsListTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,47)-(480,45) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ")" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:48-50 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:56-78 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 56) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,56)-(480,45) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnRarrow),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:57-59 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:62-67 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:70-77 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 70) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:12-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:12-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:12-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-33)) (ColDelta 21) DP (0,1) [DComment (DP (0,-8),DP (0,34)) "-- ^ learned clause and new decision level" Nothing] [((G AnnVal),DP (0,-33))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:23-45 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:24-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:32-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:42-44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "analyse" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,0),DP (0,42)) "-- ^ learned clause and new decision level" Nothing,DComment (DP (0,-41),DP (0,-33)) "levelArr" Nothing,DComment (DP (0,1),DP (0,6)) "dlits" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "cLit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "cClause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "cCid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:9-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:13-20 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "get" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:22-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:28-48 CN "TuplePat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:29-32 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:35-41 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:44-47 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,50)-(573,81) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 50) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,52)-(500,12) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(483,5)-(500,12) Ref "delta-56"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,-66)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-66))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:5-13 CN "BindStmt" NotNeeded,
  (Ann (DP (0,-66)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(483,5)-(500,12) CN "(:)" Ref "delta-56",
  (Ann (DP (0,-66)) (ColDelta 5) DP (1,0) [DComment (DP (1,-4),DP (1,66)) "--     trace (\"mFr: \" ++ showAssignment mFr) $ assert True (return ())" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:11-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5-35 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (14,0) [DComment (DP (1,-4),DP (1,63)) "--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut" Nothing,DComment (DP (0,-67),DP (0,3)) "--     trace (\"mFr: \" ++ showAssignment mFr) $ assert True (return ())" Nothing,DComment (DP (1,-4),DP (1,63)) "--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut" Nothing,DComment (DP (0,-67),DP (0,3)) "--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)" Nothing,DComment (DP (1,-4),DP (1,42)) "--                       (firstUIP conflGraph)" Nothing,DComment (DP (0,-46),DP (0,24)) "--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)" Nothing,DComment (DP (1,-4),DP (1,42)) "--                       (firstUIP conflGraph)" Nothing,DComment (DP (0,-46),DP (0,23)) "--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c" Nothing,DComment (DP (1,-4),DP (1,40)) "--                      :: Gr CGNodeAnnot ()" Nothing,DComment (DP (0,-44),DP (0,25)) "--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c" Nothing,DComment (DP (1,-4),DP (1,40)) "--                      :: Gr CGNodeAnnot ()" Nothing,DComment (DP (0,-44),DP (0,26)) "--     trace (\"graphviz graph:\\n\" ++ graphviz' conflGraph) $ return ()" Nothing,DComment (DP (1,-4),DP (1,50)) "--     trace (\"cut: \" ++ show firstUIPCut) $ return ()" Nothing,DComment (DP (0,-54),DP (0,16)) "--     trace (\"graphviz graph:\\n\" ++ graphviz' conflGraph) $ return ()" Nothing,DComment (DP (1,-4),DP (1,50)) "--     trace (\"cut: \" ++ show firstUIPCut) $ return ()" Nothing,DComment (DP (0,-54),DP (0,5)) "--     trace (\"topSort: \" ++ show topSortNodes) $ return ()" Nothing,DComment (DP (1,-4),DP (1,55)) "--     trace (\"topSort: \" ++ show topSortNodes) $ return ()" Nothing,DComment (DP (0,-59),DP (0,23)) "--     trace (\"dlits (\" ++ show (length dlits) ++ \"): \" ++ show dlits) $ return ()" Nothing,DComment (DP (1,-4),DP (1,78)) "--     trace (\"dlits (\" ++ show (length dlits) ++ \"): \" ++ show dlits) $ return ()" Nothing,DComment (DP (0,-82),DP (0,18)) "--     trace (\"learnt: \" ++ show (map (\\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()" Nothing,DComment (DP (1,-4),DP (1,67)) "--     outputConflict \"conflict.dot\" (graphviz' conflGraph) $ return ()" Nothing,DComment (DP (0,-71),DP (0,29)) "--     trace (\"learnt: \" ++ show (map (\\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()" Nothing,DComment (DP (1,-4),DP (1,32)) "--     return $ (learntCl, newLevel)" Nothing,DComment (DP (0,-36),DP (0,35)) "--     outputConflict \"conflict.dot\" (graphviz' conflGraph) $ return ()" Nothing,DComment (DP (1,-4),DP (1,32)) "--     return $ (learntCl, newLevel)" Nothing,DComment (DP (0,-32),DP (0,-32)) "" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,14)) "unsafeThawAss" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:10-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:10-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,5)) "firstUIPBFS" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:19-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:19-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:33-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "numVars" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-56))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5-55 CN "BindStmt" NotNeeded,
  (Ann (DP (0,-56)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,-2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "cnf" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "reason" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,56)) "--     trace (\"firstUIPBFS learned: \" ++ show a) $ return ()" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:10-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:24-43 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:35-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:45-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:46-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:46-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:53-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (2,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5-12 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (2,0) [DComment (DP (1,-4),DP (1,56)) "--     trace (\"firstUIPBFS learned: \" ++ show a) $ return ()" Nothing,DComment (DP (0,-56),DP (0,-56)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (1,-2),DP (1,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5-12 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,5)-(505,53) CN "TypeSig" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,5)-(573,81) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (3,0) [DComment (DP (0,-3),DP (0,64)) "-- BFS by undoing the trail backward.  From Minisat paper.  Returns" Nothing,DComment (DP (1,0),DP (1,39)) "-- conflict clause and backtrack level." Nothing,DComment (DP (0,-39),DP (0,28)) "-- BFS by undoing the trail backward.  From Minisat paper.  Returns" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "firstUIPBFS" Nothing,DComment (DP (0,-11),DP (0,28)) "-- conflict clause and backtrack level." Nothing,DComment (DP (0,-27),DP (0,-25)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "Int" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,10)) "ReasonMap" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:20-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:20-32 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,20)-(505,53) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,20)-(505,53) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "Clause" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-11),DP (0,-3)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:37-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,37)-(505,53) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:44-52 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,44)-(505,53) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "," Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,4)) "Int" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (1,0),DP (1,0)) "" Nothing),DP (1,0)),((AnnComment DComment (DP (0,0),DP (0,11)) "firstUIPBFS" Nothing),DP (0,0)),((G AnnRarrow),DP (1,12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:20-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:20-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:20-53 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,6)) "nVars" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 24) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "reasonMap" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:31-53 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:32-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:40-47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:50-52 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "liftST" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 12) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,15)) "resolveSourcesR" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:19-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:25-33 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,35)-(563,56) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 30) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,38)-(563,56) CN "HsDo" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 33) DP (0,2) [DComment (DP (0,-1),DP (0,7)) "newSTRef" Nothing] [((G AnnDo),DP (0,-5)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(507,7)-(563,56) Ref "delta-57"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:7-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:7-45 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-15),DP (0,-12)) "let" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,16)) "addResolveSource" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(507,7)-(563,56) CN "(:)" Ref "delta-57",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,4),DP (0,5)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,17)) "-- trace sources" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:26-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 26) DP (0,1) [DComment (DP (0,-4),DP (0,4)) "clauseId" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:35-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:35-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:44-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 37) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "=" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,7)-(509,62) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,17)) "-- trace sources" Nothing] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:11-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,15)) "resolveSourcesR" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:28-35 CN "VarPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 17) DP (0,1) [DComment (DP (0,-12),DP (0,-6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,37)-(509,62) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:15-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-22)) (ColDelta 4) DP (1,4) [] [((G AnnVal),DP (0,-22))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:15-62 CN "OpApp" NotNeeded,
  (Ann (DP (0,-22)) (ColDelta 4) DP (1,4) [DComment (DP (0,14),DP (0,15)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "clauseId" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,26)) "-- Literals we should process." Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:24-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:24-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:24-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:36-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:52-62 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:53-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:53-61 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7-59 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "seenArr" Nothing,DComment (DP (0,-7),DP (0,23)) "-- Literals we should process." Nothing,DComment (DP (0,-21),DP (0,-19)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "newSTUArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "V" Nothing,DComment (DP (0,1),DP (0,6)) "nVars" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,1)) "counterR" Nothing),DP (0,-7)),((G AnnLarrow),DP (0,2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:19-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:19-59 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:28-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:28-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:40-53 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-11),DP (0,-3)) "newSTRef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "0" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,33)) "-- Number of unprocessed current-level" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "::" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "Int" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41-43 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:43 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:46-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:46-52 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:48-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:55-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7-46 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:19-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:19-46 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:28-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:28-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:37-46 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:38 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:38-45 CN "ExprWithTySig" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:43-45 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:43-45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7-8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7-34 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (0,1),DP (0,23)) "-- lits we know about." Nothing,DComment (DP (0,-22),DP (0,16)) "-- Number of unprocessed current-level" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,2)) "pR" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,9)) "newSTRef" Nothing,DComment (DP (0,1),DP (0,5)) "cLit" Nothing,DComment (DP (0,1),DP (0,45)) "-- Invariant: literal from current dec. lev." Nothing,DComment (DP (0,-32),DP (0,-10)) "-- lits we know about." Nothing] [((AnnComment DComment (DP (0,-2),DP (0,10)) "out_learnedR" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:13-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:13-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:22-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:22-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:31-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7-42 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,5)) "newSTRef" Nothing,DComment (DP (0,-4),DP (0,40)) "-- Invariant: literal from current dec. lev." Nothing,DComment (DP (0,-39),DP (0,-38)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:23-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:23-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:32-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:32-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7-41 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-9)) "let" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "reasonL" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:23-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:23-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "if" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:32-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:32-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 25) DP (0,1) [DComment (DP (0,0),DP (0,4)) "cLit" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:41 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [DComment (DP (0,-4),DP (0,0)) "then" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,7)-(522,47) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,7)) "cClause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "cCid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:11-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:19 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,21)-(522,47) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,23)-(522,47) CN "HsIf" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (1,12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:26-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "else" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:28-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:31-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:41-55 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:42-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:42-48 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:51-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:51-54 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,25)-(522,47) CN "HsLet" NotNeeded,
  (Ann (DP (1,14)) (ColDelta 14) DP (1,14) [DComment (DP (0,-2),DP (0,1)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "rid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,29)-(521,49) NotNeeded),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "l" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "rid" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnIn),DP (1,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:29-36 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,16)) "Map.findWithDefault" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,29)-(521,49) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,29)-(521,49) CN "PatBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:30 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:33-35 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,38)-(521,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:33-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:33-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(520,33)-(521,39) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(520,33)-(521,49) CN "HsApp" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,14),DP (0,15)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "error" Nothing,DComment (DP (0,1),DP (0,19)) "\"analyse: reasonL\"" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:53-78 CN "HsPar" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 24) DP (0,1) [DComment (DP (0,-19),DP (0,-18)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,10)) "reasonMap" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:54-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:54-77 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:60-77 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:33-39 CN "HsPar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 4) DP (1,4) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,2)) "in" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,7)) "without" Nothing] [((G AnnOpenP),DP (0,-6)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:34-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:34-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:41-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:28-47 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29-41 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:31-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:44-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:44-46 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:7-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(525,7)-(554,54) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (2,0),DP (2,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,0),DP (0,7)) "doWhile" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,9)) "counterR" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(525,7)-(554,54) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-5)) "do" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "p" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8-60 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:18-60 CN "HsPar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [((G AnnOpenP),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:19-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:19-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:19-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:25-29 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:26-28 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:28 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "readSTRef" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:31-59 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:32-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:32-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "pR" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:41-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:41-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:51-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,9)-(554,54) CN "HsDo" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,12)-(554,54) Ref "delta-58"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:12-37 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "let" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,12)-(554,54) CN "(:)" Ref "delta-58",
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:17-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:17-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,2)) "p_reason" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:26-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:26-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:36-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [DComment (DP (0,-8),DP (0,-3)) "p_rid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:12-44 CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,5)) "reasonL" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-32 CN "TuplePat" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 0) DP (0,1) [] [((G AnnOpenP),DP (0,-9)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-44 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,10)) "traceClauseId" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-44 CN "PatBind" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 0) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:17-24 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:27-31 CN "VarPat" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,5)) "p_rid" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:34-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:36-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:36-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-30 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-13),DP (0,3)) "addResolveSource" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-33 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,3)) "p_rid" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:29-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 17) DP (0,1) [DComment (DP (0,-16),DP (0,-11)) "forM_" Nothing,DComment (DP (0,1),DP (0,9)) "p_reason" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "bump" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-38 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "." Nothing,DComment (DP (0,1),DP (0,4)) "var" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:18-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,-20)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,21)) "-- For each unseen reason," Nothing] [((G AnnVal),DP (0,-20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:27-38 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:28-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:28-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:35-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:12-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:12-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,12)-(543,33) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (4,0) [DComment (DP (1,0),DP (1,26)) "-- For each unseen reason," Nothing,DComment (DP (0,-26),DP (0,15)) "-- > from the current level, bump counter" Nothing,DComment (DP (1,0),DP (1,41)) "-- > from the current level, bump counter" Nothing,DComment (DP (0,-41),DP (0,3)) "-- > from lower level, put in learned clause" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,-6),DP (0,38)) "-- > from lower level, put in learned clause" Nothing,DComment (DP (0,-37),DP (0,-36)) "." Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing,DComment (DP (0,1),DP (0,9)) "p_reason" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "q" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,12)-(543,33) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,5)) "seenq" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:21-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:27-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "readArray" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "seenArr" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33) CN "(:)" Ref "delta-59",
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33) Ref "delta-59"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:39 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,44)-(543,33) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,44)-(543,33) CN "HsDo" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(535,14)-(543,33) Ref "delta-60"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:14-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:14-47 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "when" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(535,14)-(543,33) CN "(:)" Ref "delta-60",
  (Ann (DP (1,0)) (ColDelta -24) DP (1,0) [DComment (DP (0,0),DP (0,1)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:23-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:23-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:23-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "not" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:33-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [DComment (DP (0,-8),DP (0,-3)) "seenq" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:41-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:42-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:42-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:14-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:14-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(536,14)-(543,33) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(536,14)-(543,33) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:19-29 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:20-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,-1)) "" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,10)) "writeArray" Nothing),DP (0,0)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:20-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:24-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,7)) "seenArr" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(537,16)-(543,33) CN "HsDo" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,6),DP (0,7)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(537,19)-(543,33) Ref "delta-61"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-49 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(537,19)-(543,33) CN "(:)" Ref "delta-61",
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:30-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-10),DP (0,-8)) "if" Nothing,DComment (DP (0,1),DP (0,7)) "levelL" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:38-44 CN "HsPar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 19) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "==" Nothing,DComment (DP (0,1),DP (0,13)) "currentLevel" Nothing] [((G AnnOpenP),DP (0,-8)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:39-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:39-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:46-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-1)) "counterR" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "+" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,1)),((G AnnElse),DP (1,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 3) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "then" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 10) DP (0,1) [DComment (DP (0,-3),DP (0,8)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:31-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:34-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:25-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:25-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:25-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:37-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-11),DP (0,-9)) "if" Nothing,DComment (DP (0,1),DP (0,7)) "levelL" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:46-50 CN "HsPar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 27) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) ">" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:47-49 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:49 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(540,25)-(543,33) CN "HsIf" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "out_learnedR" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "q" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ":" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,1)),((AnnComment DComment (DP (1,-7),DP (1,27)) "-- Select next literal to look at:" Nothing),DP (1,-7)),((G AnnElse),DP (1,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-39 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,11)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:39 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(541,25)-(542,68) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(541,28)-(542,68) Ref "delta-62"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-56 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(541,28)-(542,68) CN "(:)" Ref "delta-62",
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:40-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:53-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "max" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:54-55 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-68 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "levelL" Nothing,DComment (DP (0,1),DP (0,2)) "q" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-8),DP (1,-8)) "" Nothing,DComment (DP (0,0),DP (0,4)) "else" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-68 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:40-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:55-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:55-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:59-68 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:60-65 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:60-67 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:67 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:25-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:25-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(546,41) CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(550,22) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,33)) "-- Select next literal to look at:" Nothing,DComment (DP (0,-33),DP (0,-32)) "`" Nothing,DComment (DP (0,0),DP (0,7)) "doWhile" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,3)) "pR" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,10)) "readArray" Nothing,DComment (DP (0,1),DP (0,8)) "seenArr" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "var" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(550,22) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:13-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,13)-(546,40) CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,23)-(546,40) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,2)) "trail" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:24-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:24-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,24)-(546,33) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,24)-(546,39) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:31-72 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 19) DP (0,1) [DComment (DP (0,-6),DP (0,-3)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-65 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-71 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:42-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "." Nothing,DComment (DP (0,1),DP (0,4)) "not" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:49-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:49-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 37) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:59-65 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:67 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:69-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:24-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (1,12) [DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "head" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:28-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:37-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(546,45)-(550,22) CN "HsDo" NotNeeded,
  (Ann (DP (0,-34)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,35)) "-- a dec. var. only if the counter =" Nothing] [((G AnnDo),DP (0,-34)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(547,14)-(550,22) Ref "delta-63"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:14-41 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(547,14)-(550,22) CN "(:)" Ref "delta-63",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:19-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:24-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:32-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:32-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:37-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-37 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (0,1),DP (0,32)) "-- 1, i.e., loop terminates now" Nothing,DComment (DP (0,-31),DP (0,5)) "-- a dec. var. only if the counter =" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "writeSTRef" Nothing,DComment (DP (0,1),DP (0,3)) "pR" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,5),DP (0,36)) "-- 1, i.e., loop terminates now" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "undoOne" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:23-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:23-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,0),DP (0,1)) "m" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-61)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-61))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14-22 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-61)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,61)) "-- Invariant states p is from current level, so when we're done" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,-61)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-54 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (4,0) [DComment (DP (1,0),DP (1,59)) "-- with it, we've thrown away one lit. from counting toward" Nothing,DComment (DP (0,-59),DP (0,4)) "-- Invariant states p is from current level, so when we're done" Nothing,DComment (DP (1,0),DP (1,11)) "-- counter." Nothing,DComment (DP (0,-11),DP (0,48)) "-- with it, we've thrown away one lit. from counting toward" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,-6),DP (0,5)) "-- counter." Nothing,DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "modifySTRef" Nothing,DComment (DP (0,1),DP (0,9)) "counterR" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,2)) "-" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-5),DP (1,-5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:21-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:21-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:21-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:33-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,-11),DP (0,-2)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,3)) "pR" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:42-54 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 CN "(:)" Ref "delta-64",
  (Ann (DP (0,-1)) (ColDelta 31) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 Ref "delta-64"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:44 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:53 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7-32 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "liftST" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:12-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:12-32 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "modifySTRef" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:21-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:21-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:31-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,10)) "out_learnedR" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-51 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,8),DP (0,9)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-51 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "bump" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:16-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:16-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:16-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "var" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:28-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:41-51 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:42-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:42-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:42-50 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-16 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-20 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-20 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,7)) "out_learned" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:14-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7-52 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "readSTRef" Nothing,DComment (DP (0,1),DP (0,13)) "out_learnedR" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:22-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:22-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:31-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:31-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:41-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7-52 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-11),DP (0,4)) "learnedClauseId" Nothing),DP (0,-11)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:22-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:22-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 22) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "nextTraceId" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:31-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:31-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:41-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7-36 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-15),DP (0,5)) "storeResolvedSources" Nothing),DP (0,-15)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:26-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-58 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-9),DP (0,6)) "resolveSourcesR" Nothing,DComment (DP (0,1),DP (0,16)) "learnedClauseId" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:28-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 21) DP (0,1) [DComment (DP (0,-20),DP (0,-7)) "traceClauseId" Nothing,DComment (DP (0,1),DP (0,16)) "learnedClauseId" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:44-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-35 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:21-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-13),DP (0,-7)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "out_learned" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7-56 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-10),DP (0,-9)) "," Nothing,DComment (DP (0,1),DP (0,16)) "learnedClauseId" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,12)) "out_btlevel" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:14-56 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:15-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:15-25 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:28-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:28-42 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:45-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:45-55 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31 CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,10)) "-- helpers" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "-- helpers" Nothing,DComment (DP (0,-10),DP (0,2)) "currentLevel" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing,DComment (DP (0,1),DP (0,6)) "dlits" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-6)) "levelL" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "levelArr" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:18-31 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:20-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:20-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:27-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 22) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31 CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,-13)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,14)) "storeResolvedSources" Nothing] [((G AnnVal),DP (0,-13))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:14-31 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:16-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:16-31 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:25-31 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "clauseId" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:26-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:26-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:5-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,5)-(573,81) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,7),DP (0,8)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,5)-(573,81) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,1)) "readSTRef" Nothing),DP (0,-8)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:26-28 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-18),DP (0,-18)) "" Nothing,DComment (DP (0,0),DP (0,10)) "rsReversed" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:30-37 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,39)-(573,81) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 34) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,41)-(573,81) CN "HsDo" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 36) DP (0,1) [DComment (DP (0,0),DP (0,3)) "rsR" Nothing] [((G AnnDo),DP (0,-2)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(569,7)-(573,81) Ref "delta-65"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:7-16 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:7-42 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(569,7)-(573,81) CN "(:)" Ref "delta-65",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:21-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:21-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,13)) "resolutionTrace" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:30-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:30-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:40-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:7-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:7-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,7)-(573,81) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,7)-(573,81) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:18-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 11) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,15)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 27) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81) CN "(:)" Ref "delta-66",
  (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81) Ref "delta-66"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:37 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:39-40 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:571:9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,9)-(573,81) CN "GRHS" NotNeeded,
  (Ann (DP (1,-27)) (ColDelta -27) DP (1,-27) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,9)-(573,81) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -27) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:571:11-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,11)-(573,80) CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-9)) "rt" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,0),DP (0,1)) "{" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,12)) "resSourceMap" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:572:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,15)-(573,80) CN "RecordUpd" NotNeeded,
  (Ann (DP (1,-21)) (ColDelta -21) DP (1,-21) [DComment (DP (0,3),DP (0,4)) "=" Nothing] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:572:18-29 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,18)-(573,79) CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -18) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,2)) "Map.insert" Nothing),DP (0,-8)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:22-79 CN "HsApp" NotNeeded,
  (Ann (DP (1,-14)) (ColDelta -14) DP (1,-14) [DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "reverse" Nothing,DComment (DP (0,1),DP (0,11)) "rsReversed" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "resSourceMap" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:33-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:42-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:43-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:43-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:51-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:63-79 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:64-75 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:64-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:77-78 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1-41 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,76)) "-- | Delete the assignment to last-assigned literal.  Undoes the trail, the" Nothing,DComment (DP (1,1),DP (1,46)) "-- assignment, sets `noLevel', undoes reason." Nothing,DComment (DP (0,-45),DP (0,30)) "-- | Delete the assignment to last-assigned literal.  Undoes the trail, the" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,43)) "-- assignment, sets `noLevel', undoes reason." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "-- Does /not/ touch `dl'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "undoOne" Nothing,DComment (DP (0,-7),DP (0,18)) "-- Does /not/ touch `dl'." Nothing,DComment (DP (0,-17),DP (0,-15)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,3)) "{-# INLINE" Nothing),DP (0,-7)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-41 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-41 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [DComment (DP (0,-11),DP (0,-4)) "undoOne" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:29-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:29-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:29-41 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:40-41 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1-22 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-4)) "do" Nothing),DP (0,-6)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:12-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-3)) "undoOne" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "<-" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:9 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "trl" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,11)-(592,57) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,13)-(592,57) CN "HsDo" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,4)) "gets" Nothing] [((G AnnDo),DP (0,-3)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(583,5)-(592,57) Ref "delta-67"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:5-21 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(583,5)-(592,57) CN "(:)" Ref "delta-67",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,2),DP (0,7)) "trail" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:12-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:12-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:17-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5-21 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-3),DP (0,1)) "case" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:12-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:12-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "trl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:17-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(585,5)-(592,57) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(585,5)-(592,57) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(586,7)-(592,57) Ref "delta-68"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:585:10-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-8 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-8 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-48 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(586,7)-(592,57) CN "(:)" Ref "delta-68",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,0),DP (0,2)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "error" Nothing,DComment (DP (0,1),DP (0,25)) "\"undoOne of empty trail\"" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:16-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,7) [DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,4)) "trl'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:19-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:19-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:25-48 CN "HsLit" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:7-14 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,6)) "liftST" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,7)-(592,57) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:8-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:9 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:10-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,16)-(592,57) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,19)-(592,57) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(588,11)-(592,57) Ref "delta-69"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-20 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-33 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-33 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(588,11)-(592,57) CN "(:)" Ref "delta-69",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,8)) "unassign" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:22-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,9)) "writeArray" Nothing] [((G AnnBackquote),DP (0,-8)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "lvl" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-49 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "noLevel" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:20-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:31-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 20) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:35-41 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:36-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:36-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:43-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:11-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,11)-(592,57) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,11)-(592,57) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:18 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "trail" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57) CN "(:)" Ref "delta-70",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57) Ref "delta-70"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(591,13)-(592,57) CN "GRHS" NotNeeded,
  (Ann (DP (1,-7)) (ColDelta -7) DP (1,-7) [DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "trl'" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(591,13)-(592,57) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:16-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:16-30 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -4) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,1)) "reason" Nothing),DP (0,-5)),((G AnnEqual),DP (0,4)),((AnnComment DComment (DP (0,-4),DP (0,6)) "Map.delete" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "var" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "reason" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((G AnnComma),DP (1,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:27-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:16-55 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -4) DP (0,1) [] [((G AnnEqual),DP (0,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:27-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:27-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:27-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:38-44 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:39-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:39-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:46-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:47-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:47-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1-28 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,55)) "-- | Increase the recorded activity of given variable." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "bump" Nothing,DComment (DP (0,-4),DP (0,50)) "-- | Increase the recorded activity of given variable." Nothing,DComment (DP (0,-49),DP (0,-47)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-4),DP (0,6)) "{-# INLINE" Nothing),DP (0,-4)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-28 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-28 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,4)) "bump" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:16-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:16-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:16-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 25) DP (0,1) [DComment (DP (0,-7),DP (0,-4)) "#-}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:27-28 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1-19 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:12-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-6)) "bump" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,12)) "varOrderMod" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "+" Nothing,DComment (DP (0,1),DP (0,7)) "varInc" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:6 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:8-33 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:10-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:10-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:10-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:24-33 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:25-32 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:27-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1-16 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,54)) "-- | Constant amount by which a variable is `bump'ed." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "varInc" Nothing,DComment (DP (0,-6),DP (0,47)) "-- | Constant amount by which a variable is `bump'ed." Nothing,DComment (DP (0,-46),DP (0,-44)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Double" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:11-16 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "1.0" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:11-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:8-12 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:10-12 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1-41 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (3,1),DP (3,29)) "-- *** Impossible to satisfy" Nothing,DComment (DP (1,1),DP (1,29)) "-- *** Impossible to satisfy" Nothing,DComment (DP (1,1),DP (1,41)) "-- | /O(1)/.  Test for unsatisfiability." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,38)) "-- | /O(1)/.  Test for unsatisfiability." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,76)) "-- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting" Nothing,DComment (DP (1,1),DP (1,77)) "-- clause and there are no decision literals in @m@.''  But we were deciding" Nothing,DComment (DP (0,-76),DP (0,2)) "-- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting" Nothing,DComment (DP (1,1),DP (1,76)) "-- on all literals *without* creating a conflicting clause.  So now we also" Nothing,DComment (DP (0,-75),DP (0,1)) "-- clause and there are no decision literals in @m@.''  But we were deciding" Nothing,DComment (DP (1,1),DP (1,56)) "-- test whether we've made all possible decisions, too." Nothing,DComment (DP (0,-55),DP (0,20)) "-- on all literals *without* creating a conflicting clause.  So now we also" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "unsat" Nothing,DComment (DP (0,-5),DP (0,50)) "-- test whether we've made all possible decisions, too." Nothing,DComment (DP (0,-49),DP (0,-47)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,12)) "FunsatState" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,5)) "{-# INLINE" Nothing),DP (0,-5)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-16 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-41 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-41 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "unsat" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-33 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-41 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "#-}" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:38-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1-20 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:12-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-5)) "unsat" Nothing,DComment (DP (0,1),DP (0,14)) "maybeConflict" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-2),DP (0,11)) "maybeConflict" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnWhere),DP (1,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "SC" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,0),DP (0,2)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,8)) "isUnsat" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:7-19 CN "VarPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "where" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:21-31 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,7)) "isUnsat" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "&&" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:22-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:22-30 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "null" Nothing),DP (0,-2)),((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:25-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:25-29 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnEqual),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:28-29 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "dl" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,33)-(616,53) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:35-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 35) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "isJust" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53 CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:19-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:21-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,35)) "-- or BitSet.size bad == numVars cnf" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:27-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:30-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:33-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:33-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:40-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1-26 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (10,1) [DComment (DP (1,21),DP (1,57)) "-- or BitSet.size bad == numVars cnf" Nothing,DComment (DP (3,1),DP (3,14)) "-- ** Helpers" Nothing,DComment (DP (1,1),DP (1,14)) "-- ** Helpers" Nothing,DComment (DP (1,1),DP (1,25)) "-- *** Clause compaction" Nothing,DComment (DP (1,1),DP (1,25)) "-- *** Clause compaction" Nothing,DComment (DP (1,1),DP (1,51)) "-- | Keep the smaller half of the learned clauses." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "compactDB" Nothing,DComment (DP (0,-9),DP (0,41)) "-- | Keep the smaller half of the learned clauses." Nothing,DComment (DP (0,-40),DP (0,-38)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-26 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:14-26 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:25-26 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-5)) "" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "n" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "numVars" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,11)-(640,50) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,13)-(640,50) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(628,5)-(640,50) Ref "delta-71"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:5-33 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "lArr" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(628,5)-(640,50) CN "(:)" Ref "delta-71",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,3),DP (0,4)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,4)) "cnf" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:10-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:10-33 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-5)) "<-" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing] [((G AnnBackquote),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,5)) "learnt" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:26-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:26-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:31-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5-8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5-23 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-4),DP (0,3)) "clauses" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:13-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:13-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:5-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,5)-(633,48) CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "nub" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,10)) "Fl.concat" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:16-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,16)-(633,48) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:25-41 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-7)) "(" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,0),DP (0,1)) "-" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "n" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) ".." Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:26-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "forM" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:26-40 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:32-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "L" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:43-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,0),DP (0,1)) "L" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "n" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:25-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:25-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(631,25)-(633,48) CN "HsApp" NotNeeded,
  (Ann (DP (1,20)) (ColDelta 20) DP (1,20) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:30-45 CN "ArithSeq" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing] [((G AnnOpenS),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "val" Nothing),DP (0,0)),((G AnnDotdot),DP (0,1)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:31-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:33-37 CN "HsPar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,0),DP (0,2)) "->" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:34-36 CN "NegApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnMinus),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 31) DP (0,1) [DComment (DP (0,0),DP (0,2)) "do" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:42-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,28)-(633,48) CN "HsPar" NotNeeded,
  (Ann (DP (1,23)) (ColDelta 23) DP (1,23) [DComment (DP (0,-1),DP (0,8)) "readArray" Nothing,DComment (DP (0,1),DP (0,5)) "lArr" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) ";" Nothing,DComment (DP (0,1),DP (0,11)) "writeArray" Nothing,DComment (DP (0,1),DP (0,5)) "lArr" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "`" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,2)) "2" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47) CN "(:)" Ref "delta-72",
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47) CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47) Ref "delta-72"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:30 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,35)-(633,47) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,35)-(633,47) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,38)-(633,47) Ref "delta-73"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:38-40 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:38-60 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,3)) "return" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1)),(AnnSemiSep,DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,38)-(633,47) CN "(:)" Ref "delta-73",
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:45-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:45-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:45-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:55-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 17) DP (0,1) [DComment (DP (0,-9),DP (0,-6)) "val" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-73 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-80 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-83 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-83 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:75-78 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:80 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:82-83 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38-47 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [DComment (DP (1,-33),DP (1,-33)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "clauses'" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "take" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,8)) "clauses" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "`" Nothing,DComment (DP (0,0),DP (0,3)) "div" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,5)-(635,74) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:9-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,18)-(635,74) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:20-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,20)-(635,74) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:25-48 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 16) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,7)) "sortBy" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:33-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 24) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "comparing" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:41-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnBackquote),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,5)) "length" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:47 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (1,11) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "clauses" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "forM_" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:22-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:22-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:22-74 CN "HsApp" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 13) DP (0,1) [DComment (DP (0,-1),DP (0,7)) "clauses'" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:29-66 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:30-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:30-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:40-65 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:41-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:41-64 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:50-64 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 CN "(:)" Ref "delta-74",
  (Ann (DP (0,-1)) (ColDelta 42) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 Ref "delta-74"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:52-58 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:53 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:55 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:57 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:63 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:68-74 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,5)-(640,50) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,5)-(640,50) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:14-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:14-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,14)-(640,50) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:20-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,1),DP (0,4)) "wCl" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,14)-(640,50) CN "HsPar" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-8),DP (0,-7)) "@" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49) CN "(:)" Ref "delta-75",
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49) CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49) Ref "delta-75"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:17-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:17-29 CN "AsPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "x" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:21-29 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:22 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:25 CN "WildPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnVal),DP (0,-1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:28 CN "WildPat" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,9)) "readSTRef" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,34)-(640,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,34)-(640,49) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(638,17)-(640,49) Ref "delta-76"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-22 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-37 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(638,17)-(640,49) CN "(:)" Ref "delta-76",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,1),DP (0,2)) "r" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,10)) "modifyArray" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:21 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:27-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:27-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,1) [DComment (DP (0,-7),DP (0,-3)) "lArr" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-49 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,5)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "wCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:29-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:38-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:38-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:44-49 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:45-48 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-49 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:29-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:38-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:38-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:44-49 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:45-48 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,1)-(656,30) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (13,1) [DComment (DP (1,1),DP (1,24)) "-- *** Unit propagation" Nothing,DComment (DP (1,1),DP (1,24)) "-- *** Unit propagation" Nothing,DComment (DP (1,1),DP (1,78)) "-- | Add clause to the watcher lists, unless clause is a singleton; if clause" Nothing,DComment (DP (1,1),DP (1,78)) "-- | Add clause to the watcher lists, unless clause is a singleton; if clause" Nothing,DComment (DP (0,-77),DP (0,1)) "-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict," Nothing,DComment (DP (1,1),DP (1,78)) "-- `True' otherwise.  This function should be called exactly once per clause," Nothing,DComment (DP (0,-77),DP (0,1)) "-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict," Nothing,DComment (DP (1,1),DP (1,74)) "-- per run.  It should not be called to reconstruct the watcher list when" Nothing,DComment (DP (0,-73),DP (0,4)) "-- `True' otherwise.  This function should be called exactly once per clause," Nothing,DComment (DP (1,1),DP (1,16)) "-- propagating." Nothing,DComment (DP (0,-15),DP (0,58)) "-- per run.  It should not be called to reconstruct the watcher list when" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,13)) "-- propagating." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,65)) "-- Currently the watched literals in each clause are the first two." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,65)) "-- Currently the watched literals in each clause are the first two." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,38)) "-- Also adds unique clause ids to trace." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "watchClause" Nothing,DComment (DP (0,-11),DP (0,29)) "-- Also adds unique clause ids to trace." Nothing,DComment (DP (0,-28),DP (0,-26)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:16-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:16-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,16)-(656,30) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,16)-(656,30) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,4),DP (0,5)) ")" Nothing),DP (0,4)),((G AnnRarrow),DP (1,13))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 28) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:16-33 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(654,16)-(656,30) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,27)) "-- ^ Is this clause learned?" Nothing),DP (0,-1)),((G AnnRarrow),DP (1,13))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "Bool" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:25-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:655:16-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(655,16)-(656,30) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,4)) "FunMonad" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "Bool" Nothing),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,30)) "-- ^ Is this clause learned?" Nothing),DP (0,2)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "{-# INLINE" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,12)) "watchClause" Nothing),DP (0,1)),((G AnnRarrow),DP (1,13))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:16-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:16-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:16-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 25) DP (0,1) [DComment (DP (0,0),DP (0,3)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:27-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1-26 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "m" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "c" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "cid" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:12-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,1)) "watchClause" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,5)) "isLearnt" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,4)) "case" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:15-22 CN "TuplePat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:19-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:24-31 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,33)-(678,25) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,35)-(678,25) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25) Ref "delta-77"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25) CN "(:)" Ref "delta-77",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25) CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "->" Nothing),DP (0,-1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(660,7)-(678,25) Ref "delta-78"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:659:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-8 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-8 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-23 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(660,7)-(678,25) CN "(:)" Ref "delta-78",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,5)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:10-23 CN "GRHS" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,1)) "]" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:13-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:13-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 13) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "result" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:7-9 CN "ListPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,7)-(668,29) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,2)) "<-" Nothing,DComment (DP (0,1),DP (0,8)) "enqueue" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:8 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,11)-(668,29) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,14)-(668,29) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,17)-(668,29) Ref "delta-79"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:17-22 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:17-53 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-6),DP (0,2)) "levelArr" Nothing),DP (0,-6)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,17)-(668,29) CN "(:)" Ref "delta-79",
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:27-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "gets" Nothing,DComment (DP (0,1),DP (0,6)) "level" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:39-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:40-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:40-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:45-52 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:46 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:49-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:49-51 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17-24 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17-38 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "liftST" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:29-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:29-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "writeArray" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:34-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-54 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-2),DP (0,6)) "levelArr" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:26-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:37-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [DComment (DP (0,-9),DP (0,-1)) "isLearnt" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:46-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 29) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "(" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:47-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:47-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:54 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:17-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,17)-(667,84) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,17)-(667,84) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:22-35 CN "HsPar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "modifySlot" Nothing] [((G AnnOpenP),DP (0,-7)),((AnnComment DComment (DP (0,-5),DP (0,10)) "resolutionTrace" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:23-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:23-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:27-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,37)-(667,84) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:19-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:19-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,19)-(667,83) CN "OpApp" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,8),DP (0,9)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:30-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 13) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,15)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,-21)) (ColDelta 29) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,0),DP (0,2)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,23)) "resTraceOriginalSingles" Nothing] [((G AnnVal),DP (0,-21))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83) CN "(:)" Ref "delta-80",
  (Ann (DP (0,-1)) (ColDelta 31) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83) Ref "delta-80"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:49 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:51-52 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,23)-(667,83) CN "GRHS" NotNeeded,
  (Ann (DP (1,-25)) (ColDelta -25) DP (1,-25) [DComment (DP (0,11),DP (0,12)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,23)-(667,83) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:25-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,25)-(667,82) CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnEqual),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,41)-(667,82) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -7) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:44-66 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,44)-(667,81) CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((AnnComment DComment (DP (0,-19),DP (0,-18)) "(" Nothing),DP (0,-19)),((AnnComment DComment (DP (0,0),DP (0,1)) "c" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "cid" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ":" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,23)) "resTraceOriginalSingles" Nothing),DP (0,0)),((G AnnEqual),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-54 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-81 CN "OpApp" NotNeeded,
  (Ann (DP (0,18)) (ColDelta 0) DP (1,0) [DComment (DP (0,12),DP (0,14)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-31),DP (1,-31)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing,DComment (DP (0,1),DP (0,7)) "result" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:49 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:51-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:51-53 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:56-78 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:56-81 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:80-81 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17-29 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-10),DP (1,-10)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:24-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,1)) "p" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:7 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,7)-(678,25) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "!!" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "negate" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "!!" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,9)-(678,25) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,12)-(678,25) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(678,25) Ref "delta-81"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(672,66) CN "LetStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(678,25) CN "(:)" Ref "delta-81",
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "_insert" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,19)-(672,66) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:21-56 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 2) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:23-56 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-38 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:31-38 CN "HsPar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "annCl" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-1),DP (0,1)) "cl" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:32-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:37 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:41-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:41-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:41-55 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:48-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,-27)) (ColDelta 29) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "list" Nothing,DComment (DP (0,1),DP (0,30)) "-- avoid watching dup clauses" Nothing] [((G AnnOpenP),DP (0,-27)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:49-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:51-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:54 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:19-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(670,19)-(672,66) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(670,19)-(672,66) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:27-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:27-39 CN "AsPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "|" Nothing,DComment (DP (0,1),DP (0,4)) "any" Nothing] [((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:33-39 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "->" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:34 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:37-38 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:41-44 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:23-60 CN "GRHS" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,-4),DP (0,-2)) "cl" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,0),DP (0,29)) "-- avoid watching dup clauses" Nothing,DComment (DP (0,-28),DP (0,-27)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "list" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "list" Nothing] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-53 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:25-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:29-48 CN "HsPar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "otherwise" Nothing] [((G AnnOpenP),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 CN "(:)" Ref "delta-82",
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 Ref "delta-82"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:31-36 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:32 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:35 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-47 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:44-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:50-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:57-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:23-66 CN "GRHS" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 4) DP (1,4) [DComment (DP (0,-4),DP (0,1)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,4)) "list" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnVbar),DP (0,-3)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "$" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,9)) "newSTRef" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "p" Nothing),DP (0,1)),((G AnnEqual),DP (0,21))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:25-33 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:25-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:57-61 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:57-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:63-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15-38 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-1),DP (0,2)) "let" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:20-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:20-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 5) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "annCl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:29-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:29-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,0),DP (0,1)) "r" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "," Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,4)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(674,15)-(676,73) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(674,19)-(676,73) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:25-37 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:27-37 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "arr" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,11)) "modifyArray" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:28 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "do" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:31 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:34-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:34-36 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:19-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,19)-(676,73) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,8),DP (0,11)) "arr" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "fst" Nothing,DComment (DP (0,1),DP (0,2)) "p" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "annCl" Nothing,DComment (DP (0,0),DP (0,1)) ":" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,19)-(676,73) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:25-27 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,29)-(676,73) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,31)-(676,73) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,34)-(676,73) Ref "delta-83"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-73 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-73 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,34)-(676,73) CN "(:)" Ref "delta-83",
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:46-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:50-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:51-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:51-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:60-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:60-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:66-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:67-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:67-72 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-73 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (1,-19),DP (1,-19)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "get" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,6)) "addCl" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-73 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:46-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "." Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "if" Nothing,DComment (DP (0,1),DP (0,9)) "isLearnt" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:50-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:51-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:51-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "then" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:60-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:60-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 26) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "learnt" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:66-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 32) DP (0,1) [DComment (DP (0,0),DP (0,4)) "else" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:67-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:67-72 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,5)) "watches" Nothing),DP (0,-2)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-28 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-77 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,4)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-77 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:19-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 4) DP (0,1) [DComment (DP (0,-3),DP (0,3)) "return" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:23-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,0),DP (0,4)) "True" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:32-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:40-77 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:41-76 CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:44-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:58-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:70-76 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15-25 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:22-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,1)-(693,26) CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (1,1),DP (1,76)) "-- | Enqueue literal in the `propQ' and place it in the current assignment." Nothing,DComment (DP (1,1),DP (1,76)) "-- | Enqueue literal in the `propQ' and place it in the current assignment." Nothing,DComment (DP (0,-75),DP (0,1)) "-- If this conflicts with an existing assignment, returns @False@; otherwise" Nothing,DComment (DP (1,1),DP (1,73)) "-- returns @True@.  In case there is a conflict, the assignment is /not/" Nothing,DComment (DP (0,-72),DP (0,4)) "-- If this conflicts with an existing assignment, returns @False@; otherwise" Nothing,DComment (DP (1,1),DP (1,12)) "-- altered." Nothing,DComment (DP (0,-11),DP (0,61)) "-- returns @True@.  In case there is a conflict, the assignment is /not/" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,9)) "-- altered." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,68)) "-- Also records decision level, modifies trail, and records reason for" Nothing,DComment (DP (1,1),DP (1,15)) "-- assignment." Nothing,DComment (DP (0,-14),DP (0,56)) "-- Also records decision level, modifies trail, and records reason for" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "enqueue" Nothing,DComment (DP (0,-7),DP (0,7)) "-- assignment." Nothing,DComment (DP (0,-6),DP (0,-4)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "MAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:12-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:12-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,12)-(693,26) CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,12)-(693,26) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (1,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 24) DP (0,1) [DComment (DP (0,-11),DP (0,-8)) "Lit" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:688:12-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(688,12)-(693,26) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,42)) "-- ^ The literal that has been assigned true." Nothing),DP (0,-3)),((AnnComment DComment (DP (1,9),DP (1,11)) "->" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,6)) "Maybe" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-5),DP (0,40)) "-- ^ The literal that has been assigned true." Nothing),DP (0,-5)),((AnnComment DComment (DP (0,-39),DP (0,-38)) "(" Nothing),DP (0,-39)),((AnnComment DComment (DP (0,0),DP (0,6)) "Clause" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnRarrow),DP (2,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:12-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:12-35 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(690,12)-(693,26) CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((AnnComment DComment (DP (1,12),DP (1,65)) "-- non-@Nothing@ value here adjusts the `reason' map." Nothing),DP (1,12)),((AnnComment DComment (DP (0,-53),DP (0,2)) "-- ^ The reason for enqueuing the literal.  Including a" Nothing),DP (0,-53)),((AnnComment DComment (DP (1,9),DP (1,11)) "->" Nothing),DP (1,9)),((AnnComment DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-8),DP (0,45)) "-- non-@Nothing@ value here adjusts the `reason' map." Nothing),DP (0,-8)),((AnnComment DComment (DP (0,-44),DP (0,-43)) "s" Nothing),DP (0,-44)),((AnnComment DComment (DP (0,1),DP (0,5)) "Bool" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "{-# INLINE" Nothing),DP (0,0)),((G AnnRarrow),DP (3,9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:18-35 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,-49)) (ColDelta 18) DP (0,1) [DComment (DP (0,-5),DP (0,50)) "-- ^ The reason for enqueuing the literal.  Including a" Nothing] [((G AnnOpenP),DP (0,-49)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:27-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:12-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:12-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:12-26 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-8),DP (0,-1)) "enqueue" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:23-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1-22 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:12-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,-58)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,59)) "-- enqueue _m l _r | trace (\"enqueue \" ++ show l) $ False = undefined" Nothing] [((G AnnVal),DP (0,-58))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "enqueue" Nothing,DComment (DP (0,-7),DP (0,62)) "-- enqueue _m l _r | trace (\"enqueue \" ++ show l) $ False = undefined" Nothing,DComment (DP (0,-61),DP (0,-60)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:9 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mFr" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,15)) "unsafeFreezeAss" Nothing] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,15)-(709,19) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,17)-(709,19) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(697,5)-(709,19) Ref "delta-84"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:5-28 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,1)) "case" Nothing),DP (0,-3)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(697,5)-(709,19) CN "(:)" Ref "delta-84",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,9),DP (0,10)) "m" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:12-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:12-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-15),DP (0,-14)) "`" Nothing,DComment (DP (0,0),DP (0,11)) "statusUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,3)) "of" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(699,7)-(709,19) Ref "delta-85"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:10-28 CN "OpApp" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:12-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-10)) "b" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "return" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:26-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,1)) "b" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-25 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(699,7)-(709,19) CN "(:)" Ref "delta-85",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,3),DP (0,31)) "-- conflict/already assigned" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "Left" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:15-25 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:18-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 18) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:7-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,7)-(709,19) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,9),DP (0,37)) "-- conflict/already assigned" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12-13 CN "Exact" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,15)-(709,19) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,18)-(709,19) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(701,9)-(709,19) Ref "delta-86"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-18 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-29 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-29 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(701,9)-(709,19) CN "(:)" Ref "delta-86",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,6)) "assign" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-29)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,30)) "-- assign decision level for literal" Nothing] [((G AnnVal),DP (0,-29))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:20-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:9-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,9)-(704,52) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (2,0) [DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "gets" Nothing,DComment (DP (0,-4),DP (0,32)) "-- assign decision level for literal" Nothing,DComment (DP (0,-31),DP (0,-30)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "level" Nothing,DComment (DP (0,1),DP (0,4)) "&&&" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "length" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,3)) "dl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "levelArr" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "dlInt" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,9)-(704,52) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:14-38 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,4)) "liftST" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:15-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:15-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:21-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,10)) "writeArray" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:25-37 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:26-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,6)) "levelArr" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:40-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52) CN "(:)" Ref "delta-87",
  (Ann (DP (0,-1)) (ColDelta 35) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52) Ref "delta-87"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:45-61 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:46-53 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-2)) "dlInt" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:56-60 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:11-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta -33) DP (1,-33) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:11-52 CN "GRHS" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta -33) DP (1,-33) [DComment (DP (1,-35),DP (1,-35)) "" Nothing,DComment (DP (0,0),DP (0,6)) "modify" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:11-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta -33) DP (1,-33) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:18-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -26) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) ")" Nothing),DP (0,-5)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:19-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:30-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta -14) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "trail" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:39-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -5) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,1),DP (0,2)) ":" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:40-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:40-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "trail" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:47-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,1)) "s" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,9)-(706,52) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,9)-(706,52) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52) CN "(:)" Ref "delta-88",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52) Ref "delta-88"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:19 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,24)-(706,52) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,24)-(706,52) CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:27-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:27-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,2),DP (0,3)) "l" Nothing),DP (0,2)),((AnnComment DComment (DP (0,1),DP (0,2)) "}" Nothing),DP (0,1)),((AnnComment DComment (DP (1,-9),DP (1,-9)) "" Nothing),DP (1,-9)),((AnnComment DComment (DP (0,0),DP (0,4)) "when" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "isJust" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "r" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:35-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 19) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "propQ" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:39-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:40-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:40-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 28) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "s" Nothing,DComment (DP (0,1),DP (0,7)) "Seq.|>" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:27-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:27-50 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-50 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:43-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:9-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,27) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,83) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,83) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:14-23 CN "HsPar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "modifySlot" Nothing] [((G AnnOpenP),DP (0,-7)),((AnnComment DComment (DP (0,-1),DP (0,5)) "reason" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:15-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:15-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:11-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 2) DP (1,2) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 2) DP (1,2) [DComment (DP (0,3),DP (0,4)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,6)) "reason" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,11)) "Map.insert" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "fromJust" Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:22-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 13) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "True" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 CN "(:)" Ref "delta-89",
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 Ref "delta-89"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:32 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:34 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39-83 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39-83 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:41-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:41-82 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-67 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-80 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:50-82 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:61-67 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:62-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:62-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:69-80 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:70-77 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:70-79 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:79 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:82 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9-19 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,53)) "-- | Pop the `propQ'.  Error (crash) if it is empty." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "dequeue" Nothing,DComment (DP (0,-7),DP (0,45)) "-- | Pop the `propQ'.  Error (crash) if it is empty." Nothing,DComment (DP (0,-44),DP (0,-42)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,4)) "Lit" Nothing] [((AnnComment DComment (DP (0,-7),DP (0,3)) "{-# INLINE" Nothing),DP (0,-7)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:12-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-8),DP (0,-1)) "dequeue" Nothing,DComment (DP (0,1),DP (0,4)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:23-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1-22 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:12-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-3)) "dequeue" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "q" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,9)-(720,18) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,11)-(720,18) CN "HsDo" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,4)) "gets" Nothing] [((G AnnDo),DP (0,-3)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(715,5)-(720,18) Ref "delta-90"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:5-19 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "case" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(715,5)-(720,18) CN "(:)" Ref "delta-90",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,2),DP (0,7)) "propQ" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:10-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:10-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:15-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,5)) "Seq.viewl" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(716,5)-(720,18) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "q" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(716,5)-(720,18) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "error" Nothing),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(717,7)-(720,18) Ref "delta-91"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:10-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:10-20 CN "HsApp" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,10)) "Seq.EmptyL" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-16 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-16 CN "Qual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-50 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(717,7)-(720,18) CN "(:)" Ref "delta-91",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,3),DP (0,27)) "\"dequeue of empty propQ\"" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:18-50 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-10),DP (0,-7)) "top" Nothing,DComment (DP (0,1),DP (0,7)) "Seq.:<" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:21-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:27-50 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:7-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:7-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,7)-(720,18) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:11-16 CN "Qual" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 4) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "modify" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:18-19 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,21)-(720,18) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,24)-(720,18) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(719,9)-(720,18) Ref "delta-92"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-36 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(719,9)-(720,18) CN "(:)" Ref "delta-92",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,5)) "propQ" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "q'" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 CN "(:)" Ref "delta-93",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 CN "HsLam" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "top" Nothing] [((G AnnLam),DP (0,-1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 Ref "delta-93"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:19 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24-36 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24-36 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:26-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:26-35 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9-18 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9-18 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,24)) "-- | Clear the `propQ'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "clearQueue" Nothing,DComment (DP (0,-10),DP (0,13)) "-- | Clear the `propQ'." Nothing,DComment (DP (0,-12),DP (0,-10)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-27 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:15-27 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "clearQueue" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 24) DP (0,1) [DComment (DP (0,0),DP (0,3)) "#-}" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:26-27 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "=" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,7)) "modify" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:12-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,-2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,5)) "propQ" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "Seq.empty" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:12-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:14-48 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 CN "(:)" Ref "delta-94",
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 Ref "delta-94"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:24 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29-48 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:31-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:31-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:39-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1-57 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,33)) "-- *** Dynamic variable ordering" Nothing,DComment (DP (1,1),DP (1,33)) "-- *** Dynamic variable ordering" Nothing,DComment (DP (1,1),DP (1,67)) "-- | Modify priority of variable; takes care of @Double@ overflow." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,11)) "varOrderMod" Nothing,DComment (DP (0,-11),DP (0,55)) "-- | Modify priority of variable; takes care of @Double@ overflow." Nothing,DComment (DP (0,-54),DP (0,-52)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "Double" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "Double" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-57 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-57 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-40 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-57 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:24-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:24-39 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:34-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:45-52 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:45-54 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:45-57 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:54 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:56-57 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,2)) "vo" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,12)) "varOrderArr" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,17)-(739,65) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,19)-(735,42) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(732,5)-(735,42) Ref "delta-95"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:5-43 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,7)) "vActivity" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(732,5)-(735,42) CN "(:)" Ref "delta-95",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,2),DP (0,3)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,5)) "gets" Nothing,DComment (DP (0,1),DP (0,9)) "varOrder" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:11-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:11-43 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:23-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-7),DP (0,-5)) "<-" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing] [((G AnnBackquote),DP (0,-1)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "$" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,10)) "readArray" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:31-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:31-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:36-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5-40 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-5)) "vo" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing] [((AnnComment DComment (DP (0,-9),DP (0,-5)) "when" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "f" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "vActivity" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:18-40 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [DComment (DP (0,-1),DP (0,0)) ">" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:27-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:27-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:27-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "1e100" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:37-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 32) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,18)) "rescaleActivities" Nothing] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-53 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,11),DP (0,13)) "vo" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:10-30 CN "HsPar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,2)) "liftST" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "vo" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "v" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11-29 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:13-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,1) [DComment (DP (0,-8),DP (0,2)) "writeArray" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:25-29 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,1)) "f" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:34-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:34-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 29) DP (0,1) [DComment (DP (0,0),DP (0,9)) "vActivity" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:52-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 47) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-42 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (1,-2),DP (1,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:14-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:25-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:30-42 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:31-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:33-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:5-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,17)) "rescaleActivities" Nothing,DComment (DP (0,1),DP (0,3)) "vo" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:23-24 CN "VarPat" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [DComment (DP (0,-13),DP (0,-13)) "" Nothing,DComment (DP (0,0),DP (0,7)) "indices" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,6)) "range" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,26)-(739,65) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:28-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,28)-(739,65) CN "OpApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 23) DP (0,1) [DComment (DP (0,0),DP (0,5)) "liftM" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 30) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "`" Nothing,DComment (DP (0,1),DP (0,10)) "getBounds" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,37)-(739,65) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(738,9)-(739,65) Ref "delta-96"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:9-15 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:9-45 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-2)) "forM_" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,8)) "indices" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(738,9)-(739,65) CN "(:)" Ref "delta-96",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [DComment (DP (0,5),DP (0,7)) "vo" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:20-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:20-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:26-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "->" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,12)) "modifyArray" Nothing),DP (0,1)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:34-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:34-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:44-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "vo" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-65 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,0)) "i" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "const" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "*" Nothing,DComment (DP (0,1),DP (0,7)) "1e-100" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:15-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:23-65 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 CN "(:)" Ref "delta-97",
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 Ref "delta-97"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:25 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-64 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-64 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:42-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:49-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:49-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:55-64 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:56-63 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:58-63 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1-57 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,69)) "-- | Retrieve the maximum-priority variable from the variable order." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "varOrderGet" Nothing,DComment (DP (0,-11),DP (0,57)) "-- | Retrieve the maximum-priority variable from the variable order." Nothing,DComment (DP (0,-56),DP (0,-54)) "::" Nothing,DComment (DP (0,1),DP (0,12)) "IAssignment" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,15)) "FrozenVarOrder" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,4)) "Var" Nothing] [((AnnComment DComment (DP (0,-11),DP (0,-1)) "{-# INLINE" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,12)) "varOrderGet" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-57 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-57 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,0)) "#-}" Nothing),DP (0,-3)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:31-44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:31-57 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:49-53 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:49-57 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:55-57 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1-26 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-7)) "mFr" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,14)) "FrozenVarOrder" Nothing),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:12-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,1)) "varOrderGet" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,10)) "voFr" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:13-15 CN "VarPat" NotNeeded,
  (Ann (DP (0,-64)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,65)) "-- find highest var undef under mFr, then find one with highest activity" Nothing] [((G AnnVal),DP (0,-64))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:17-37 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:18-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:18-36 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:33-36 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,39)-(761,64) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 39) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-33 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (2,5) [] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-68 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,6)) "(" Nothing,DComment (DP (0,-1),DP (0,71)) "-- find highest var undef under mFr, then find one with highest activity" Nothing,DComment (DP (0,-71),DP (0,-70)) "`" Nothing,DComment (DP (0,0),DP (0,4)) "fmap" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,8)) "goUndef" Nothing,DComment (DP (0,1),DP (0,13)) "highestIndex" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,5)) "start" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,11)) "goActivity" Nothing,DComment (DP (0,1),DP (0,6)) "start" Nothing,DComment (DP (0,1),DP (0,6)) "start" Nothing,DComment (DP (1,3),DP (1,8)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6-32 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:13-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:13-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:21-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 CN "(:)" Ref "delta-98",
  (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 Ref "delta-98"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:38-42 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-68 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:47-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:58-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:64-68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38 CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-1)) "maxActivity" Nothing),DP (0,-12)),((AnnComment DComment (DP (0,1),DP (0,2)) "v" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(749,5)-(761,64) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,12)) "highestIndex" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "snd" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "bounds" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "voFr" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:18-38 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-31 CN "OpApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,2)) "v'" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "if" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,-5),DP (0,-1)) "voFr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "v" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:35-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,0),DP (0,1)) ">" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57 CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,1)) "voFr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,2)) "v'" Nothing,DComment (DP (0,1),DP (0,5)) "then" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,5)) "else" Nothing,DComment (DP (0,1),DP (0,3)) "v'" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:19-20 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:22-57 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:24-57 CN "HsIf" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (0,1)),((G AnnElse),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-32 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-39 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:56-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-21 CN "BangPat" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 0) DP (0,-10) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-24 CN "BangPat" NotNeeded,
  (Ann (DP (0,-17)) (ColDelta 0) DP (0,-17) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "n" Nothing),DP (0,0)),((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-30 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "!" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "h" Nothing),DP (0,0)),((G AnnEqual),DP (0,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(753,5)-(756,57) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,60)) "-- @goActivity current highest@ returns highest-activity var" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,10)) "goActivity" Nothing,DComment (DP (0,-10),DP (0,50)) "-- @goActivity current highest@ returns highest-activity var" Nothing,DComment (DP (0,-49),DP (0,-48)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "h" Nothing,DComment (DP (0,3),DP (0,4)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "h" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:17-21 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:18-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:20 CN "NPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:20 CN "OverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:24 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:28-30 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-23 CN "BangPat" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 0) DP (0,-10) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-26 CN "BangPat" NotNeeded,
  (Ann (DP (0,-19)) (ColDelta 0) DP (0,-19) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,5)-(756,57) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "if" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isUndefUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:17-23 CN "AsPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:19-23 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:20-22 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:22 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:26 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,28)-(756,57) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,30)-(756,57) CN "HsIf" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "n" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,1)) "-" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "1" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "v" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "maxActivity" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "h" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,25)),((G AnnElse),DP (1,25))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:33-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "then" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:35-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "goActivity" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "V" Nothing),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:50-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 45) DP (0,1) [DComment (DP (0,0),DP (0,2)) "$!" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:35-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:35-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:35-75 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:46-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:49-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:54 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:57-75 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:58-74 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:60-72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:74 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:35-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:35-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:35-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:46-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:49-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:54 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-18 CN "BangPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 0) DP (0,-7) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-28 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,1)) "n" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(759,5)-(761,64) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (3,0) [DComment (DP (1,0),DP (1,46)) "-- returns highest var that is undef under mFr" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "goUndef" Nothing,DComment (DP (0,-7),DP (0,39)) "-- returns highest var that is undef under mFr" Nothing,DComment (DP (0,-38),DP (0,-37)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:14-18 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:15-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:17 CN "NPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:17 CN "OverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:20-28 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:22-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-20 CN "BangPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 0) DP (0,-7) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(760,5)-(761,64) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-6)) "|" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,12)) "isUndefUnder" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,4)) "mFr" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:14-20 CN "AsPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:16-20 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:17-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:19 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:22-52 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24-43 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24-43 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:26-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,8)) "otherwise" Nothing] [((G AnnBackquote),DP (0,-7)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:41-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:47-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:47-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 47) DP (0,1) [DComment (DP (0,-4),DP (0,3)) "goUndef" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:22-64 CN "GRHS" NotNeeded,
  (Ann (DP (1,17)) (ColDelta 17) DP (1,17) [DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "V" Nothing,DComment (DP (0,1),DP (0,3)) "$!" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,0),DP (0,1)) "-" Nothing,DComment (DP (0,0),DP (0,1)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:24-32 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:24-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:47-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:47-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:55-64 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56-61 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56-63 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:58-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:63 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1-29 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,55)) "-- | Generate a new clause identifier (always unique)." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "nextTraceId" Nothing,DComment (DP (0,-11),DP (0,43)) "-- | Generate a new clause identifier (always unique)." Nothing,DComment (DP (0,-42),DP (0,-40)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,4)) "Int" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:16-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:27-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-7)) "" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,0),DP (0,7)) "counter" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,13)-(770,21) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,15)-(770,21) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(767,5)-(770,21) Ref "delta-99"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:5-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:5-55 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,3)) "modifySlot" Nothing),DP (0,-7)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(767,5)-(770,21) CN "(:)" Ref "delta-99",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-1),DP (0,3)) "gets" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "resTraceIdCount" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:16-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:21-55 CN "HsPar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 16) DP (0,1) [DComment (DP (0,-4),DP (0,11)) "resolutionTrace" Nothing] [((G AnnOpenP),DP (0,-10)),((AnnComment DComment (DP (0,-15),DP (0,-13)) "->" Nothing),DP (0,-15)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:22-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:22-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:40-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:5-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:5-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,5)-(769,66) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,5)-(769,66) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:16-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 11) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-11))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66) CN "(:)" Ref "delta-100",
  (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66) Ref "delta-100"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:35 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,14)) "resTraceIdCount" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:37-38 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta -25) DP (1,-25) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9-66 CN "GRHS" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta -25) DP (1,-25) [DComment (DP (0,8),DP (0,9)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "succ" Nothing,DComment (DP (0,1),DP (0,8)) "counter" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (1,-29),DP (1,-29)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9-66 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta -25) DP (1,-25) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:12-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:12-65 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -22) DP (0,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-13)) "$!" Nothing),DP (0,-15)),((AnnComment DComment (DP (0,1),DP (0,8)) "counter" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:30-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:30-65 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -4) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:34-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:34-63 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:52-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:52-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:57-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-21 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-21 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:12-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:15-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,43)) "-- | Add the given clause id to the trace." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,13)) "traceClauseId" Nothing,DComment (DP (0,-13),DP (0,29)) "-- | Add the given clause id to the trace." Nothing,DComment (DP (0,-28),DP (0,-26)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "cid" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "=" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:30-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:30-39 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:30-42 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:41-42 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,13)) "resolutionTrace" Nothing),DP (0,-2)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:15-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,10)) "modifySlot" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,19)-(776,51) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,21)-(776,51) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51) Ref "delta-101"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:5-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:5-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51) CN "(:)" Ref "delta-101",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,9),DP (0,10)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51) CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:16-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 11) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing,DComment (DP (0,0),DP (0,15)) "resolutionTrace" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "rt" Nothing,DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51) CN "(:)" Ref "delta-102",
  (Ann (DP (0,-1)) (ColDelta 29) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51) CN "HsLam" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 29) DP (0,1) [DComment (DP (0,0),DP (0,8)) "resTrace" Nothing] [((G AnnLam),DP (0,-7)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51) Ref "delta-102"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:35 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:37-38 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9-51 CN "GRHS" NotNeeded,
  (Ann (DP (1,-25)) (ColDelta -25) DP (1,-25) [DComment (DP (0,0),DP (0,1)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,3)) "cid" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9-51 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -25) DP (0,0) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:11-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:11-50 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -23) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:29-50 CN "RecordUpd" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -5) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:33-40 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta -1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:33-48 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta -1) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:44-48 CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "{-# INLINE" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-48 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,41)) "-- *** Generic state transition notation" Nothing,DComment (DP (1,1),DP (1,41)) "-- *** Generic state transition notation" Nothing,DComment (DP (1,1),DP (1,75)) "-- | Guard a transition action.  If the boolean is true, return the action" Nothing,DComment (DP (1,1),DP (1,55)) "-- given as an argument.  Otherwise, return `Nothing'." Nothing,DComment (DP (0,-54),DP (0,20)) "-- | Guard a transition action.  If the boolean is true, return the action" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,53)) "-- given as an argument.  Otherwise, return `Nothing'." Nothing,DComment (DP (0,-53),DP (0,-50)) "==>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "#-}" Nothing),DP (0,-1)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-48 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:11-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:11-17 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "==>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:23-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:23-48 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31-33 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31-48 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:38-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:38-48 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:44-48 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:45-47 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1-20 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:12-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "==>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) "amb" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,6)) "guard" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,3)) ">>" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing,DComment (DP (0,1),DP (0,4)) "amb" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:9-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:13-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:23-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:26-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:33-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1-12 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "infixr" Nothing,DComment (DP (0,1),DP (0,2)) "6" Nothing,DComment (DP (0,1),DP (0,4)) "==>" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:10-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "{-# INLINE" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-58 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,18)) "-- | @flip fmap@." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,16)) "-- | @flip fmap@." Nothing,DComment (DP (0,-16),DP (0,-13)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "#-}" Nothing),DP (0,-1)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-58 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:11-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:11-17 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-58 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-43 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-58 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:35-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:40-42 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:48-52 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:48-58 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:54-58 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:55 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:55-57 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:57 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1-20 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:12-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-10),DP (0,-9)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">=>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "flip" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,2)) "fmap" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:7-17 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:9-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:14-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1-12 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "infixr" Nothing,DComment (DP (0,1),DP (0,2)) "6" Nothing,DComment (DP (0,1),DP (0,4)) ">=>" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:10-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,1)) "a1" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-62 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,73)) "-- | Choice of state transitions.  Choose the leftmost action that isn't" Nothing,DComment (DP (1,1),DP (1,45)) "-- @Nothing@, or return @Nothing@ otherwise." Nothing,DComment (DP (0,-44),DP (0,28)) "-- | Choice of state transitions.  Choose the leftmost action that isn't" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,-1),DP (0,43)) "-- @Nothing@, or return @Nothing@ otherwise." Nothing,DComment (DP (0,-43),DP (0,-41)) "><" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Monad" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "m" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-1),DP (0,1)) "><" Nothing),DP (0,-1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-62 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "a2" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:10-16 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 16) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-32 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-62 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:28-32 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:29-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-47 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-62 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:43-47 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:44-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:52-56 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 52) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:52-62 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:58-62 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:59 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:59-61 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:61 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:1-2 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:4-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:7-8 CN "VarPat" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "case" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,10)-(804,30) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(801,5)-(804,30) CN "HsCase" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,0),DP (0,2)) "a1" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,3)) "a2" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing),DP (0,-1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(802,7)-(804,30) Ref "delta-103"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:10-17 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing] [((G AnnOpenP),DP (0,-5)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:11-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:11-12 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:15-16 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-24 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) ")" Nothing),DP (0,-7)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(802,7)-(804,30) CN "(:)" Ref "delta-103",
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [DComment (DP (0,3),DP (0,4)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "Nothing" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:8-14 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:8-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-3)) "Just" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:17-23 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,1)) "_" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:17-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:26-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:29-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-17 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-30 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-5)) "a1" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:8-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:8-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:16 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:26-30 CN "GRHS" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 19) DP (0,8) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:7 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:7-30 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:26-30 CN "GRHS" NotNeeded,
  (Ann (DP (0,18)) (ColDelta 19) DP (0,18) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1-11 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "infixl" Nothing,DComment (DP (0,1),DP (0,2)) "5" Nothing,DComment (DP (0,1),DP (0,3)) "><" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:10-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,12)) "-- *** Misc" Nothing,DComment (DP (1,1),DP (1,12)) "-- *** Misc" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,15)) "initialActivity" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Double" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:20-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 20) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "1.0" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:20-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:17-21 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:19-21 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1-65 CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,6)) "Error" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Lit" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "ClauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "noMsg" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "L" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:10-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:10-38 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:16-38 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "=" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:17-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) ")" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:22-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,5)) "noMsg" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:30-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-50 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-65 CN "FunBind" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-65 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:52-65 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 52) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:54-65 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55-57 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:57 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:64 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 64) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:64 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1-34 CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:10-17 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:10-17 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:16-17 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-29 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-34 CN "FunBind" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-34 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:31-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 31) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:33-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(817,1)-(826,34) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,12)) "VerifyError" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "[" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "Clause" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:817:6-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,8)) "SatError" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:5-39 CN "ConDecl" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,3),DP (0,4)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Either" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing] [((AnnComment DComment (DP (1,7),DP (1,66)) "-- ^ Indicates a unsatisfactory assignment that was claimed" Nothing),DP (1,7)),((AnnComment DComment (DP (0,-59),DP (0,2)) "-- satisfactory.  Each clause is tagged with its status using" Nothing),DP (0,-59)),((AnnComment DComment (DP (1,7),DP (1,45)) "-- 'Funsat.Types.Model'@.statusUnder@." Nothing),DP (1,7)),((AnnComment DComment (DP (0,-38),DP (0,23)) "-- satisfactory.  Each clause is tagged with its status using" Nothing),DP (0,-38)),((AnnComment DComment (DP (1,7),DP (1,45)) "-- 'Funsat.Types.Model'@.statusUnder@." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "|" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,11)) "UnsatError" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,16)) "ResolutionError" Nothing),DP (0,1)),((G AnnVbar),DP (5,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:14-39 CN "HsListTy" NotNeeded,
  (Ann (DP (0,-52)) (ColDelta 14) DP (0,1) [DComment (DP (0,-6),DP (0,53)) "-- ^ Indicates a unsatisfactory assignment that was claimed" Nothing] [((G AnnOpenS),DP (0,-52)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:15-38 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:16-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:24-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:24-32 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:24-37 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:31-32 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:34-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:7-32 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:18-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-47)) (ColDelta 18) DP (0,1) [DComment (DP (0,-10),DP (0,48)) "-- ^ Indicates an error in the resultion checking process." Nothing] [((G AnnVal),DP (0,-47))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:20-34 CN "(:)" NotNeeded,
  (Ann (DP (1,20)) (ColDelta 20) DP (3,20) [DComment (DP (1,7),DP (1,65)) "-- ^ Indicates an error in the resultion checking process." Nothing,DComment (DP (1,20),DP (1,28)) "deriving" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Show" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:30-33 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:30-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1-71 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,75)) "-- | Verify the solution.  In case of `Sat', checks that the assignment is" Nothing,DComment (DP (1,1),DP (1,74)) "-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a" Nothing,DComment (DP (0,-73),DP (0,1)) "-- | Verify the solution.  In case of `Sat', checks that the assignment is" Nothing,DComment (DP (1,1),DP (1,58)) "-- resolution-based checker on a trace of the SAT solver." Nothing,DComment (DP (0,-57),DP (0,16)) "-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "verify" Nothing,DComment (DP (0,-6),DP (0,51)) "-- resolution-based checker on a trace of the SAT solver." Nothing,DComment (DP (0,-50),DP (0,-48)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,4)) "CNF" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,12)) "VerifyError" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-71 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "sol" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-71 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,0)) "maybeRT" Nothing),DP (0,-7)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-43 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-71 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "cnf" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:29-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 29) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:48-50 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:48-71 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:55-59 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:55-71 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:61-71 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) ")" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "True" Nothing),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:8-10 CN "VarPat" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,16)) "-- m is well-formed" Nothing] [((G AnnVal),DP (0,-15))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:12-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:20-22 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,24)-(848,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(835,5)-(846,30) CN "HsCase" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (3,5) [DComment (DP (1,1),DP (1,90)) "--    Fl.all (\\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]" Nothing,DComment (DP (0,-86),DP (0,-67)) "-- m is well-formed" Nothing,DComment (DP (1,1),DP (1,90)) "--    Fl.all (\\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]" Nothing,DComment (DP (0,-85),DP (0,-81)) "case" Nothing,DComment (DP (0,1),DP (0,4)) "sol" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "m" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,7)-(846,30) Ref "delta-104"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:835:10-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,3)) "Sat" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:7-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:7-11 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,7)-(842,48) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,7)-(846,30) CN "(:)" Ref "delta-104",
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,13)-(842,48) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,2)) "let" Nothing] [((G AnnRarrow),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,11)-(842,48) CN "HsLet" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "unsatClauses" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "toList" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81) NotNeeded),DP (0,0)),((G AnnIn),DP (1,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:15-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,28)-(839,81) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:30-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,30)-(838,60) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,30)-(839,81) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 22) DP (0,1) [DComment (DP (0,-6),DP (0,4)) "Set.filter" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:30-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:30-60 CN "HsApp" NotNeeded,
  (Ann (DP (1,15)) (ColDelta 15) DP (1,15) [DComment (DP (0,3),DP (0,4)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "isTrue" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,4)) "snd" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:41-60 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,1) [DComment (DP (0,-10),DP (0,-3)) "Set.map" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-59 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:48-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 40) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "c" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,11)) "statusUnder" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:57-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:30-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 15) DP (1,15) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:30-67 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 15) DP (1,15) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:30-81 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 15) DP (1,15) [DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing,DComment (DP (0,1),DP (0,4)) "cnf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,2)) "in" Nothing,DComment (DP (0,1),DP (0,3)) "if" Nothing,DComment (DP (0,1),DP (0,5)) "null" Nothing,DComment (DP (0,1),DP (0,13)) "unsatClauses" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:38-67 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 CN "(:)" Ref "delta-105",
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 Ref "delta-105"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:40 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45-66 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45-66 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:46 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49-65 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49-65 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:51-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:65 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:69-81 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:70-76 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:70-80 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:78-80 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(840,14)-(842,48) CN "HsIf" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (1,3)),((AnnComment DComment (DP (0,-7),DP (0,-3)) "Just" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "." Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,9)) "SatError" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "unsatClauses" Nothing),DP (0,1)),((AnnComment DComment (DP (1,-4),DP (1,-4)) "" Nothing),DP (1,-4)),((AnnComment DComment (DP (0,0),DP (0,5)) "Unsat" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((G AnnElse),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "then" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:841:19-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-33 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-48 CN "OpApp" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:26-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:37-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:7-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(843,7)-(846,30) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 6) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "case" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(843,15)-(846,30) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(844,11)-(846,30) CN "HsCase" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,-1),DP (0,25)) "Resolution.checkDepthFirst" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "fromJust" Nothing,DComment (DP (0,1),DP (0,8)) "maybeRT" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(845,13)-(846,30) Ref "delta-106"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:16-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:16-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Left" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:43-60 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,1) [DComment (DP (0,-24),DP (0,-22)) "er" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "UnsatError" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:44-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:44-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:53-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 46) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "er" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-45 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(845,13)-(846,30) CN "(:)" Ref "delta-106",
  (Ann (DP (1,0)) (ColDelta 6) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:18-19 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,1)) "Right" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:21-45 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "_" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-40 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 16) DP (0,1) [DComment (DP (0,-4),DP (0,3)) "Nothing" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:31-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:44-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13-30 CN "Match" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 0) DP (1,0) [DComment (DP (1,-10),DP (1,-10)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "isTrue" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:19 CN "WildPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Right" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:21-30 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:24-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 11) DP (0,1) [DComment (DP (0,0),DP (0,4)) "True" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-34 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(847,9)-(848,35) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(847,9)-(848,35) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:16-27 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:17-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:17-26 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:23-26 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:23-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:29-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:31-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-35 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,12))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:16 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:29-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:31-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,1)-(873,5) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,40)) "---------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Statistics & trace" Nothing,DComment (DP (0,-21),DP (0,18)) "---------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Statistics & trace" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,9)) "statsNumConfl" Nothing),DP (0,-4)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:6-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,1)) "{" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:14-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,14)-(873,5) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(855,5)-(873,5) CN "(:)" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,2),DP (0,4)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Int64" Nothing] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,6)) "}" Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,67)) "-- ^ Total number of unit implications since beginning of solving." Nothing),DP (0,1)),((G AnnCloseC),DP (2,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:7-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:7-28 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,31)) "-- ^ Number of conflicts since last restart." Nothing),DP (0,-13)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,51)) "-- ^ Number of conflicts since last restart." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,19)) "statsNumConflTotal" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:7-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:7-33 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-18),DP (0,34)) "-- ^ Number of conflicts since beginning of solving." Nothing),DP (0,-18)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,59)) "-- ^ Number of conflicts since beginning of solving." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,15)) "statsNumLearnt" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:29-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:7-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:7-29 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,58)) "-- ^ Number of learned clauses currently in DB (fluctuates because DB is" Nothing),DP (0,-14)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,35)) "-- compacted every restart)." Nothing),DP (1,7)),((AnnComment DComment (DP (0,-28),DP (0,44)) "-- ^ Number of learned clauses currently in DB (fluctuates because DB is" Nothing),DP (0,-28)),((AnnComment DComment (DP (1,7),DP (1,35)) "-- compacted every restart)." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,18)) "statsAvgLearntLen" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,7)) "Double" Nothing),DP (0,1)),((G AnnComma),DP (4,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:25-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:7-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:7-33 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,30)) "-- ^ Avg. number of literals per learnt clause." Nothing),DP (0,-17)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,54)) "-- ^ Avg. number of literals per learnt clause." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,18)) "statsNumDecisions" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:28-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:7-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:7-32 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,41)) "-- ^ Total number of decisions since beginning of solving." Nothing),DP (0,-17)),((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,7),DP (1,65)) "-- ^ Total number of decisions since beginning of solving." Nothing),DP (1,7)),((AnnComment DComment (DP (1,5),DP (1,6)) "," Nothing),DP (1,5)),((AnnComment DComment (DP (0,1),DP (0,13)) "statsNumImpl" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "Int64" Nothing),DP (0,1)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:28-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:7-27 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,54)) "-- ^ Total number of unit implications since beginning of solving." Nothing),DP (0,-12)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:23-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1-59 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,49)) "-- |  The show instance uses the wrapped string." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing,DComment (DP (0,-7),DP (0,41)) "-- |  The show instance uses the wrapped string." Nothing,DComment (DP (0,-40),DP (0,-29)) "ShowWrapped" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,11)) "WrapString" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,13)) "unwrapString" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "String" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnNewtype),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-6)) "Show" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,12)) "ShowWrapped" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:9-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-7),DP (0,1)) "instance" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:23-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:23-59 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:34-59 CN "(:)" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 34) DP (0,1) [DComment (DP (0,-6),DP (0,-1)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "show" Nothing] [((G AnnOpenC),DP (0,-3)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:36-47 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:36-57 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-9)) "=" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,13)) "unwrapString" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:52-57 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1-51 CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:10-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:10-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:15-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-51 CN "FunBind" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-51 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:38-51 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:40-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1-49 CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,5)) "Show" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,10)) "statTable" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:10-19 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:10-19 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:15-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-49 CN "FunBind" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-49 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:32-49 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:34-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:41-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1-47 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,59)) "-- | Convert statistics to a nice-to-display tabular form." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "statTable" Nothing,DComment (DP (0,-9),DP (0,49)) "-- | Convert statistics to a nice-to-display tabular form." Nothing,DComment (DP (0,-48),DP (0,-46)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,14)) "Tabular.Table" Nothing,DComment (DP (0,1),DP (0,12)) "ShowWrapped" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-47 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-47 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:23-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:23-47 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:37-47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 11) DP (0,1) [DComment (DP (0,-5),DP (0,10)) "Tabular.mkTable" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,13)-(894,59) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:884:5-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(884,5)-(894,59) CN "HsApp" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,20)-(894,59) CN "ExplicitList" NotNeeded,
  (Ann (DP (1,20)) (ColDelta 20) DP (1,20) [DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,10)) "WrapString" Nothing,DComment (DP (0,1),DP (0,17)) "\"Num. Conflicts\"" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,22)-(886,63) CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:23-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-16),DP (0,-15)) "$" Nothing),DP (0,-16)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,18)) "statsNumConflTotal" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:34-49 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:23-62 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-20)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:36-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,-20)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,21)) "\"Num. Learned Clauses\"" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:41-62 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:42-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:42-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(887,22)-(888,59) CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:23-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-22),DP (0,-21)) "$" Nothing),DP (0,-22)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,14)) "statsNumLearnt" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:34-55 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:23-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-21))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:36-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,22)) "\" --> Avg. Lits/Clause\"" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:41-58 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:42-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:42-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(889,22)-(890,62) CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:23-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-23),DP (0,-22)) "$" Nothing),DP (0,-23)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,17)) "statsAvgLearntLen" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:34-56 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:23-61 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:36-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,15)) "\"Num. Decisions\"" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:41-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:42-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:42-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(891,22)-(892,62) CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0)),((G AnnComma),DP (1,20))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:23-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-16),DP (0,-15)) "$" Nothing),DP (0,-16)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,17)) "statsNumDecisions" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (1,20),DP (1,21)) "," Nothing),DP (1,20)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:34-49 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:23-61 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-17)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-17))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:36-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,-17)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,18)) "\"Num. Propagations\"" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:41-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:42-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:42-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(893,22)-(894,57) CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:23-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((AnnComment DComment (DP (0,-19),DP (0,-18)) "$" Nothing),DP (0,-19)),((AnnComment DComment (DP (0,1),DP (0,5)) "show" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,12)) "statsNumImpl" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "]" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "]" Nothing),DP (0,1)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:34-52 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:23-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:36-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:41-56 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:42-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:42-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1-30 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,65)) "-- | Converts statistics into a tabular, human-readable summary." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,11)) "statSummary" Nothing,DComment (DP (0,-11),DP (0,53)) "-- | Converts statistics into a tabular, human-readable summary." Nothing,DComment (DP (0,-52),DP (0,-50)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,7)) "String" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:25-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 13) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "Tabular.mkTable" Nothing] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,15)-(903,43) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:899:6-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,6)-(903,43) CN "HsApp" NotNeeded,
  (Ann (DP (1,6)) (ColDelta 6) DP (1,6) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,11)-(903,43) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:899:12-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,12)-(903,42) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,12)-(903,42) CN "ExplicitList" NotNeeded,
  (Ann (DP (1,12)) (ColDelta 12) DP (1,12) [DComment (DP (0,-15),DP (0,-14)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "[" Nothing,DComment (DP (0,0),DP (0,10)) "WrapString" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,18)) "statsNumConflTotal" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,13)) "\" Conflicts\"" Nothing] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,13)-(903,41) CN "ExplicitList" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-69 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-9)) "++" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,19)) "\" Learned Clauses\"" Nothing),DP (0,1)),((G AnnComma),DP (1,13))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:27-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:27-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:32-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:33-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "++" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:33-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 52) DP (0,1) [DComment (DP (0,-16),DP (0,-12)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,14)) "statsNumLearnt" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:55-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:58-69 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 58) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-57 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-79 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(902,33) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(902,72) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(903,40) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "++" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:27-30 CN "HsLit" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 27) DP (0,1) [DComment (DP (0,0),DP (0,8)) "\" (avg \"" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:35-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:35-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:40-57 CN "HsPar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 40) DP (0,1) [DComment (DP (0,-4),DP (0,-2)) "++" Nothing,DComment (DP (0,1),DP (0,7)) "printf" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:41-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:41-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 56) DP (0,1) [DComment (DP (0,-10),DP (0,-4)) "\"%.2f\"" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,17)) "statsAvgLearntLen" Nothing] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:59-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:62-79 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:23-24 CN "HsVar" NotNeeded,
  (Ann (DP (1,23)) (ColDelta 23) DP (1,23) [DComment (DP (0,-9),DP (0,-8)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:26-33 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 35) DP (0,1) [DComment (DP (0,-8),DP (0,7)) "\" lits/clause)\"" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:38-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:38-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:38-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:45-50 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "]" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:52-72 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:53-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:53-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:23-24 CN "HsVar" NotNeeded,
  (Ann (DP (1,23)) (ColDelta 23) DP (1,23) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:26-40 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1-32 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "extractStats" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,6)) "Stats" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-26 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-32 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:17-32 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:28-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,-10)) "" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,1)) "s" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "gets" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "stats" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,14)-(922,14) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,16)-(922,14) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(908,3)-(922,14) Ref "delta-107"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:3 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:3-17 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "learntArr" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(908,3)-(922,14) CN "(:)" Ref "delta-107",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:8-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:8-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3-63 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,23)) "unsafeFreezeWatchArray" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,7)) "learnt" Nothing] [((AnnComment DComment (DP (0,-9),DP (0,-6)) "let" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,7)) "learnts" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-29 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-63 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:20-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "nub" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:24-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "." Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 28) DP (0,1) [DComment (DP (0,-6),DP (0,3)) "Fl.concat" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:33-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,22)) (ColDelta 53) DP (0,1) [DComment (DP (0,-22),DP (0,-21)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:58-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,3)-(921,42) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:7-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "[" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,4)) "map" Nothing),DP (0,1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(921,42) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,15)-(912,55) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:17-33 CN "HsPar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,-3)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "\\" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "c" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "_" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,17)-(912,43) CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,17)-(912,55) CN "ExprWithTySig" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,4)) "sort" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:18-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:18-32 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,1)) "." Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:24-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(911,9)-(912,43) CN "HsDo" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "learntArr" Nothing,DComment (DP (0,0),DP (0,1)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "i" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenS),DP (0,0)),((AnnComment DComment (DP (0,2),DP (0,3)) "]" Nothing),DP (0,2)),((AnnComment DComment (DP (1,0),DP (1,0)) "" Nothing),DP (1,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "stats" Nothing),DP (0,0)),((G AnnVbar),DP (1,2)),((G AnnCloseS),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:11-52 CN "LastStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:15-38 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:16-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "range" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:23-37 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 CN "(:)" Ref "delta-108",
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 Ref "delta-108"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:25-31 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:26 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "bounds" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:28 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:30 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:36 CN "GRHS" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,7)) "learntArr" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:40-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:41-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:41-51 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "]" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,3)) "::" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "[" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "Clause" Nothing),DP (0,0)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:11-41 CN "BindStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16-31 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:17-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:17-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:25-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:33-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48-55 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48-55 CN "HsListTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:49-54 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:913:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,7)-(921,42) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,7)-(921,42) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,2)) "Stats" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,13)-(921,42) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:9-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(914,9)-(921,42) CN "RecordCon" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,14)) "statsNumConfl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,9)) "numConfl" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:17-29 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:17-42 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,5)) "statsNumConflTotal" Nothing),DP (0,-13)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,9),DP (0,10)) "s" Nothing),DP (0,9)),((G AnnComma),DP (1,8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:33-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:33-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 35) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "numConflTotal" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:17-34 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:17-52 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-18),DP (0,-4)) "statsNumLearnt" Nothing),DP (0,-18)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "fromIntegral" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,3),DP (0,10)) "learnts" Nothing),DP (0,3)),((G AnnComma),DP (1,8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:38-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:38-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 45) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "$" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:17-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:17-62 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-14),DP (0,3)) "statsAvgLearntLen" Nothing),DP (0,-14)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:34-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:34-62 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 40) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:49-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:49-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:56-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:917:17-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(917,17)-(919,53) CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,-5)) "fromIntegral" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "foldl'" Nothing),DP (0,0)),((G AnnEqual),DP (0,1)),((G AnnComma),DP (1,8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:17-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:17-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(918,17)-(919,53) CN "OpApp" NotNeeded,
  (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "+" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "map" Nothing,DComment (DP (0,1),DP (0,7)) "length" Nothing,DComment (DP (0,1),DP (0,8)) "learnts" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:30-64 CN "HsPar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,1) [DComment (DP (0,-12),DP (0,-11)) "/" Nothing,DComment (DP (0,1),DP (0,13)) "fromIntegral" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:31-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:38-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 31) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "(" Nothing,DComment (DP (0,0),DP (0,14)) "statsNumLearnt" Nothing] [((G AnnOpenP),DP (0,-9)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:42 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:44-63 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:45-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:45-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:45-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:49-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 42) DP (0,1) [DComment (DP (0,0),DP (0,5)) "stats" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:56-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 49) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (1,10) [DComment (DP (1,8),DP (1,9)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:19-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-15))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:19-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 12) DP (0,1) [DComment (DP (0,-1),DP (0,16)) "statsNumDecisions" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:32-53 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "s" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:33-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:33-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:48-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,1) [DComment (DP (0,-12),DP (0,-11)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "numDecisions" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:17-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:17-50 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-17),DP (0,-5)) "statsNumImpl" Nothing),DP (0,-17)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "numImpl" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (1,-4),DP (1,-4)) "" Nothing),DP (1,-4)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "return" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,6)) "stats" Nothing),DP (0,1)),((G AnnComma),DP (1,8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:37-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:37-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 43) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:17-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:17-40 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:32-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:32-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3-14 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3-14 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:10-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1-74 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,22)) "unsafeFreezeWatchArray" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "WatchArray" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "ST" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Array" Nothing,DComment (DP (0,1),DP (0,4)) "Lit" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,11)) "WatchedPair" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-74 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "freeze" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-74 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:43-44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:43-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:43-74 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:48-74 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:49-53 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:49-57 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:49-73 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:55-57 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:59-73 CN "HsListTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:60-70 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:60-72 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:72 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:24-31 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1-59 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,17)) "constructResTrace" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Solution" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,9)) "FunMonad" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,16)) "ResolutionTrace" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-59 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [DComment (DP (0,-2),DP (0,1)) "sol" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-59 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [] [((AnnComment DComment (DP (0,-7),DP (0,-6)) "=" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:34-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:34-43 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:34-59 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:45-59 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:1-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:19-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 19) DP (0,1) [DComment (DP (0,-13),DP (0,-13)) "" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "get" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,23)-(960,20) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,25)-(956,36) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(930,5)-(956,36) Ref "delta-109"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:5-12 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,13)) "watchesIndices" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(930,5)-(956,36) CN "(:)" Ref "delta-109",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:10-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5-66 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,7),DP (0,9)) "<-" Nothing,DComment (DP (0,1),DP (0,6)) "range" Nothing,DComment (DP (0,1),DP (0,2)) "`" Nothing,DComment (DP (0,0),DP (0,5)) "liftM" Nothing,DComment (DP (0,0),DP (0,1)) "`" Nothing,DComment (DP (0,1),DP (0,7)) "liftST" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "getBounds" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "watches" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-14),DP (0,-1)) "origClauseMap" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:23-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:23-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:29-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:37-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:37-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:44-66 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:45-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:45-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:55-65 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:56-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:56-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:932:5-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(932,5)-(941,28) CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((AnnComment DComment (DP (0,-9),DP (0,-4)) "foldM" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,7)) "origMap" Nothing),DP (0,0)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:9-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,9)-(939,33) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,9)-(940,23) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,9)-(941,28) CN "HsApp" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,4),DP (0,5)) "i" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,15)-(939,33) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32) CN "(:)" Ref "delta-110",
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32) CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32) Ref "delta-110"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,0),DP (0,2)) "<-" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:17-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:25 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,7)) "clauses" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,30)-(939,32) CN "GRHS" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,0),DP (0,6)) "liftST" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,30)-(939,32) CN "HsDo" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((G AnnDo),DP (0,-5)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(934,18)-(939,32) Ref "delta-111"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:18-24 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:18-60 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-7),DP (0,-1)) "return" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(934,18)-(939,32) CN "(:)" Ref "delta-111",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,4),DP (0,5)) "$" Nothing,DComment (DP (0,1),DP (0,10)) "readArray" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "watches" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "i" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:29-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:29-60 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:38-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:38-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:38-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:48-58 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:49-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:49-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:935:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(935,18)-(939,32) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(935,18)-(939,32) CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:935:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-4),DP (0,1)) "foldr" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:20-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,20)-(937,62) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,20)-(938,32) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,20)-(939,32) CN "HsApp" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "clause" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "origMap" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,26)-(937,62) CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61) CN "(:)" Ref "delta-112",
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61) CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61) Ref "delta-112"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-2),DP (0,5)) "origMap" Nothing),DP (0,-2)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:28-48 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:29 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,9)) "Map.insert" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:32-37 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:40-47 CN "VarPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,8)) "clauseId" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:50-56 CN "VarPat" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 23) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "clause" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-61 CN "GRHS" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) ")" Nothing,DComment (DP (1,-1),DP (1,6)) "origMap" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:28-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:39-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:48-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:55-61 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:938:26-32 CN "HsVar" NotNeeded,
  (Ann (DP (1,8)) (ColDelta 8) DP (1,8) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:939:26-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 8) DP (1,8) [DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-3),DP (1,-3)) "" Nothing,DComment (DP (0,0),DP (0,9)) "Map.empty" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:940:15-23 CN "HsVar" NotNeeded,
  (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:941:15-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 10) DP (1,10) [DComment (DP (0,-9),DP (0,5)) "watchesIndices" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "let" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,15)) "singleClauseMap" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,5)-(949,57) CN "LetStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-4),DP (0,-3)) "=" Nothing] [((G AnnLet),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:9-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-11),DP (0,-6)) "foldr" Nothing),DP (0,-11)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "\\" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,6)) "clause" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(949,57) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,25)-(945,65) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:13-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(943,13)-(944,27) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(943,13)-(945,65) CN "HsApp" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,2),DP (0,3)) "," Nothing,DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,11)) "Map.insert" Nothing,DComment (DP (0,1),DP (0,9)) "clauseId" Nothing,DComment (DP (0,1),DP (0,7)) "clause" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:19-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 CN "(:)" Ref "delta-113",
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "Map.empty" Nothing),DP (0,-1)),((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 Ref "delta-113"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:21-38 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:22-27 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:30-37 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:40 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-72 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:45-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:56-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:65-70 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:944:19-27 CN "HsVar" NotNeeded,
  (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:19-65 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (1,10) [DComment (DP (0,-9),DP (0,-8)) "(" Nothing,DComment (DP (0,0),DP (0,23)) "resTraceOriginalSingles" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,0),DP (1,0)) "" Nothing,DComment (DP (0,0),DP (0,7)) "anteMap" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-60 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-64 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:46-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:946:9-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,9)-(949,57) CN "FunBind" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,9)-(949,57) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,2)) "foldr" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,17)-(949,57) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:13-82 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(947,13)-(948,27) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(947,13)-(949,57) CN "HsApp" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "l" Nothing,DComment (DP (0,1),DP (0,8)) "anteMap" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,11)) "Map.insert" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "getAnteId" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "var" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,8)) "anteMap" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:19-82 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 CN "(:)" Ref "delta-114",
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,8)) "Map.empty" Nothing),DP (0,-1)),((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 Ref "delta-114"),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:23-29 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-81 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:34-81 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:45-51 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:46-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:46-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:53-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:54-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:54-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:54-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:66-72 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:67-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:67-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:71 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:75-81 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:948:19-27 CN "HsVar" NotNeeded,
  (Ann (DP (1,10)) (ColDelta 10) DP (1,10) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:19-57 CN "HsPar" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 10) DP (1,10) [DComment (DP (0,-9),DP (0,-8)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "litAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "finalAssignment" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,4)) "sol" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,6)) "return" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-50 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:36-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:54-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:950:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(950,5)-(956,36) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(950,5)-(956,36) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(953,29) CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(956,36) CN "RecordUpd" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,0),DP (0,19)) "initResolutionTrace" Nothing] [((AnnComment DComment (DP (0,7),DP (0,8)) "." Nothing),DP (0,7)),((AnnComment DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "$" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "s" Nothing),DP (0,1)),((G AnnOpenC),DP (1,2)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:951:8-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,8)-(952,46) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,8)-(953,28) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:8-46 CN "HsPar" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-19),DP (0,-18)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "head" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "resTrace" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "resolutionTrace" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:9-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:14-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 9) DP (0,1) [DComment (DP (0,-4),DP (0,11)) "finalAssignment" Nothing] [((G AnnOpenP),DP (0,-10)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-40 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:26-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,3)) "sol" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,12)) (ColDelta 37) DP (0,1) [DComment (DP (0,-13),DP (0,-12)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:8-28 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (1,3) [DComment (DP (1,2),DP (1,3)) "{" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:9-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:9-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:25-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 20) DP (0,1) [DComment (DP (0,-15),DP (0,-3)) "traceSources" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "resSourceMap" Nothing] [((G AnnVal),DP (0,-11))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:9-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:9-57 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,8)) "traceOriginalClauses" Nothing),DP (0,-12)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,15)) "singleClauseMap" Nothing),DP (0,0)),((G AnnComma),DP (1,2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-57 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 32) DP (0,1) [DComment (DP (0,-6),DP (0,-5)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "origClauseMap" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:39-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 50) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "`" Nothing,DComment (DP (0,0),DP (0,9)) "Map.union" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 52) DP (0,1) [DComment (DP (0,0),DP (0,1)) "`" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:9-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:9-72 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-20),DP (0,-4)) "traceAntecedents" Nothing),DP (0,-20)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "anteMap" Nothing),DP (0,1)),((G AnnEqual),DP (0,1)),((AnnComment DComment (DP (1,-2),DP (1,-2)) "" Nothing),DP (1,-2)),((AnnComment DComment (DP (0,0),DP (0,5)) "where" Nothing),DP (0,0)),((G AnnComma),DP (1,2))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:32-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:32-72 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:46-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 41) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "}" Nothing] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:58-72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:9-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:9-34 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:28-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,9)) "getAnteId" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,4)) "snd" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,-13)) (ColDelta 10) DP (0,1) [DComment (DP (0,-5),DP (0,14)) "Map.findWithDefault" Nothing] [((G AnnVal),DP (0,-13))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,19)-(960,20) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:21-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,21)-(960,20) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:9-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:9-77 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(959,9)-(960,9) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(959,9)-(960,20) CN "HsApp" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (1,4) [DComment (DP (0,3),DP (0,4)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,30)) "\"no reason for assigned var \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,5)) "show" Nothing,DComment (DP (0,1),DP (0,2)) "v" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:29-77 CN "HsPar" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 24) DP (0,1) [DComment (DP (0,-19),DP (0,-18)) "v" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "reason" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-76 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:38-66 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:68-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:71-74 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:71-76 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:76 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:9 CN "HsVar" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 4) DP (1,4) [DComment (DP (1,-4),DP (1,-4)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:11-20 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:12-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:12-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-146,0)) (ColDelta -5) DP (-146,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-817,0)) (ColDelta 0) DP (-817,0) [] []))]
==============
([((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:1:1,
    AnnModule),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:56:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:1:1,
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:75:5-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(58,9)-(73,9),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:73:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(58,9)-(73,9),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:58:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:59:11-15,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:60:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:60:11-16,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-22,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-22,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:63:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-22,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:11-22,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:61:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:63:11-16,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-25,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-25,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-25,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:11-25,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:64:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-26,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:67:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-26,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:11-26,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:66:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:67:11-23,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-19,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-19,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-19,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:11-19,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:69:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-25,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-25,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:71:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-25,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:11-25,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:70:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:71:11-19,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:72:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:1-29,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:1-29,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:21-29,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:21-29,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:23-27,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:88:24-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:1-34,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:1-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:25-34,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:25-34,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:89:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:1-61,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:1-61,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:28-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:28-61,
    AnnHiding),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:28-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:28-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:37-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:38-40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:44-48,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:90:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:1-43,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:1-43,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:29-43,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:29-43,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-41,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:39-40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:31-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:91:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:1-30,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:92:1-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:1-55,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:1-55,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:33-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:33-55,
    AnnHiding),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:33-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:33-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:42-46,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:93:43-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:1-20,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:94:1-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:1-25,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:95:1-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:1-41,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:1-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:22-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:22-41,
    AnnHiding),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:22-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:22-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:96:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:1-24,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:1-24,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:16-24,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:16-24,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:97:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:1-44,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:1-44,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:17-44,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:17-44,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:19-21,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:24-28,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:31-36,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:98:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:1-17,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:99:1-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:1-28,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:1-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:16-28,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:16-28,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:100:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:1-17,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:101:1-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:1-27,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:1-27,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:21-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:21-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:102:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:1-19,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:104:1-19,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:1-19,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:105:1-19,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:1-68,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:1-68,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:25-68,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:25-68,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-45,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-45,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:43-44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:27-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:106:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:1-19,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:107:1-19,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:1-28,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:108:1-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:1-74,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:1-74,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:16-74,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:74]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:16-74,
    AnnHiding),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:16-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:16-74,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:25-27,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:30-38,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:41-44,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:47-51,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:54-58,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:61-63,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:109:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:1-47,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:1-47,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:25-47,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:25-47,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-45,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:43-44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:27-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:110:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:1-28,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:1-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:19-28,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:19-28,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:111:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:32-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:1-36,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:112:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:28-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:1-34,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:113:31-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:1-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:114:30-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:32-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:1-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:115:35-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:1-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:116:30-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:1-48,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:117:39-48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40,
    AnnAs),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40,
    AnnImport),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40,
    AnnQualified),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:8-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:1-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:118:34-40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1-72,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:1-72,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:10-72,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:26-72,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:30-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:33-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:33-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:34-41,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:44-48,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:126:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:127:1-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:145:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(131,5)-(132,9),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(131,5)-(144,26),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:132:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:12-46,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:12-46,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:131:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,9)-(137,80),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:80]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,9)-(137,80),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(134,10)-(137,79),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:13-76,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:13-76,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:34-76,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:55-74,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:74]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:55-74,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:56-58,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:63-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:63-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:134:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-24,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-24,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-58,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:13-58,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:14,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:135:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:24-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(136,13)-(137,79),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:24-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:44-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:44-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:136:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:29-79,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:137:62-64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(138,5)-(144,26),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(138,5)-(144,26),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:9-38,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:9-38,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:15-38,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:15-38,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:18-36,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:41-47,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:41-47,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:46-47,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:46-47,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:138:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:9-27,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:9-27,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:30-47,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:30-47,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:139:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:9-25,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:9-25,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:28-37,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:28-37,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:36-37,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:36-37,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:40-56,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:40-56,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:140:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:9-85,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:9-85,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:17-85,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:85]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:17-85,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:26-37,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:26-37,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:39-55,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:39-55,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:57-72,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:57-72,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:70]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:74-84,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:141:82]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:9-26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:9-26,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:29-48,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:29-48,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:142:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:9-66,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:9-66,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:52-53,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:52-53,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:55-56,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:55-56,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:143:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:9-24,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:144:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:146:5-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5-67,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:5-67,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:21-67,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:49-67,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:49-67,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:50-60,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:148:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,5)-(169,27),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,5)-(169,27),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:5-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,22)-(169,27),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:149:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:7-71,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:7-71,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:23-71,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:44-63,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:44-63,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:45-47,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:52-62,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:52-62,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:150:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-46,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:7-46,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:16-46,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22-46,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:22-46,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:25-44,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:151:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7-81,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:7-81,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:25-81,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:45-78,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:78]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:45-78,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:46-62,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:48-62,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:48-62,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:49-61,
    AnnMinus),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:51-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:51-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:67-77,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:77]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:67-77,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:80-81,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:81]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:80-81,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:152:80]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-50,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:7-50,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:16-50,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22-50,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:22-50,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:25-48,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:153:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7-81,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:7-81,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:25-81,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:45-78,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:78]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:45-78,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:46-62,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:48-62,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:48-62,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:49-61,
    AnnMinus),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:51-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:51-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:67-77,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:77]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:67-77,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:80-81,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:81]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:80-81,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:154:80]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-49,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:7-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:16-49,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22-49,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:22-49,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:25-47,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:155:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7-82,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:7-82,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:26-82,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:47-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:47-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:48-50,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:55-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:55-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:156:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-61,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:7-61,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:16-61,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22-61,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:22-61,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:25-59,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:157:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(161,70),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:70]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(161,70),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(160,7)-(169,27),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:8-19,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:8,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:8-19,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:160:9-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:8-69,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:8-69,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:9-68,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:44-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:24-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:24-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:48-68,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:51-52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:61-68,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:61-68,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:62,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(161,74)-(169,27),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:161:74-75]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(162,11)-(167,73),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:17-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:17-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:162:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,13)-(167,73),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,13)-(167,73),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,14)-(167,72),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,20)-(167,72),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:23-40,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:163:23-40,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23-66,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:23-66,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:53-60,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:53-60,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:54,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:164:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:28-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:28-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:165:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:25-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:25-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:26-71,
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:29-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:60-71,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:71]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:60-71,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:61-63,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66-67,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:167:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11-41,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:11-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:23-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:23-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:168:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:18-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:18-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:19,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:169:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1-57,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:1-57,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:11-57,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:18-57,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:18-57,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:19-26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:29-33,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:173:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:174:1-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1-54,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:1-54,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:19-54,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:179:33-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:1-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,1)-(206,38),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:193:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(180,29)-(192,25),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:180:29-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:5-32,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:181:5-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5-56,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:5-56,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:25-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:25-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:26-55,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:182:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,5)-(184,73),
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,5)-(184,73),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:185:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(183,24)-(184,73),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:39-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:32-37,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:32-37,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:33-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:33-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:33-36,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:39-45,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:39,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:39-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:183:40-44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:21-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:21-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-39,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-39,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:22-72,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:41-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:23-38,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:45-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:45-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:46-71,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:184:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(185,5)-(192,25),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:185:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(185,5)-(192,25),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:185:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,7)-(191,35),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,14)-(191,35),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,17)-(191,35),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(186,20)-(190,38),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:191:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:25-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:25-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:26-55,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:186:38-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,22)-(190,38),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,22)-(190,38),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,23)-(190,37),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:26-47,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:33-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:187:26-47,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:190:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:15-25,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:192:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,5)-(206,38),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:5-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,20)-(206,38),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:194:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-70,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:7-70,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:16-70,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-70,
    AnnIn),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:39-40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-70,
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:22-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-37,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:42-70,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:70]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:42-70,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:45-68,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:53-68,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:53-68,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:56-67,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:195:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,7)-(200,30),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,7)-(200,30),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(197,31)-(200,30),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:197:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,9)-(200,30),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:200:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,9)-(200,30),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,12)-(200,28),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,25)-(200,28),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:200:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,25)-(200,28),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,28)-(199,84),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,52)-(199,84),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:84]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,52)-(199,84),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:198:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(198,53)-(199,83),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:67-83,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:83]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:67-83,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:199:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-29,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-69,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:7-69,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:45-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:34-69,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:201:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7-74,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:7-74,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:21-74,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:57-63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:31-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:31-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:32-54,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-50,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:38-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:42,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:44-50,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:44-50,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:57-63,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:57,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:57-63,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:202:58-62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:7-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:32-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:32-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:203:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-52,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:205:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:7-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:16-52,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22-52,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:22-52,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:25-31,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:25-31,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:30-31,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:30-31,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:34-50,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:204:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:205:7-15,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:7-38,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:206:25-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1-81,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:1-81,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:19-81,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:28-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:42-81,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:81]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:42-81,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:43-50,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:53-57,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:208:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:1-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,1)-(215,42),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(209,20)-(215,42),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:209:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:5-25,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:210:5-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:211:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(211,5)-(215,42),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:211:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(211,5)-(215,42),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:211:12-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:7-43,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:15-43,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:25-43,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:25-43,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:29-33,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:212:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,15)-(215,42),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(213,18)-(215,42),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:213:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:11-41,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:214:11-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:18-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:18-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:19,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:22-26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:215:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1-29,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:227:1-29,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:1-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,1)-(231,50),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,17)-(231,50),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,17)-(231,50),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:23-41,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:23-41,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:228:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:25-47,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:25-47,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:229:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:25-45,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:25-45,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:230:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:25-48,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:231:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1-27,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:1-27,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:18-27,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:238:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:1-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(239,1)-(240,35),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:5-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:19-54,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:19-54,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:21-53,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:43-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:43-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:239:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-35,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:240:11-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1-42,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:12-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:1-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:15-42,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:41-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:41-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:246:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,1)-(260,39),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,18)-(260,39),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:247:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:3-31,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:5-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:3-31,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:8-31,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:16-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:16-22,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:16,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:16-22,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:250:17-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3-10,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:5-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:251:3-10,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:3-29,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,3)-(260,39),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:18-29,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:18-29,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:18-29,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,33)-(260,39),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,39)-(260,39),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:44-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:44-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:45-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:51-52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:48,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,59)-(260,39),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:252:59-60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(254,75),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:5-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(253,5)-(254,75),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:9-21,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:15-21,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:15-21,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:16-20,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:19,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:253:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-75,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-75,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:9-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:26-75,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:75]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:26-75,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:27-74,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:28-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:28-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:29,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:32,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43-74,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:74]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43-74,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:44,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:47-68,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:54-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:54-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:254:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:5-36,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:17-26,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:17-26,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:257:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:16-25,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:16-25,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:27-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:27-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:38-39,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:38-39,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:260:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1-74,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:1-74,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:14-74,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:28-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:42-74,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:74]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:42-74,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:50-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:50-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:268:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:1-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:285:5-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,15)-(284,41),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:269:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:5-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:270:23-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5-27,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:271:5-27,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:5-71,
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:5-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:5-71,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-71,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:9-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:20-71,
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:55-58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:20-71,
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:20-71,
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:272:43-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5-23,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:273:5-23,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5-30,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:274:5-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5-42,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:5-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:19-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:19-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:20-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:275:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5-63,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:5-63,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:14-63,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:29-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:29-35,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:29,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:29-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:30-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:44-63,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:44-63,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:276:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5-16,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:277:5-16,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:278:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,28),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:278:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,60),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:280:30-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,20),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,43),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:282:30-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,27),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,41),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:285:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,41),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:284:30-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-71,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-71,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:7-71,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:33-71,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:47-53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:34-44,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:47-53,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:47,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:47-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:287:48-52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,7)-(292,40),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,7)-(292,40),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:7-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:19-29,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:19-29,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(288,33)-(292,40),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:288:33-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:11-19,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:289:11-19,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:290:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(290,11)-(292,40),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:290:11-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(290,11)-(292,40),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:290:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:13-73,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:21-73,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:24-73,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:40-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:25-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:40-46,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:40,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:40-46,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:41-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:55-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:55-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:291:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:21-40,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-36,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:24-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:292:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1-73,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:1-73,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:21-73,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:51-52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:27-49,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:27-49,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:28-30,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:33-38,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:65-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:65-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:298:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:1-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,1)-(303,19),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:302:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(299,31)-(301,18),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:299:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-47,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:301:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:5-47,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:22-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:300:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-19,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:5-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:9-15,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:9-15,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:10,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:12,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:303:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1-51,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:1-51,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:24-51,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:50-51,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:50-51,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:307:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1-34,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:32-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1-34,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:308:1-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:1-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,1)-(314,14),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,26)-(314,14),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,40)-(314,14),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:309:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:5-12,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:310:5-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(313,60),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(312,5)-(314,14),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:12-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:12-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-25,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-25,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:13-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:29-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:14-24,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32-50,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32-50,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-44,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:33-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:312:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:13-60,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:13-60,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-29,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-29,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:14-59,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:33-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:15-28,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36-57,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36-57,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-48,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:37-56,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:313:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:13-14,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:13-14,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:314:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1-16,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:320:1-16,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:1-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:11-12,
    AnnMinus),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:321:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,1)-(335,55),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:333:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,1)-(335,55),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(333,11)-(335,55),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:334:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(334,14)-(335,55),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:25-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:25-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:32-54,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:32-54,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:33-35,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:38-43,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:335:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:350:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,14)-(349,20),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:336:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:5-22,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:5-22,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:26-42,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:29-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:337:26-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5-38,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:5-38,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:16-38,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:338:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5-38,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:5-38,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:16-38,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:339:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-55,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:5-55,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:14-55,
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:17-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:33-34,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:33-34,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:54-55,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:54-55,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:340:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:5-32,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:5-32,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,5)-(349,20),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6-17,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:6-17,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:7-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:19-31,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(344,36)-(349,20),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:344:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55),
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:28-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55),
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:7-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,7)-(346,55),
    AnnValStr),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:15-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:38-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:38-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,54)-(346,55),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(345,54)-(346,55),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:345:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:9-54,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:9-54,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:10-53,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:19-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:45-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:45-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:346:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55),
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:28-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55),
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:7-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:349:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,7)-(348,55),
    AnnValStr),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:15-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:38-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:38-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,54)-(348,55),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(347,54)-(348,55),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:347:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:9-54,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:9-54,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:10-53,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:19-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:45-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:45-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:348:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:5-32,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:30-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:5-32,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:5-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:357:5-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-34,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-34,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:5-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21-22,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21-22,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:33-34,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:33-34,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:358:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,5)-(380,45),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,5)-(380,45),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:5-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:25-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:25-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-49,
    AnnAt),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:26-63,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:32-49,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:32-49,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:33-40,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:43,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,68)-(380,45),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:359:68-69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:7-30,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:360:7-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,7)-(362,57),
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,7)-(362,57),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,14)-(362,57),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(361,23)-(362,57),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-31,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-31,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-53,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:33-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:26-53,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:27,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:361:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:26-57,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:35-57,
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:52-55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:35-57,
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:35-57,
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:45-48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:38-43,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:362:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:366:8-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:8-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:10-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:19-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:19-31,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:19,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:19-31,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:364:20-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:19-26,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:19-26,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:365:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,10)-(380,45),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:10-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,10)-(380,45),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:60-61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,20)-(368,56),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,20)-(368,56),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,21)-(368,55),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:29-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-44,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:41-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:27-56,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:367:46-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(367,27)-(368,55),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:34-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:34-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:35-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:37-50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:37-50,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:37,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:37-50,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:368:38-49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,12)-(371,39),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,20)-(371,39),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,23)-(371,39),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:369:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-56,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:14-56,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:43-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:43-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:44,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:370:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:20-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:20-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:29-39,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:29-39,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:371:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,20)-(380,45),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,23)-(380,45),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:373:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:374:14-23,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:14-29,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:20-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:20-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:375:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14-65,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:14-65,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:40-49,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:40-49,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:51-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:51-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:57-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:57-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:58,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:376:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,14)-(380,45),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:19-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:19-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,40)-(380,45),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:377:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:17-40,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:379:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:23-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:23-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:378:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:379:17-26,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:28-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:28-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:29-36,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:39,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:380:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1-66,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:5-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:1-66,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:8-66,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:36-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:36-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:43-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:43-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:44-46,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:49-54,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:384:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:1-3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,1)-(390,49),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(385,9)-(390,49),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:385:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:3-17,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:5-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:386:3-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:388:4-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:3-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(387,3)-(390,49),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:387:17-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(388,9)-(390,49),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:388:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:6-17,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:389:6-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:6-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:17-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:27-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:27-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:35-49,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:35-49,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:36-48,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:390:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1-52,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:1-52,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:11-52,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:26-52,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:402:41-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1-21,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:19-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1-21,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:403:1-21,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:404:1-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1-45,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:1-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:17-45,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:29-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:32-45,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:406:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1-27,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:25-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1-27,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:407:1-27,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:1-63,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:25-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:25-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26-39,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:26-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:27-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:44-63,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:44-63,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-58,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:45-62,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:408:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1-68,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:1-68,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:11-68,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:28-68,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:32-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:46-68,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:46-68,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:53-67,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:53-67,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:412:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,1)-(420,17),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,14)-(420,17),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:413:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:3-22,
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:3-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:3-22,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-22,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:14-22,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:14-22,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:414:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-13,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-13,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-20,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:3-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:417:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:4-12,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:4-12,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:7-11,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:415:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:417:3-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:3-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:12-32,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18-32,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:18-32,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:21-30,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:26-30,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:418:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:419:3-22,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:3-17,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:420:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,1)-(432,46),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:428:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,1)-(432,46),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(428,13)-(432,46),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:13-35,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:13-35,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(429,13)-(432,46),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:14-16,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:19-24,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:429:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:24-46,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:24-46,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:31-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:31-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:432:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:1-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,1)-(463,19),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:12-30,
    AnnAt),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:14-30,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:14-30,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:15,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:18-26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,34)-(463,19),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:38-40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,42)-(463,19),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:71-72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:43-69,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:43-69,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:44-68,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:44-68,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:47-51,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:47-51,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:54-67,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,74)-(463,19),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:433:74-75]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:5-27,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:434:5-27,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:5-15,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:440:19-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:5-32,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,5)-(442,70),
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,5)-(442,70),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(441,37)-(442,70),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:37-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:40-47,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:42-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:441:40-47,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:40-70,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:62-70,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:70]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:62-70,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:442:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:5-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:5-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(443,5)-(445,36),
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:38-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(443,5)-(445,36),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:6-13,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:16-25,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:443:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(444,9)-(445,36),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:12-35,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:444:12-35,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:445:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5-12,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:446:5-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(447,5)-(449,82),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:5-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(447,5)-(449,82),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:9-49,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:30-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:447:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:448:9-40,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-82,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-82,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:9-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:32-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:32-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:33-71,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:38-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-60,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:41-71,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:50,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:52-60,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:52-60,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:74-82,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:82]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:74-82,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:449:74]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-40,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:5-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:30-40,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:30-40,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:450:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5-28,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:451:5-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(453,33),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(454,40),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,11),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,34),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(452,5)-(455,34),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:12-35,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:12-35,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:13-34,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:452:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:13-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:13-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:18-32,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:18-32,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:453:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:13-40,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:13-40,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:14-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:23-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:23-35,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:23,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:23-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:454:24-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:15-34,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21-34,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:21-34,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:24-32,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:455:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5-28,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:456:5-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:5-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:19-40,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:19-40,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:20-27,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:460:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:5-66,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:15-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:15-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:38-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:38-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:44-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:44-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:45-52,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:461:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:5-19,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:463:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1-46,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:1-46,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20,
    AnnDarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12-20,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:25-46,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:30-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:27-28,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:27-28,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:33-46,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:45-46,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:45-46,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:469:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,1)-(473,41),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(470,21)-(473,41),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:470:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:471:3-6,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3-24,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:472:3-24,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:3-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:473:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,1)-(480,45),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,1)-(480,45),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,12)-(480,45),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,27)-(480,45),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:44-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:47-51,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:47-51,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,47)-(480,45),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:53-54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:56-78,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:78]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:56-78,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(479,56)-(480,45),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:57-59,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:62-67,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:479:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:23-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:23-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:24-29,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:32-39,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:480:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:501:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:28-48,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:28-48,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:29-32,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:35-41,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,52)-(500,12),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:482:52-53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:5-13,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:483:5-13,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5-35,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:5-35,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:10-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:497:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5-55,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:5-55,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:500:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:24-43,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:24-43,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:25-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:45-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:45-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:498:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,5)-(505,53),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,5)-(505,53),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,20)-(505,53),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,37)-(505,53),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:504:41-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(504,44)-(505,53),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:31-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:31-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:32-37,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:40-47,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:505:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:5-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,5)-(563,56),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,38)-(563,56),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:506:38-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:7-45,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:7-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:26-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:44-45,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:44-45,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:507:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,7)-(509,62),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:7-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,7)-(509,62),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(508,11)-(509,62),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:508:11-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:15-62,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:52-62,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:52-62,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:509:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7-59,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:7-59,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:19-59,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:40-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:40-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:41-43,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:511:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7-46,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:7-46,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:19-46,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:37-46,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:37-46,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:38-45,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:512:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7-34,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:7-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:13-34,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:514:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7-42,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:7-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:23-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:41-42,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:41-42,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:515:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7-41,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:7-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:23-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:516:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,7)-(522,47),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:7-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,7)-(522,47),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,11)-(522,47),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:11-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,23)-(522,47),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:518:23-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,23)-(522,47),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(517,23)-(522,47),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:36-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:26-34,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:28-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:41-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:41-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:42-48,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:517:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,25)-(522,47),
    AnnIn),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,25)-(522,47),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:25-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:29-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:29-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(519,29)-(521,49),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:30,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:519:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:53-78,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:78]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:53-78,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:520:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:33-39,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:33-39,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:521:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:28-47,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:28-47,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29-41,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:29-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:31-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:31-39,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:31,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:31-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:522:32-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:7-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:7-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(525,7)-(554,54),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(525,7)-(554,54),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8-16,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:8-16,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:9-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:18-60,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:18-60,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:25-29,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:25-29,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:31-59,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:31-59,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:32-58,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:525:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,9)-(554,54),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:12-37,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:12-37,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:17-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:526:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:12-44,
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:12-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:12-44,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-32,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-32,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:16-44,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:17-24,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:527:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:528:12-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:529:12-33,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:12-38,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:27-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:27-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:28-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:530:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:12-34,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,12)-(543,33),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,12)-(543,33),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,38)-(543,33),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:41-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(534,44)-(543,33),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:534:44-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:14-47,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:14-47,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:41-47,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:41-47,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:535:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(536,14)-(543,33),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:19-29,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:19-29,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:536:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(537,16)-(543,33),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:19-49,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:38-44,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:38-44,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:537:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:20-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(538,19)-(543,33),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:20-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:22-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:538:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:46-50,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:46-50,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:539:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(540,25)-(543,33),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:20-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(540,25)-(543,33),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(540,25)-(543,33),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:20-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:28-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:540:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(541,25)-(542,68),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:28-56,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:53-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:53-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:541:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:28-68,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:59-68,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:59-68,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:542:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:32-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:32-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:543:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(546,41),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(546,41),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(550,22),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,12)-(550,22),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:13-21,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:13,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:13-21,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:14-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,23)-(546,40),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,23)-(546,40),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,24)-(546,33),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:24-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(545,24)-(546,39),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:31-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:31-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-65,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:45-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:32-71,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:545:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(546,45)-(550,22),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:546:45-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:14-41,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:14-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:19-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:24-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:24-30,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:24,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:24-30,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:547:25-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-37,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:550:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:14-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:549:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:12-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:42-54,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:42-54,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:43-53,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:46-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:49-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:554:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7-32,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:7-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:12-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:555:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-51,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:7-51,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:41-51,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:41-51,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:556:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-16,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:7-20,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:557:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7-52,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:7-52,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:22-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:558:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7-52,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:7-52,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:22-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:559:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7-36,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:560:7-36,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:561:7-58,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:562:7-35,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:14-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:14-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:15-25,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:28-42,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:563:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:566:5-31,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:5-31,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:16-31,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:24,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:25-31,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:25-31,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:567:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,5)-(573,81),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,5)-(573,81),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:5-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(568,41)-(573,81),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:568:41-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:7-42,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:7-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:21-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:569:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,7)-(573,81),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(570,36)-(573,81),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:570:42-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,9)-(573,81),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:81]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,9)-(573,81),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:571:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(571,11)-(573,80),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:571:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,15)-(573,80),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:80]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,15)-(573,80),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:572:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(572,18)-(573,79),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:572:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:42-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:42-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:63-79,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:79]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:63-79,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:573:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1-41,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:1-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:12-41,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:40-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:40-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:580:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1-22,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:20-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1-22,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:581:1-22,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,1)-(592,57),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(582,13)-(592,57),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:582:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:5-21,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:583:5-21,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5-21,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:584:5-21,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:585:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(585,5)-(592,57),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:585:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(585,5)-(592,57),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:585:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-8,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-8,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:7-48,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:16-48,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:586:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:7-14,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:7-14,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:8-13,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,16)-(592,57),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(587,19)-(592,57),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:587:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-20,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-33,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:11-33,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:22-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:22-31,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:22,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:22-31,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:588:23-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-49,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:11-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:35-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:35-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:589:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,11)-(592,57),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(590,20)-(592,57),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:590:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(591,13)-(592,57),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(591,13)-(592,57),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:16-30,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:16-30,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:591:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:16-55,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:38-44,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:38-44,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:46-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:46-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:592:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1-28,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:6-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:1-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:9-28,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:27-28,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:27-28,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:595:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1-19,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:17-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1-19,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:596:1-19,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:1-33,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:24-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:24-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:597:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1-16,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:600:1-16,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:601:1-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1-41,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:1-41,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:10-41,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:21-41,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:613:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1-20,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:18-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1-20,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:614:1-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:1-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(615,1)-(616,53),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:5-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:21-31,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:21-31,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:22-30,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:22-30,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:25-29,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:615:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-53,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:11-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:21-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:21-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:22-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:616:30-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1-26,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:1-26,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:25-26,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:25-26,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:626:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:1-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,1)-(640,50),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(627,13)-(640,50),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:627:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:5-33,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:5-33,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:10-33,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:18-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:18-24,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:18,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:18-24,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:628:19-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5-23,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:629:5-23,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,5)-(633,48),
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,5)-(633,48),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:16-41,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(630,16)-(633,48),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:43-49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:25-41,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:25-41,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:26-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:43-49,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:43,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:43-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:630:44-48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:30-45,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:30-45,
    AnnDotdot),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:39-40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:30-45,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:33-37,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:33-37,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:34-36,
    AnnMinus),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:631:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,28)-(633,48),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,28)-(633,48),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,29)-(633,47),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:32-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(632,35)-(633,47),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:38-60,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:42-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:38-60,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:64-83,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:633:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:82-83,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:83]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:82-83,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:632:82]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,5)-(635,74),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:5-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,5)-(635,74),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,9)-(635,74),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:9-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(634,20)-(635,74),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:25-48,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:25-48,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:26-47,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:41-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:41-45,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:41,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:41-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:634:42-44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:29-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:29-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:40-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:40-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:41-64,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:50-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:50-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:51-63,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:60-61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:52-58,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:52-58,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:53,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:55,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:635:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(636,5)-(640,50),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:636:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,14)-(640,50),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,14)-(640,50),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,15)-(640,49),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:17-29,
    AnnAt),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:21-29,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:21-29,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:22,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:25,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(637,34)-(640,49),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:637:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-22,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-22,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-37,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:17-37,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:18,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:638:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-49,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:17-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:44-49,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:44-49,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:639:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:17-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:44-49,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:49]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:44-49,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:640:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,1)-(656,30),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:653:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,1)-(656,30),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(653,16)-(656,30),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:16-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:16-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(654,16)-(656,30),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:655:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:17-22,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:654:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(655,16)-(656,30),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:656:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1-26,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:24-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1-26,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:657:1-26,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:1-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,1)-(678,25),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:15-22,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:15-22,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:16,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(658,35)-(678,25),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:658:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:659:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(659,5)-(678,25),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:659:12-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-8,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-8,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:7-23,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:10-23,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:660:10-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:7-9,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:7-9,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,7)-(668,29),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,11)-(668,29),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(661,14)-(668,29),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:17-53,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:17-53,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:39-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:39-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:45-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:45-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:46,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:661:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17-38,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:662:17-38,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-54,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:17-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:46-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:46-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:663:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,17)-(667,84),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:668:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:22-35,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:22-35,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,37)-(667,84),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:84]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(664,37)-(667,84),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:664:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,19)-(667,83),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(665,48)-(667,83),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:665:54-55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,23)-(667,83),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:83]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,23)-(667,83),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,25)-(667,82),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,41)-(667,82),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:82]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,41)-(667,82),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(666,44)-(667,81),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:666:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-54,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-54,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:48-81,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:49,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:667:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,9)-(678,25),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,12)-(678,25),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:12-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(672,66),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:15-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(669,15)-(672,66),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:19-56,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:23-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:23-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:24-38,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:31-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:31-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:32-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:48-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:48-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:49-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:669:51-52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(670,19)-(672,66),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:19-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:27-39,
    AnnAt),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:33-39,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:33-39,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:34,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:670:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:23-60,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:23-60,
    AnnVbar),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:29-48,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:29-48,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:30-47,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:38-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:31-36,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:31-36,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:32,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:41-47,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:671:44-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:23-66,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:23-66,
    AnnVbar),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:57-66,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:672:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15-38,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:15-38,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:20-38,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:673:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(674,15)-(676,73),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:15-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(674,15)-(676,73),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:19-37,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:27-37,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:27-37,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:28,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:31,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:674:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,19)-(676,73),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,19)-(676,73),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:19-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(675,31)-(676,73),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-73,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:34-73,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:50-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:50-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:66-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:66-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:675:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:34-73,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:50-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:50-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:66-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:66-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:676:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-28,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:19-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-36,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-77,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:678:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:15-77,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:40-77,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:77]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:40-77,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:41-76,
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:65-68]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:41-76,
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:41-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:41-76,
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:677:53-56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,1)-(693,26),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:687:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,1)-(693,26),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(687,12)-(693,26),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:688:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(688,12)-(693,26),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(690,12)-(693,26),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:693:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:18-35,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:18-35,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:19-24,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:690:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1-22,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:20-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1-22,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:694:1-22,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,1)-(709,19),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(696,17)-(709,19),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:696:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:5-28,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:697:5-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:30-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:10-28,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:12-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:12-24,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:12,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:12-24,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:698:13-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:7-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:15-25,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:699:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12-13,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12-13,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,15)-(709,19),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,18)-(709,19),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:700:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-18,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-29,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:9-29,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:20-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:20-27,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:20,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:20-27,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:701:21-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,9)-(704,52),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,9)-(704,52),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:40-42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:14-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:14-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:15-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:21-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:25-37,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:25-37,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:26-36,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(703,44)-(704,52),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:63-64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:45-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:45-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:46-53,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:703:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:18-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:18-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:39-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:39-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:704:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,9)-(706,52),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,9)-(706,52),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,18)-(706,52),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,24)-(706,52),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(705,24)-(706,52),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:27-47,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:27-47,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:35-47,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:39-47,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:39-47,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:705:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:27-50,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:35-50,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:706:43-48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,27),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,83),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:709:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(707,9)-(708,83),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:14-23,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:14-23,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:707:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:31-83,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:36-37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39-83,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:83]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:39-83,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:41-82,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:61-67,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:61-67,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:69-80,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:80]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:69-80,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:708:69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1-25,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:9-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:712:1-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1-22,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:20-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1-22,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:713:1-22,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,1)-(720,18),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(714,11)-(720,18),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:714:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:5-19,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:715:5-19,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(716,5)-(720,18),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(716,5)-(720,18),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:716:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:7-50,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:18-50,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:717:18-19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:7-19,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:11-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,21)-(720,18),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(718,24)-(720,18),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:718:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-36,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:720:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:9-36,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:18-36,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24-36,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:24-36,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:26-35,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:719:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1-27,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:12-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:1-27,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:26-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:26-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:723:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1-25,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:23-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1-25,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:724:1-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:1-48,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:14-48,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:23-48,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29-48,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:29-48,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:31-47,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:725:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1-57,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:1-57,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:16-57,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-40,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-40,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:23-57,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:42-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:24-29,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:24-39,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:56-57,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:56-57,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:730:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:1-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,1)-(739,65),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:736:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(731,19)-(735,42),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:731:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:5-43,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:5-43,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:11-43,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:23-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:23-29,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:23,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:23-29,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:732:24-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5-40,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:5-40,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:18-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:733:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-53,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:5-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:10-30,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:10-30,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:11-29,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:734:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:5-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:30-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:30-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:735:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,5)-(739,65),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:5-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,28)-(739,65),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(737,37)-(739,65),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:737:37-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:9-45,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:9-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:20-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:26-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:26-32,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:26,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:26-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:738:27-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:23-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:23-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:24-64,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:30-64,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:55-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:55-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:739:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1-57,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:1-57,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:16-57,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:28-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:31-57,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:743:46-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1-26,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:24-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1-26,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:744:1-26,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:1-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:748:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:17-37,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:17-37,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:745:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:5-68,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6-11,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:6-11,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:7-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:37-68,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:747:44-45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:5-38,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-31,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:20-38,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:749:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:5-57,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:24-57,
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:51-54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:24-57,
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:24-57,
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:44-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:27-42,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:31,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:40,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:750:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-21,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-21,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-24,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-24,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-30,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-30,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:5-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:16,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:17-21,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:17-21,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:23,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:753:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-23,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-23,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-26,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-26,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,5)-(756,57),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,5)-(756,57),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:5-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,5)-(756,57),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:16,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:17-23,
    AnnAt),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:19-23,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:19-23,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:25,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,30)-(756,57),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:30-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,30)-(756,57),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:30-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(754,30)-(756,57),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:30-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:33-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:35-48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:35-48,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:35,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:35-48,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:754:36-47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:46-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:46-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:49-50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:47-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:57-75,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:75]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:57-75,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:58-74,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:60-72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:60-72,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:60,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:60-72,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:755:61-71]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:46-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:46-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47-52,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:49-50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:47-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:756:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-18,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-18,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-28,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-28,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:5-28,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:13,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:14-18,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:14-18,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:759:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-20,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-20,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(760,5)-(761,64),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:5-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:13,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:14-20,
    AnnAt),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:16-20,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:16-20,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:22-52,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:22-52,
    AnnVbar),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:24-43,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:26-39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:26-39,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:26,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:26-39,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:760:27-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:22-64,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:22-64,
    AnnVbar),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:55-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:55-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56-61,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:58-59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:56-63,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:761:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1-29,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:765:1-29,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:1-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,1)-(770,21),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(766,15)-(770,21),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:766:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:5-55,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:5-55,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:21-55,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:21-55,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:22-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:767:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,5)-(769,66),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,5)-(769,66),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(768,34)-(769,66),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:768:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9-66,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:9-66,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:12-65,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:30-65,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:30-65,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:34-63,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:769:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:5-21,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:770:12-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1-42,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:1-42,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:18-42,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:41-42,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:41-42,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:773:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:1-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,1)-(776,51),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(774,21)-(776,51),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:774:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,5)-(776,51),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(775,34)-(776,51),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:775:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9-51,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:9-51,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:11-50,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:29-50,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:29-50,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:33-48,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:44-48,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:44-48,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:776:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-5,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-5,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-5,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:2-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-48,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:1-48,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18,
    AnnDarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10-18,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:23-48,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:28-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:31-48,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:44-48,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:44-48,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:783:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1-20,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:18-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1-20,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:1-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:12-16,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:12-16,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:12-16,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:784:13-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:2-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:1-35,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:15-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:785:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1-12,
    AnnInfix),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:1-12,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:787:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-5,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-5,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-5,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:2-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-58,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:1-58,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18,
    AnnDarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10-18,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:23-58,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-43,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-43,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:34-58,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:45-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:35,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:37-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:35-42,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:37-38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:54-58,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:54-58,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:790:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1-20,
    AnnClose),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:18-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1-20,
    AnnOpen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1-10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:1-20,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:12-16,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:12-16,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:12-16,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:791:13-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:2-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:792:1-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1-12,
    AnnInfix),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:1-12,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:794:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-4,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-4,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-4,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:2-3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-62,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:6-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:1-62,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17,
    AnnDarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9-17,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:22-62,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:34-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:28-32,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:28-32,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:37-62,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:49-50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:43-47,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:43-47,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:58-62,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:58-62,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:799:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:1-8,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:4-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:800:4-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(800,1)-(804,30),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(801,5)-(804,30),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(801,5)-(804,30),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:10-17,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:10-17,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:10]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:11-12,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:801:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-24,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-24,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:7-35,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:8-14,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:26-35,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:802:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-17,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-17,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:7-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:8-13,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:26-30,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:803:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:26-30,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:804:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1-11,
    AnnInfix),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1-11,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:1-11,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:806:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1-25,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:17-18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:810:1-25,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:811:1-21,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1-65,
    AnnInstance),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1-65,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:1-65,
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:40-44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:16-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:16-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:17-19,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:22-27,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-65,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-65,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:46-50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:54-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:54-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:54]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:55-57,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60-61,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:813:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1-34,
    AnnInstance),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:817:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:1-34,
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:19-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:16-17,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:16-17,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-34,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-34,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:25-29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:33-34,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:33-34,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:814:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(817,1)-(826,34),
    AnnData),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:817:1-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(817,1)-(826,34),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:817:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(817,1)-(826,34),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:5-39,
    AnnVbar),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:823:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:14-39,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:14-39,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:15-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:15-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:16-21,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:31-32,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:31-32,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:818:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:20-34,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:20-34,
    AnnDeriving),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:20-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:20-34,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:826:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1-71,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:8-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:1-71,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:11-71,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:23-71,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:45-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:48-71,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:831:52-53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:832:1-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(835,5)-(846,30),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:835:5-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(835,5)-(846,30),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:835:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,7)-(842,48),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(836,13)-(842,48),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:836:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,11)-(842,48),
    AnnIn),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,11)-(842,48),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:11-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,15)-(839,81),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:15-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,30)-(838,60),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:837:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(837,30)-(839,81),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:41-60,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:41-60,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:42-59,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:838:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:38-67,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:67]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:38-67,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:39-66,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:42-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:46,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:49-65,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:51-63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:51-63,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:51,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:51-63,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:52-62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:69-81,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:81]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:69-81,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:839:69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(840,14)-(842,48),
    AnnElse),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:14-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(840,14)-(842,48),
    AnnIf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:840:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(840,14)-(842,48),
    AnnThen),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:841:14-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-33,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:19-48,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:842:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(843,15)-(846,30),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:843:15-16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(844,11)-(846,30),
    AnnCase),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:11-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(844,11)-(846,30),
    AnnOf),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:62-63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:43-60,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:43-60,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:844:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:13-45,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:21-45,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:24-45,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:845:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:21-30,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:846:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-34,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-34,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:9-34,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:16-27,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:16-27,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:847:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-35,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-35,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:848:9-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,1)-(873,5),
    AnnData),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:1-4]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,1)-(873,5),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:854:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(854,1)-(873,5),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(855,5)-(873,5),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:873:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(855,5)-(873,5),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:7-28,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:7-28,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:855:21-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:7-33,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:7-33,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:858:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:7-29,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:7-29,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:861:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:7-33,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:7-33,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:865:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:7-32,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:7-32,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:868:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:7-27,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:871:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1-59,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1-59,
    AnnNewtype),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:1-59,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:34-59,
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:34-59,
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:36-57,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:876:49-50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1-51,
    AnnInstance),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1-51,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:1-51,
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:27-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-51,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-51,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:877:33-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1-49,
    AnnInstance),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1-49,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:1-49,
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:21-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-49,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-49,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:27-30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:34-49,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:879:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1-47,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:11-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:1-47,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:14-47,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:882:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:883:1-9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(883,1)-(894,59),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,20)-(894,59),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,20)-(894,59),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,22)-(886,63),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,22)-(886,63),
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(885,22)-(886,63),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:885:23-49,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:23-62,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:41-62,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:41-62,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:886:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(887,22)-(888,59),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(887,22)-(888,59),
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(887,22)-(888,59),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:887:23-55,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:23-58,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:41-58,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:41-58,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:888:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(889,22)-(890,62),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(889,22)-(890,62),
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(889,22)-(890,62),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:889:23-56,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:23-61,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:41-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:41-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:890:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(891,22)-(892,62),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(891,22)-(892,62),
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(891,22)-(892,62),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:891:23-49,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:23-61,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:41-61,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:61]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:41-61,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:892:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(893,22)-(894,57),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(893,22)-(894,57),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:893:23-52,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:23-56,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:41-56,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:41-56,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:894:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1-30,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:1-30,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:16-30,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:897:22-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:898:1-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(898,1)-(903,43),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,11)-(903,43),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(899,11)-(903,43),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:899:11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,12)-(903,42),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,12)-(903,42),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,13)-(903,41),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(900,13)-(903,41),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-69,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:14-69,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:55-56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:32-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:32-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:900:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-30,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-57,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:32-33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:14-79,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:59-60]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(902,33),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(902,72),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:35-36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(901,14)-(903,40),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:903:23-24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:40-57,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:40-57,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:901:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:52-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:52-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:902:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1-32,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:14-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:906:1-32,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:1-12]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,1)-(922,14),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(907,16)-(922,14),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:907:16-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:3-17,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:5-6]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:908:3-17,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3-63,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:3-63,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-29,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:20-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-54,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:16-63,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:909:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,3)-(921,42),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:3-5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,3)-(921,42),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:922:3]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:7-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,7)-(912,55),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:913:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:17-33,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:17-33,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(910,17)-(912,55),
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:45-46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:18-32,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:910:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(911,9)-(912,43),
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(911,9)-(912,43),
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(911,9)-(912,43),
    AnnVbar),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:15-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:15-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:16-37,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:23-37,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:23-37,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:24-36,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:33-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:25-31,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:25-31,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:26,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:28,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:40-52,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:40-52,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:41-51,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:50,
    AnnBang),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:911:50]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:11-41,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:13-14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16-31,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16-31,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:17-30,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48-55,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48-55,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:912:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,7)-(921,42),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:913:13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(913,7)-(921,42),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:913:7-11]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(914,9)-(921,42),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(914,9)-(921,42),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:17-42,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:17-42,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:914:31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:17-52,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:17-52,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:915:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:17-62,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:917:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:17-62,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:34-62,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:916:47]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(917,17)-(919,53),
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(917,17)-(919,53),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:917:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(918,17)-(919,53),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:30-64,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:64]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:30-64,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:38-40,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:40]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:38-40,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:38-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:39]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:44-63,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:63]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:44-63,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:918:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:32-53,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:32-53,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:919:32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:17-50,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:17-50,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:920:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:17-40,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:921:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1-74,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:24-25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:1-74,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:27-74,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:40-41]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:48-74,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:74]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:48-74,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:59-73,
    AnnCloseS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:59-73,
    AnnOpenS),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:924:59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31,
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:925:1-31,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1-59,
    AnnDcolon),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:1-59,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:22-59,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:928:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:1-17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:962:1]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,1)-(960,20),
    AnnWhere),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:957:3-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(929,25)-(956,36),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:929:25-26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:5-12,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:7-8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:930:5-12,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5-66,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:20-21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:5-66,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:932:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:23-66,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:29-35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:29-35,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:29,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:35]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:29-35,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:30-34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:44-66,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:44-66,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:55-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:55-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:931:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(932,5)-(941,28),
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:932:19-20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(932,5)-(941,28),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,15)-(939,33),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:939:33]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,15)-(939,33),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:16]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,16)-(939,32),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:27-28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(933,30)-(939,32),
    AnnDo),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:933:30-31]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:18-60,
    AnnLarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:26-27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:18-60,
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:935:18]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:29-60,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:48-58,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:58]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:48-58,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:934:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(935,18)-(939,32),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:935:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,26)-(937,62),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:937:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,26)-(937,62),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61),
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:27]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(936,27)-(937,61),
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:58-59]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:28-48,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:48]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:28-48,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:29,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:32-37,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:936:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,5)-(949,57),
    AnnLet),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:5-7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,5)-(949,57),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:950:5]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:942:9-23]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(942,9)-(945,65),
    AnnSemi),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:946:9]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:19-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:19-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:20-72,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:42-43]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:21-38,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:38]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:21-38,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:21]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:22-27,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:943:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:19-65,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:65]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:19-65,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-60,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:44]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:20-64,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:945:62]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,9)-(949,57),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:946:17]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(946,9)-(949,57),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:946:9-15]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:19-82,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:82]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:19-82,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81,
    AnnLam),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:20-81,
    AnnRarrow),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:31-32]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:45-51,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:51]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:45-51,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:53-73,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:73]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:53-73,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:53]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:66-72,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:72]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:66-72,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:947:66]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:19-57,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:57]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:19-57,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-50,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:34]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:20-56,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:949:52]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(953,29),
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(953,29),
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:951:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(956,36),
    AnnCloseC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(951,7)-(956,36),
    AnnOpenC),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:8-46,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:46]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:8-46,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:14-45,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:45]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:14-45,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:14]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-40,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:24]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:15-44,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:952:42]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:8-28,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:28]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:8-28,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:953:8]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:9-57,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:9-57,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:22]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-53,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:37]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:24-57,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:954:55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:9-72,
    AnnComma),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:7]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:9-72,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:30]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:32-72,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:46-56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:46-56,
    AnnBackquote),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:46,
    ../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:56]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:46-56,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:955:47-55]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:9-34,
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:956:26]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20),
    AnnEqual),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:19]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,5)-(960,20),
    AnnFunId),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:5-13]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(958,21)-(960,20),
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:958:25]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:29-77,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:77]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:29-77,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:29]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-66,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:36]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:30-76,
    AnnVal),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:959:68-69]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:11-20,
    AnnCloseP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:20]),
  ((../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:11-20,
    AnnOpenP),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:960:11]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:962:1])],
 [(../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(58,9)-(73,9),
   [AnnLineComment "-- * Solver statistics",
    AnnLineComment "-- ** Configuration",
    AnnLineComment "-- ** Verification",
    AnnLineComment "-- * Interface"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(127,1)-(169,27),
   [AnnLineComment "-- If returns True, then problem is unsat.",
    AnnLineComment "--     trace (\"input \" ++ show f) $",
    AnnLineComment "-- starting with an initial assignment.",
    AnnLineComment "-- To solve, we simply take baby steps toward the solution using solveStep,"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(149,22)-(169,27),
   [AnnLineComment "-- Watch each clause, making sure to bork if we find a contradiction."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(163,20)-(167,72),
   [AnnLineComment "-- conflict data is ignored here, so safe to fake"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(187,23)-(190,37),
   [AnnLineComment "--                           trace (statSummary stats) $",
    AnnLineComment "--                          trace (\"Restarting...\") $"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(194,20)-(206,38),
   [AnnLineComment "-- Require more conflicts before next restart."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(228,17)-(231,50),
   [AnnLineComment "-- fromIntegral $ max (numVars f `div` 10) 100"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(247,18)-(260,39),
   [AnnLineComment "-- literal whose negation is assigned, delete that literal.",
    AnnLineComment "-- For each clause in the database, remove it if satisfied; if it contains a"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(252,59)-(260,39),
   [AnnLineComment "--     writeArray (watches s) (negate l) []",
    AnnLineComment "-- Clauses containing `l' are Sat.",
    AnnLineComment "--     modifyArray (watches s) l filterL",
    AnnLineComment "-- Remove unsat literal `negate l' from clauses."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(269,1)-(292,40),
   [AnnLineComment "-- Take the step chosen by the transition guards above."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(280,28),
   [AnnLineComment "-- Check if unsat."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(282,20),
   [AnnLineComment "-- Unit propagation may reveal conflicts; check."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(278,5)-(284,27),
   [AnnLineComment "-- No conflicts.  Decide."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(309,40)-(314,14),
   [AnnLineComment "-- no dups in decision list or trail"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(334,14)-(335,55),
   [AnnLineComment "-- ^ Assigned literal which might propagate."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,1)-(380,45),
   [AnnLineComment "-- list.",
    AnnLineComment "-- the unprocessed clauses are placed back into the appropriate watcher",
    AnnLineComment "-- conflict is found, the at-fault clause is returned through Left, and",
    AnnLineComment "-- annotated clause, find the status of its watched literals.  If a",
    AnnLineComment "-- which contain @negate l@, namely the watcher list for l.  For each",
    AnnLineComment "-- updateWatches: `l' has been assigned, so we look at the clauses in",
    AnnLineComment "-- no conflict"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(336,14)-(349,20),
   [AnnLineComment "-- return that and don't update anything else.",
    AnnLineComment "-- Update wather lists for normal & learnt clauses; if conflict is found,"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(359,68)-(380,45),
   [AnnLineComment "-- l,q are the (negated) literals being watched for clause c."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(364,7)-(380,45),
   [AnnLineComment "-- if other true, clause already sat"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(369,23)-(371,39),
   [AnnLineComment "-- found unassigned literal, negate l', to watch"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(373,23)-(380,45),
   [AnnLineComment "-- all other lits false, clause is unit"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(377,40)-(380,45),
   [AnnLineComment "-- unit literal is conflicting"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(413,14)-(420,17),
   [AnnLineComment "--   trace (\"decide \" ++ show ld) $ return ()"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(429,13)-(432,46),
   [AnnLineComment "-- clause @c@.",
    AnnLineComment "-- ^ @(l, c)@, where attempting to assign @l@ conflicted with"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(433,74)-(463,19),
   [AnnLineComment "-- learntCl is asserting",
    AnnLineComment "-- uip of the cut.",
    AnnLineComment "-- TODO once I'm sure this works I don't need getUnit, I can just use the",
    AnnLineComment "--     trace (\"new mFr: \" ++ showAssignment mFr) $ return ()",
    AnnLineComment "-- undo decisions", AnnLineComment "-- backtrack",
    AnnLineComment "--           ) (",
    AnnLineComment "--          ++ \"reason: \" ++ Map.showTree _reason",
    AnnLineComment "--     trace (\"dlits (\" ++ show (length dl) ++ \") = \" ++ show dl) $ return ()",
    AnnLineComment "--     trace (\"trail = \" ++ show _theTrail) $ return ()",
    AnnLineComment "--     trace (\"********** conflict = \" ++ show c) $ return ()"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,1)-(573,81),
   [AnnLineComment "-- helpers",
    AnnLineComment "-- conflict clause and backtrack level.",
    AnnLineComment "-- BFS by undoing the trail backward.  From Minisat paper.  Returns"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(482,52)-(500,12),
   [AnnLineComment "--     trace (\"firstUIPBFS learned: \" ++ show a) $ return ()",
    AnnLineComment "--     return $ (learntCl, newLevel)",
    AnnLineComment "--     outputConflict \"conflict.dot\" (graphviz' conflGraph) $ return ()",
    AnnLineComment "--     trace (\"learnt: \" ++ show (map (\\l -> (l, levelArr!(var l))) learntCl, newLevel)) $ return ()",
    AnnLineComment "--     trace (\"dlits (\" ++ show (length dlits) ++ \"): \" ++ show dlits) $ return ()",
    AnnLineComment "--     trace (\"topSort: \" ++ show topSortNodes) $ return ()",
    AnnLineComment "--     trace (\"cut: \" ++ show firstUIPCut) $ return ()",
    AnnLineComment "--     trace (\"graphviz graph:\\n\" ++ graphviz' conflGraph) $ return ()",
    AnnLineComment "--                      :: Gr CGNodeAnnot ()",
    AnnLineComment "--         conflGraph = mkConflGraph mFr levelArr (reason st) dlits c",
    AnnLineComment "--                       (firstUIP conflGraph)",
    AnnLineComment "--         firstUIPCut = uipCut dlits levelArr conflGraph (unLit cLit)",
    AnnLineComment "--     let (learntCl, newLevel) = cutLearn mFr levelArr firstUIPCut",
    AnnLineComment "--     trace (\"mFr: \" ++ showAssignment mFr) $ assert True (return ())"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(506,38)-(563,56),
   [AnnLineComment "-- Invariant: literal from current dec. lev.",
    AnnLineComment "-- lits we know about.",
    AnnLineComment "-- Number of unprocessed current-level",
    AnnLineComment "-- Literals we should process.",
    AnnLineComment "-- trace sources"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(526,9)-(554,54),
   [AnnLineComment "-- counter.",
    AnnLineComment "-- with it, we've thrown away one lit. from counting toward",
    AnnLineComment "-- Invariant states p is from current level, so when we're done",
    AnnLineComment "-- Select next literal to look at:",
    AnnLineComment "-- > from lower level, put in learned clause",
    AnnLineComment "-- > from the current level, bump counter",
    AnnLineComment "-- For each unseen reason,"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(546,45)-(550,22),
   [AnnLineComment "-- 1, i.e., loop terminates now",
    AnnLineComment "-- a dec. var. only if the counter ="]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(655,16)-(656,30),
   [AnnLineComment "-- ^ Is this clause learned?"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(670,19)-(672,66),
   [AnnLineComment "-- avoid watching dup clauses"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(688,12)-(693,26),
   [AnnLineComment "-- ^ The literal that has been assigned true."]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(690,12)-(693,26),
   [AnnLineComment "-- non-@Nothing@ value here adjusts the `reason' map.",
    AnnLineComment "-- ^ The reason for enqueuing the literal.  Including a"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(698,5)-(709,19),
   [AnnLineComment "-- conflict/already assigned"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(700,18)-(709,19),
   [AnnLineComment "-- assign decision level for literal"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(745,1)-(761,64),
   [AnnLineComment "-- returns highest var that is undef under mFr",
    AnnLineComment "-- @goActivity current highest@ returns highest-activity var",
    AnnLineComment "-- find highest var undef under mFr, then find one with highest activity"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(817,1)-(826,34),
   [AnnLineComment "-- ^ Indicates an error in the resultion checking process.",
    AnnLineComment "-- 'Funsat.Types.Model'@.statusUnder@.",
    AnnLineComment "-- satisfactory.  Each clause is tagged with its status using",
    AnnLineComment "-- ^ Indicates a unsatisfactory assignment that was claimed"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(832,1)-(848,35),
   [AnnLineComment "--    Fl.all (\\l -> m!(V l) == l || m!(V l) == negate l || m!(V l) == 0) [1..numVars cnf]",
    AnnLineComment "-- m is well-formed"]),
  (../../hackage-packages/funsat-0.6.2/src/Funsat/Solver.hs:(855,5)-(873,5),
   [AnnLineComment "-- ^ Total number of unit implications since beginning of solving.",
    AnnLineComment "-- ^ Total number of decisions since beginning of solving.",
    AnnLineComment "-- ^ Avg. number of literals per learnt clause.",
    AnnLineComment "-- compacted every restart).",
    AnnLineComment "-- ^ Number of learned clauses currently in DB (fluctuates because DB is",
    AnnLineComment "-- ^ Number of conflicts since beginning of solving.",
    AnnLineComment "-- ^ Number of conflicts since last restart."]),
  (<no location info>,
   [AnnLineComment "-- | Converts statistics into a tabular, human-readable summary.",
    AnnLineComment "-- | Convert statistics to a nice-to-display tabular form.",
    AnnLineComment "-- |  The show instance uses the wrapped string.",
    AnnLineComment "-- Statistics & trace",
    AnnLineComment "---------------------------------------",
    AnnLineComment "-- resolution-based checker on a trace of the SAT solver.",
    AnnLineComment "-- well-formed and satisfies the CNF problem.  In case of `Unsat', runs a",
    AnnLineComment "-- | Verify the solution.  In case of `Sat', checks that the assignment is",
    AnnLineComment "-- *** Misc",
    AnnLineComment "-- @Nothing@, or return @Nothing@ otherwise.",
    AnnLineComment "-- | Choice of state transitions.  Choose the leftmost action that isn't",
    AnnLineComment "-- | @flip fmap@.",
    AnnLineComment "-- given as an argument.  Otherwise, return `Nothing'.",
    AnnLineComment "-- | Guard a transition action.  If the boolean is true, return the action",
    AnnLineComment "-- *** Generic state transition notation",
    AnnLineComment "-- | Add the given clause id to the trace.",
    AnnLineComment "-- | Generate a new clause identifier (always unique).",
    AnnLineComment "-- | Retrieve the maximum-priority variable from the variable order.",
    AnnLineComment "-- | Modify priority of variable; takes care of @Double@ overflow.",
    AnnLineComment "-- *** Dynamic variable ordering",
    AnnLineComment "-- | Clear the `propQ'.",
    AnnLineComment "-- | Pop the `propQ'.  Error (crash) if it is empty.",
    AnnLineComment "-- enqueue _m l _r | trace (\"enqueue \" ++ show l) $ False = undefined",
    AnnLineComment "-- assignment.",
    AnnLineComment "-- Also records decision level, modifies trail, and records reason for",
    AnnLineComment "--", AnnLineComment "-- altered.",
    AnnLineComment "-- returns @True@.  In case there is a conflict, the assignment is /not/",
    AnnLineComment "-- If this conflicts with an existing assignment, returns @False@; otherwise",
    AnnLineComment "-- | Enqueue literal in the `propQ' and place it in the current assignment.",
    AnnLineComment "-- Also adds unique clause ids to trace.",
    AnnLineComment "--",
    AnnLineComment "-- Currently the watched literals in each clause are the first two.",
    AnnLineComment "--", AnnLineComment "-- propagating.",
    AnnLineComment "-- per run.  It should not be called to reconstruct the watcher list when",
    AnnLineComment "-- `True' otherwise.  This function should be called exactly once per clause,",
    AnnLineComment "-- is a singleton, `enqueue's fact and returns `False' if fact is in conflict,",
    AnnLineComment "-- | Add clause to the watcher lists, unless clause is a singleton; if clause",
    AnnLineComment "-- *** Unit propagation",
    AnnLineComment "-- | Keep the smaller half of the learned clauses.",
    AnnLineComment "-- *** Clause compaction",
    AnnLineComment "-- ** Helpers",
    AnnLineComment "-- or BitSet.size bad == numVars cnf",
    AnnLineComment "-- test whether we've made all possible decisions, too.",
    AnnLineComment "-- on all literals *without* creating a conflicting clause.  So now we also",
    AnnLineComment "-- clause and there are no decision literals in @m@.''  But we were deciding",
    AnnLineComment "-- The DPLL paper says, ''A problem is unsatisfiable if there is a conflicting",
    AnnLineComment "--",
    AnnLineComment "-- | /O(1)/.  Test for unsatisfiability.",
    AnnLineComment "-- *** Impossible to satisfy",
    AnnLineComment "-- | Constant amount by which a variable is `bump'ed.",
    AnnLineComment "-- | Increase the recorded activity of given variable.",
    AnnLineComment "-- Does /not/ touch `dl'.", AnnLineComment "--",
    AnnLineComment "-- assignment, sets `noLevel', undoes reason.",
    AnnLineComment "-- | Delete the assignment to last-assigned literal.  Undoes the trail, the",
    AnnLineComment "-- ^ learned clause and new decision level",
    AnnLineComment "-- May undo part of the trail, but not past the current decision level.",
    AnnLineComment "--",
    AnnLineComment "-- First UIP cut of the conflict graph.",
    AnnLineComment "-- | Analyse a the conflict graph and produce a learned clause.  We use the",
    AnnLineComment "-- executing @cmd@.  The traditional @do-while@ semantics, in other words.",
    AnnLineComment "-- | @doWhile cmd test@ first runs @cmd@, then loops testing @test@ and",
    AnnLineComment "-- implied by the first unique implication point cut of the conflict graph.",
    AnnLineComment "-- | Non-chronological backtracking.  The current returns the learned clause",
    AnnLineComment "-- *** Backtracking",
    AnnLineComment "-- deciding on the decision variable indexing the assignment.",
    AnnLineComment "-- | Assign given decision variable.  Records the current assignment before",
    AnnLineComment "-- `VarOrder'.",
    AnnLineComment "-- Select a decision variable, if possible, and return it and the adjusted",
    AnnLineComment "--", AnnLineComment "-- formula.",
    AnnLineComment "-- undefined under the assignment and (2) it or its negation occur in the",
    AnnLineComment "-- | Find and return a decision variable.  A /decision variable/ must be (1)",
    AnnLineComment "-- *** Decisions",
    AnnLineComment "-- is found it is returned exactly as described for `bcpLit'.",
    AnnLineComment "-- | Boolean constraint propagation of all literals in `propQ'.  If a conflict",
    AnnLineComment "-- watched literals.",
    AnnLineComment "-- If no new clauses are unit (i.e. no implied assignments), simply update",
    AnnLineComment "--", AnnLineComment "-- with the assignment.",
    AnnLineComment "-- return @Nothing@.  The @impliedLit@ is implied by the clause, but conflicts",
    AnnLineComment "-- is detected, return @Just (impliedLit, conflictingClause)@; otherwise",
    AnnLineComment "-- | Assign a new literal, and enqueue any implied assignments.  If a conflict",
    AnnLineComment "-- *** Boolean constraint propagation",
    AnnLineComment "-- better be less that 0.",
    AnnLineComment "-- | Value of the `level' array if corresponding variable unassigned.  Had",
    AnnLineComment "-- ** Internals",
    AnnLineComment "-- this should be optimised away to nothing.",
    AnnLineComment "-- | Check data structure invariants.  Unless @-fno-ignore-asserts@ is passed,",
    AnnLineComment "-- `Nothing'.",
    AnnLineComment "-- Records id of conflicting clause in trace before failing.  Always returns",
    AnnLineComment "--",
    AnnLineComment "-- | /Precondition:/ problem determined to be unsat.",
    AnnLineComment "-- new state.",
    AnnLineComment "-- assignment, perform one state transition, producing a new assignment and a",
    AnnLineComment "-- function takes one step in that transition system.  Given an unsatisfactory",
    AnnLineComment "-- | The DPLL procedure is modeled as a state transition system.  This",
    AnnLineComment "-- * Internals",
    AnnLineComment "-- Precondition: decision level 0.",
    AnnLineComment "--", AnnLineComment "-- `preprocessCNF'.",
    AnnLineComment "-- | Simplify the clause database.  Eventually should supersede, probably,",
    AnnLineComment "-- rm dups",
    AnnLineComment "--   * remove duplicates", AnnLineComment "--",
    AnnLineComment "-- | Some kind of preprocessing.",
    AnnLineComment "-- * Preprocessing",
    AnnLineComment "--  * restarts to be enabled", AnnLineComment "--",
    AnnLineComment "--  * VSIDS to be enabled", AnnLineComment "--",
    AnnLineComment "--  * requires 1.5 as many restarts after restarting as before, each time",
    AnnLineComment "--",
    AnnLineComment "--  * restarts every 100 conflicts",
    AnnLineComment "--",
    AnnLineComment "-- | A default configuration based on the formula to solve.",
    AnnLineComment "-- conflict-based restarting (see `FunsatConfig').",
    AnnLineComment "-- solved, starting with the given initial assignment.  It also implements the",
    AnnLineComment "-- | This function applies `solveStep' recursively until SAT instance is",
    AnnLineComment "-- | Solve with the default configuration `defaultConfig'.",
    AnnLineComment "-- present when the result is `Unsat'.",
    AnnLineComment "-- trace.  The trace is for checking a proof of `Unsat', and thus is only",
    AnnLineComment "-- solution, along with internal solver statistics and possibly a resolution",
    AnnLineComment "-- | Run the DPLL-based SAT solver on the given CNF instance.  Returns a",
    AnnLineComment "-- * Interface",
    AnnLineComment "-- import Debug.Trace (trace)",
    AnnBlockComment "{-\n    This file is part of funsat.\n\n    funsat is free software: it is released under the BSD3 open source license.\n    You can find details of this license in the file LICENSE at the root of the\n    source tree.\n\n    Copyright 2008 Denis Bueno\n-}",
    AnnBlockComment "{-|\n\nFunsat aims to be a reasonably efficient modern SAT solver that is easy to\nintegrate as a backend to other projects.  SAT is NP-complete, and thus has\nreductions from many other interesting problems.  We hope this implementation is\nefficient enough to make it useful to solve medium-size, real-world problem\nmapped from another space.  We also have taken pains test the solver rigorously\nto encourage confidence in its output.\n\nOne particular nicetie facilitating integration of Funsat into other projects\nis the efficient calculation of an /unsatisfiable core/ for unsatisfiable\nproblems (see the \"Funsat.Resolution\" module).  In the case a problem is\nunsatisfiable, as a by-product of checking the proof of unsatisfiability,\nFunsat will generate a minimal set of input clauses that are also\nunsatisfiable.\n\nAnother is the ability to compile high-level circuits into CNF.  Seen the\n\"Funsat.Circuit\" module.\n\n* 07 Jun 2008 21:43:42: N.B. because of the use of mutable arrays in the ST\nmonad, the solver will actually give _wrong_ answers if you compile without\noptimisation.  Which is okay, 'cause that's really slow anyway.\n\n[@Bibliography@]\n\n  * ''Abstract DPLL and DPLL Modulo Theories''\n\n  * ''Chaff: Engineering an Efficient SAT solver''\n\n  * ''An Extensible SAT-solver'' by Niklas Een, Niklas Sorensson\n\n  * ''Efficient Conflict Driven Learning in a Boolean Satisfiability Solver''\nby Zhang, Madigan, Moskewicz, Malik\n\n  * ''SAT-MICRO: petit mais costaud!'' by Conchon, Kanig, and Lescuyer\n\n-}",
    AnnBlockComment "{-# OPTIONS -cpp #-}",
    AnnBlockComment "{-# LANGUAGE MultiParamTypeClasses\n            ,FunctionalDependencies\n            ,FlexibleInstances\n            ,FlexibleContexts\n            ,GeneralizedNewtypeDeriving\n            ,TypeSynonymInstances\n            ,TypeOperators\n            ,ParallelListComp\n            ,BangPatterns\n #-}"])])