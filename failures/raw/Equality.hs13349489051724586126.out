{-# LANGUAGE TypeOperators
           , GADTs
           , FlexibleInstances
           , CPP
           #-}
#if __GLASGOW_HASKELL__ >= 706
{-# LANGUAGE PolyKinds #-}
#endif{-# LANGUAGE PolyKinds #-}
-------------------------------------------------------------------------------
-- |-------------------------------------------------------------------------------
-- |-- Module      : Data.Type.Equality
-- Module      : Data.Type.Equality-- Copyright   : (c) 2009, Erik Hesselink
-- License     : BSD3-- Copyright   : (c) 2009, Erik Hesselink
---- License     : BSD3
---- Maintainer  : Erik Hesselink <hesselink@gmail.com>
-- Stability   : Experimental-- Maintainer  : Erik Hesselink <hesselink@gmail.com>
---- Stability   : Experimental
---- Type equality, coercion/cast and other operations.
---- Type equality, coercion/cast and other operations.
---------------------------------------------------------------------------------
module-------------------------------------------------------------------------------Data.Type.Equality
module( (:=:Data.Type.Equality)(Refl)
  ( (sym:=:)(Refl)
  , symtrans
  , trans
  , substsubst2
  , subst2
  , cong
  , congcong2
  , cong2
  , cong3
  , coerce
  , coerce
  , EqT(eqT)
  , EqTEqT2(eqT(eqT2) )
  , EqT2(eqT2)
  , EqT3where(eqT3)
  ) where
import Prelude
import#if __GLASGOW_HASKELL__ >= 609Prelude
               hiding (id, (.))
import Control.Category (id, (.))
import#endif  Control.Category

-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and
-- @b@ are equal. By pattern matching on @Refl@ this fact is-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and
-- introduced to the type checker.-- @b@ are equal. By pattern matching on @Refl@ this fact is
data-- introduced to the type checker.a :=: b where
dataRefl :=::: ab:=:wherea
  Refl :: a :=: a
infix 4 :=:
infix 4 :=:
-- | Any value is just shown as "Refl", but this cannot be derived for
-- a GADT, so it is defined here manually.-- | Any value is just shown as "Refl", but this cannot be derived for
instance-- a GADT, so it is defined here manually.Show (a :=: b) where
instanceshowsPrec_ (Refla :=:= bshowString) where   "Refl"
  showsPrec _ Refl = showString "Refl"
-- | We can only read values if the result is @a :=: a@, not @a :=: b@
-- since that is not true, in general. We just parse the string-- | We can only read values if the result is @a :=: a@, not @a :=: b@
-- since that is not true, in general. We just parse the string-- "Refl", optionally surrounded with parentheses, and return 'Refl'.
instance-- "Refl", optionally surrounded with parentheses, and return 'Refl'.Read (a :=: a) where
instancereadsPrec_ (areadParen a) whereFalse (\s -> [(Refl, r) | ("Refl", r) <- lex s])
  readsPrec _ = readParen False (\s -> [(Refl, r) | ("Refl", r) <- lex s])
#if __GLASGOW_HASKELL__ >= 609
instance Category (:=:) where
instanceid = Refl (:=:) where
  idRefl= Refl. Refl = Refl
#endif . Refl = Refl

-- | Equality is symmetric.
sym-- | Equality is symmetric.:: a :=: b -> b :=: a
sym ::Refl :=:= Refl -> b :=: a
sym Refl = Refl
-- | Equality is transitive. This is the same as (>>>) from the 'Category'
-- instance, but also works in GHC 6.8.-- | Equality is transitive. This is the same as (>>>) from the 'Category'
trans-- instance, but also works in GHC 6.8.:: a :=: b -> b :=: c -> a :=: c
trans ::Refl :=:Reflb=->Refl :=: c -> a :=: c
trans Refl Refl = Refl
-- | Equality is substitutive. This is defined directly, but can also
-- be defined as 'coerce' '.' 'cong'.-- | Equality is substitutive. This is defined directly, but can also
subst-- be defined as 'coerce' '.' 'cong'.:: a :=: b -> f a -> f b
subst ::Refl :=:= idb -> f a -> f b
subst Refl = id
-- | Substitution inside nested type constructors. This is equivalent
-- to 'coerce' '.' 'cong' '.' 'cong'.-- | Substitution inside nested type constructors. This is equivalent
subst2-- to 'coerce' '.' 'cong' '.' 'cong'.:: a :=: b -> f (g a) -> f (g b)
subst2 ::Refl :=:= idb -> f (g a) -> f (g b)
subst2 Refl = id
-- | Equality is congruential.
cong-- | Equality is congruential.:: a :=: b -> f a :=: f b
cong ::Refl :=:= Refl -> f a :=: f b
cong Refl = Refl
-- | Congruence for type constructors with two parameters.
cong2-- | Congruence for type constructors with two parameters.:: a :=: b -> c :=: d -> f a c :=: f b d
cong2 ::Refl :=:Reflb=->Refl :=: d -> f a c :=: f b d
cong2 Refl Refl = Refl
-- | Congruence for type constructors with three parameters.
cong3-- | Congruence for type constructors with three parameters.:: a :=: a'-> b :=: b' -> c :=: c' -> f a b c :=: f a' b' c'
cong3 ::Refl :=:Refla'Refl-> b=:=:Refl -> c :=: c' -> f a b c :=: f a' b' c'
cong3 Refl Refl Refl = Refl
-- | Coerce a type to another using an equality proof.
coerce-- | Coerce a type to another using an equality proof.:: a :=: b -> a -> b
coerce ::Refl :=:= idb -> a -> b
coerce Refl = id
-- | A type class for constructing equality proofs. This is as close
-- | A type class for constructing equality proofs. This is as close-- as we can get to decidable equality on types. Note that @f@ must be
-- a GADT to be able to define 'eqT'.-- as we can get to decidable equality on types. Note that @f@ must be
class-- a GADT to be able to define 'eqT'.EqT f where
classeqT EqT:: ffawhere-> f b -> Maybe (a :=: b)
  eqT :: f a -> f b -> Maybe (a :=: b)
-- | A type class for constructing equality proofs for type
-- | A type class for constructing equality proofs for type-- constructor with two parameters. Can be useful when representing
-- relations between types.-- constructor with two parameters. Can be useful when representing
class-- relations between types.EqT2 f where
classeqT2EqT2:: ffawhereb -> f c d -> (Maybe (a :=: c), Maybe (b :=: d))
  eqT2 :: f a b -> f c d -> (Maybe (a :=: c), Maybe (b :=: d))
-- | A type class for constructing equality proofs for type
-- | A type class for constructing equality proofs for type-- constructor with three parameters. If you find a use for this, let
-- me know.-- constructor with three parameters. If you find a use for this, let
class-- me know.EqT3 f where
classeqT3EqT3:: ffawhereb c -> f a' b' c' -> (Maybe (a :=: a'), Maybe (b :=: b'), Maybe (c :=: c'))
  eqT3 :: f a b c -> f a' b' c' -> (Maybe (a :=: a'), Maybe (b :=: b'), Maybe (c :=: c'))
instance EqT ((:=:) a) where
instanceeqT ReflRefl(:=:= )Just) whereRefl

==============
../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs
==============
lengths:(6378,3512)

==============

({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (4,15)) "{-# LANGUAGE TypeOperators\n           , GADTs\n           , FlexibleInstances\n           , CPP\n           #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,30)) "#if __GLASGOW_HASKELL__ >= 706" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,27)) "{-# LANGUAGE PolyKinds #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-5),DP (0,21)) "{-# LANGUAGE PolyKinds #-}" Nothing),DP (0,-5)),((AnnComment DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,75)) "-------------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,31)) "-- Module      : Data.Type.Equality" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,36)) "-- Module      : Data.Type.Equality" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-35),DP (0,6)) "-- Copyright   : (c) 2009, Erik Hesselink" Nothing),DP (0,-35)),((AnnComment DComment (DP (1,1),DP (1,22)) "-- License     : BSD3" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-21),DP (0,20)) "-- Copyright   : (c) 2009, Erik Hesselink" Nothing),DP (0,-21)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,19)) "-- License     : BSD3" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- Maintainer  : Erik Hesselink <hesselink@gmail.com>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,30)) "-- Stability   : Experimental" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-29),DP (0,24)) "-- Maintainer  : Erik Hesselink <hesselink@gmail.com>" Nothing),DP (0,-29)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,27)) "-- Stability   : Experimental" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- Type equality, coercion/cast and other operations." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- Type equality, coercion/cast and other operations." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-------------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-6),DP (0,73)) "-------------------------------------------------------------------------------" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,-72),DP (0,-54)) "Data.Type.Equality" Nothing),DP (0,-72)),((G AnnModule),DP (21,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) ":=:" Nothing),DP (0,0)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:22:8-25
     }
    Nothing{ModuleName: Data.Type.Equality})) 
  (Just 
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(23,3)-(38,3)
     }
    Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-17),DP (0,-16)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Refl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-15
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingWith 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "sym" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
        (Unqual {OccName: :=:})) 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:11-14
          }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: Refl}))])),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:24:5-7
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:24:5-7
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,2)) "trans" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: sym})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:25:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:25:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: trans})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:26:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:26:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,1)) "subst2" Nothing),DP (0,-5)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: subst})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:27:5-10
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:27:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,5)) "cong" Nothing),DP (0,1)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: subst2})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:29:5-8
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:29:5-8
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,1)) "cong2" Nothing),DP (0,-4)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: cong})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:30:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:30:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: cong2})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:31:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:31:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,7)) "coerce" Nothing),DP (0,1)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: cong3})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:33:5-10
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:33:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "EqT" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "eqT" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: coerce})))),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-12
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,1)) "EqT2" Nothing),DP (0,-3)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,4)) "eqT2" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnComma),DP (1,3))])
      (IEThingWith 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-7
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: EqT})) 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:9-11
          }
         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: eqT}))])),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-14
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingWith 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-8
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: EqT2})) 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:10-13
          }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: eqT2}))])),
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:5-14
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,1)) "where" Nothing),DP (0,-4)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
      (IEThingWith 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:5-8
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: EqT3})) 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:10-13
          }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: eqT3}))]))])) 
  [
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(40,1)-(42,31)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,23)) "#if __GLASGOW_HASKELL__ >= 609" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:40:8-14
       }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (True) 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:16-31
         }
        Just (Ann (DP (0,-8)) (ColDelta 16) DP (2,16) [DComment (DP (1,16),DP (1,22)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "id" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,17)) "Control.Category" Nothing] [((G AnnHiding),DP (0,-8)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:24-25
           }
          Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:24-25
             }
            Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: id})))),
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30
           }
          Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30
             }
            Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: .}))))]))))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-1)) "#endif" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:8-23
       }
      Nothing{ModuleName: Control.Category}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(49,1)-(50,17)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,71)) "-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and" Nothing,DComment (DP (1,1),DP (1,61)) "-- @b@ are equal. By pattern matching on @Refl@ this fact is" Nothing,DComment (DP (0,-60),DP (0,10)) "-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and" Nothing,DComment (DP (1,1),DP (1,35)) "-- introduced to the type checker." Nothing,DComment (DP (0,-34),DP (0,26)) "-- @b@ are equal. By pattern matching on @Refl@ this fact is" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,-4),DP (0,30)) "-- introduced to the type checker." Nothing,DComment (DP (0,-29),DP (0,-28)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) ":=:" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:8-10
        }
       Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: :=:})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:6
          }
         Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Refl" Nothing] [((G AnnVal),DP (0,-1))])
         (UserTyVar 
          (Unqual {OccName: a}))),
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:12
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnVal),DP (0,0))])
         (UserTyVar 
          (Unqual {OccName: b})))]) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:3-17
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-2),DP (0,-1)) "a" Nothing] [((G AnnDcolon),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:3-6
             }
            Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Refl}))] 
          (Implicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyGADT { ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:11-17
             } 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:11-17
             }
            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
            (HsOpTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:11
               }
              Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: a}))) 
             ((,) 
              (WpKiApps 
               []) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:13-15
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (Unqual {OccName: :=:}))) 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:17
               }
              Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: a})))))) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1-11
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "infix" Nothing,DComment (DP (0,1),DP (0,2)) "4" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])
    (SigD 
     (FixSig 
      (FixitySig 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:9-11
          }
         Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (Unqual {OccName: :=:}))] {Fixity: infix 4})))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(56,1)-(57,38)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,71)) "-- | Any value is just shown as \"Refl\", but this cannot be derived for" Nothing,DComment (DP (1,1),DP (1,43)) "-- a GADT, so it is defined here manually." Nothing,DComment (DP (0,-42),DP (0,28)) "-- | Any value is just shown as \"Refl\", but this cannot be derived for" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,-8),DP (0,34)) "-- a GADT, so it is defined here manually." Nothing,DComment (DP (0,-33),DP (0,-29)) "Show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:10-23
         }
        Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,9)) "showsPrec" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
          []) 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:10-23
           }
          Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:10-13
             }
            Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])
            (HsTyVar 
             (Unqual {OccName: Show}))) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:15-23
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "_" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "showString" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
            (HsParTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:16-22
               }
              Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
              (HsOpTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:16
                 }
                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "Refl" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: a}))) 
               ((,) 
                (WpKiApps 
                 []) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:18-20
                  }
                 Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: :=:}))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:22
                 }
                Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: b}))))))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-38
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,3),DP (0,9)) "\"Refl\"" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-11
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: showsPrec})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-38
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: showsPrec})) 
                (False))) 
              [
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:13
                 }
                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder))),
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:15-18
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:15-18
                   }
                  Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: Refl})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:20-38
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:22-38
                    }
                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:22-31
                      }
                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: showString}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:33-38
                      }
                     Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsLit 
                      (HsString "\"Refl\"" {FastString: "Refl"})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(62,1)-(63,74)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,71)) "-- | We can only read values if the result is @a :=: a@, not @a :=: b@" Nothing,DComment (DP (1,1),DP (1,64)) "-- since that is not true, in general. We just parse the string" Nothing,DComment (DP (0,-63),DP (0,7)) "-- | We can only read values if the result is @a :=: a@, not @a :=: b@" Nothing,DComment (DP (1,1),DP (1,64)) "-- since that is not true, in general. We just parse the string" Nothing,DComment (DP (0,-63),DP (0,6)) "-- \"Refl\", optionally surrounded with parentheses, and return 'Refl'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,-8),DP (0,61)) "-- \"Refl\", optionally surrounded with parentheses, and return 'Refl'." Nothing,DComment (DP (0,-60),DP (0,-56)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:10-23
         }
        Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,9)) "readsPrec" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
          []) 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:10-23
           }
          Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:10-13
             }
            Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])
            (HsTyVar 
             (Unqual {OccName: Read}))) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:15-23
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "_" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (HsParTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:16-22
               }
              Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
              (HsOpTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:16
                 }
                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: a}))) 
               ((,) 
                (WpKiApps 
                 []) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:18-20
                  }
                 Just (Ann (DP (0,-8)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,9)) "readParen" Nothing] [((G AnnVal),DP (0,-8))])
                 (Unqual {OccName: :=:}))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:22
                 }
                Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: a}))))))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-74
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-3),DP (0,2)) "False" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Refl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "\"Refl\"" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "lex" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-11
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: readsPrec})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-74
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: readsPrec})) 
                (False))) 
              [
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:13
                 }
                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder)))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:15-74
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:17-74
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:17-31
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:17-25
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: readParen}))) 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:27-31
                        }
                       Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: False}))))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:33-74
                      }
                     Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73
                        }
                       Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73 Ref "delta-1"),DP (0,0))])
                       (HsLam 
                        (MG 
                         [
                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73
                            }
                           Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                           (Match 
                            (Nothing) 
                            [
                             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:35
                               }
                              Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: s})))] 
                            (Nothing) 
                            (GRHSs 
                             [
                              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73
                                }
                               Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                               (GRHS 
                                [] 
                                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnVbar),DP (0,1)),((G AnnCloseS),DP (0,0))])
                                 (HsDo 
                                  (ListComp) 
                                  [
                                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-72
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnLarrow),DP (0,1))])
                                    (BindStmt 
                                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-63
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                      (TuplePat 
                                       [
                                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:54-59
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                         (LitPat 
                                          (HsString "\"Refl\"" {FastString: "Refl"}))),
                                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:62
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (VarPat 
                                          (Unqual {OccName: r})))] 
                                       (Boxed) 
                                       [])) 
                                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:68-72
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:68-70
                                         }
                                        Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: lex}))) 
                                       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:72
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: s}))))) 
                                     (HsLit 
                                      (HsString "" {FastString: "noSyntaxExpr"})) 
                                     (HsLit 
                                      (HsString "" {FastString: "noSyntaxExpr"})))),
                                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41-49
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                    (LastStmt 
                                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41-49
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                      (ExplicitTuple 
                                       [
                                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:42-45
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                         (Present 
                                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:42-45
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: Refl}))))),
                                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:48
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                                         (Present 
                                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:48
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: r})))))] 
                                       (Boxed))) 
                                     (HsLit 
                                      (HsString "" {FastString: "noSyntaxExpr"}))))] 
                                  (PlaceHolder)))))] 
                             (EmptyLocalBinds))))] 
                         [] 
                         (PlaceHolder) 
                         (FromSource))))))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(66,1)-(68,20)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,30)) "#if __GLASGOW_HASKELL__ >= 609" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,9)) "Category" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ":=:" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:10-23
         }
        Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,2)) "id" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
          []) 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:10-23
           }
          Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:10-17
             }
            Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])
            (HsTyVar 
             (Unqual {OccName: Category}))) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:19-23
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: :=:}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-4
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: id})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "Refl" Nothing),DP (0,-2)),((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-4
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: id})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:6-11
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:8-11
                    }
                   Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: Refl})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-20
          }
         Just (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-3)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:8
            }
           Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: .})) 
          (True) 
          (MG 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-20
              }
             Just (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:8
                  }
                 Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: .})) 
                (True))) 
              [
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-6
                 }
                Just (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-6
                   }
                  Just (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [] [((G AnnVal),DP (0,-3))])
                  (Unqual {OccName: Refl})) 
                 (PrefixCon 
                  []))),
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:10-13
                 }
                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:10-13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: Refl})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:15-20
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:17-20
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: Refl})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1-25
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,28)) "-- | Equality is symmetric." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "sym" Nothing,DComment (DP (0,-3),DP (0,24)) "-- | Equality is symmetric." Nothing,DComment (DP (0,-23),DP (0,-21)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1-3
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: sym}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:8-25
        }
       Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:8-25
          }
         Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:8
            }
           Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:10-12
             }
            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:14-25
            }
           Just (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:14
              }
             Just (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-2))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:19-25
              }
             Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
             (HsOpTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:19
                }
               Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: b}))) 
              ((,) 
               (WpKiApps 
                []) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:21-23
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: :=:}))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:25
                }
               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-3
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: sym})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-3
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: sym})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:5-8
             }
            Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:5-8
               }
              Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:10-15
              }
             Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:12-15
                }
               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: Refl})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,75)) "-- | Equality is transitive. This is the same as (>>>) from the 'Category'" Nothing,DComment (DP (1,1),DP (1,40)) "-- instance, but also works in GHC 6.8." Nothing,DComment (DP (0,-39),DP (0,35)) "-- | Equality is transitive. This is the same as (>>>) from the 'Category'" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "trans" Nothing,DComment (DP (0,-5),DP (0,34)) "-- instance, but also works in GHC 6.8." Nothing,DComment (DP (0,-33),DP (0,-31)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: trans}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:10-38
        }
       Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:10-38
          }
         Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:10
            }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:12-14
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:16-38
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,1)) "Refl" Nothing] [((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:16
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:21-38
              }
             Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Refl" Nothing] [])
             (HsOpTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:21
                }
               Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-2))])
               (HsTyVar 
                (Unqual {OccName: b}))) 
              ((,) 
               (WpKiApps 
                []) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:23-25
                 }
                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: :=:}))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:27-38
                }
               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
               (HsFunTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:27
                  }
                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: c}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:32-38
                  }
                 Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                 (HsOpTy 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:32
                    }
                   Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: a}))) 
                  ((,) 
                   (WpKiApps 
                    []) 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:34-36
                     }
                    Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: :=:}))) 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:38
                    }
                   Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: c}))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: trans})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: trans})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:7-10
             }
            Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:7-10
               }
              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              []))),
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:12-15
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:12-15
               }
              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:17-22
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:19-22
                }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: Refl})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1-30
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,70)) "-- | Equality is substitutive. This is defined directly, but can also" Nothing,DComment (DP (1,1),DP (1,38)) "-- be defined as 'coerce' '.' 'cong'." Nothing,DComment (DP (0,-37),DP (0,32)) "-- | Equality is substitutive. This is defined directly, but can also" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "subst" Nothing,DComment (DP (0,-5),DP (0,32)) "-- be defined as 'coerce' '.' 'cong'." Nothing,DComment (DP (0,-31),DP (0,-29)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: subst}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:10-30
        }
       Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:10-30
          }
         Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:10
            }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:12-14
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:16-30
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:16
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21-30
              }
             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
             (HsFunTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21-23
                }
               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21
                  }
                 Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: f}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:23
                  }
                 Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: a}))))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:28-30
                }
               Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: f}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:30
                  }
                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: b}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: subst})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: subst})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:7-10
             }
            Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:7-10
               }
              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:12-15
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:14-15
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: id})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1-39
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,70)) "-- | Substitution inside nested type constructors. This is equivalent" Nothing,DComment (DP (1,1),DP (1,38)) "-- to 'coerce' '.' 'cong' '.' 'cong'." Nothing,DComment (DP (0,-37),DP (0,32)) "-- | Substitution inside nested type constructors. This is equivalent" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "subst2" Nothing,DComment (DP (0,-6),DP (0,31)) "-- to 'coerce' '.' 'cong' '.' 'cong'." Nothing,DComment (DP (0,-30),DP (0,-28)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "g" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "g" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1-6
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: subst2}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:11-39
        }
       Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:11-39
          }
         Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:11
            }
           Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:13-15
             }
            Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:17-39
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:17
              }
             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22-39
              }
             Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
             (HsFunTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22-28
                }
               Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22
                  }
                 Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: f}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:24-28
                  }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsParTy 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:25-27
                    }
                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:25
                      }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: g}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:27
                      }
                     Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: a}))))))))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:33-39
                }
               Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:33
                  }
                 Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: f}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:35-39
                  }
                 Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsParTy 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:36-38
                    }
                   Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:36
                      }
                     Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: g}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:38
                      }
                     Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: b}))))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-6
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: subst2})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-6
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: subst2})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:8-11
             }
            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:8-11
               }
              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:13-16
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:15-16
                }
               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: id})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1-30
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,31)) "-- | Equality is congruential." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "cong" Nothing,DComment (DP (0,-4),DP (0,26)) "-- | Equality is congruential." Nothing,DComment (DP (0,-25),DP (0,-23)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1-4
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: cong}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:9-30
        }
       Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:9-30
          }
         Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:9
            }
           Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:11-13
             }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:15-30
            }
           Just (Ann (DP (0,-2)) (ColDelta 15) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:15
              }
             Just (Ann (DP (0,-2)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-2))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:20-30
              }
             Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
             (HsOpTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:20-22
                }
               Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:20
                  }
                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: f}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:22
                  }
                 Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: a}))))) 
              ((,) 
               (WpKiApps 
                []) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:24-26
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: :=:}))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:28-30
                }
               Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: f}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:30
                  }
                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: b}))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-4
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: cong})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-4
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: cong})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:6-9
             }
            Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:6-9
               }
              Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:11-16
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:13-16
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: Refl})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,59)) "-- | Congruence for type constructors with two parameters." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "cong2" Nothing,DComment (DP (0,-5),DP (0,53)) "-- | Congruence for type constructors with two parameters." Nothing,DComment (DP (0,-52),DP (0,-50)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: cong2}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:10-46
        }
       Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:10-46
          }
         Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:10
            }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:12-14
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:16-46
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,1)) "Refl" Nothing] [((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:16
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:21-46
              }
             Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Refl" Nothing] [])
             (HsOpTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:21
                }
               Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-2))])
               (HsTyVar 
                (Unqual {OccName: c}))) 
              ((,) 
               (WpKiApps 
                []) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:23-25
                 }
                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: :=:}))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:27-46
                }
               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
               (HsFunTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:27
                  }
                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: d}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32-46
                  }
                 Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                 (HsOpTy 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32-36
                    }
                   Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32-34
                      }
                     Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32
                        }
                       Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: f}))) 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:34
                        }
                       Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: a}))))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:36
                      }
                     Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: c}))))) 
                  ((,) 
                   (WpKiApps 
                    []) 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:38-40
                     }
                    Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: :=:}))) 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:42-46
                    }
                   Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:42-44
                      }
                     Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                     (HsAppTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:42
                        }
                       Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: f}))) 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:44
                        }
                       Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsTyVar 
                        (Unqual {OccName: b}))))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:46
                      }
                     Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: d}))))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: cong2})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: cong2})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:7-10
             }
            Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:7-10
               }
              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              []))),
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:12-15
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:12-15
               }
              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:17-22
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:19-22
                }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: Refl})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1-66
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,61)) "-- | Congruence for type constructors with three parameters." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "cong3" Nothing,DComment (DP (0,-5),DP (0,55)) "-- | Congruence for type constructors with three parameters." Nothing,DComment (DP (0,-54),DP (0,-52)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,0),DP (0,2)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: cong3}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:10-66
        }
       Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:10-66
          }
         Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:10
            }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:12-14
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:16-66
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,1)) "Refl" Nothing] [((AnnComment DComment (DP (0,-1),DP (0,3)) "Refl" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,0))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:16-17
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: a'}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:21-66
              }
             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
             (HsOpTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:21
                }
               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: b}))) 
              ((,) 
               (WpKiApps 
                []) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:23-25
                 }
                Just (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: :=:}))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:27-66
                }
               Just (Ann (DP (0,-1)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [((G AnnRarrow),DP (0,1))])
               (HsFunTy 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:27-28
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                 (HsTyVar 
                  (Unqual {OccName: b'}))) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:33-66
                  }
                 Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
                 (HsOpTy 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:33
                    }
                   Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: c}))) 
                  ((,) 
                   (WpKiApps 
                    []) 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:35-37
                     }
                    Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: :=:}))) 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:39-66
                    }
                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
                   (HsFunTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:39-40
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: c'}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-66
                      }
                     Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
                     (HsOpTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-51
                        }
                       Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                       (HsAppTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-49
                          }
                         Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                         (HsAppTy 
                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-47
                            }
                           Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                           (HsAppTy 
                            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45
                              }
                             Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsTyVar 
                              (Unqual {OccName: f}))) 
                            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:47
                              }
                             Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsTyVar 
                              (Unqual {OccName: a}))))) 
                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:49
                            }
                           Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsTyVar 
                            (Unqual {OccName: b}))))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:51
                          }
                         Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: c}))))) 
                      ((,) 
                       (WpKiApps 
                        []) 
                       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:53-55
                         }
                        Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: :=:}))) 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57-66
                        }
                       Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [])
                       (HsAppTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57-63
                          }
                         Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [])
                         (HsAppTy 
                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57-60
                            }
                           Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [])
                           (HsAppTy 
                            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57
                              }
                             Just (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsTyVar 
                              (Unqual {OccName: f}))) 
                            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:59-60
                              }
                             Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsTyVar 
                              (Unqual {OccName: a'}))))) 
                          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:62-63
                            }
                           Just (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsTyVar 
                            (Unqual {OccName: b'}))))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:65-66
                          }
                         Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: c'}))))))))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: cong3})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: cong3})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:7-10
             }
            Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:7-10
               }
              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              []))),
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:12-15
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:12-15
               }
              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              []))),
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:17-20
             }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:17-20
               }
              Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:22-27
              }
             Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:24-27
                }
               Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: Refl})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,55)) "-- | Coerce a type to another using an equality proof." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "coerce" Nothing,DComment (DP (0,-6),DP (0,48)) "-- | Coerce a type to another using an equality proof." Nothing,DComment (DP (0,-47),DP (0,-45)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1-6
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: coerce}))] 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:11-27
        }
       Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
         []) 
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:11-27
          }
         Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [])
         (HsOpTy 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:11
            }
           Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ((,) 
           (WpKiApps 
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:13-15
             }
            Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: :=:}))) 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:17-27
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:17
              }
             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: b}))) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:22-27
              }
             Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
             (HsFunTy 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:22
                }
               Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))) 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:27
                }
               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: b}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-6
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: coerce})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-6
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: coerce})) 
            (False))) 
          [
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:8-11
             }
            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:8-11
               }
              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Refl})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:13-16
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:15-16
                }
               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: id})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(109,1)-(110,38)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,69)) "-- | A type class for constructing equality proofs. This is as close" Nothing,DComment (DP (1,1),DP (1,69)) "-- | A type class for constructing equality proofs. This is as close" Nothing,DComment (DP (0,-68),DP (0,2)) "-- as we can get to decidable equality on types. Note that @f@ must be" Nothing,DComment (DP (1,1),DP (1,38)) "-- a GADT to be able to define 'eqT'." Nothing,DComment (DP (0,-37),DP (0,33)) "-- as we can get to decidable equality on types. Note that @f@ must be" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "class" Nothing,DComment (DP (0,-5),DP (0,32)) "-- a GADT to be able to define 'eqT'." Nothing,DComment (DP (0,-31),DP (0,-28)) "EqT" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnClass),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])
    (TyClD 
     (ClassDecl 
      ({ <no location info> }
       Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
       []) 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:7-9
        }
       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "eqT" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: EqT})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:11
          }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [((G AnnVal),DP (0,0))])
         (UserTyVar 
          (Unqual {OccName: f})))]) 
      [] 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:3-38
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-2)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
        (TypeSig 
         [
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:3-5
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: eqT}))] 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-38
           }
          Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
          (HsForAllTy 
           (Implicit) 
           (Nothing) 
           (HsQTvs 
            [] 
            []) 
           ({ <no location info> }
            Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-38
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
            (HsFunTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-12
               }
              Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10
                 }
                Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: f}))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:12
                 }
                Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: a}))))) 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17-38
               }
              Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
              (HsFunTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17-19
                 }
                Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17
                   }
                  Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: f}))) 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:19
                   }
                  Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: b}))))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:24-38
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:24-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:30-38
                   }
                  Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:31-37
                     }
                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                    (HsOpTy 
                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:31
                       }
                      Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: a}))) 
                     ((,) 
                      (WpKiApps 
                       []) 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:33-35
                        }
                       Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: :=:}))) 
                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:37
                       }
                      Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: b}))))))))))))))) 
         (PlaceHolder)))] {Bag(Located (HsBind RdrName)): 
      []} 
      [] 
      [] 
      [] 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(115,1)-(116,62)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (0,-59),DP (0,8)) "-- constructor with two parameters. Can be useful when representing" Nothing,DComment (DP (1,1),DP (1,28)) "-- relations between types." Nothing,DComment (DP (0,-27),DP (0,40)) "-- constructor with two parameters. Can be useful when representing" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "class" Nothing,DComment (DP (0,-5),DP (0,22)) "-- relations between types." Nothing,DComment (DP (0,-21),DP (0,-17)) "EqT2" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnClass),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])
    (TyClD 
     (ClassDecl 
      ({ <no location info> }
       Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
       []) 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:7-10
        }
       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "eqT2" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: EqT2})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:12
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [((G AnnVal),DP (0,0))])
         (UserTyVar 
          (Unqual {OccName: f})))]) 
      [] 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:3-62
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-3)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
        (TypeSig 
         [
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:3-6
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: eqT2}))] 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-62
           }
          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
          (HsForAllTy 
           (Implicit) 
           (Nothing) 
           (HsQTvs 
            [] 
            []) 
           ({ <no location info> }
            Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-62
             }
            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
            (HsFunTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-15
               }
              Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-13
                 }
                Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11
                   }
                  Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: f}))) 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:13
                   }
                  Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: a}))))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:15
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: b}))))) 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-62
               }
              Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
              (HsFunTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-24
                 }
                Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-22
                   }
                  Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                  (HsAppTy 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20
                     }
                    Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: f}))) 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:22
                     }
                    Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: c}))))) 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:24
                   }
                  Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: d}))))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:29-62
                 }
                Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                (HsTupleTy 
                 (HsBoxedOrConstraintTuple) 
                 [
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:30-44
                    }
                   Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnComma),DP (0,0))])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:30-34
                      }
                     Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: Maybe}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:36-44
                      }
                     Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsParTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:37-43
                        }
                       Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])
                       (HsOpTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:37
                          }
                         Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: a}))) 
                        ((,) 
                         (WpKiApps 
                          []) 
                         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:39-41
                           }
                          Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: :=:}))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:43
                          }
                         Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: c}))))))))),
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:47-61
                    }
                   Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:47-51
                      }
                     Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: Maybe}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:53-61
                      }
                     Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsParTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:54-60
                        }
                       Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [])
                       (HsOpTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:54
                          }
                         Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: b}))) 
                        ((,) 
                         (WpKiApps 
                          []) 
                         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:56-58
                           }
                          Just (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: :=:}))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:60
                          }
                         Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: d})))))))))])))))))) 
         (PlaceHolder)))] {Bag(Located (HsBind RdrName)): 
      []} 
      [] 
      [] 
      [] 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(121,1)-(122,89)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (0,-59),DP (0,10)) "-- constructor with three parameters. If you find a use for this, let" Nothing,DComment (DP (1,1),DP (1,12)) "-- me know." Nothing,DComment (DP (0,-11),DP (0,58)) "-- constructor with three parameters. If you find a use for this, let" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "class" Nothing,DComment (DP (0,-5),DP (0,6)) "-- me know." Nothing,DComment (DP (0,-5),DP (0,-1)) "EqT3" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnClass),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])
    (TyClD 
     (ClassDecl 
      ({ <no location info> }
       Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
       []) 
      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:7-10
        }
       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "eqT3" Nothing] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: EqT3})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:12
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [((G AnnVal),DP (0,0))])
         (UserTyVar 
          (Unqual {OccName: f})))]) 
      [] 
      [
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:3-89
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-3)) "b" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
        (TypeSig 
         [
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:3-6
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: eqT3}))] 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-89
           }
          Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
          (HsForAllTy 
           (Implicit) 
           (Nothing) 
           (HsQTvs 
            [] 
            []) 
           ({ <no location info> }
            Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
            []) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-89
             }
            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
            (HsFunTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-17
               }
              Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-15
                 }
                Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                  (HsAppTy 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11
                     }
                    Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: f}))) 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:13
                     }
                    Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: a}))))) 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:15
                   }
                  Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: b}))))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:17
                 }
                Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: c}))))) 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-89
               }
              Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
              (HsFunTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-31
                 }
                Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                  (HsAppTy 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-25
                     }
                    Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22
                       }
                      Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: f}))) 
                     ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:24-25
                       }
                      Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: a'}))))) 
                   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:27-28
                     }
                    Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: b'}))))) 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:30-31
                   }
                  Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: c'}))))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:36-89
                 }
                Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                (HsTupleTy 
                 (HsBoxedOrConstraintTuple) 
                 [
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:37-52
                    }
                   Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnComma),DP (0,0))])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:37-41
                      }
                     Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: Maybe}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:43-52
                      }
                     Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsParTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:44-51
                        }
                       Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])
                       (HsOpTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:44
                          }
                         Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: a}))) 
                        ((,) 
                         (WpKiApps 
                          []) 
                         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:46-48
                           }
                          Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: :=:}))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:50-51
                          }
                         Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: a'}))))))))),
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:55-70
                    }
                   Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnComma),DP (0,0))])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:55-59
                      }
                     Just (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: Maybe}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:61-70
                      }
                     Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsParTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:62-69
                        }
                       Just (Ann (DP (0,0)) (ColDelta 62) DP (0,0) [] [])
                       (HsOpTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:62
                          }
                         Just (Ann (DP (0,0)) (ColDelta 62) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: b}))) 
                        ((,) 
                         (WpKiApps 
                          []) 
                         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:64-66
                           }
                          Just (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: :=:}))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:68-69
                          }
                         Just (Ann (DP (0,1)) (ColDelta 68) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: b'}))))))))),
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:73-88
                    }
                   Just (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [])
                   (HsAppTy 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:73-77
                      }
                     Just (Ann (DP (0,0)) (ColDelta 73) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsTyVar 
                      (Unqual {OccName: Maybe}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:79-88
                      }
                     Just (Ann (DP (0,1)) (ColDelta 79) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsParTy 
                      ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:80-87
                        }
                       Just (Ann (DP (0,0)) (ColDelta 80) DP (0,0) [] [])
                       (HsOpTy 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:80
                          }
                         Just (Ann (DP (0,0)) (ColDelta 80) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: c}))) 
                        ((,) 
                         (WpKiApps 
                          []) 
                         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:82-84
                           }
                          Just (Ann (DP (0,1)) (ColDelta 82) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: :=:}))) 
                        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:86-87
                          }
                         Just (Ann (DP (0,1)) (ColDelta 86) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: c'})))))))))])))))))) 
         (PlaceHolder)))] {Bag(Located (HsBind RdrName)): 
      []} 
      [] 
      [] 
      [] 
      (PlaceHolder)))),
   ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(124,1)-(125,27)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,4)) "EqT" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ":=:" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:10-22
         }
        Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,3)) "eqT" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] [])
          []) 
         ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:10-22
           }
          Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:10-12
             }
            Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])
            (HsTyVar 
             (Unqual {OccName: EqT}))) 
           ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:14-22
             }
            Just (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Refl" Nothing] [((G AnnOpenP),DP (0,-2)),((G AnnCloseP),DP (0,0))])
            (HsParTy 
             ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-21
               }
              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-19
                 }
                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: :=:}))) 
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:21
                 }
                Just (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Just" Nothing] [((G AnnVal),DP (0,-2))])
                (HsTyVar 
                 (Unqual {OccName: a}))))))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-27
          }
         Just (Ann (DP (0,2)) (ColDelta 3) DP (1,3) [DComment (DP (0,-5),DP (0,-1)) "Refl" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-5
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: eqT})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-27
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-5
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: eqT})) 
                (False))) 
              [
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:7-10
                 }
                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:7-10
                   }
                  Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: Refl})) 
                 (PrefixCon 
                  []))),
               ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:12-15
                 }
                Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:12-15
                   }
                  Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: Refl})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:17-27
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:19-27
                    }
                   Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:19-22
                      }
                     Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: Just}))) 
                    ({ ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:24-27
                      }
                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: Refl})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing)))))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (4,15)) "{-# LANGUAGE TypeOperators\n           , GADTs\n           , FlexibleInstances\n           , CPP\n           #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,30)) "#if __GLASGOW_HASKELL__ >= 706" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,27)) "{-# LANGUAGE PolyKinds #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-5),DP (0,21)) "{-# LANGUAGE PolyKinds #-}" Nothing),DP (0,-5)),((AnnComment DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,75)) "-------------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,31)) "-- Module      : Data.Type.Equality" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,36)) "-- Module      : Data.Type.Equality" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-35),DP (0,6)) "-- Copyright   : (c) 2009, Erik Hesselink" Nothing),DP (0,-35)),((AnnComment DComment (DP (1,1),DP (1,22)) "-- License     : BSD3" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-21),DP (0,20)) "-- Copyright   : (c) 2009, Erik Hesselink" Nothing),DP (0,-21)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,19)) "-- License     : BSD3" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- Maintainer  : Erik Hesselink <hesselink@gmail.com>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,30)) "-- Stability   : Experimental" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-29),DP (0,24)) "-- Maintainer  : Erik Hesselink <hesselink@gmail.com>" Nothing),DP (0,-29)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,27)) "-- Stability   : Experimental" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- Type equality, coercion/cast and other operations." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- Type equality, coercion/cast and other operations." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-------------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-6),DP (0,73)) "-------------------------------------------------------------------------------" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,-72),DP (0,-54)) "Data.Type.Equality" Nothing),DP (0,-72)),((G AnnModule),DP (21,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) ":=:" Nothing),DP (0,0)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(23,3)-(38,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-17),DP (0,-16)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Refl" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "sym" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-15 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:11-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:24:5-7 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:24:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,2)) "trans" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:25:5-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:25:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:26:5-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:26:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,1)) "subst2" Nothing),DP (0,-5)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:27:5-10 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:27:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,5)) "cong" Nothing),DP (0,1)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:29:5-8 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:29:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,1)) "cong2" Nothing),DP (0,-4)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:30:5-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:30:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:31:5-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:31:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,7)) "coerce" Nothing),DP (0,1)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:33:5-10 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:33:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "EqT" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) "eqT" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-12 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,1)) "EqT2" Nothing),DP (0,-3)),((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "(" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,4)) "eqT2" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:9-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-14 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:10-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:5-14 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,1)) "where" Nothing),DP (0,-4)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:10-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(40,1)-(42,31) CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,23)) "#if __GLASGOW_HASKELL__ >= 609" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:16-31 CN "(:)" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 16) DP (2,16) [DComment (DP (1,16),DP (1,22)) "hiding" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "id" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,17)) "Control.Category" Nothing] [((G AnnHiding),DP (0,-8)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:24-25 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:24-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-1)) "#endif" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(49,1)-(50,17) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,71)) "-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and" Nothing,DComment (DP (1,1),DP (1,61)) "-- @b@ are equal. By pattern matching on @Refl@ this fact is" Nothing,DComment (DP (0,-60),DP (0,10)) "-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and" Nothing,DComment (DP (1,1),DP (1,35)) "-- introduced to the type checker." Nothing,DComment (DP (0,-34),DP (0,26)) "-- @b@ are equal. By pattern matching on @Refl@ this fact is" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,-4),DP (0,30)) "-- introduced to the type checker." Nothing,DComment (DP (0,-29),DP (0,-28)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,3)) ":=:" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:6 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Refl" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:8-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:12 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:3-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:3-17 CN "ConDecl" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-2),DP (0,-1)) "a" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:11-17 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:11-17 CN "ResTyGADTHook" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:13-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1-11 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "infix" Nothing,DComment (DP (0,1),DP (0,2)) "4" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing] [((G AnnInfix),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:9-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(56,1)-(57,38) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,71)) "-- | Any value is just shown as \"Refl\", but this cannot be derived for" Nothing,DComment (DP (1,1),DP (1,43)) "-- a GADT, so it is defined here manually." Nothing,DComment (DP (0,-42),DP (0,28)) "-- | Any value is just shown as \"Refl\", but this cannot be derived for" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,-8),DP (0,34)) "-- a GADT, so it is defined here manually." Nothing,DComment (DP (0,-33),DP (0,-29)) "Show" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,9)) "showsPrec" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:15-23 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "_" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,9)) "showString" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,3)) "Refl" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:16-22 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:18-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-38 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,3),DP (0,9)) "\"Refl\"" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-38 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:15-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:15-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:20-38 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:22-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:22-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:33-38 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(62,1)-(63,74) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,71)) "-- | We can only read values if the result is @a :=: a@, not @a :=: b@" Nothing,DComment (DP (1,1),DP (1,64)) "-- since that is not true, in general. We just parse the string" Nothing,DComment (DP (0,-63),DP (0,7)) "-- | We can only read values if the result is @a :=: a@, not @a :=: b@" Nothing,DComment (DP (1,1),DP (1,64)) "-- since that is not true, in general. We just parse the string" Nothing,DComment (DP (0,-63),DP (0,6)) "-- \"Refl\", optionally surrounded with parentheses, and return 'Refl'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,-8),DP (0,61)) "-- \"Refl\", optionally surrounded with parentheses, and return 'Refl'." Nothing,DComment (DP (0,-60),DP (0,-56)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,9)) "readsPrec" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:15-23 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "_" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:16-22 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:18-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 18) DP (0,1) [DComment (DP (0,0),DP (0,9)) "readParen" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-74 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-3),DP (0,2)) "False" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "\\" Nothing,DComment (DP (0,0),DP (0,1)) "s" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "[" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "Refl" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "\"Refl\"" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,4)) "lex" Nothing,DComment (DP (0,1),DP (0,2)) "s" Nothing,DComment (DP (0,0),DP (0,1)) "]" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-74 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:15-74 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:17-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:17-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:17-74 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:27-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:33-74 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73 CN "(:)" Ref "delta-1",
  (Ann (DP (0,-1)) (ColDelta 34) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73 CN "HsLam" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73 Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:35 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73 CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnVbar),DP (0,1)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41-49 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41-49 CN "LastStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:42-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:42-45 CN "Present" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:48 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-63 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-72 CN "BindStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:54-59 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:62 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:68-70 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:68-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(66,1)-(68,20) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,30)) "#if __GLASGOW_HASKELL__ >= 609" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,9)) "Category" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ":=:" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,2)) "id" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:19-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "Refl" Nothing),DP (0,-2)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:6-11 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:8-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-6 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-20 CN "FunBind" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-3)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-20 CN "Match" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:8 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:10-13 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:10-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:15-20 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,28)) "-- | Equality is symmetric." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "sym" Nothing,DComment (DP (0,-3),DP (0,24)) "-- | Equality is symmetric." Nothing,DComment (DP (0,-23),DP (0,-21)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:8 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:8-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:8-25 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:10-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:14-25 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:19-25 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:21-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:5-8 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:10-15 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:12-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1-38 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,75)) "-- | Equality is transitive. This is the same as (>>>) from the 'Category'" Nothing,DComment (DP (1,1),DP (1,40)) "-- instance, but also works in GHC 6.8." Nothing,DComment (DP (0,-39),DP (0,35)) "-- | Equality is transitive. This is the same as (>>>) from the 'Category'" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "trans" Nothing,DComment (DP (0,-5),DP (0,34)) "-- instance, but also works in GHC 6.8." Nothing,DComment (DP (0,-33),DP (0,-31)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:10 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:10-38 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:10-38 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:12-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:16-38 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,1)) "Refl" Nothing] [((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:21-38 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:23-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:27-38 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:32-38 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:34-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:7-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:12-15 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:12-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:17-22 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1-30 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,70)) "-- | Equality is substitutive. This is defined directly, but can also" Nothing,DComment (DP (1,1),DP (1,38)) "-- be defined as 'coerce' '.' 'cong'." Nothing,DComment (DP (0,-37),DP (0,32)) "-- | Equality is substitutive. This is defined directly, but can also" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "subst" Nothing,DComment (DP (0,-5),DP (0,32)) "-- be defined as 'coerce' '.' 'cong'." Nothing,DComment (DP (0,-31),DP (0,-29)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:10 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:10-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:10-30 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:12-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:16-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:28-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:7-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:12-15 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:14-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1-39 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,70)) "-- | Substitution inside nested type constructors. This is equivalent" Nothing,DComment (DP (1,1),DP (1,38)) "-- to 'coerce' '.' 'cong' '.' 'cong'." Nothing,DComment (DP (0,-37),DP (0,32)) "-- | Substitution inside nested type constructors. This is equivalent" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "subst2" Nothing,DComment (DP (0,-6),DP (0,31)) "-- to 'coerce' '.' 'cong' '.' 'cong'." Nothing,DComment (DP (0,-30),DP (0,-28)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "g" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "g" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:11-39 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:11-39 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:13-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:17-39 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22-39 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:24-28 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:25-27 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:33-39 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:35-39 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:36-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:8-11 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:8-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:13-16 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1-30 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,31)) "-- | Equality is congruential." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "cong" Nothing,DComment (DP (0,-4),DP (0,26)) "-- | Equality is congruential." Nothing,DComment (DP (0,-25),DP (0,-23)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:9 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:9-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:9-30 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:11-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:15-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 15) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:20-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:20-30 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:24-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:28-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:6-9 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:6-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:11-16 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:13-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1-46 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,59)) "-- | Congruence for type constructors with two parameters." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "cong2" Nothing,DComment (DP (0,-5),DP (0,53)) "-- | Congruence for type constructors with two parameters." Nothing,DComment (DP (0,-52),DP (0,-50)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:10 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:10-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:10-46 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:12-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:16-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,1)) "Refl" Nothing] [((AnnComment DComment (DP (0,0),DP (0,1)) "=" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:21-46 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:23-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:27-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32-34 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32-36 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:32-46 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:38-40 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:42-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:42-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:7-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:12-15 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:12-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:17-22 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1-66 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,61)) "-- | Congruence for type constructors with three parameters." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "cong3" Nothing,DComment (DP (0,-5),DP (0,55)) "-- | Congruence for type constructors with three parameters." Nothing,DComment (DP (0,-54),DP (0,-52)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,0),DP (0,2)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:10 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:10-66 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:10-66 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:12-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:16-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:16-66 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-3),DP (0,1)) "Refl" Nothing] [((AnnComment DComment (DP (0,-1),DP (0,3)) "Refl" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:21-66 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:23-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:27-66 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 27) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:33-66 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:35-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:39-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:39-66 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-47 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-49 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-51 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:45-66 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:49 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:53-55 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57-60 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57-63 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 57) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:57-66 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:59-60 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:62-63 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:65-66 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:7-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:12-15 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:12-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:17-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:17-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:22-27 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,55)) "-- | Coerce a type to another using an equality proof." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "coerce" Nothing,DComment (DP (0,-6),DP (0,48)) "-- | Coerce a type to another using an equality proof." Nothing,DComment (DP (0,-47),DP (0,-45)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:11-27 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:11-27 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:13-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:17-27 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "id" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:22-27 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:8-11 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:8-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:13-16 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(109,1)-(110,38) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,69)) "-- | A type class for constructing equality proofs. This is as close" Nothing,DComment (DP (1,1),DP (1,69)) "-- | A type class for constructing equality proofs. This is as close" Nothing,DComment (DP (0,-68),DP (0,2)) "-- as we can get to decidable equality on types. Note that @f@ must be" Nothing,DComment (DP (1,1),DP (1,38)) "-- a GADT to be able to define 'eqT'." Nothing,DComment (DP (0,-37),DP (0,33)) "-- as we can get to decidable equality on types. Note that @f@ must be" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "class" Nothing,DComment (DP (0,-5),DP (0,32)) "-- a GADT to be able to define 'eqT'." Nothing,DComment (DP (0,-31),DP (0,-28)) "EqT" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnClass),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:7-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,3)) "eqT" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:11 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:3-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:3-38 CN "TypeSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-2)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-12 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-38 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-38 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:12 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17-19 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17-38 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:24-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:30-38 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:31-37 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:33-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(115,1)-(116,62) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (0,-59),DP (0,8)) "-- constructor with two parameters. Can be useful when representing" Nothing,DComment (DP (1,1),DP (1,28)) "-- relations between types." Nothing,DComment (DP (0,-27),DP (0,40)) "-- constructor with two parameters. Can be useful when representing" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "class" Nothing,DComment (DP (0,-5),DP (0,22)) "-- relations between types." Nothing,DComment (DP (0,-21),DP (0,-17)) "EqT2" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnClass),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "eqT2" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:12 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:3-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:3-62 CN "TypeSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-3)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,2)) "d" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-13 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-15 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-62 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-62 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-62 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:29-62 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:30-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:30-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:36-44 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:37-43 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:39-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:47-51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:47-61 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:53-61 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:54 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:54-60 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:56-58 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:60 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(121,1)-(122,89) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (1,1),DP (1,60)) "-- | A type class for constructing equality proofs for type" Nothing,DComment (DP (0,-59),DP (0,10)) "-- constructor with three parameters. If you find a use for this, let" Nothing,DComment (DP (1,1),DP (1,12)) "-- me know." Nothing,DComment (DP (0,-11),DP (0,58)) "-- constructor with three parameters. If you find a use for this, let" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "class" Nothing,DComment (DP (0,-5),DP (0,6)) "-- me know." Nothing,DComment (DP (0,-5),DP (0,-1)) "EqT3" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnClass),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "a" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,4)) "eqT3" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:12 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:3-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:3-89 CN "TypeSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-4),DP (0,-3)) "b" Nothing,DComment (DP (0,1),DP (0,2)) "c" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "f" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "a" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "a'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "b'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "c" Nothing,DComment (DP (0,1),DP (0,4)) ":=:" Nothing,DComment (DP (0,1),DP (0,3)) "c'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-13 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-15 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-17 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-89 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-89 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-89 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:24-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:30-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:36-89 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:37-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:37-52 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:43-52 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:44-51 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:46-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:50-51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:55-59 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 55) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:55-70 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:61-70 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:62 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 62) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:62-69 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 62) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:64-66 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:68-69 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 68) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:73-77 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 73) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:73-88 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:79-88 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 79) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:80 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 80) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:80-87 CN "HsOpTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 80) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:82-84 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 82) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:86-87 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 86) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(124,1)-(125,27) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,4)) "EqT" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ":=:" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:10-12 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:10-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:10-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-6),DP (0,-6)) "" Nothing,DComment (DP (0,0),DP (0,3)) "eqT" Nothing,DComment (DP (0,1),DP (0,5)) "Refl" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:14-22 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Refl" Nothing] [((G AnnOpenP),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "=" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 21) DP (0,1) [DComment (DP (0,-1),DP (0,3)) "Just" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-27 CN "FunBind" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 3) DP (1,3) [DComment (DP (0,-5),DP (0,-1)) "Refl" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-27 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:7-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:7-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:12-15 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:12-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:17-27 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:19-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-57,0)) (ColDelta 0) DP (-57,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-49,0)) (ColDelta 0) DP (-49,0) [] []))]
==============
([((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:1:1,
    AnnModule),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:22:1-6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:1:1,
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:38:5-9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(23,3)-(38,3),
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:38:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(23,3)-(38,3),
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-9,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-9,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-9,
    AnnVal),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:6-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-15,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-15,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:24:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:5-15,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:23:10]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:24:5-7,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:25:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:25:5-9,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:26:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:26:5-9,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:27:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:27:5-10,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:29:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:29:5-8,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:30:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:30:5-9,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:31:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:31:5-9,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:33:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:33:5-10,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-12,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:12]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-12,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:5-12,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:35:8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-14,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:14]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-14,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:5-14,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:36:9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:5-14,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:14]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:5-14,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:37:9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(40,1)-(42,31),
    AnnImport),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:40:1-6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(40,1)-(42,31),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:16-31,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:31]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:16-31,
    AnnHiding),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:16-21]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:16-31,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:23]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:24-25,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:26]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:30]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:28-30,
    AnnVal),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:42:29]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:1-23,
    AnnImport),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:1-6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:43:1-23,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(49,1)-(50,17),
    AnnData),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:1-4]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(49,1)-(50,17),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(49,1)-(50,17),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:49:14-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:3-17,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:50:8-9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1-11,
    AnnInfix),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1-11,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:1-11,
    AnnVal),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:52:7]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(56,1)-(57,38),
    AnnInstance),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:1-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(56,1)-(57,38),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(56,1)-(57,38),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:25-29]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:15-23,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:23]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:15-23,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:56:15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-38,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:20]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-38,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:57:3-11]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(62,1)-(63,74),
    AnnInstance),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:1-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(62,1)-(63,74),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(62,1)-(63,74),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:25-29]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:15-23,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:23]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:15-23,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:62:15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-74,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-74,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:3-11]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:33-74,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:74]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:33-74,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:33]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73,
    AnnLam),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:34-73,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:37-38]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73,
    AnnCloseS),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:73]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73,
    AnnOpenS),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:40-73,
    AnnVbar),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:51]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41-49,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:49]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41-49,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:41]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:42-45,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:46]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-63,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:63]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-63,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:53-72,
    AnnLarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:65-66]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:54-59,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:63:60]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(66,1)-(68,20),
    AnnInstance),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:1-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(66,1)-(68,20),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(66,1)-(68,20),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:25-29]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:19-23,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:23]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:19-23,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:19-23,
    AnnVal),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:66:20-22]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-4]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:67:3-11,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-13,
    AnnVal),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-20,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:3-20,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:68:8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1-25,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:5-6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:1-25,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:14,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:16-17]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:14-25,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:72:16-17]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:10]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-3]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:73:1-15,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1-38,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:7-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:1-38,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:16,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:16-38,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:27,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:29-30]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:27-38,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:77:29-30]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:17]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:78:1-22,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1-30,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:7-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:1-30,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:16,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:16-30,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21-23,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:25-26]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:21-30,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:82:25-26]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:12]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:83:1-15,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1-39,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:8-9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:1-39,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:17,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:19-20]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:17-39,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:19-20]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22-28,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:30-31]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:22-39,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:30-31]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:24-28,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:28]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:24-28,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:24]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:35-39,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:39]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:35-39,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:87:35]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:13]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:88:1-16,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1-30,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:6-7]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:1-30,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:15,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:17-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:15-30,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:91:17-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:11]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-4]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:92:1-16,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1-46,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:7-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:1-46,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:16,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:16-46,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:27,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:29-30]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:27-46,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:95:29-30]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:17]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:96:1-22,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1-66,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:7-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:1-66,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:16-17,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:16-66,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:18-19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:27-28,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:30-31]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:27-66,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:30-31]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:39-40,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:42-43]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:39-66,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:99:42-43]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:22]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:100:1-27,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1-27,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:8-9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:1-27,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:17,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:19-20]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:17-27,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:19-20]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:22,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:24-25]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:22-27,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:103:24-25]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:13]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-6]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:104:1-16,
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(109,1)-(110,38),
    AnnClass),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(109,1)-(110,38),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(109,1)-(110,38),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:109:13-17]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:3-38,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:7-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:10-38,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:14-15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:17-38,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:21-22]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:30-38,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:38]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:30-38,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:110:30]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(115,1)-(116,62),
    AnnClass),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(115,1)-(116,62),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(115,1)-(116,62),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:115:14-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:3-62,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:8-9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:11-62,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:17-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:20-62,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:26-27]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:29-62,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:62]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:29-62,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:29]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:30-44,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:45]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:36-44,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:44]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:36-44,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:36]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:53-61,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:61]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:53-61,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:116:53]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(121,1)-(122,89),
    AnnClass),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:1-5]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(121,1)-(122,89),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(121,1)-(122,89),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:121:14-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:3-89,
    AnnDcolon),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:8-9]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:11-89,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:19-20]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:22-89,
    AnnRarrow),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:33-34]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:36-89,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:89]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:36-89,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:36]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:37-52,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:53]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:43-52,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:52]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:43-52,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:43]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:55-70,
    AnnComma),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:71]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:61-70,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:70]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:61-70,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:61]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:79-88,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:88]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:79-88,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:122:79]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(124,1)-(125,27),
    AnnInstance),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:1-8]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(124,1)-(125,27),
    AnnSemi),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:127:1]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:(124,1)-(125,27),
    AnnWhere),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:24-28]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:14-22,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:22]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:14-22,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:14]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-19,
    AnnCloseP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:19]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-19,
    AnnOpenP),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:15-19,
    AnnVal),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:124:16-18]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-27,
    AnnEqual),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:17]),
  ((../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-27,
    AnnFunId),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:125:3-5]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/type-equality-0.1.2/src/Data/Type/Equality.hs:127:1])],
 [(<no location info>,
   [AnnLineComment "-- me know.",
    AnnLineComment "-- constructor with three parameters. If you find a use for this, let",
    AnnLineComment "-- | A type class for constructing equality proofs for type",
    AnnLineComment "-- relations between types.",
    AnnLineComment "-- constructor with two parameters. Can be useful when representing",
    AnnLineComment "-- | A type class for constructing equality proofs for type",
    AnnLineComment "-- a GADT to be able to define 'eqT'.",
    AnnLineComment "-- as we can get to decidable equality on types. Note that @f@ must be",
    AnnLineComment "-- | A type class for constructing equality proofs. This is as close",
    AnnLineComment "-- | Coerce a type to another using an equality proof.",
    AnnLineComment "-- | Congruence for type constructors with three parameters.",
    AnnLineComment "-- | Congruence for type constructors with two parameters.",
    AnnLineComment "-- | Equality is congruential.",
    AnnLineComment "-- to 'coerce' '.' 'cong' '.' 'cong'.",
    AnnLineComment "-- | Substitution inside nested type constructors. This is equivalent",
    AnnLineComment "-- be defined as 'coerce' '.' 'cong'.",
    AnnLineComment "-- | Equality is substitutive. This is defined directly, but can also",
    AnnLineComment "-- instance, but also works in GHC 6.8.",
    AnnLineComment "-- | Equality is transitive. This is the same as (>>>) from the 'Category'",
    AnnLineComment "-- | Equality is symmetric.",
    AnnLineComment "-- \"Refl\", optionally surrounded with parentheses, and return 'Refl'.",
    AnnLineComment "-- since that is not true, in general. We just parse the string",
    AnnLineComment "-- | We can only read values if the result is @a :=: a@, not @a :=: b@",
    AnnLineComment "-- a GADT, so it is defined here manually.",
    AnnLineComment "-- | Any value is just shown as \"Refl\", but this cannot be derived for",
    AnnLineComment "-- introduced to the type checker.",
    AnnLineComment "-- @b@ are equal. By pattern matching on @Refl@ this fact is",
    AnnLineComment "-- | Type equality. A value of @a :=: b@ is a proof that types @a@ and",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- Type equality, coercion/cast and other operations.",
    AnnLineComment "--",
    AnnLineComment "-- Stability   : Experimental",
    AnnLineComment "-- Maintainer  : Erik Hesselink <hesselink@gmail.com>",
    AnnLineComment "--", AnnLineComment "-- License     : BSD3",
    AnnLineComment "-- Copyright   : (c) 2009, Erik Hesselink",
    AnnLineComment "-- Module      : Data.Type.Equality",
    AnnLineComment "-- |",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnBlockComment "{-# LANGUAGE PolyKinds #-}",
    AnnBlockComment "{-# LANGUAGE TypeOperators\n           , GADTs\n           , FlexibleInstances\n           , CPP\n           #-}"])])