{-# LANGUAGE Trustworthy #-}
{-# LANGUAGE CPP
           , NoImplicitPrelude
           , ExistentialQuantification
           , DeriveDataTypeable
  #-}
{-# OPTIONS_GHC -funbox-strict-fields #-}
{-# OPTIONS_HADDOCK hide #-}{-# OPTIONS_GHC -funbox-strict-fields #-}
{-# OPTIONS_HADDOCK hide #-}
-----------------------------------------------------------------------------
-- |-----------------------------------------------------------------------------
-- |-- Module      :  GHC.IO.Handle.Types
-- Module      :  GHC.IO.Handle.Types-- Copyright   :  (c) The University of Glasgow, 1994-2009
-- License     :  see libraries/base/LICENSE-- Copyright   :  (c) The University of Glasgow, 1994-2009
---- License     :  see libraries/base/LICENSE
---- Maintainer  :  libraries@haskell.org
-- Stability   :  internal-- Maintainer  :  libraries@haskell.org
-- Stability   :  internal-- Portability :  non-portable
---- Portability :  non-portable
---- Basic types for the implementation of IO Handles.
---- Basic types for the implementation of IO Handles.
-------------------------------------------------------------------------------
-----------------------------------------------------------------------------
module GHC.IO.Handle.Types (
moduleHandleGHC.IO.Handle.Types(..), Handle__((..), showHandle,
      HandlecheckHandleInvariants(..), Handle__(.., ), showHandle,
      checkHandleInvariantsBufferList(..),      ,
      BufferList(..),
      HandleTypeisReadableHandleType(..),     , isWritableHandleType, isReadWriteHandleType,
      isReadableHandleTypeBufferMode(..),     , isWritableHandleType, isReadWriteHandleType,
      BufferModeBufferCodec(..(..),,
      BufferCodec(..), Newline(..), nativeNewline,
      NewlineModeuniversalNewlineMode(..), Newline, noNewlineTranslation(..), nativeNewline,,nativeNewlineMode
  ) where, noNewlineTranslation, nativeNewlineMode
  ) where
#undef DEBUG

import GHC.Base
import GHC.Base
import GHC.MVarGHC.IO
import GHC.IOGHC.IO.Buffer
import GHC.IO.BufferGHC.IO.BufferedIO
import GHC.IO.BufferedIOGHC.IO.Encoding.Types
import GHC.IO.Encoding.TypesGHC.IORef
import GHC.IORefData.Maybe
import Data.MaybeGHC.Show
import GHC.Show
import GHC.Read
import GHC.WordGHC.IO.Device
import GHC.IO.Device
import#ifdef DEBUGData.Typeable
import Control.Monad
#endif

-- ---------------------------------------------------------------------------
-- Handle type-- ---------------------------------------------------------------------------
-- Handle type
--  A Handle is represented by (a reference to) a record
--  A Handle is represented by (a reference to) a record--  containing the state of the I/O port/device. We record
--  the following pieces of info:--  containing the state of the I/O port/device. We record
--  the following pieces of info:
--    * type (read,write,closed etc.)
--    * type (read,write,closed etc.)--    * the underlying file descriptor
--    * buffering mode--    * the underlying file descriptor
--    * buffering mode--    * buffer, and spare buffers
--    * buffer, and spare buffers--    * user-friendly name (usually the
--    * user-friendly name (usually the--      FilePath used when IO.openFile was called)
--      FilePath used when IO.openFile was called)
-- Note: when a Handle is garbage collected, we want to flush its buffer
-- Note: when a Handle is garbage collected, we want to flush its buffer
-- and close the OS file handle, so as to free up a (precious) resource.
-- | Haskell defines operations to read and write characters from and to files,
-- represented by values of type @Handle@.  Each value of this type is a-- | Haskell defines operations to read and write characters from and to files,
-- represented by values of type @Handle@.  Each value of this type is a-- /handle/: a record used by the Haskell run-time system to /manage/ I\/O
-- /handle/: a record used by the Haskell run-time system to /manage/ I\/O-- with file system objects.  A handle has at least the following properties:
---- with file system objects.  A handle has at least the following properties:
----  * whether it manages input or output or both;
----  * whether it manages input or output or both;
----  * whether it is /open/, /closed/ or /semi-closed/;
----  * whether it is /open/, /closed/ or /semi-closed/;
----  * whether the object is seekable;
----  * whether the object is seekable;
----  * whether buffering is disabled, or enabled on a line or block basis;
----  * whether buffering is disabled, or enabled on a line or block basis;
----  * a buffer (whose length may be zero).
----  * a buffer (whose length may be zero).
---- Most handles will also have a current I\/O position indicating where the next
-- input or output operation will occur.  A handle is /readable/ if it-- Most handles will also have a current I\/O position indicating where the next
-- input or output operation will occur.  A handle is /readable/ if it-- manages only input or both input and output; likewise, it is /writable/ if
-- it manages only output or both input and output.  A handle is /open/ when-- manages only input or both input and output; likewise, it is /writable/ if
-- first allocated.-- it manages only output or both input and output.  A handle is /open/ when
-- first allocated.-- Once it is closed it can no longer be used for either input or output,
-- though an implementation cannot re-use its storage while references-- Once it is closed it can no longer be used for either input or output,
-- though an implementation cannot re-use its storage while references-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string
-- produced by showing a handle is system dependent; it should include-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string
-- produced by showing a handle is system dependent; it should include-- enough information to identify the handle for debugging.  A handle is
-- equal according to '==' only to itself; no attempt-- enough information to identify the handle for debugging.  A handle is
-- equal according to '==' only to itself; no attempt-- is made to compare the internal state of different handles for equality.
-- is made to compare the internal state of different handles for equality.
data Handle
data= FileHandle                             -- A normal handle to a file
  = FileHandleFilePath                        -- A normal handle to a file-- the file (used for error messages
        FilePath                        -- only)-- the file (used for error messages
        !(MVar Handle__)                -- only)
        !(MVar Handle__)
  | DuplexHandle                        -- A handle to a read/write stream
  | DuplexHandleFilePath                        -- A handle to a read/write stream
        FilePath                        -- file for a FIFO, otherwise some--   descriptive string (used for error
                                        --   messages only)--   descriptive string (used for error
        !(MVar Handle__)                -- The read side--   messages only)
        !(MVar Handle__)                -- The read side-- The write side
        !(MVar Handle__)                -- The write side
  deriving Typeable
  deriving Typeable
-- NOTES:
-- NOTES:--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be
--      seekable.--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be
--      seekable.
instance Eq Handle where
instance(FileHandle Handle_ h1) where== (FileHandle _ h2)     = h1 == h2
 (FileHandleDuplexHandle h1_ )h1 _) == (FileHandleDuplexHandle h2_ )h2 _) = h1 == h2
 (DuplexHandle== _ = False_ h1 _) == (DuplexHandle _ h2 _) = h1 == h2
 _ == _ = False
data Handle__
data= foralldev enc_state dec_state . (IODevice dev, BufferedIO dev, Typeable dev) =>
  = forallHandle__{ enc_state dec_state . (IODevice dev, BufferedIO dev, Typeable dev) =>
    Handle__haDevice      :: !dev,
      haDevicehaType        :: !HandleTypedev,     ,           -- type (read/write/append etc.)
      haTypehaByteBuffer  :: HandleType!(IORef (Buffer,     Word8))-- type (read/write/append etc.),
      haByteBuffer  :: !BufferMode(IORef (Buffer,     Word8)),
      haBufferMode  :: BufferMode!(IORef (dec_state,       , Buffer Word8)),
      haLastDecode  :: !(IORef (dec_stateBuffer CharBufElem, Buffer Word8)), -- the current buffer)),
      haCharBufferhaBuffers     :: !(IORef (BufferBufferListCharBufElem)), )-- the current buffer),  -- spare buffers
      haBuffers     :: !Maybe(IORef(TextEncoderBufferListenc_state), )),  -- spare buffers
      haEncoder     :: Maybe (TextEncoder enc_state),
      haDecoderhaCodec       :: Maybe (TextEncodingTextDecoder,dec_state),
      haCodechaInputNL     :: MaybeNewline,          ,
      haInputNLhaOutputNL    :: Newline,
      haOutputNLhaOtherSide   :: NewlineMaybe (,MVar Handle__) -- ptr to the write side of a
      haOtherSide   :: Maybe (MVar Handle__) -- duplex handle.-- ptr to the write side of a
    }                                        -- duplex handle.
    }deriving Typeable
    deriving Typeable
-- we keep a few spare buffers around in a handle to avoid allocating
-- we keep a few spare buffers around in a handle to avoid allocating-- a new one for each hPutStr.  These buffers are *guaranteed* to be the
-- same size as the main buffer.-- a new one for each hPutStr.  These buffers are *guaranteed* to be the
data-- same size as the main buffer.BufferList e
data= BufferListNil e
  = BufferListNilBufferListCons (RawBuffer e) (BufferList e)
  | BufferListCons (RawBuffer e) (BufferList e)
--  Internally, we classify handles as being one
--  of the following:--  Internally, we classify handles as being one
--  of the following:
data HandleType
data= ClosedHandle
 = ClosedHandleSemiClosedHandle
 | SemiClosedHandleReadHandle
 | ReadHandleWriteHandle
 | WriteHandleAppendHandle
 | AppendHandleReadWriteHandle
 | ReadWriteHandle
isReadableHandleType :: HandleType -> Bool
isReadableHandleType ::ReadHandle -> Bool= True
isReadableHandleType ReadHandleReadWriteHandle    = True
isReadableHandleType ReadWriteHandle_                  = TrueFalse
isReadableHandleType _                  = False
isWritableHandleType :: HandleType -> Bool
isWritableHandleType ::AppendHandle ->=BoolTrue
isWritableHandleType AppendHandleWriteHandle     = True
isWritableHandleType WriteHandleReadWriteHandle = True
isWritableHandleType ReadWriteHandle_               = TrueFalse
isWritableHandleType _               = False
isReadWriteHandleType :: HandleType -> Bool
isReadWriteHandleType ::ReadWriteHandle ->{}Bool= True
isReadWriteHandleType ReadWriteHandle_              {} = TrueFalse
isReadWriteHandleType _                 = False
-- INVARIANTS on Handles:
---- INVARIANTS on Handles:
----   * A handle *always* has a buffer, even if it is only 1 character long
--   * A handle *always* has a buffer, even if it is only 1 character long--     (an unbuffered handle needs a 1 character buffer in order to support
--      hLookAhead and hIsEOF).--     (an unbuffered handle needs a 1 character buffer in order to support
--      hLookAhead and hIsEOF).--   * In a read Handle, the byte buffer is always empty (we decode when reading)
--   * In a read Handle, the byte buffer is always empty (we decode when reading)--   * In a wriite Handle, the Char buffer is always empty (we encode when writing)
----   * In a wriite Handle, the Char buffer is always empty (we encode when writing)
--checkHandleInvariants :: Handle__ -> IO ()
checkHandleInvariants#ifdef DEBUG           :: Handle__ -> IO ()
checkHandleInvariants h_ = do
 bbuf <- readIORef (haByteBuffer h_)
 checkBuffer bbuf
 cbuf <- readIORef (haCharBuffer h_)
 checkBuffer cbuf
 when (isWriteBuffer cbuf && not (isEmptyBuffer cbuf)) $
   error ("checkHandleInvariants: char write buffer non-empty: " ++
          summaryBuffer bbuf ++ ", " ++ summaryBuffer cbuf)
 when (isWriteBuffer bbuf /= isWriteBuffer cbuf) $
   error ("checkHandleInvariants: buffer modes differ: " ++
          summaryBuffer bbuf ++ ", " ++ summaryBuffer cbuf)

#else
checkHandleInvariants _ = return ()
#endif

-- ---------------------------------------------------------------------------
-- Buffering modes

-- | Three kinds of buffering are supported: line-buffering,
-- block-buffering or no-buffering.  These modes have the following
-- effects. For output, items are written out, or /flushed/,
-- from the internal buffer according to the buffer mode:
--
--  * /line-buffering/: the entire output buffer is flushed
--    whenever a newline is output, the buffer overflows,
--    a 'System.IO.hFlush' is issued, or the handle is closed.
--
--  * /block-buffering/: the entire buffer is written out whenever it
--    overflows, a 'System.IO.hFlush' is issued, or the handle is closed.
--
--  * /no-buffering/: output is written immediately, and never stored
--    in the buffer.
--
-- An implementation is free to flush the buffer more frequently,
-- but not less frequently, than specified above.
-- The output buffer is emptied as soon as it has been written out.
--
-- Similarly, input occurs according to the buffer mode for the handle:
--
--  * /line-buffering/: when the buffer for the handle is not empty,
--    the next item is obtained from the buffer; otherwise, when the
--    buffer is empty, characters up to and including the next newline
--    character are read into the buffer.  No characters are available
--    until the newline character is available or the buffer is full.
--
--  * /block-buffering/: when the buffer for the handle becomes empty,
--    the next block of data is read into the buffer.
--
--  * /no-buffering/: the next input item is read and returned.
--    The 'System.IO.hLookAhead' operation implies that even a no-buffered
--    handle may require a one-character buffer.
--
-- The default buffering mode when a handle is opened is
-- implementation-dependent and may depend on the file system object
-- which is attached to that handle.
-- For most implementations, physical files will normally be block-buffered
-- and terminals will normally be line-buffered.

data BufferMode
 = NoBuffering  -- ^ buffering is disabled if possible.
 | LineBuffering
                -- ^ line-buffering should be enabled if possible.
 | BlockBuffering (Maybe Int)
                -- ^ block-buffering should be enabled if possible.
                -- The size of the buffer is @n@ items if the argument
                -- is 'Just' @n@ and is otherwise implementation-dependent.
   deriving (Eq, Ord, Read, Show)

{-
[note Buffering Implementation]

Each Handle has two buffers: a byte buffer (haByteBuffer) and a Char
buffer (haCharBuffer).

[note Buffered Reading]

For read Handles, bytes are read into the byte buffer, and immediately
decoded into the Char buffer (see
GHC.IO.Handle.Internals.readTextDevice).  The only way there might be
some data left in the byte buffer is if there is a partial multi-byte
character sequence that cannot be decoded into a full character.

Note that the buffering mode (haBufferMode) makes no difference when
reading data into a Handle.  When reading, we can always just read all
the data there is available without blocking, decode it into the Char
buffer, and then provide it immediately to the caller.

[note Buffered Writing]

Characters are written into the Char buffer by e.g. hPutStr.  At the
end of the operation, or when the char buffer is full, the buffer is
decoded to the byte buffer (see writeCharBuffer).  This is so that we
can detect encoding errors at the right point.

Hence, the Char buffer is always empty between Handle operations.

[note Buffer Sizing]

The char buffer is always a default size (dEFAULT_CHAR_BUFFER_SIZE).
The byte buffer size is chosen by the underlying device (via its
IODevice.newBuffer).  Hence the size of these buffers is not under
user control.

There are certain minimum sizes for these buffers imposed by the
library (but not checked):

 - we must be able to buffer at least one character, so that
   hLookAhead can work

 - the byte buffer must be able to store at least one encoded
   character in the current encoding (6 bytes?)

 - when reading, the char buffer must have room for two characters, so
   that we can spot the \r\n sequence.

How do we implement hSetBuffering?

For reading, we have never used the user-supplied buffer size, because
there's no point: we always pass all available data to the reader
immediately.  Buffering would imply waiting until a certain amount of
data is available, which has no advantages.  So hSetBuffering is
essentially a no-op for read handles, except that it turns on/off raw
mode for the underlying device if necessary.

For writing, the buffering mode is handled by the write operations
themselves (hPutChar and hPutStr).  Every write ends with
writeCharBuffer, which checks whether the buffer should be flushed
according to the current buffering mode.  Additionally, we look for
newlines and flush if the mode is LineBuffering.

[note Buffer Flushing]

** Flushing the Char buffer

We must be able to flush the Char buffer, in order to implement
hSetEncoding, and things like hGetBuf which want to read raw bytes.

Flushing the Char buffer on a write Handle is easy: it is always empty.

Flushing the Char buffer on a read Handle involves rewinding the byte
buffer to the point representing the next Char in the Char buffer.
This is done by

 - remembering the state of the byte buffer *before* the last decode

 - re-decoding the bytes that represent the chars already read from the
   Char buffer.  This gives us the point in the byte buffer that
   represents the *next* Char to be read.

In order for this to work, after readTextHandle we must NOT MODIFY THE
CONTENTS OF THE BYTE OR CHAR BUFFERS, except to remove characters from
the Char buffer.

** Flushing the byte buffer

The byte buffer can be flushed if the Char buffer has already been
flushed (see above).  For a read Handle, flushing the byte buffer
means seeking the device back by the number of bytes in the buffer,
and hence it is only possible on a seekable Handle.

-}

-- ---------------------------------------------------------------------------
-- Newline translation

-- | The representation of a newline in the external file or stream.
data Newline = LF    -- ^ '\n'
             | CRLF  -- ^ '\r\n'
             deriving (Eq, Ord, Read, Show)

-- | Specifies the translation, if any, of newline characters between
-- internal Strings and the external file or stream.  Haskell Strings
-- are assumed to represent newlines with the '\n' character; the
-- newline mode specifies how to translate '\n' on output, and what to
-- translate into '\n' on input.
data NewlineMode
  = NewlineMode { inputNL :: Newline,
                    -- ^ the representation of newlines on input
                  outputNL :: Newline
                    -- ^ the representation of newlines on output
                 }
             deriving (Eq, Ord, Read, Show)

-- | The native newline representation for the current platform: 'LF'
-- on Unix systems, 'CRLF' on Windows.
nativeNewline :: Newline
#ifdef mingw32_HOST_OS
nativeNewline = CRLF
#else
nativeNewline = LF
#endif

-- | Map '\r\n' into '\n' on input, and '\n' to the native newline
-- represetnation on output.  This mode can be used on any platform, and
-- works with text files using any newline convention.  The downside is
-- that @readFile >>= writeFile@ might yield a different file.
--
-- > universalNewlineMode  = NewlineMode { inputNL  = CRLF,
-- >                                       outputNL = nativeNewline }
--
universalNewlineMode :: NewlineMode
universalNewlineMode  = NewlineMode { inputNL  = CRLF,
                                      outputNL = nativeNewline }

-- | Use the native newline representation on both input and output
--
-- > nativeNewlineMode  = NewlineMode { inputNL  = nativeNewline
-- >                                    outputNL = nativeNewline }
--
nativeNewlineMode    :: NewlineMode
nativeNewlineMode     = NewlineMode { inputNL  = nativeNewline,
                                      outputNL = nativeNewline }

-- | Do no newline translation at all.
--
-- > noNewlineTranslation  = NewlineMode { inputNL  = LF, outputNL = LF }
--
noNewlineTranslation :: NewlineMode
noNewlineTranslation  = NewlineMode { inputNL  = LF, outputNL = LF }

-- ---------------------------------------------------------------------------
-- Show instance for Handles

-- handle types are 'show'n when printing error msgs, so
-- we provide a more user-friendly Show instance for it
-- than the derived one.

instance Show HandleType where
  showsPrec _ t =
    case t of
      ClosedHandle      -> showString "closed"
      SemiClosedHandle  -> showString "semi-closed"
      ReadHandle        -> showString "readable"
      WriteHandle       -> showString "writable"
      AppendHandle      -> showString "writable (append)"
      ReadWriteHandle   -> showString "read-writable"

instance Show Handle where
  showsPrec _ (FileHandle   file _)   = showHandle file
  showsPrec _ (DuplexHandle file _ _) = showHandle file

showHandle :: FilePath -> String -> String
showHandle file = showString "{handle: " . showString file . showString "}"


==============
../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs
==============
lengths:(21229,16340)

==============

({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,28)) "{-# LANGUAGE Trustworthy #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (5,6)) "{-# LANGUAGE CPP\n           , NoImplicitPrelude\n           , ExistentialQuantification\n           , DeriveDataTypeable\n  #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,42)) "{-# OPTIONS_GHC -funbox-strict-fields #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,29)) "{-# OPTIONS_HADDOCK hide #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-28),DP (0,13)) "{-# OPTIONS_GHC -funbox-strict-fields #-}" Nothing),DP (0,-28)),((AnnComment DComment (DP (1,1),DP (1,29)) "{-# OPTIONS_HADDOCK hide #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,73)) "-----------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,33)) "-- Module      :  GHC.IO.Handle.Types" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Module      :  GHC.IO.Handle.Types" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-37),DP (0,21)) "-- Copyright   :  (c) The University of Glasgow, 1994-2009" Nothing),DP (0,-37)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-44),DP (0,14)) "-- Copyright   :  (c) The University of Glasgow, 1994-2009" Nothing),DP (0,-44)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,42)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,37)) "-- Maintainer  :  libraries@haskell.org" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-26),DP (0,13)) "-- Maintainer  :  libraries@haskell.org" Nothing),DP (0,-26)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-26),DP (0,4)) "-- Portability :  non-portable" Nothing),DP (0,-26)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,28)) "-- Portability :  non-portable" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,50)) "-- Basic types for the implementation of IO Handles." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,50)) "-- Basic types for the implementation of IO Handles." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,75)) "-----------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,20)) "GHC.IO.Handle.Types" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnModule),DP (24,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "Handle" Nothing),DP (0,0)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((G AnnEofPos),DP (3,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:25:8-26 }
    Nothing{ModuleName: GHC.IO.Handle.Types})) 
  (Just 
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(25,28)-(35,3)
     }
    Just (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,-14),DP (0,-13)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-16 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,-1),DP (0,1)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "showHandle" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((AnnComment DComment (DP (0,-6),DP (0,15)) "checkHandleInvariants" Nothing),DP (0,-6)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-12 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: Handle})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-30
       }
      Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-26
         }
        Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: Handle__})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:33-42
       }
      Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:33-42
         }
        Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: showHandle})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:27:7-27 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:27:7-27 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-21),DP (0,-11)) "BufferList" Nothing),DP (0,-21)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: checkHandleInvariants})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-20 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-16 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: BufferList})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-20 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-10),DP (0,10)) "isReadableHandleType" Nothing),DP (0,-10)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-16 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: HandleType})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:7-26 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,5),DP (0,6)) "," Nothing,DComment (DP (0,1),DP (0,21)) "isWritableHandleType" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,22)) "isReadWriteHandleType" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:7-26 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-20),DP (0,-10)) "BufferMode" Nothing),DP (0,-20)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: isReadableHandleType})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:29-48
       }
      Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:29-48
         }
        Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: isWritableHandleType})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:51-71
       }
      Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:51-71
         }
        Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: isReadWriteHandleType})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-20 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-10),DP (0,1)) "BufferCodec" Nothing),DP (0,-10)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-16 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: BufferMode})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-21 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-17 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: BufferCodec})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-21 }
      Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,1),DP (0,8)) "Newline" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,14)) "nativeNewline" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((AnnComment DComment (DP (0,-11),DP (0,9)) "universalNewlineMode" Nothing),DP (0,-11)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-17 }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: NewlineMode})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-34
       }
      Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "," Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,21)) "noNewlineTranslation" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
      (IEThingAll 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-30
         }
        Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: Newline})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:37-49
       }
      Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:37-49
         }
        Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "," Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: nativeNewline})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:7-26 }
      Just (Ann (DP (0,-3)) (ColDelta 7) DP (1,7) [DComment (DP (0,0),DP (0,17)) "nativeNewlineMode" Nothing,DComment (DP (1,3),DP (1,4)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:7-26 }
        Just (Ann (DP (0,-3)) (ColDelta 7) DP (1,7) [] [((G AnnVal),DP (0,-3)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: universalNewlineMode})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:29-48
       }
      Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:29-48
         }
        Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: noNewlineTranslation})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:51-67
       }
      Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:51-67
         }
        Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: nativeNewlineMode}))))])) 
  [
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:39:1-15 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,12)) "#undef DEBUG" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,9)) "GHC.Base" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:39:8-15 }
      Nothing{ModuleName: GHC.Base}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:1-15 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:8-15 }
      Nothing{ModuleName: GHC.MVar}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:1-13 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-8),DP (0,-2)) "GHC.IO" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:8-13 }
      Nothing{ModuleName: GHC.IO}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-6),DP (0,7)) "GHC.IO.Buffer" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:8-20 }
      Nothing{ModuleName: GHC.IO.Buffer}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:1-24 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-13),DP (0,4)) "GHC.IO.BufferedIO" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:8-24 }
      Nothing{ModuleName: GHC.IO.BufferedIO}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:1-28 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-17),DP (0,4)) "GHC.IO.Encoding.Types" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:8-28 }
      Nothing{ModuleName: GHC.IO.Encoding.Types}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:1-16 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-21),DP (0,-12)) "GHC.IORef" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:8-16 }
      Nothing{ModuleName: GHC.IORef}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:1-17 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-9),DP (0,1)) "Data.Maybe" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:8-17 }
      Nothing{ModuleName: Data.Maybe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:1-15 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-10),DP (0,-2)) "GHC.Show" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:8-15 }
      Nothing{ModuleName: GHC.Show}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:1-15 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:8-15 }
      Nothing{ModuleName: GHC.Read}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:1-15 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:8-15 }
      Nothing{ModuleName: GHC.Word}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-8),DP (0,5)) "GHC.IO.Device" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:8-20 }
      Nothing{ModuleName: GHC.IO.Device}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:1-20 }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,5)) "#ifdef DEBUG" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:8-20 }
      Nothing{ModuleName: Data.Typeable}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(101,1)-(114,19)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (50,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "Control.Monad" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,15)) "-- Handle type" Nothing,DComment (DP (0,-14),DP (0,64)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,15)) "-- Handle type" Nothing,DComment (DP (1,1),DP (1,57)) "--  A Handle is represented by (a reference to) a record" Nothing,DComment (DP (1,1),DP (1,57)) "--  A Handle is represented by (a reference to) a record" Nothing,DComment (DP (0,-56),DP (0,2)) "--  containing the state of the I/O port/device. We record" Nothing,DComment (DP (1,1),DP (1,34)) "--  the following pieces of info:" Nothing,DComment (DP (0,-33),DP (0,25)) "--  containing the state of the I/O port/device. We record" Nothing,DComment (DP (1,1),DP (1,34)) "--  the following pieces of info:" Nothing,DComment (DP (1,1),DP (1,38)) "--    * type (read,write,closed etc.)" Nothing,DComment (DP (1,1),DP (1,38)) "--    * type (read,write,closed etc.)" Nothing,DComment (DP (0,-37),DP (0,1)) "--    * the underlying file descriptor" Nothing,DComment (DP (1,1),DP (1,23)) "--    * buffering mode" Nothing,DComment (DP (0,-22),DP (0,16)) "--    * the underlying file descriptor" Nothing,DComment (DP (1,1),DP (1,23)) "--    * buffering mode" Nothing,DComment (DP (0,-22),DP (0,11)) "--    * buffer, and spare buffers" Nothing,DComment (DP (1,1),DP (1,34)) "--    * buffer, and spare buffers" Nothing,DComment (DP (0,-33),DP (0,6)) "--    * user-friendly name (usually the" Nothing,DComment (DP (1,1),DP (1,40)) "--    * user-friendly name (usually the" Nothing,DComment (DP (0,-39),DP (0,11)) "--      FilePath used when IO.openFile was called)" Nothing,DComment (DP (1,1),DP (1,51)) "--      FilePath used when IO.openFile was called)" Nothing,DComment (DP (1,1),DP (1,73)) "-- Note: when a Handle is garbage collected, we want to flush its buffer" Nothing,DComment (DP (1,1),DP (1,73)) "-- Note: when a Handle is garbage collected, we want to flush its buffer" Nothing,DComment (DP (1,1),DP (1,73)) "-- and close the OS file handle, so as to free up a (precious) resource." Nothing,DComment (DP (1,1),DP (1,80)) "-- | Haskell defines operations to read and write characters from and to files," Nothing,DComment (DP (1,1),DP (1,73)) "-- represented by values of type @Handle@.  Each value of this type is a" Nothing,DComment (DP (0,-72),DP (0,7)) "-- | Haskell defines operations to read and write characters from and to files," Nothing,DComment (DP (1,1),DP (1,73)) "-- represented by values of type @Handle@.  Each value of this type is a" Nothing,DComment (DP (0,-72),DP (0,2)) "-- /handle/: a record used by the Haskell run-time system to /manage/ I\\/O" Nothing,DComment (DP (1,1),DP (1,75)) "-- /handle/: a record used by the Haskell run-time system to /manage/ I\\/O" Nothing,DComment (DP (0,-74),DP (0,3)) "-- with file system objects.  A handle has at least the following properties:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,75)) "-- with file system objects.  A handle has at least the following properties:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,47)) "--  * whether it manages input or output or both;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,47)) "--  * whether it manages input or output or both;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,52)) "--  * whether it is /open/, /closed/ or /semi-closed/;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,52)) "--  * whether it is /open/, /closed/ or /semi-closed/;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,35)) "--  * whether the object is seekable;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,35)) "--  * whether the object is seekable;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * whether buffering is disabled, or enabled on a line or block basis;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * whether buffering is disabled, or enabled on a line or block basis;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,40)) "--  * a buffer (whose length may be zero)." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,40)) "--  * a buffer (whose length may be zero)." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,78)) "-- Most handles will also have a current I\\/O position indicating where the next" Nothing,DComment (DP (1,1),DP (1,71)) "-- input or output operation will occur.  A handle is /readable/ if it" Nothing,DComment (DP (0,-70),DP (0,10)) "-- Most handles will also have a current I\\/O position indicating where the next" Nothing,DComment (DP (1,1),DP (1,71)) "-- input or output operation will occur.  A handle is /readable/ if it" Nothing,DComment (DP (0,-70),DP (0,7)) "-- manages only input or both input and output; likewise, it is /writable/ if" Nothing,DComment (DP (1,1),DP (1,77)) "-- it manages only output or both input and output.  A handle is /open/ when" Nothing,DComment (DP (0,-76),DP (0,1)) "-- manages only input or both input and output; likewise, it is /writable/ if" Nothing,DComment (DP (1,1),DP (1,20)) "-- first allocated." Nothing,DComment (DP (0,-19),DP (0,57)) "-- it manages only output or both input and output.  A handle is /open/ when" Nothing,DComment (DP (1,1),DP (1,20)) "-- first allocated." Nothing,DComment (DP (0,-19),DP (0,54)) "-- Once it is closed it can no longer be used for either input or output," Nothing,DComment (DP (1,1),DP (1,71)) "-- though an implementation cannot re-use its storage while references" Nothing,DComment (DP (0,-70),DP (0,3)) "-- Once it is closed it can no longer be used for either input or output," Nothing,DComment (DP (1,1),DP (1,71)) "-- though an implementation cannot re-use its storage while references" Nothing,DComment (DP (0,-70),DP (0,3)) "-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string" Nothing,DComment (DP (1,1),DP (1,71)) "-- produced by showing a handle is system dependent; it should include" Nothing,DComment (DP (0,-70),DP (0,3)) "-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string" Nothing,DComment (DP (1,1),DP (1,71)) "-- produced by showing a handle is system dependent; it should include" Nothing,DComment (DP (0,-70),DP (0,2)) "-- enough information to identify the handle for debugging.  A handle is" Nothing,DComment (DP (1,1),DP (1,54)) "-- equal according to '==' only to itself; no attempt" Nothing,DComment (DP (0,-53),DP (0,19)) "-- enough information to identify the handle for debugging.  A handle is" Nothing,DComment (DP (1,1),DP (1,54)) "-- equal according to '==' only to itself; no attempt" Nothing,DComment (DP (0,-53),DP (0,22)) "-- is made to compare the internal state of different handles for equality." Nothing,DComment (DP (1,1),DP (1,76)) "-- is made to compare the internal state of different handles for equality." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,7)) "Handle" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,29),DP (0,57)) "-- A normal handle to a file" Nothing),DP (0,29)),((G AnnEqual),DP (1,3))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:101:6-11
        }
       Just (Ann (DP (0,-9)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,11)) "FileHandle" Nothing] [((G AnnVal),DP (0,-9))])
       (Unqual {OccName: Handle})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(102,5)-(105,24)
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (1,3),DP (1,4)) "|" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,13)) "DuplexHandle" Nothing),DP (0,1)),((AnnComment DComment (DP (0,24),DP (0,58)) "-- A handle to a read/write stream" Nothing),DP (0,24)),((G AnnVbar),DP (2,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:102:5-14
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: FileHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:103:9-16
              }
             Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-6),DP (0,2)) "FilePath" Nothing,DComment (DP (0,24),DP (0,52)) "-- A normal handle to a file" Nothing,DComment (DP (0,-28),DP (0,8)) "-- the file (used for error messages" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FilePath}))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:9-24
              }
             Just (Ann (DP (1,9)) (ColDelta 9) DP (2,9) [DComment (DP (0,24),DP (0,32)) "-- only)" Nothing,DComment (DP (0,-8),DP (0,28)) "-- the file (used for error messages" Nothing,DComment (DP (1,9),DP (1,10)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "MVar" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,16),DP (0,24)) "-- only)" Nothing] [((G AnnBang),DP (0,0))])
             (HsBangTy 
              (HsSrcBang 
               (Nothing) 
               (Nothing) 
               (True)) 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:10-24
                }
               Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:11-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:11-14
                    }
                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: MVar}))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:16-23
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Handle__})))))))))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(107,5)-(112,24)
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:107:5-16
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: DuplexHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:108:9-16
              }
             Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-8),DP (0,0)) "FilePath" Nothing,DComment (DP (0,24),DP (0,58)) "-- A handle to a read/write stream" Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FilePath}))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:9-24
              }
             Just (Ann (DP (1,9)) (ColDelta 9) DP (3,9) [DComment (DP (0,24),DP (0,58)) "-- file for a FIFO, otherwise some" Nothing,DComment (DP (0,-34),DP (0,5)) "--   descriptive string (used for error" Nothing,DComment (DP (1,41),DP (1,60)) "--   messages only)" Nothing,DComment (DP (0,-19),DP (0,20)) "--   descriptive string (used for error" Nothing,DComment (DP (1,9),DP (1,10)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "MVar" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,16),DP (0,32)) "-- The read side" Nothing,DComment (DP (0,-16),DP (0,3)) "--   messages only)" Nothing] [((G AnnBang),DP (0,0))])
             (HsBangTy 
              (HsSrcBang 
               (Nothing) 
               (Nothing) 
               (True)) 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:10-24
                }
               Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:11-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:11-14
                    }
                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: MVar}))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:16-23
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Handle__}))))))))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:9-24
              }
             Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,16),DP (0,32)) "-- The read side" Nothing,DComment (DP (0,-16),DP (0,1)) "-- The write side" Nothing] [((G AnnBang),DP (0,0))])
             (HsBangTy 
              (HsSrcBang 
               (Nothing) 
               (Nothing) 
               (True)) 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:10-24
                }
               Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:11-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:11-14
                    }
                   Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: MVar}))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:16-23
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Handle__})))))))))]) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:114:3-19
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (2,3) [DComment (DP (0,16),DP (0,33)) "-- The write side" Nothing,DComment (DP (1,3),DP (1,11)) "deriving" Nothing,DComment (DP (0,1),DP (0,9)) "Typeable" Nothing] [((G AnnDeriving),DP (0,0))])
         [
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:114:12-19
            }
           Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Typeable})))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(120,1)-(123,15)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,10)) "-- NOTES:" Nothing,DComment (DP (1,1),DP (1,10)) "-- NOTES:" Nothing,DComment (DP (0,-9),DP (0,62)) "--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be" Nothing,DComment (DP (1,1),DP (1,18)) "--      seekable." Nothing,DComment (DP (0,-17),DP (0,54)) "--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be" Nothing,DComment (DP (1,1),DP (1,18)) "--      seekable." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,3)) "Eq" Nothing,DComment (DP (0,1),DP (0,7)) "Handle" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "_" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,3)) "h1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:10-18
         }
        Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,10)) "FileHandle" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
          []) 
         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:10-18
           }
          Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:10-11
             }
            Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-3))])
            (HsTyVar 
             (Unqual {OccName: Eq}))) 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:13-18
             }
            Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Handle}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(121,2)-(123,15)
          }
         Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-1),DP (0,1)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,10)) "FileHandle" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "h2" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,5),DP (0,6)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "h1" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,3)) "h2" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:24-25
            }
           Just (Ann (DP (0,1)) (ColDelta 24) DP (0,5) [DComment (DP (0,-1),DP (0,1)) "h1" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: ==})) 
          (True) 
          (MG 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-58
              }
             Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "h2" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnEqual),DP (0,5))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:24-25
                  }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,5) [DComment (DP (0,-1),DP (0,1)) "h1" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: ==})) 
                (True))) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-18
                 }
                Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "_" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
                (ParPat 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:3-17
                   }
                  Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])
                  (ConPatIn 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:3-12
                     }
                    Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: FileHandle})) 
                   (PrefixCon 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:14 }
                      Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "DuplexHandle" Nothing] [((G AnnVal),DP (0,-1))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:16-17
                       }
                      Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: h1})))]))))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:27-43
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "_" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])
                (ParPat 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:28-42
                   }
                  Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                  (ConPatIn 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:28-37
                     }
                    Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: FileHandle})) 
                   (PrefixCon 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:39 }
                      Just (Ann (DP (0,-1)) (ColDelta 39) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "DuplexHandle" Nothing] [((G AnnVal),DP (0,-1))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:41-42
                       }
                      Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: h2})))])))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:49-58
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 49) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:51-58
                    }
                   Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:51-52
                      }
                     Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: h1}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:54-55
                      }
                     Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: ==}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:57-58
                      }
                     Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: h2})))))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-58
              }
             Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:24-25
                  }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: ==})) 
                (True))) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-22
                 }
                Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                (ParPat 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:3-21
                   }
                  Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])
                  (ConPatIn 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:3-14
                     }
                    Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: DuplexHandle})) 
                   (PrefixCon 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:16 }
                      Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-11),DP (0,-9)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:18-19
                       }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: h1}))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:21 }
                      Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))]))))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:27-47
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                (ParPat 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:28-46
                   }
                  Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                  (ConPatIn 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:28-39
                     }
                    Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: DuplexHandle})) 
                   (PrefixCon 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:41 }
                      Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:43-44
                       }
                      Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: h2}))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:46 }
                      Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))])))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:49-58
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 49) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:51-58
                    }
                   Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:51-52
                      }
                     Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: h1}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:54-55
                      }
                     Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: ==}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:57-58
                      }
                     Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: h2})))))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2-15
              }
             Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:4-5 }
                 Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: ==})) 
                (True))) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2 }
                Just (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:7 }
                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder)))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:9-15
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:11-15
                    }
                   Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: False})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(125,1)-(143,21)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,1)) "dev" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,10)) "enc_state" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "dec_state" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "." Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,8)) "IODevice" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,11)) "BufferedIO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,9)) "Typeable" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "=>" Nothing),DP (0,1)),((G AnnEqual),DP (1,3))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:125:6-13
        }
       Just (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "forall" Nothing] [((G AnnVal),DP (0,-5))])
       (Unqual {OccName: Handle__})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(126,5)-(142,5)
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnForall),DP (0,0)),((G AnnDot),DP (0,1)),((G AnnDarrow),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:127:5-12
             }
            Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Handle__}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:12-14
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,2)) "Handle__" Nothing] [((G AnnVal),DP (0,-1))])
             (UserTyVar 
              (Unqual {OccName: dev}))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:16-24
              }
             Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "{" Nothing] [((G AnnVal),DP (0,0))])
             (UserTyVar 
              (Unqual {OccName: enc_state}))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:26-34
              }
             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (UserTyVar 
              (Unqual {OccName: dec_state})))]) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:38-81
            }
           Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0)),((G AnnCloseP),DP (0,-1))])
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:39-50
              }
             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnComma),DP (0,0))])
             (HsAppTy 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:39-46
                }
               Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IODevice}))) 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:48-50
                }
               Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: dev}))))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:53-66
              }
             Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnComma),DP (0,0))])
             (HsAppTy 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:53-62
                }
               Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: BufferedIO}))) 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:64-66
                }
               Just (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: dev}))))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:69-80
              }
             Just (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:69-76
                }
               Just (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Typeable}))) 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:78-80
                }
               Just (Ann (DP (0,1)) (ColDelta 78) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: dev})))))]) 
          (RecCon 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(127,14)-(142,5)
             }
            Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-6),DP (0,2)) "haDevice" Nothing] [((G AnnOpenC),DP (0,-1)),((AnnComment DComment (DP (0,1),DP (0,18)) "-- duplex handle." Nothing),DP (0,1)),((AnnComment DComment (DP (0,-17),DP (0,12)) "-- ptr to the write side of a" Nothing),DP (0,-17)),((AnnComment DComment (DP (1,5),DP (1,6)) "}" Nothing),DP (1,5)),((AnnComment DComment (DP (0,40),DP (0,57)) "-- duplex handle." Nothing),DP (0,40)),((G AnnCloseC),DP (2,5))])
            [
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:7-27
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,6),DP (0,8)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "!" Nothing,DComment (DP (0,0),DP (0,3)) "dev" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "haType" Nothing),DP (0,-8)),((G AnnDcolon),DP (0,6)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:7-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haDevice}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:24-27
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])
                (HsBangTy 
                 (HsSrcBang 
                  (Nothing) 
                  (Nothing) 
                  (True)) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:25-27
                   }
                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,9)) "HandleType" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: dev}))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:7-33
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,5),DP (0,6)) "," Nothing,DComment (DP (0,11),DP (0,43)) "-- type (read/write/append etc.)" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,6)) "haByteBuffer" Nothing),DP (0,-6)),((G AnnDcolon),DP (0,8)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "!" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "IORef" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "Buffer" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:7-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haType}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:24-33
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: HandleType}))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:7-46
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,5),DP (0,10)) "Word8" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,-1),DP (0,31)) "-- type (read/write/append etc.)" Nothing,DComment (DP (0,-31),DP (0,-30)) "," Nothing] [((G AnnDcolon),DP (0,2)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:7-18
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haByteBuffer}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:24-46
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])
                (HsBangTy 
                 (HsSrcBang 
                  (Nothing) 
                  (Nothing) 
                  (True)) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:25-46
                   }
                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,9)) "BufferMode" Nothing),DP (0,-1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:26-45
                     }
                    Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:26-30
                       }
                      Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: IORef}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:32-45
                       }
                      Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (HsParTy 
                       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:33-44
                         }
                        Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                        (HsAppTy 
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:33-38
                           }
                          Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: Buffer}))) 
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:40-44
                           }
                          Just (Ann (DP (0,5)) (ColDelta 40) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "," Nothing] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: Word8}))))))))))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:7-33
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((G AnnDcolon),DP (0,2)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "!" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "IORef" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "dec_state" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:7-18
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haBufferMode}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:24-33
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: BufferMode}))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:7-57
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,7),DP (0,8)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Buffer" Nothing,DComment (DP (0,1),DP (0,6)) "Word8" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnDcolon),DP (0,2)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:7-18
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haLastDecode}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:24-57
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])
                (HsBangTy 
                 (HsSrcBang 
                  (Nothing) 
                  (Nothing) 
                  (True)) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:25-57
                   }
                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:26-56
                     }
                    Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:26-30
                       }
                      Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: IORef}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:32-56
                       }
                      Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) ")" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,22)) "-- the current buffer" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])
                      (HsTupleTy 
                       (HsBoxedOrConstraintTuple) 
                       [
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:33-41
                          }
                         Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-3)) "Buffer" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,12)) "CharBufElem" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
                         (HsTyVar 
                          (Unqual {OccName: dec_state}))),
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:44-55
                          }
                         Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
                         (HsAppTy 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:44-49
                            }
                           Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsTyVar 
                            (Unqual {OccName: Buffer}))) 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:51-55
                            }
                           Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsTyVar 
                            (Unqual {OccName: Word8})))))])))))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:7-52
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-12),DP (0,-3)) "haBuffers" Nothing),DP (0,-12)),((G AnnDcolon),DP (0,2)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:7-18
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haCharBuffer}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:24-52
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])
                (HsBangTy 
                 (HsSrcBang 
                  (Nothing) 
                  (Nothing) 
                  (True)) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:25-52
                   }
                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:26-51
                     }
                    Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:26-30
                       }
                      Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: IORef}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:32-51
                       }
                      Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,4)) "CharBufElem" Nothing),DP (0,-7)),((G AnnCloseP),DP (0,0))])
                      (HsParTy 
                       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:33-50
                         }
                        Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                        (HsAppTy 
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:33-38
                           }
                          Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: Buffer}))) 
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:40-50
                           }
                          Just (Ann (DP (0,-3)) (ColDelta 40) DP (0,1) [DComment (DP (0,-6),DP (0,4)) "BufferList" Nothing] [((G AnnVal),DP (0,-3))])
                          (HsTyVar 
                           (Unqual {OccName: CharBufElem}))))))))))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:7-56
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (0,-1),DP (0,20)) "-- the current buffer" Nothing,DComment (DP (0,-20),DP (0,-19)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,2),DP (0,18)) "-- spare buffers" Nothing] [((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:7-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haBuffers}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:24-56
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])
                (HsBangTy 
                 (HsSrcBang 
                  (Nothing) 
                  (Nothing) 
                  (True)) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:25-56
                   }
                  Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,4)) "Maybe" Nothing),DP (0,-1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:26-55
                     }
                    Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:26-30
                       }
                      Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: IORef}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:32-55
                       }
                      Just (Ann (DP (0,-10)) (ColDelta 32) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "TextEncoder" Nothing] [((G AnnOpenP),DP (0,-10)),((AnnComment DComment (DP (0,-3),DP (0,-2)) ")" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (HsParTy 
                       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:33-54
                         }
                        Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                        (HsAppTy 
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:33-42
                           }
                          Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: BufferList}))) 
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:44-54
                           }
                          Just (Ann (DP (0,-8)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,9)) "enc_state" Nothing] [((G AnnVal),DP (0,-8))])
                          (HsTyVar 
                           (Unqual {OccName: CharBufElem}))))))))))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:7-52
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,2),DP (0,18)) "-- spare buffers" Nothing] [((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:7-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haEncoder}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:24-52
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:24-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:30-52
                   }
                  Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:31-51
                     }
                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:31-41
                       }
                      Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: TextEncoder}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:43-51
                       }
                      Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: enc_state}))))))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:7-52
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-9),DP (0,-2)) "haCodec" Nothing),DP (0,-9)),((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:7-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haDecoder}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:24-52
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:24-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:30-52
                   }
                  Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:31-51
                     }
                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:31-41
                       }
                      Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,11)) "TextEncoding" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: TextDecoder}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:43-51
                       }
                      Just (Ann (DP (0,0)) (ColDelta 43) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: dec_state}))))))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:7-41
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-7),DP (0,2)) "haInputNL" Nothing),DP (0,-7)),((G AnnDcolon),DP (0,7)),((AnnComment DComment (DP (0,-11),DP (0,-10)) "," Nothing),DP (0,-11)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:7-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haCodec}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:24-41
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:24-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:30-41
                   }
                  Just (Ann (DP (0,-1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-5),DP (0,2)) "Newline" Nothing] [((G AnnVal),DP (0,-1))])
                  (HsTyVar 
                   (Unqual {OccName: TextEncoding}))))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:7-30
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "haOutputNL" Nothing),DP (0,-9)),((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:7-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haInputNL}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:24-30
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Newline}))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:7-30
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-10),DP (0,1)) "haOtherSide" Nothing),DP (0,-10)),((G AnnDcolon),DP (0,4)),((AnnComment DComment (DP (0,-7),DP (0,-2)) "Maybe" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:7-16
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haOutputNL}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:24-30
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Newline}))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:7-44
               }
              Just (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,-1),DP (0,3)) "MVar" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,30)) "-- ptr to the write side of a" Nothing] [((G AnnDcolon),DP (0,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:7-17
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: haOtherSide}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:24-44
                 }
                Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:24-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:30-44
                   }
                  Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsParTy 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:31-43
                     }
                    Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:31-34
                       }
                      Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: MVar}))) 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:36-43
                       }
                      Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: Handle__}))))))))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:143:5-21
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-1),DP (0,7)) "deriving" Nothing,DComment (DP (0,1),DP (0,9)) "Typeable" Nothing] [((G AnnDeriving),DP (0,0))])
         [
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:143:14-21
            }
           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Typeable})))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(148,1)-(150,47)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,70)) "-- we keep a few spare buffers around in a handle to avoid allocating" Nothing,DComment (DP (1,1),DP (1,70)) "-- we keep a few spare buffers around in a handle to avoid allocating" Nothing,DComment (DP (0,-69),DP (0,3)) "-- a new one for each hPutStr.  These buffers are *guaranteed* to be the" Nothing,DComment (DP (1,1),DP (1,33)) "-- same size as the main buffer." Nothing,DComment (DP (0,-32),DP (0,40)) "-- a new one for each hPutStr.  These buffers are *guaranteed* to be the" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,-4),DP (0,28)) "-- same size as the main buffer." Nothing,DComment (DP (0,-27),DP (0,-17)) "BufferList" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:148:6-15
        }
       Just (Ann (DP (0,-12)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "BufferListNil" Nothing] [((G AnnVal),DP (0,-12))])
       (Unqual {OccName: BufferList})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:148:17 }
         Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (UserTyVar 
          (Unqual {OccName: e})))]) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:149:5-17
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,1)) "BufferListCons" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "RawBuffer" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "e" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "BufferList" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "e" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:149:5-17
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: BufferListNil}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:5-47
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:5-18
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: BufferListCons}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:20-32
              }
             Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:21-31
                }
               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:21-29
                  }
                 Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: RawBuffer}))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:31 }
                 Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: e}))))))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:34-47
              }
             Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:35-46
                }
               Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:35-44
                  }
                 Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: BufferList}))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:46 }
                 Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: e})))))))]) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(155,1)-(161,18)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,49)) "--  Internally, we classify handles as being one" Nothing,DComment (DP (1,1),DP (1,22)) "--  of the following:" Nothing,DComment (DP (0,-21),DP (0,27)) "--  Internally, we classify handles as being one" Nothing,DComment (DP (1,1),DP (1,22)) "--  of the following:" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,2))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:155:6-15
        }
       Just (Ann (DP (0,-10)) (ColDelta 6) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "ClosedHandle" Nothing] [((G AnnVal),DP (0,-10))])
       (Unqual {OccName: HandleType})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:156:4-15
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,4)) "SemiClosedHandle" Nothing),DP (0,-12)),((G AnnVbar),DP (1,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:156:4-15
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: ClosedHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:157:4-19
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-16),DP (0,-6)) "ReadHandle" Nothing),DP (0,-16)),((G AnnVbar),DP (1,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:157:4-19
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: SemiClosedHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:158:4-13
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,1)) "WriteHandle" Nothing),DP (0,-10)),((G AnnVbar),DP (1,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:158:4-13
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: ReadHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:159:4-14
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,1)) "AppendHandle" Nothing),DP (0,-11)),((G AnnVbar),DP (1,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:159:4-14
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: WriteHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:160:4-15
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,3)) "ReadWriteHandle" Nothing),DP (0,-12)),((G AnnVbar),DP (1,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:160:4-15
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: AppendHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:161:4-18
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:161:4-18
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: ReadWriteHandle}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,20)) "isReadableHandleType" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1-20
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isReadableHandleType}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-42
        }
       Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "ReadHandle" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-42
          }
         Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-34
            }
           Just (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-7))])
           (HsTyVar 
            (Unqual {OccName: HandleType}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:39-42
            }
           Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Bool}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(164,1)-(166,47)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-20
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isReadableHandleType})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-46
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,5)) "ReadWriteHandle" Nothing),DP (0,-10)),((G AnnEqual),DP (0,9))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isReadableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:22-31
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:22-31
               }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: ReadHandle})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:41-46
              }
             Just (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:43-46
                }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: True})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-46
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-14)) "_" Nothing),DP (0,-15)),((G AnnEqual),DP (0,4))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isReadableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:22-36
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:22-36
               }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: ReadWriteHandle})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:41-46
              }
             Just (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:43-46
                }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: True})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-47
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,18))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isReadableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:22 }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (WildPat 
             (PlaceHolder)))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:41-47
              }
             Just (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:43-47
                }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: False})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,20)) "isWritableHandleType" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1-20
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isWritableHandleType}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-42
        }
       Just (Ann (DP (0,-9)) (ColDelta 25) DP (0,1) [DComment (DP (0,-2),DP (0,10)) "AppendHandle" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-42
          }
         Just (Ann (DP (0,-9)) (ColDelta 25) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-34
            }
           Just (Ann (DP (0,-9)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-9))])
           (HsTyVar 
            (Unqual {OccName: HandleType}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:39-42
            }
           Just (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Bool}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(169,1)-(172,44)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,1)) "True" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-20
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isWritableHandleType})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-43
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-1)) "WriteHandle" Nothing),DP (0,-12)),((G AnnEqual),DP (0,4))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isWritableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:22-33
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:22-33
               }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: AppendHandle})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:38-43
              }
             Just (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:40-43
                }
               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: True})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-43
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((AnnComment DComment (DP (0,-11),DP (0,4)) "ReadWriteHandle" Nothing),DP (0,-11)),((G AnnEqual),DP (0,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isWritableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:22-32
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:22-32
               }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: WriteHandle})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:38-43
              }
             Just (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:40-43
                }
               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: True})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-43
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-14)) "_" Nothing),DP (0,-15)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isWritableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:22-36
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:22-36
               }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: ReadWriteHandle})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:38-43
              }
             Just (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:40-43
                }
               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: True})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-44
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,15))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isWritableHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:22 }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (WildPat 
             (PlaceHolder)))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:38-44
              }
             Just (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:40-44
                }
               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: False})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,21)) "isReadWriteHandleType" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1-21
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isReadWriteHandleType}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-43
        }
       Just (Ann (DP (0,-12)) (ColDelta 26) DP (0,1) [DComment (DP (0,-2),DP (0,13)) "ReadWriteHandle" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-43
          }
         Just (Ann (DP (0,-12)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-35
            }
           Just (Ann (DP (0,-12)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,-12))])
           (HsTyVar 
            (Unqual {OccName: HandleType}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:40-43
            }
           Just (Ann (DP (0,0)) (ColDelta 40) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "{" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Bool}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(175,1)-(176,47)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-21
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isReadWriteHandleType})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-46
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-21
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isReadWriteHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:23-39
             }
            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-14)) "_" Nothing),DP (0,-15)),((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
            (ConPatIn 
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:23-37
               }
              Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: ReadWriteHandle})) 
             (RecCon 
              (HsRecFields 
               [] 
               (Nothing)))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:41-46
              }
             Just (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:43-46
                }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: True})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-47
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,17))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-21
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isReadWriteHandleType})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:23 }
            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (WildPat 
             (PlaceHolder)))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:41-47
              }
             Just (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:43-47
                }
               Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: False})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (10,1) [DComment (DP (1,1),DP (1,26)) "-- INVARIANTS on Handles:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "-- INVARIANTS on Handles:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,72)) "--   * A handle *always* has a buffer, even if it is only 1 character long" Nothing,DComment (DP (1,1),DP (1,75)) "--   * A handle *always* has a buffer, even if it is only 1 character long" Nothing,DComment (DP (0,-74),DP (0,1)) "--     (an unbuffered handle needs a 1 character buffer in order to support" Nothing,DComment (DP (1,1),DP (1,32)) "--      hLookAhead and hIsEOF)." Nothing,DComment (DP (0,-31),DP (0,44)) "--     (an unbuffered handle needs a 1 character buffer in order to support" Nothing,DComment (DP (1,1),DP (1,32)) "--      hLookAhead and hIsEOF)." Nothing,DComment (DP (0,-31),DP (0,50)) "--   * In a read Handle, the byte buffer is always empty (we decode when reading)" Nothing,DComment (DP (1,1),DP (1,82)) "--   * In a read Handle, the byte buffer is always empty (we decode when reading)" Nothing,DComment (DP (0,-81),DP (0,2)) "--   * In a wriite Handle, the Char buffer is always empty (we encode when writing)" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,81)) "--   * In a wriite Handle, the Char buffer is always empty (we encode when writing)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "--" Nothing,DComment (DP (0,-2),DP (0,19)) "checkHandleInvariants" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-21),DP (0,-10)) "#ifdef DEBUG" Nothing),DP (0,-21)),((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1-21
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: checkHandleInvariants}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-42
        }
       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-42
          }
         Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-33
            }
           Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Handle__}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:38-42
            }
           Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:38-39
              }
             Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:41-42
              }
             Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,21)) "checkHandleInvariants" Nothing,DComment (DP (0,1),DP (0,3)) "h_" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "readIORef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "haByteBuffer" Nothing,DComment (DP (0,1),DP (0,3)) "h_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "checkBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "cbuf" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "readIORef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "haCharBuffer" Nothing,DComment (DP (0,1),DP (0,3)) "h_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "checkBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "isWriteBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,4)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "isEmptyBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (1,4),DP (1,9)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,54)) "\"checkHandleInvariants: char write buffer non-empty: \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (1,11),DP (1,24)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,5)) "\", \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,14)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "isWriteBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,14)) "isWriteBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (1,4),DP (1,9)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,46)) "\"checkHandleInvariants: buffer modes differ: \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (1,11),DP (1,24)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,5)) "\", \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,14)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-21
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: checkHandleInvariants})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-21
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: checkHandleInvariants})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:23 }
            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (WildPat 
             (PlaceHolder)))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:25-35
              }
             Just (Ann (DP (0,-1)) (ColDelta 25) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:27-35
                }
               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:27-32
                  }
                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: return}))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:34-35
                  }
                 Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsVar 
                  (Exact {Name: ()})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(246,1)-(254,33)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (46,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Buffering modes" Nothing,DComment (DP (2,1),DP (2,61)) "-- | Three kinds of buffering are supported: line-buffering," Nothing,DComment (DP (1,1),DP (1,68)) "-- block-buffering or no-buffering.  These modes have the following" Nothing,DComment (DP (1,1),DP (1,61)) "-- effects. For output, items are written out, or /flushed/," Nothing,DComment (DP (1,1),DP (1,58)) "-- from the internal buffer according to the buffer mode:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,60)) "--  * /line-buffering/: the entire output buffer is flushed" Nothing,DComment (DP (1,1),DP (1,58)) "--    whenever a newline is output, the buffer overflows," Nothing,DComment (DP (1,1),DP (1,63)) "--    a 'System.IO.hFlush' is issued, or the handle is closed." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,70)) "--  * /block-buffering/: the entire buffer is written out whenever it" Nothing,DComment (DP (1,1),DP (1,74)) "--    overflows, a 'System.IO.hFlush' is issued, or the handle is closed." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,70)) "--  * /no-buffering/: output is written immediately, and never stored" Nothing,DComment (DP (1,1),DP (1,21)) "--    in the buffer." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,66)) "-- An implementation is free to flush the buffer more frequently," Nothing,DComment (DP (1,1),DP (1,50)) "-- but not less frequently, than specified above." Nothing,DComment (DP (1,1),DP (1,68)) "-- The output buffer is emptied as soon as it has been written out." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,72)) "-- Similarly, input occurs according to the buffer mode for the handle:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,69)) "--  * /line-buffering/: when the buffer for the handle is not empty," Nothing,DComment (DP (1,1),DP (1,69)) "--    the next item is obtained from the buffer; otherwise, when the" Nothing,DComment (DP (1,1),DP (1,71)) "--    buffer is empty, characters up to and including the next newline" Nothing,DComment (DP (1,1),DP (1,71)) "--    character are read into the buffer.  No characters are available" Nothing,DComment (DP (1,1),DP (1,70)) "--    until the newline character is available or the buffer is full." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,71)) "--  * /block-buffering/: when the buffer for the handle becomes empty," Nothing,DComment (DP (1,1),DP (1,54)) "--    the next block of data is read into the buffer." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,64)) "--  * /no-buffering/: the next input item is read and returned." Nothing,DComment (DP (1,1),DP (1,75)) "--    The 'System.IO.hLookAhead' operation implies that even a no-buffered" Nothing,DComment (DP (1,1),DP (1,49)) "--    handle may require a one-character buffer." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,57)) "-- The default buffering mode when a handle is opened is" Nothing,DComment (DP (1,1),DP (1,69)) "-- implementation-dependent and may depend on the file system object" Nothing,DComment (DP (1,1),DP (1,37)) "-- which is attached to that handle." Nothing,DComment (DP (1,1),DP (1,76)) "-- For most implementations, physical files will normally be block-buffered" Nothing,DComment (DP (1,1),DP (1,49)) "-- and terminals will normally be line-buffered." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,2))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:246:6-15
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: BufferMode})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:247:4-14
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,2),DP (0,41)) "-- ^ buffering is disabled if possible." Nothing),DP (0,2)),((G AnnVbar),DP (1,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:247:4-14
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: NoBuffering}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:248:4-16
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (1,17),DP (1,67)) "-- ^ line-buffering should be enabled if possible." Nothing),DP (1,17)),((G AnnVbar),DP (2,2))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:248:4-16
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: LineBuffering}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:4-29
          }
         Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:4-17
             }
            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: BlockBuffering}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:19-29
              }
             Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsParTy 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:20-28
                }
               Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:20-24
                  }
                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Maybe}))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:26-28
                  }
                 Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: Int})))))))]) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:4-33
          }
         Just (Ann (DP (1,4)) (ColDelta 4) DP (4,4) [DComment (DP (1,17),DP (1,68)) "-- ^ block-buffering should be enabled if possible." Nothing,DComment (DP (1,17),DP (1,71)) "-- The size of the buffer is @n@ items if the argument" Nothing,DComment (DP (1,17),DP (1,76)) "-- is 'Just' @n@ and is otherwise implementation-dependent." Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:14-15
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:14-15
              }
             Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Eq}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:18-20
            }
           Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:18-20
              }
             Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Ord}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:23-26
            }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:23-26
              }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Read}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:29-32
            }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:29-32
              }
             Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Show})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(354,1)-(356,43)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (100,1) [DComment (DP (2,1),DP (94,3)) "{-\n[note Buffering Implementation]\n\nEach Handle has two buffers: a byte buffer (haByteBuffer) and a Char\nbuffer (haCharBuffer).\n\n[note Buffered Reading]\n\nFor read Handles, bytes are read into the byte buffer, and immediately\ndecoded into the Char buffer (see\nGHC.IO.Handle.Internals.readTextDevice).  The only way there might be\nsome data left in the byte buffer is if there is a partial multi-byte\ncharacter sequence that cannot be decoded into a full character.\n\nNote that the buffering mode (haBufferMode) makes no difference when\nreading data into a Handle.  When reading, we can always just read all\nthe data there is available without blocking, decode it into the Char\nbuffer, and then provide it immediately to the caller.\n\n[note Buffered Writing]\n\nCharacters are written into the Char buffer by e.g. hPutStr.  At the\nend of the operation, or when the char buffer is full, the buffer is\ndecoded to the byte buffer (see writeCharBuffer).  This is so that we\ncan detect encoding errors at the right point.\n\nHence, the Char buffer is always empty between Handle operations.\n\n[note Buffer Sizing]\n\nThe char buffer is always a default size (dEFAULT_CHAR_BUFFER_SIZE).\nThe byte buffer size is chosen by the underlying device (via its\nIODevice.newBuffer).  Hence the size of these buffers is not under\nuser control.\n\nThere are certain minimum sizes for these buffers imposed by the\nlibrary (but not checked):\n\n - we must be able to buffer at least one character, so that\n   hLookAhead can work\n\n - the byte buffer must be able to store at least one encoded\n   character in the current encoding (6 bytes?)\n\n - when reading, the char buffer must have room for two characters, so\n   that we can spot the \\r\\n sequence.\n\nHow do we implement hSetBuffering?\n\nFor reading, we have never used the user-supplied buffer size, because\nthere's no point: we always pass all available data to the reader\nimmediately.  Buffering would imply waiting until a certain amount of\ndata is available, which has no advantages.  So hSetBuffering is\nessentially a no-op for read handles, except that it turns on/off raw\nmode for the underlying device if necessary.\n\nFor writing, the buffering mode is handled by the write operations\nthemselves (hPutChar and hPutStr).  Every write ends with\nwriteCharBuffer, which checks whether the buffer should be flushed\naccording to the current buffering mode.  Additionally, we look for\nnewlines and flush if the mode is LineBuffering.\n\n[note Buffer Flushing]\n\n** Flushing the Char buffer\n\nWe must be able to flush the Char buffer, in order to implement\nhSetEncoding, and things like hGetBuf which want to read raw bytes.\n\nFlushing the Char buffer on a write Handle is easy: it is always empty.\n\nFlushing the Char buffer on a read Handle involves rewinding the byte\nbuffer to the point representing the next Char in the Char buffer.\nThis is done by\n\n - remembering the state of the byte buffer *before* the last decode\n\n - re-decoding the bytes that represent the chars already read from the\n   Char buffer.  This gives us the point in the byte buffer that\n   represents the *next* Char to be read.\n\nIn order for this to work, after readTextHandle we must NOT MODIFY THE\nCONTENTS OF THE BYTE OR CHAR BUFFERS, except to remove characters from\nthe Char buffer.\n\n** Flushing the byte buffer\n\nThe byte buffer can be flushed if the Char buffer has already been\nflushed (see above).  For a read Handle, flushing the byte buffer\nmeans seeking the device back by the number of bytes in the buffer,\nand hence it is only possible on a seekable Handle.\n\n-}" Nothing,DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,23)) "-- Newline translation" Nothing,DComment (DP (2,1),DP (2,69)) "-- | The representation of a newline in the external file or stream." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:6-12
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: Newline})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:16-17
          }
         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,4),DP (0,13)) "-- ^ '\\n'" Nothing),DP (0,4)),((G AnnVbar),DP (1,14))])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:16-17
             }
            Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: LF}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:355:16-19
          }
         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:355:16-19
             }
            Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: CRLF}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:14-43
          }
         Just (Ann (DP (1,14)) (ColDelta 14) DP (1,14) [DComment (DP (0,2),DP (0,13)) "-- ^ '\\r\\n'" Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:24-25
            }
           Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:24-25
              }
             Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Eq}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:28-30
            }
           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:28-30
              }
             Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Ord}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:33-36
            }
           Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:33-36
              }
             Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Read}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:39-42
            }
           Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:39-42
              }
             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Show})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(363,1)-(369,43)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,70)) "-- | Specifies the translation, if any, of newline characters between" Nothing,DComment (DP (1,1),DP (1,70)) "-- internal Strings and the external file or stream.  Haskell Strings" Nothing,DComment (DP (1,1),DP (1,66)) "-- are assumed to represent newlines with the '\\n' character; the" Nothing,DComment (DP (1,1),DP (1,71)) "-- newline mode specifies how to translate '\\n' on output, and what to" Nothing,DComment (DP (1,1),DP (1,33)) "-- translate into '\\n' on input." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:363:6-16
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: NewlineMode})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,5)-(368,18)
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:5-15
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: NewlineMode}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,17)-(368,18)
             }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,21),DP (1,66)) "-- ^ the representation of newlines on output" Nothing),DP (1,21)),((G AnnCloseC),DP (2,18))])
            [
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:19-36
               }
              Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnDcolon),DP (0,1)),((G AnnComma),DP (0,0))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:19-25
                  }
                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: inputNL}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:30-36
                 }
                Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Newline}))) 
               (Nothing))),
             ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:19-37
               }
              Just (Ann (DP (1,19)) (ColDelta 19) DP (2,19) [DComment (DP (1,21),DP (1,65)) "-- ^ the representation of newlines on input" Nothing] [((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:19-26
                  }
                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: outputNL}))] 
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:31-37
                 }
                Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Newline}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:14-43
          }
         Just (Ann (DP (1,14)) (ColDelta 14) DP (1,14) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:24-25
            }
           Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:24-25
              }
             Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Eq}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:28-30
            }
           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:28-30
              }
             Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Ord}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:33-36
            }
           Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:33-36
              }
             Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Read}))))),
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:39-42
            }
           Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
             []) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:39-42
              }
             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Show})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1-24
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,70)) "-- | The native newline representation for the current platform: 'LF'" Nothing,DComment (DP (1,1),DP (1,39)) "-- on Unix systems, 'CRLF' on Windows." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1-13
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: nativeNewline}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:18-24
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:18-24
          }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: Newline}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,22)) "#ifdef mingw32_HOST_OS" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,13)) "nativeNewline" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "CRLF" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-13
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: nativeNewline})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-13
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: nativeNewline})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:15-18
              }
             Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:17-18
                }
               Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: LF})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (11,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,67)) "-- | Map '\\r\\n' into '\\n' on input, and '\\n' to the native newline" Nothing,DComment (DP (1,1),DP (1,73)) "-- represetnation on output.  This mode can be used on any platform, and" Nothing,DComment (DP (1,1),DP (1,72)) "-- works with text files using any newline convention.  The downside is" Nothing,DComment (DP (1,1),DP (1,63)) "-- that @readFile >>= writeFile@ might yield a different file." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,60)) "-- > universalNewlineMode  = NewlineMode { inputNL  = CRLF," Nothing,DComment (DP (1,1),DP (1,70)) "-- >                                       outputNL = nativeNewline }" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1-20
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: universalNewlineMode}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:25-35
        }
       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:25-35
          }
         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: NewlineMode}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:1-20
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: universalNewlineMode})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: universalNewlineMode})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,23)-(390,64)
              }
             Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,25)-(390,64)
                }
               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])
               (RecordCon 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:25-35
                  }
                 Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: NewlineMode})) 
                (HsLit 
                 (HsString "" {FastString: "noPostTcExpr"})) 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:39-53
                    }
                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnEqual),DP (0,2)),((G AnnComma),DP (0,0))])
                   (HsRecField 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:39-45
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: inputNL})) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:50-53
                      }
                     Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: CRLF}))) 
                    (False))),
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:39-62
                    }
                   Just (Ann (DP (1,39)) (ColDelta 39) DP (1,39) [] [((G AnnEqual),DP (0,1))])
                   (HsRecField 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:39-46
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: outputNL})) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:50-62
                      }
                     Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: nativeNewline}))) 
                    (False)))] 
                 (Nothing))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,68)) "-- | Use the native newline representation on both input and output" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,65)) "-- > nativeNewlineMode  = NewlineMode { inputNL  = nativeNewline" Nothing,DComment (DP (1,1),DP (1,67)) "-- >                                    outputNL = nativeNewline }" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,4))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1-17
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: nativeNewlineMode}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:25-35
        }
       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:25-35
          }
         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: NewlineMode}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:1-17
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: nativeNewlineMode})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:1-17
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: nativeNewlineMode})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,23)-(399,64)
              }
             Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,25)-(399,64)
                }
               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])
               (RecordCon 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:25-35
                  }
                 Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: NewlineMode})) 
                (HsLit 
                 (HsString "" {FastString: "noPostTcExpr"})) 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:39-62
                    }
                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnEqual),DP (0,2)),((G AnnComma),DP (0,0))])
                   (HsRecField 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:39-45
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: inputNL})) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:50-62
                      }
                     Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: nativeNewline}))) 
                    (False))),
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:39-62
                    }
                   Just (Ann (DP (1,39)) (ColDelta 39) DP (1,39) [] [((G AnnEqual),DP (0,1))])
                   (HsRecField 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:39-46
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: outputNL})) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:50-62
                      }
                     Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: nativeNewline}))) 
                    (False)))] 
                 (Nothing))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,39)) "-- | Do no newline translation at all." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,74)) "-- > noNewlineTranslation  = NewlineMode { inputNL  = LF, outputNL = LF }" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1-20
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: noNewlineTranslation}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:25-35
        }
       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:25-35
          }
         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: NewlineMode}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-20
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: noNewlineTranslation})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: noNewlineTranslation})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:23-68
              }
             Just (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:25-68
                }
               Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])
               (RecordCon 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:25-35
                  }
                 Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: NewlineMode})) 
                (HsLit 
                 (HsString "" {FastString: "noPostTcExpr"})) 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:39-51
                    }
                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnEqual),DP (0,2)),((G AnnComma),DP (0,0))])
                   (HsRecField 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:39-45
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: inputNL})) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:50-51
                      }
                     Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: LF}))) 
                    (False))),
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:54-66
                    }
                   Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnEqual),DP (0,1))])
                   (HsRecField 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:54-61
                      }
                     Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: outputNL})) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:65-66
                      }
                     Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: LF}))) 
                    (False)))] 
                 (Nothing))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(415,1)-(423,53)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,29)) "-- Show instance for Handles" Nothing,DComment (DP (2,1),DP (2,57)) "-- handle types are 'show'n when printing error msgs, so" Nothing,DComment (DP (1,1),DP (1,56)) "-- we provide a more user-friendly Show instance for it" Nothing,DComment (DP (1,1),DP (1,25)) "-- than the derived one." Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:10-24
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
          []) 
         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:10-24
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:10-13
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Show}))) 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:15-24
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: HandleType}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,3)-(423,53)
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:3-11
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: showsPrec})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,3)-(423,53)
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:3-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: showsPrec})) 
                (False))) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:13 }
                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:15 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: t})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,17)-(423,53)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(417,5)-(423,53)
                    }
                   Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(418,7)-(423,53) Ref "delta-1"),DP (0,0))])
                   (HsCase 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:417:10 }
                     Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: t}))) 
                    (MG 
                     [
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-46
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                       (Match 
                        (Nothing) 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-18
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-18
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: ClosedHandle})) 
                           (PrefixCon 
                            [])))] 
                        (Nothing) 
                        (GRHSs 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:25-46
                            }
                           Just (Ann (DP (0,6)) (ColDelta 18) DP (0,6) [] [((G AnnRarrow),DP (0,0))])
                           (GRHS 
                            [] 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:28-46
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:28-37
                                }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: showString}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:39-46
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"closed\"" {FastString: "closed"})))))))] 
                         (EmptyLocalBinds)))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-51
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (Match 
                        (Nothing) 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-22
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-22
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: SemiClosedHandle})) 
                           (PrefixCon 
                            [])))] 
                        (Nothing) 
                        (GRHSs 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:25-51
                            }
                           Just (Ann (DP (0,2)) (ColDelta 18) DP (0,2) [] [((G AnnRarrow),DP (0,0))])
                           (GRHS 
                            [] 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:28-51
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:28-37
                                }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: showString}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:39-51
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"semi-closed\"" {FastString: "semi-closed"})))))))] 
                         (EmptyLocalBinds)))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-48
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (Match 
                        (Nothing) 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-16
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-16
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: ReadHandle})) 
                           (PrefixCon 
                            [])))] 
                        (Nothing) 
                        (GRHSs 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:25-48
                            }
                           Just (Ann (DP (0,8)) (ColDelta 18) DP (0,8) [] [((G AnnRarrow),DP (0,0))])
                           (GRHS 
                            [] 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:28-48
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:28-37
                                }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: showString}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:39-48
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"readable\"" {FastString: "readable"})))))))] 
                         (EmptyLocalBinds)))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-48
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (Match 
                        (Nothing) 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-17
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-17
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: WriteHandle})) 
                           (PrefixCon 
                            [])))] 
                        (Nothing) 
                        (GRHSs 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:25-48
                            }
                           Just (Ann (DP (0,7)) (ColDelta 18) DP (0,7) [] [((G AnnRarrow),DP (0,0))])
                           (GRHS 
                            [] 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:28-48
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:28-37
                                }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: showString}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:39-48
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"writable\"" {FastString: "writable"})))))))] 
                         (EmptyLocalBinds)))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-57
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (Match 
                        (Nothing) 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-18
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-18
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: AppendHandle})) 
                           (PrefixCon 
                            [])))] 
                        (Nothing) 
                        (GRHSs 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:25-57
                            }
                           Just (Ann (DP (0,6)) (ColDelta 18) DP (0,6) [] [((G AnnRarrow),DP (0,0))])
                           (GRHS 
                            [] 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:28-57
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:28-37
                                }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: showString}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:39-57
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"writable (append)\"" {FastString: "writable (append)"})))))))] 
                         (EmptyLocalBinds)))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7-53
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (Match 
                        (Nothing) 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7-21
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (ConPatIn 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7-21
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: ReadWriteHandle})) 
                           (PrefixCon 
                            [])))] 
                        (Nothing) 
                        (GRHSs 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:25-53
                            }
                           Just (Ann (DP (0,3)) (ColDelta 18) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                           (GRHS 
                            [] 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:28-53
                              }
                             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:28-37
                                }
                               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: showString}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:39-53
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"read-writable\"" {FastString: "read-writable"})))))))] 
                         (EmptyLocalBinds))))] 
                     [] 
                     (PlaceHolder) 
                     (FromSource))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(425,1)-(427,55)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:10-20
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
          []) 
         ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:10-20
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:10-13
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Show}))) 
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:15-20
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Handle}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(426,3)-(427,55)
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-11
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: showsPrec})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-55
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,3))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: showsPrec})) 
                (False))) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:13 }
                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:15-35
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                (ParPat 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:16-34
                   }
                  Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                  (ConPatIn 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:16-25
                     }
                    Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: FileHandle})) 
                   (PrefixCon 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:29-32
                       }
                      Just (Ann (DP (0,3)) (ColDelta 29) DP (0,3) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: file}))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:34 }
                      Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))])))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:39-55
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 39) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:41-55
                    }
                   Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:41-50
                      }
                     Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: showHandle}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:52-55
                      }
                     Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: file})))))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-55
              }
             Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: showsPrec})) 
                (False))) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:13 }
                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:15-37
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                (ParPat 
                 ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:16-36
                   }
                  Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                  (ConPatIn 
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:16-27
                     }
                    Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (Unqual {OccName: DuplexHandle})) 
                   (PrefixCon 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:29-32
                       }
                      Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: file}))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:34 }
                      Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder))),
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:36 }
                      Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))])))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:39-55
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 39) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:41-55
                    }
                   Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:41-50
                      }
                     Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: showHandle}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:52-55
                      }
                     Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: file})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1-42
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1-10
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: showHandle}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-42
        }
       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-42
          }
         Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-22
            }
           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: FilePath}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:27-42
            }
           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:27-32
              }
             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String}))) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:37-42
              }
             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-10
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: showHandle})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-10
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: showHandle})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:12-15
             }
            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: file})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:17-75
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-75
                }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-58
                  }
                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                 (OpApp 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-40
                    }
                   Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-28
                      }
                     Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: showString}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:30-40
                      }
                     Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsLit 
                      (HsString "\"{handle: \"" {FastString: "{handle: "}))))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:42 }
                   Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: .}))) 
                  (PlaceHolder) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:44-58
                    }
                   Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:44-53
                      }
                     Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: showString}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:55-58
                      }
                     Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: file}))))))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:60 }
                 Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: .}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:62-75
                  }
                 Just (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:62-71
                    }
                   Just (Ann (DP (0,0)) (ColDelta 62) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: showString}))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:73-75
                    }
                   Just (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsLit 
                    (HsString "\"}\"" {FastString: "}"})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,28)) "{-# LANGUAGE Trustworthy #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (5,6)) "{-# LANGUAGE CPP\n           , NoImplicitPrelude\n           , ExistentialQuantification\n           , DeriveDataTypeable\n  #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,42)) "{-# OPTIONS_GHC -funbox-strict-fields #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,29)) "{-# OPTIONS_HADDOCK hide #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-28),DP (0,13)) "{-# OPTIONS_GHC -funbox-strict-fields #-}" Nothing),DP (0,-28)),((AnnComment DComment (DP (1,1),DP (1,29)) "{-# OPTIONS_HADDOCK hide #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,73)) "-----------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,33)) "-- Module      :  GHC.IO.Handle.Types" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Module      :  GHC.IO.Handle.Types" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-37),DP (0,21)) "-- Copyright   :  (c) The University of Glasgow, 1994-2009" Nothing),DP (0,-37)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-44),DP (0,14)) "-- Copyright   :  (c) The University of Glasgow, 1994-2009" Nothing),DP (0,-44)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,42)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,37)) "-- Maintainer  :  libraries@haskell.org" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-26),DP (0,13)) "-- Maintainer  :  libraries@haskell.org" Nothing),DP (0,-26)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-26),DP (0,4)) "-- Portability :  non-portable" Nothing),DP (0,-26)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,28)) "-- Portability :  non-portable" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,50)) "-- Basic types for the implementation of IO Handles." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,50)) "-- Basic types for the implementation of IO Handles." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,75)) "-----------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,20)) "GHC.IO.Handle.Types" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnModule),DP (24,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "Handle" Nothing),DP (0,0)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((G AnnEofPos),DP (3,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(25,28)-(35,3) CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,1) [DComment (DP (0,-14),DP (0,-13)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-16 CN "IEThingAll" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,-1),DP (0,1)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,11)) "showHandle" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((AnnComment DComment (DP (0,-6),DP (0,15)) "checkHandleInvariants" Nothing),DP (0,-6)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-30 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:33-42 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:33-42 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:27:7-27 CN "IEVar" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:27:7-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-21),DP (0,-11)) "BufferList" Nothing),DP (0,-21)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-20 CN "IEThingAll" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-20 CN "IEThingAll" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-10),DP (0,10)) "isReadableHandleType" Nothing),DP (0,-10)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:7-26 CN "IEVar" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,5),DP (0,6)) "," Nothing,DComment (DP (0,1),DP (0,21)) "isWritableHandleType" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,22)) "isReadWriteHandleType" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:7-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-20),DP (0,-10)) "BufferMode" Nothing),DP (0,-20)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:29-48 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:29-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:51-71 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:51-71 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-20 CN "IEThingAll" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-10),DP (0,1)) "BufferCodec" Nothing),DP (0,-10)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-21 CN "IEThingAll" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-21 CN "IEThingAll" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,1),DP (0,8)) "Newline" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,14)) "nativeNewline" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((AnnComment DComment (DP (0,-11),DP (0,9)) "universalNewlineMode" Nothing),DP (0,-11)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-34 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "," Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,21)) "noNewlineTranslation" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:37-49 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:37-49 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "," Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:7-26 CN "IEVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 7) DP (1,7) [DComment (DP (0,0),DP (0,17)) "nativeNewlineMode" Nothing,DComment (DP (1,3),DP (1,4)) ")" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:7-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 7) DP (1,7) [] [((G AnnVal),DP (0,-3)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:29-48 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:29-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:51-67 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:51-67 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:39:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,12)) "#undef DEBUG" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,9)) "GHC.Base" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:1-13 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-8),DP (0,-2)) "GHC.IO" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:1-20 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-6),DP (0,7)) "GHC.IO.Buffer" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:1-24 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-13),DP (0,4)) "GHC.IO.BufferedIO" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-17),DP (0,4)) "GHC.IO.Encoding.Types" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:1-16 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-21),DP (0,-12)) "GHC.IORef" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:1-17 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-9),DP (0,1)) "Data.Maybe" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-10),DP (0,-2)) "GHC.Show" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:1-20 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-8),DP (0,5)) "GHC.IO.Device" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:1-20 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,5)) "#ifdef DEBUG" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(101,1)-(114,19) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (50,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "Control.Monad" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,15)) "-- Handle type" Nothing,DComment (DP (0,-14),DP (0,64)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,15)) "-- Handle type" Nothing,DComment (DP (1,1),DP (1,57)) "--  A Handle is represented by (a reference to) a record" Nothing,DComment (DP (1,1),DP (1,57)) "--  A Handle is represented by (a reference to) a record" Nothing,DComment (DP (0,-56),DP (0,2)) "--  containing the state of the I/O port/device. We record" Nothing,DComment (DP (1,1),DP (1,34)) "--  the following pieces of info:" Nothing,DComment (DP (0,-33),DP (0,25)) "--  containing the state of the I/O port/device. We record" Nothing,DComment (DP (1,1),DP (1,34)) "--  the following pieces of info:" Nothing,DComment (DP (1,1),DP (1,38)) "--    * type (read,write,closed etc.)" Nothing,DComment (DP (1,1),DP (1,38)) "--    * type (read,write,closed etc.)" Nothing,DComment (DP (0,-37),DP (0,1)) "--    * the underlying file descriptor" Nothing,DComment (DP (1,1),DP (1,23)) "--    * buffering mode" Nothing,DComment (DP (0,-22),DP (0,16)) "--    * the underlying file descriptor" Nothing,DComment (DP (1,1),DP (1,23)) "--    * buffering mode" Nothing,DComment (DP (0,-22),DP (0,11)) "--    * buffer, and spare buffers" Nothing,DComment (DP (1,1),DP (1,34)) "--    * buffer, and spare buffers" Nothing,DComment (DP (0,-33),DP (0,6)) "--    * user-friendly name (usually the" Nothing,DComment (DP (1,1),DP (1,40)) "--    * user-friendly name (usually the" Nothing,DComment (DP (0,-39),DP (0,11)) "--      FilePath used when IO.openFile was called)" Nothing,DComment (DP (1,1),DP (1,51)) "--      FilePath used when IO.openFile was called)" Nothing,DComment (DP (1,1),DP (1,73)) "-- Note: when a Handle is garbage collected, we want to flush its buffer" Nothing,DComment (DP (1,1),DP (1,73)) "-- Note: when a Handle is garbage collected, we want to flush its buffer" Nothing,DComment (DP (1,1),DP (1,73)) "-- and close the OS file handle, so as to free up a (precious) resource." Nothing,DComment (DP (1,1),DP (1,80)) "-- | Haskell defines operations to read and write characters from and to files," Nothing,DComment (DP (1,1),DP (1,73)) "-- represented by values of type @Handle@.  Each value of this type is a" Nothing,DComment (DP (0,-72),DP (0,7)) "-- | Haskell defines operations to read and write characters from and to files," Nothing,DComment (DP (1,1),DP (1,73)) "-- represented by values of type @Handle@.  Each value of this type is a" Nothing,DComment (DP (0,-72),DP (0,2)) "-- /handle/: a record used by the Haskell run-time system to /manage/ I\\/O" Nothing,DComment (DP (1,1),DP (1,75)) "-- /handle/: a record used by the Haskell run-time system to /manage/ I\\/O" Nothing,DComment (DP (0,-74),DP (0,3)) "-- with file system objects.  A handle has at least the following properties:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,75)) "-- with file system objects.  A handle has at least the following properties:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,47)) "--  * whether it manages input or output or both;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,47)) "--  * whether it manages input or output or both;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,52)) "--  * whether it is /open/, /closed/ or /semi-closed/;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,52)) "--  * whether it is /open/, /closed/ or /semi-closed/;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,35)) "--  * whether the object is seekable;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,35)) "--  * whether the object is seekable;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * whether buffering is disabled, or enabled on a line or block basis;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,71)) "--  * whether buffering is disabled, or enabled on a line or block basis;" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,40)) "--  * a buffer (whose length may be zero)." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,40)) "--  * a buffer (whose length may be zero)." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,78)) "-- Most handles will also have a current I\\/O position indicating where the next" Nothing,DComment (DP (1,1),DP (1,71)) "-- input or output operation will occur.  A handle is /readable/ if it" Nothing,DComment (DP (0,-70),DP (0,10)) "-- Most handles will also have a current I\\/O position indicating where the next" Nothing,DComment (DP (1,1),DP (1,71)) "-- input or output operation will occur.  A handle is /readable/ if it" Nothing,DComment (DP (0,-70),DP (0,7)) "-- manages only input or both input and output; likewise, it is /writable/ if" Nothing,DComment (DP (1,1),DP (1,77)) "-- it manages only output or both input and output.  A handle is /open/ when" Nothing,DComment (DP (0,-76),DP (0,1)) "-- manages only input or both input and output; likewise, it is /writable/ if" Nothing,DComment (DP (1,1),DP (1,20)) "-- first allocated." Nothing,DComment (DP (0,-19),DP (0,57)) "-- it manages only output or both input and output.  A handle is /open/ when" Nothing,DComment (DP (1,1),DP (1,20)) "-- first allocated." Nothing,DComment (DP (0,-19),DP (0,54)) "-- Once it is closed it can no longer be used for either input or output," Nothing,DComment (DP (1,1),DP (1,71)) "-- though an implementation cannot re-use its storage while references" Nothing,DComment (DP (0,-70),DP (0,3)) "-- Once it is closed it can no longer be used for either input or output," Nothing,DComment (DP (1,1),DP (1,71)) "-- though an implementation cannot re-use its storage while references" Nothing,DComment (DP (0,-70),DP (0,3)) "-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string" Nothing,DComment (DP (1,1),DP (1,71)) "-- produced by showing a handle is system dependent; it should include" Nothing,DComment (DP (0,-70),DP (0,3)) "-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string" Nothing,DComment (DP (1,1),DP (1,71)) "-- produced by showing a handle is system dependent; it should include" Nothing,DComment (DP (0,-70),DP (0,2)) "-- enough information to identify the handle for debugging.  A handle is" Nothing,DComment (DP (1,1),DP (1,54)) "-- equal according to '==' only to itself; no attempt" Nothing,DComment (DP (0,-53),DP (0,19)) "-- enough information to identify the handle for debugging.  A handle is" Nothing,DComment (DP (1,1),DP (1,54)) "-- equal according to '==' only to itself; no attempt" Nothing,DComment (DP (0,-53),DP (0,22)) "-- is made to compare the internal state of different handles for equality." Nothing,DComment (DP (1,1),DP (1,76)) "-- is made to compare the internal state of different handles for equality." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,7)) "Handle" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,29),DP (0,57)) "-- A normal handle to a file" Nothing),DP (0,29)),((G AnnEqual),DP (1,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:101:6-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,11)) "FileHandle" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:102:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(102,5)-(105,24) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (1,3),DP (1,4)) "|" Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,13)) "DuplexHandle" Nothing),DP (0,1)),((AnnComment DComment (DP (0,24),DP (0,58)) "-- A handle to a read/write stream" Nothing),DP (0,24)),((G AnnVbar),DP (2,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:103:9-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-6),DP (0,2)) "FilePath" Nothing,DComment (DP (0,24),DP (0,52)) "-- A normal handle to a file" Nothing,DComment (DP (0,-28),DP (0,8)) "-- the file (used for error messages" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:9-24 CN "HsBangTy" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (2,9) [DComment (DP (0,24),DP (0,32)) "-- only)" Nothing,DComment (DP (0,-8),DP (0,28)) "-- the file (used for error messages" Nothing,DComment (DP (1,9),DP (1,10)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "MVar" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,16),DP (0,24)) "-- only)" Nothing] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:10-24 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:11-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:11-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:16-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:107:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(107,5)-(112,24) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:108:9-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,-8),DP (0,0)) "FilePath" Nothing,DComment (DP (0,24),DP (0,58)) "-- A handle to a read/write stream" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:9-24 CN "HsBangTy" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (3,9) [DComment (DP (0,24),DP (0,58)) "-- file for a FIFO, otherwise some" Nothing,DComment (DP (0,-34),DP (0,5)) "--   descriptive string (used for error" Nothing,DComment (DP (1,41),DP (1,60)) "--   messages only)" Nothing,DComment (DP (0,-19),DP (0,20)) "--   descriptive string (used for error" Nothing,DComment (DP (1,9),DP (1,10)) "!" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "MVar" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,16),DP (0,32)) "-- The read side" Nothing,DComment (DP (0,-16),DP (0,3)) "--   messages only)" Nothing] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:10-24 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:11-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:11-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:16-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:9-24 CN "HsBangTy" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,16),DP (0,32)) "-- The read side" Nothing,DComment (DP (0,-16),DP (0,1)) "-- The write side" Nothing] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:10-24 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:11-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:11-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:16-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:114:3-19 CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (2,3) [DComment (DP (0,16),DP (0,33)) "-- The write side" Nothing,DComment (DP (1,3),DP (1,11)) "deriving" Nothing,DComment (DP (0,1),DP (0,9)) "Typeable" Nothing] [((G AnnDeriving),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:114:12-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(120,1)-(123,15) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,10)) "-- NOTES:" Nothing,DComment (DP (1,1),DP (1,10)) "-- NOTES:" Nothing,DComment (DP (0,-9),DP (0,62)) "--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be" Nothing,DComment (DP (1,1),DP (1,18)) "--      seekable." Nothing,DComment (DP (0,-17),DP (0,54)) "--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be" Nothing,DComment (DP (1,1),DP (1,18)) "--      seekable." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,3)) "Eq" Nothing,DComment (DP (0,1),DP (0,7)) "Handle" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "_" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,3)) "h1" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:10-11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:10-18 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:10-18 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-7),DP (0,-7)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,10)) "FileHandle" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:13-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-18 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "_" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-58 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,1)) "h2" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,1),DP (0,2)) "_" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(121,2)-(123,15) CN "FunBind" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [DComment (DP (0,-1),DP (0,1)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,10)) "FileHandle" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "h2" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,5),DP (0,6)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "h1" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,3)) "h2" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:3-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:3-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:14 CN "WildPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "DuplexHandle" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:16-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:24-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,5) [DComment (DP (0,-1),DP (0,1)) "h1" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:27-43 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "_" Nothing),DP (0,-2)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:28-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:28-42 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:39 CN "WildPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 39) DP (0,1) [DComment (DP (0,-10),DP (0,2)) "DuplexHandle" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:41-42 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:49-58 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 49) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:51-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:51-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:54-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:57-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-22 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-58 CN "Match" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:3-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:3-21 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:16 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-11),DP (0,-9)) "==" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:18-19 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:21 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:24-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:27-47 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:28-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:28-46 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:41 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:43-44 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:46 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:49-58 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 49) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:51-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:51-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:54-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:57-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 2) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2-15 CN "Match" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:4-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:7 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:9-15 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:11-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(125,1)-(143,21) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,1)) "dev" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,10)) "enc_state" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,10)) "dec_state" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "." Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,8)) "IODevice" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,11)) "BufferedIO" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,9)) "Typeable" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "dev" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "=>" Nothing),DP (0,1)),((G AnnEqual),DP (1,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:125:6-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "forall" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(126,5)-(142,5) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnForall),DP (0,0)),((G AnnDot),DP (0,1)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:12-14 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-6),DP (0,2)) "Handle__" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:16-24 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "{" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:26-34 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:38-81 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0)),((G AnnCloseP),DP (0,-1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:39-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:39-50 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:48-50 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:53-62 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:53-66 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:64-66 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:69-76 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:69-80 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:78-80 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 78) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:127:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(127,14)-(142,5) CN "(:)" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-6),DP (0,2)) "haDevice" Nothing] [((G AnnOpenC),DP (0,-1)),((AnnComment DComment (DP (0,1),DP (0,18)) "-- duplex handle." Nothing),DP (0,1)),((AnnComment DComment (DP (0,-17),DP (0,12)) "-- ptr to the write side of a" Nothing),DP (0,-17)),((AnnComment DComment (DP (1,5),DP (1,6)) "}" Nothing),DP (1,5)),((AnnComment DComment (DP (0,40),DP (0,57)) "-- duplex handle." Nothing),DP (0,40)),((G AnnCloseC),DP (2,5))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:7-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:7-27 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,6),DP (0,8)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "!" Nothing,DComment (DP (0,0),DP (0,3)) "dev" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((AnnComment DComment (DP (0,-8),DP (0,-2)) "haType" Nothing),DP (0,-8)),((G AnnDcolon),DP (0,6)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:24-27 CN "HsBangTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:25-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,9)) "HandleType" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:7-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:7-33 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,5),DP (0,6)) "," Nothing,DComment (DP (0,11),DP (0,43)) "-- type (read/write/append etc.)" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,6)) "haByteBuffer" Nothing),DP (0,-6)),((G AnnDcolon),DP (0,8)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "!" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "IORef" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "Buffer" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:24-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:7-46 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,5),DP (0,10)) "Word8" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,-1),DP (0,31)) "-- type (read/write/append etc.)" Nothing,DComment (DP (0,-31),DP (0,-30)) "," Nothing] [((G AnnDcolon),DP (0,2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:24-46 CN "HsBangTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:25-46 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,9)) "BufferMode" Nothing),DP (0,-1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:26-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:26-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:32-45 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:33-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:33-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:40-44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 40) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:7-33 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((G AnnDcolon),DP (0,2)),((AnnComment DComment (DP (0,-10),DP (0,-9)) "!" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "IORef" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "dec_state" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:24-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:7-57 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,7),DP (0,8)) "," Nothing,DComment (DP (0,1),DP (0,7)) "Buffer" Nothing,DComment (DP (0,1),DP (0,6)) "Word8" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnDcolon),DP (0,2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:24-57 CN "HsBangTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:25-57 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:26-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:26-56 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:32-56 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) ")" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,22)) "-- the current buffer" Nothing),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:33-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,-3)) "Buffer" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,12)) "CharBufElem" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:44-49 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:44-55 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:51-55 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:7-52 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-12),DP (0,-3)) "haBuffers" Nothing),DP (0,-12)),((G AnnDcolon),DP (0,2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:24-52 CN "HsBangTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:25-52 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:26-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:26-51 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:32-51 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,4)) "CharBufElem" Nothing),DP (0,-7)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:33-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:33-50 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:40-50 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 40) DP (0,1) [DComment (DP (0,-6),DP (0,4)) "BufferList" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:7-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:7-56 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (0,-1),DP (0,20)) "-- the current buffer" Nothing,DComment (DP (0,-20),DP (0,-19)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,2),DP (0,18)) "-- spare buffers" Nothing] [((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:24-56 CN "HsBangTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnBang),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:25-56 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,4)) "Maybe" Nothing),DP (0,-1)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:26-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:26-55 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:32-55 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 32) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "TextEncoder" Nothing] [((G AnnOpenP),DP (0,-10)),((AnnComment DComment (DP (0,-3),DP (0,-2)) ")" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:33-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:33-54 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:44-54 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,9)) "enc_state" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:7-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:7-52 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,2),DP (0,18)) "-- spare buffers" Nothing] [((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:24-52 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:30-52 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:31-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:31-51 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:43-51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:7-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:7-52 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-9),DP (0,-2)) "haCodec" Nothing),DP (0,-9)),((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:24-52 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:30-52 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:31-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,11)) "TextEncoding" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:31-51 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:43-51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:7-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:7-41 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-7),DP (0,2)) "haInputNL" Nothing),DP (0,-7)),((G AnnDcolon),DP (0,7)),((AnnComment DComment (DP (0,-11),DP (0,-10)) "," Nothing),DP (0,-11)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:24-41 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:30-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-5),DP (0,2)) "Newline" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:7-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:7-30 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-9),DP (0,1)) "haOutputNL" Nothing),DP (0,-9)),((G AnnDcolon),DP (0,5)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:24-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:7-30 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [] [((AnnComment DComment (DP (0,-10),DP (0,1)) "haOtherSide" Nothing),DP (0,-10)),((G AnnDcolon),DP (0,4)),((AnnComment DComment (DP (0,-7),DP (0,-2)) "Maybe" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:24-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:7-44 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,7)) (ColDelta 7) DP (1,7) [DComment (DP (0,-1),DP (0,3)) "MVar" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,30)) "-- ptr to the write side of a" Nothing] [((G AnnDcolon),DP (0,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:24-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:30-44 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:31-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:31-43 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:36-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:143:5-21 CN "(:)" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-1),DP (0,7)) "deriving" Nothing,DComment (DP (0,1),DP (0,9)) "Typeable" Nothing] [((G AnnDeriving),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:143:14-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(148,1)-(150,47) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,70)) "-- we keep a few spare buffers around in a handle to avoid allocating" Nothing,DComment (DP (1,1),DP (1,70)) "-- we keep a few spare buffers around in a handle to avoid allocating" Nothing,DComment (DP (0,-69),DP (0,3)) "-- a new one for each hPutStr.  These buffers are *guaranteed* to be the" Nothing,DComment (DP (1,1),DP (1,33)) "-- same size as the main buffer." Nothing,DComment (DP (0,-32),DP (0,40)) "-- a new one for each hPutStr.  These buffers are *guaranteed* to be the" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,-4),DP (0,28)) "-- same size as the main buffer." Nothing,DComment (DP (0,-27),DP (0,-17)) "BufferList" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:148:6-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,14)) "BufferListNil" Nothing] [((G AnnVal),DP (0,-12))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:148:17 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:149:5-17 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,1)) "BufferListCons" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "RawBuffer" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "e" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,10)) "BufferList" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "e" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:149:5-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:5-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:5-47 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:20-32 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:21-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:21-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:34-47 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:35-44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:35-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(155,1)-(161,18) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,49)) "--  Internally, we classify handles as being one" Nothing,DComment (DP (1,1),DP (1,22)) "--  of the following:" Nothing,DComment (DP (0,-21),DP (0,27)) "--  Internally, we classify handles as being one" Nothing,DComment (DP (1,1),DP (1,22)) "--  of the following:" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:155:6-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 6) DP (0,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "ClosedHandle" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:156:4-15 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,4)) "SemiClosedHandle" Nothing),DP (0,-12)),((G AnnVbar),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:156:4-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:157:4-19 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-16),DP (0,-6)) "ReadHandle" Nothing),DP (0,-16)),((G AnnVbar),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:157:4-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:158:4-13 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,1)) "WriteHandle" Nothing),DP (0,-10)),((G AnnVbar),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:158:4-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:159:4-14 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-11),DP (0,1)) "AppendHandle" Nothing),DP (0,-11)),((G AnnVbar),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:159:4-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:160:4-15 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,-12),DP (0,3)) "ReadWriteHandle" Nothing),DP (0,-12)),((G AnnVbar),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:160:4-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:161:4-18 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:161:4-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,20)) "isReadableHandleType" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [DComment (DP (0,-2),DP (0,8)) "ReadHandle" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 25) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:39-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-46 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-10),DP (0,5)) "ReadWriteHandle" Nothing),DP (0,-10)),((G AnnEqual),DP (0,9))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(164,1)-(166,47) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:22-31 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:22-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:41-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:43-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-46 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-14)) "_" Nothing),DP (0,-15)),((G AnnEqual),DP (0,4))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:22-36 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:22-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:41-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:43-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-47 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,18))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:22 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:41-47 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:43-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,20)) "isWritableHandleType" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 25) DP (0,1) [DComment (DP (0,-2),DP (0,10)) "AppendHandle" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 25) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:39-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,0),DP (0,1)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-43 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-12),DP (0,-1)) "WriteHandle" Nothing),DP (0,-12)),((G AnnEqual),DP (0,4))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(169,1)-(172,44) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,1)) "True" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:22-33 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:22-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:38-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:40-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-43 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((AnnComment DComment (DP (0,-11),DP (0,4)) "ReadWriteHandle" Nothing),DP (0,-11)),((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:22-32 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:22-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:38-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:40-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-43 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-14)) "_" Nothing),DP (0,-15)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:22-36 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:22-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:38-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:40-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-44 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,15))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:22 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:38-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 38) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:40-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1-43 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,21)) "isReadWriteHandleType" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,11)) "HandleType" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,-12))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-43 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 26) DP (0,1) [DComment (DP (0,-2),DP (0,13)) "ReadWriteHandle" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-43 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-12)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:40-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "{" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-46 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(175,1)-(176,47) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,-2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:23-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:23-39 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((AnnComment DComment (DP (0,-15),DP (0,-14)) "_" Nothing),DP (0,-15)),((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:41-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:43-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-47 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,1)) "False" Nothing] [((G AnnEqual),DP (0,17))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:23 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:41-47 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 41) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:43-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (10,1) [DComment (DP (1,1),DP (1,26)) "-- INVARIANTS on Handles:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,23)) "-- INVARIANTS on Handles:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,72)) "--   * A handle *always* has a buffer, even if it is only 1 character long" Nothing,DComment (DP (1,1),DP (1,75)) "--   * A handle *always* has a buffer, even if it is only 1 character long" Nothing,DComment (DP (0,-74),DP (0,1)) "--     (an unbuffered handle needs a 1 character buffer in order to support" Nothing,DComment (DP (1,1),DP (1,32)) "--      hLookAhead and hIsEOF)." Nothing,DComment (DP (0,-31),DP (0,44)) "--     (an unbuffered handle needs a 1 character buffer in order to support" Nothing,DComment (DP (1,1),DP (1,32)) "--      hLookAhead and hIsEOF)." Nothing,DComment (DP (0,-31),DP (0,50)) "--   * In a read Handle, the byte buffer is always empty (we decode when reading)" Nothing,DComment (DP (1,1),DP (1,82)) "--   * In a read Handle, the byte buffer is always empty (we decode when reading)" Nothing,DComment (DP (0,-81),DP (0,2)) "--   * In a wriite Handle, the Char buffer is always empty (we encode when writing)" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (0,-2),DP (0,81)) "--   * In a wriite Handle, the Char buffer is always empty (we encode when writing)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "--" Nothing,DComment (DP (0,-2),DP (0,19)) "checkHandleInvariants" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "Handle__" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-21),DP (0,-10)) "#ifdef DEBUG" Nothing),DP (0,-21)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:38-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:38-42 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:41-42 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,21)) "checkHandleInvariants" Nothing,DComment (DP (0,1),DP (0,3)) "h_" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "readIORef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "haByteBuffer" Nothing,DComment (DP (0,1),DP (0,3)) "h_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "checkBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "cbuf" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "readIORef" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "haCharBuffer" Nothing,DComment (DP (0,1),DP (0,3)) "h_" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "checkBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "isWriteBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,4)) "not" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "isEmptyBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (1,4),DP (1,9)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,54)) "\"checkHandleInvariants: char write buffer non-empty: \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (1,11),DP (1,24)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,5)) "\", \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,14)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (1,2),DP (1,2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "when" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,13)) "isWriteBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "/=" Nothing,DComment (DP (0,1),DP (0,14)) "isWriteBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (1,4),DP (1,9)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,46)) "\"checkHandleInvariants: buffer modes differ: \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (1,11),DP (1,24)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "bbuf" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,5)) "\", \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,14)) "summaryBuffer" Nothing,DComment (DP (0,1),DP (0,5)) "cbuf" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:23 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:25-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 25) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:27-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:27-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(246,1)-(254,33) CN "TyClD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (46,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Buffering modes" Nothing,DComment (DP (2,1),DP (2,61)) "-- | Three kinds of buffering are supported: line-buffering," Nothing,DComment (DP (1,1),DP (1,68)) "-- block-buffering or no-buffering.  These modes have the following" Nothing,DComment (DP (1,1),DP (1,61)) "-- effects. For output, items are written out, or /flushed/," Nothing,DComment (DP (1,1),DP (1,58)) "-- from the internal buffer according to the buffer mode:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,60)) "--  * /line-buffering/: the entire output buffer is flushed" Nothing,DComment (DP (1,1),DP (1,58)) "--    whenever a newline is output, the buffer overflows," Nothing,DComment (DP (1,1),DP (1,63)) "--    a 'System.IO.hFlush' is issued, or the handle is closed." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,70)) "--  * /block-buffering/: the entire buffer is written out whenever it" Nothing,DComment (DP (1,1),DP (1,74)) "--    overflows, a 'System.IO.hFlush' is issued, or the handle is closed." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,70)) "--  * /no-buffering/: output is written immediately, and never stored" Nothing,DComment (DP (1,1),DP (1,21)) "--    in the buffer." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,66)) "-- An implementation is free to flush the buffer more frequently," Nothing,DComment (DP (1,1),DP (1,50)) "-- but not less frequently, than specified above." Nothing,DComment (DP (1,1),DP (1,68)) "-- The output buffer is emptied as soon as it has been written out." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,72)) "-- Similarly, input occurs according to the buffer mode for the handle:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,69)) "--  * /line-buffering/: when the buffer for the handle is not empty," Nothing,DComment (DP (1,1),DP (1,69)) "--    the next item is obtained from the buffer; otherwise, when the" Nothing,DComment (DP (1,1),DP (1,71)) "--    buffer is empty, characters up to and including the next newline" Nothing,DComment (DP (1,1),DP (1,71)) "--    character are read into the buffer.  No characters are available" Nothing,DComment (DP (1,1),DP (1,70)) "--    until the newline character is available or the buffer is full." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,71)) "--  * /block-buffering/: when the buffer for the handle becomes empty," Nothing,DComment (DP (1,1),DP (1,54)) "--    the next block of data is read into the buffer." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,64)) "--  * /no-buffering/: the next input item is read and returned." Nothing,DComment (DP (1,1),DP (1,75)) "--    The 'System.IO.hLookAhead' operation implies that even a no-buffered" Nothing,DComment (DP (1,1),DP (1,49)) "--    handle may require a one-character buffer." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,57)) "-- The default buffering mode when a handle is opened is" Nothing,DComment (DP (1,1),DP (1,69)) "-- implementation-dependent and may depend on the file system object" Nothing,DComment (DP (1,1),DP (1,37)) "-- which is attached to that handle." Nothing,DComment (DP (1,1),DP (1,76)) "-- For most implementations, physical files will normally be block-buffered" Nothing,DComment (DP (1,1),DP (1,49)) "-- and terminals will normally be line-buffered." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:246:6-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:247:4-14 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (0,2),DP (0,41)) "-- ^ buffering is disabled if possible." Nothing),DP (0,2)),((G AnnVbar),DP (1,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:247:4-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:248:4-16 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [((AnnComment DComment (DP (1,17),DP (1,67)) "-- ^ line-buffering should be enabled if possible." Nothing),DP (1,17)),((G AnnVbar),DP (2,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:248:4-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:4-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:4-29 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:19-29 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:20-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:20-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:26-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:4-33 CN "(:)" NotNeeded,
  (Ann (DP (1,4)) (ColDelta 4) DP (4,4) [DComment (DP (1,17),DP (1,68)) "-- ^ block-buffering should be enabled if possible." Nothing,DComment (DP (1,17),DP (1,71)) "-- The size of the buffer is @n@ items if the argument" Nothing,DComment (DP (1,17),DP (1,76)) "-- is 'Just' @n@ and is otherwise implementation-dependent." Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:14-15 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:14-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:18-20 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:18-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:23-26 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:23-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:29-32 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:29-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(354,1)-(356,43) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (100,1) [DComment (DP (2,1),DP (94,3)) "{-\n[note Buffering Implementation]\n\nEach Handle has two buffers: a byte buffer (haByteBuffer) and a Char\nbuffer (haCharBuffer).\n\n[note Buffered Reading]\n\nFor read Handles, bytes are read into the byte buffer, and immediately\ndecoded into the Char buffer (see\nGHC.IO.Handle.Internals.readTextDevice).  The only way there might be\nsome data left in the byte buffer is if there is a partial multi-byte\ncharacter sequence that cannot be decoded into a full character.\n\nNote that the buffering mode (haBufferMode) makes no difference when\nreading data into a Handle.  When reading, we can always just read all\nthe data there is available without blocking, decode it into the Char\nbuffer, and then provide it immediately to the caller.\n\n[note Buffered Writing]\n\nCharacters are written into the Char buffer by e.g. hPutStr.  At the\nend of the operation, or when the char buffer is full, the buffer is\ndecoded to the byte buffer (see writeCharBuffer).  This is so that we\ncan detect encoding errors at the right point.\n\nHence, the Char buffer is always empty between Handle operations.\n\n[note Buffer Sizing]\n\nThe char buffer is always a default size (dEFAULT_CHAR_BUFFER_SIZE).\nThe byte buffer size is chosen by the underlying device (via its\nIODevice.newBuffer).  Hence the size of these buffers is not under\nuser control.\n\nThere are certain minimum sizes for these buffers imposed by the\nlibrary (but not checked):\n\n - we must be able to buffer at least one character, so that\n   hLookAhead can work\n\n - the byte buffer must be able to store at least one encoded\n   character in the current encoding (6 bytes?)\n\n - when reading, the char buffer must have room for two characters, so\n   that we can spot the \\r\\n sequence.\n\nHow do we implement hSetBuffering?\n\nFor reading, we have never used the user-supplied buffer size, because\nthere's no point: we always pass all available data to the reader\nimmediately.  Buffering would imply waiting until a certain amount of\ndata is available, which has no advantages.  So hSetBuffering is\nessentially a no-op for read handles, except that it turns on/off raw\nmode for the underlying device if necessary.\n\nFor writing, the buffering mode is handled by the write operations\nthemselves (hPutChar and hPutStr).  Every write ends with\nwriteCharBuffer, which checks whether the buffer should be flushed\naccording to the current buffering mode.  Additionally, we look for\nnewlines and flush if the mode is LineBuffering.\n\n[note Buffer Flushing]\n\n** Flushing the Char buffer\n\nWe must be able to flush the Char buffer, in order to implement\nhSetEncoding, and things like hGetBuf which want to read raw bytes.\n\nFlushing the Char buffer on a write Handle is easy: it is always empty.\n\nFlushing the Char buffer on a read Handle involves rewinding the byte\nbuffer to the point representing the next Char in the Char buffer.\nThis is done by\n\n - remembering the state of the byte buffer *before* the last decode\n\n - re-decoding the bytes that represent the chars already read from the\n   Char buffer.  This gives us the point in the byte buffer that\n   represents the *next* Char to be read.\n\nIn order for this to work, after readTextHandle we must NOT MODIFY THE\nCONTENTS OF THE BYTE OR CHAR BUFFERS, except to remove characters from\nthe Char buffer.\n\n** Flushing the byte buffer\n\nThe byte buffer can be flushed if the Char buffer has already been\nflushed (see above).  For a read Handle, flushing the byte buffer\nmeans seeking the device back by the number of bytes in the buffer,\nand hence it is only possible on a seekable Handle.\n\n-}" Nothing,DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,23)) "-- Newline translation" Nothing,DComment (DP (2,1),DP (2,69)) "-- | The representation of a newline in the external file or stream." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:6-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:16-17 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,4),DP (0,13)) "-- ^ '\\n'" Nothing),DP (0,4)),((G AnnVbar),DP (1,14))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:16-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:355:16-19 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:355:16-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:14-43 CN "(:)" NotNeeded,
  (Ann (DP (1,14)) (ColDelta 14) DP (1,14) [DComment (DP (0,2),DP (0,13)) "-- ^ '\\r\\n'" Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:24-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:24-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:28-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:28-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:33-36 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:33-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:39-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:39-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(363,1)-(369,43) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,70)) "-- | Specifies the translation, if any, of newline characters between" Nothing,DComment (DP (1,1),DP (1,70)) "-- internal Strings and the external file or stream.  Haskell Strings" Nothing,DComment (DP (1,1),DP (1,66)) "-- are assumed to represent newlines with the '\\n' character; the" Nothing,DComment (DP (1,1),DP (1,71)) "-- newline mode specifies how to translate '\\n' on output, and what to" Nothing,DComment (DP (1,1),DP (1,33)) "-- translate into '\\n' on input." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:363:6-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,5)-(368,18) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,17)-(368,18) CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,21),DP (1,66)) "-- ^ the representation of newlines on output" Nothing),DP (1,21)),((G AnnCloseC),DP (2,18))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:19-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:19-36 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnDcolon),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:30-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:19-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:19-37 CN "ConDeclField" NotNeeded,
  (Ann (DP (1,19)) (ColDelta 19) DP (2,19) [DComment (DP (1,21),DP (1,65)) "-- ^ the representation of newlines on input" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:31-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:14-43 CN "(:)" NotNeeded,
  (Ann (DP (1,14)) (ColDelta 14) DP (1,14) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:24-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:24-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:28-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:28-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:33-36 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:33-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:39-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:39-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1-24 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,70)) "-- | The native newline representation for the current platform: 'LF'" Nothing,DComment (DP (1,1),DP (1,39)) "-- on Unix systems, 'CRLF' on Windows." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:18-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:18-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,22)) "#ifdef mingw32_HOST_OS" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,13)) "nativeNewline" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "CRLF" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:15-18 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:17-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1-35 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (11,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,67)) "-- | Map '\\r\\n' into '\\n' on input, and '\\n' to the native newline" Nothing,DComment (DP (1,1),DP (1,73)) "-- represetnation on output.  This mode can be used on any platform, and" Nothing,DComment (DP (1,1),DP (1,72)) "-- works with text files using any newline convention.  The downside is" Nothing,DComment (DP (1,1),DP (1,63)) "-- that @readFile >>= writeFile@ might yield a different file." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,60)) "-- > universalNewlineMode  = NewlineMode { inputNL  = CRLF," Nothing,DComment (DP (1,1),DP (1,70)) "-- >                                       outputNL = nativeNewline }" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:25-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:25-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,23)-(390,64) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:25-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,25)-(390,64) CN "RecordCon" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:39-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:39-53 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnEqual),DP (0,2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:50-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:39-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:39-62 CN "HsRecField" NotNeeded,
  (Ann (DP (1,39)) (ColDelta 39) DP (1,39) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:50-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1-35 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (2,1),DP (2,68)) "-- | Use the native newline representation on both input and output" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,65)) "-- > nativeNewlineMode  = NewlineMode { inputNL  = nativeNewline" Nothing,DComment (DP (1,1),DP (1,67)) "-- >                                    outputNL = nativeNewline }" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,4))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:25-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:25-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:1-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,23)-(399,64) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:25-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,25)-(399,64) CN "RecordCon" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:39-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:39-62 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnEqual),DP (0,2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:50-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:39-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:39-62 CN "HsRecField" NotNeeded,
  (Ann (DP (1,39)) (ColDelta 39) DP (1,39) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:50-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1-35 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,39)) "-- | Do no newline translation at all." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,74)) "-- > noNewlineTranslation  = NewlineMode { inputNL  = LF, outputNL = LF }" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:25-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:25-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:23-68 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 23) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:25-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:25-68 CN "RecordCon" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:39-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:39-51 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnEqual),DP (0,2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:50-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:54-61 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:54-66 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:65-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(415,1)-(423,53) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,79)) "-- ---------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,29)) "-- Show instance for Handles" Nothing,DComment (DP (2,1),DP (2,57)) "-- handle types are 'show'n when printing error msgs, so" Nothing,DComment (DP (1,1),DP (1,56)) "-- we provide a more user-friendly Show instance for it" Nothing,DComment (DP (1,1),DP (1,25)) "-- than the derived one." Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:10-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:10-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:15-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:3-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,3)-(423,53) CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,3)-(423,53) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,17)-(423,53) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(417,5)-(423,53) CN "HsCase" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(418,7)-(423,53) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:417:10 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-46 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(418,7)-(423,53) CN "(:)" Ref "delta-1",
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:25-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 18) DP (0,6) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:28-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:39-46 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-22 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-51 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:25-51 CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 18) DP (0,2) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:28-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:39-51 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-16 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-48 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:25-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 18) DP (0,8) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:28-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:39-48 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-48 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:25-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 18) DP (0,7) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:28-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:39-48 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-57 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:25-57 CN "GRHS" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 18) DP (0,6) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:28-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:39-57 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7-21 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7-53 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:25-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 18) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:28-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:28-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:39-53 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(425,1)-(427,55) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:10-20 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:10-20 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:15-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-55 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(426,3)-(427,55) CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:15-35 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:16-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:16-34 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:29-32 CN "VarPat" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 29) DP (0,3) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:34 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:39-55 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 39) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:41-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:41-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:52-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-55 CN "Match" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:15-37 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:16-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:16-36 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:29-32 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:34 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:36 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:39-55 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 39) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:41-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:41-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:52-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1-42 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:27-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:27-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:37-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:12-15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:17-75 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-75 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:30-40 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:44-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:44-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:55-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:62-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 62) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:62-75 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 62) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:73-75 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 73) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-121,0)) (ColDelta 0) DP (-121,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-101,0)) (ColDelta 0) DP (-101,0) [] []))]
==============
([((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:1:1,
    AnnModule),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:25:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:1:1,
    AnnWhere),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:35:5-9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(25,28)-(35,3),
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:35:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(25,28)-(35,3),
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:25:28]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-16,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:16]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-16,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-16,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:14-15]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:7-16,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-30,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-30,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-30,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:28-29]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:19-30,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:33-42,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:26:43]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:27:7-27,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:27:28]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-20,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-20,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-20,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:18-19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:7-20,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:28:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-20,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-20,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-20,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:18-19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:7-20,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:29:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:7-26,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:29-48,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:49]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:51-71,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:30:72]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-20,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-20,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-20,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:18-19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:7-20,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:31:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-21,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-21,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-21,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:19-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:7-21,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:32:18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-21,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-21,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-21,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:19-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:7-21,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-34,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-34,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-34,
    AnnDotdot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:32-33]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:24-34,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:37-49,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:33:50]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:7-26,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:29-48,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:34:49]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:39:1-15,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:39:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:39:1-15,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:1-15,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:40:1-15,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:1-13,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:41:1-13,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:1-20,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:42:1-20,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:1-24,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:43:1-24,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:1-28,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:44:1-28,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:1-16,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:45:1-16,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:1-17,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:46:1-17,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:1-15,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:47:1-15,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:1-15,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:48:1-15,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:1-15,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:49:1-15,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:1-20,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:50:1-20,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:1-20,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:51:1-20,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:101:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(101,1)-(114,19),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:101:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(101,1)-(114,19),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:102:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(101,1)-(114,19),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(102,5)-(105,24),
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:107:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:9-24,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:10-24,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:10-24,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:105:10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:9-24,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:10-24,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:10-24,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:111:10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:9-24,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:10-24,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:10-24,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:112:10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:114:3-19,
    AnnDeriving),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:114:3-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(120,1)-(123,15),
    AnnInstance),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:1-8]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(120,1)-(123,15),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:125:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(120,1)-(123,15),
    AnnWhere),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:120:20-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-18,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-18,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-43,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:24-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-58,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:49]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-58,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:24-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:2-58,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:27-43,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:43]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:27-43,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:51-58,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:121:54-55]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-22,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-22,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-47,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:24-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-58,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:49]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-58,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:24-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:2-58,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:27-47,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:27-47,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:51-58,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:122:54-55]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2-7,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:4-5]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2-15,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:2-15,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:123:4-5]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(125,1)-(143,21),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:125:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(125,1)-(143,21),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(125,1)-(143,21),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:148:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(126,5)-(142,5),
    AnnDarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:83-84]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(126,5)-(142,5),
    AnnDot),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:36]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(126,5)-(142,5),
    AnnForall),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:5-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:38-81,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:81,
    ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:81]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:38-81,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:38,
    ../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:39-50,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:51]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:53-66,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:126:67]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(127,14)-(142,5),
    AnnCloseC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:142:5]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(127,14)-(142,5),
    AnnOpenC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:127:14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:7-27,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:28]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:7-27,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:24-27,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:128:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:7-33,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:7-33,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:129:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:7-46,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:7-46,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:24-46,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:25-46,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:46]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:25-46,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:32-45,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:45]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:32-45,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:130:32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:7-33,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:7-33,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:131:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:7-57,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:58]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:7-57,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:24-57,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:25-57,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:57]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:25-57,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:32-56,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:56]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:32-56,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:33-41,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:132:42]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:7-52,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:53]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:7-52,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:24-52,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:25-52,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:25-52,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:32-51,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:51]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:32-51,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:133:32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:7-56,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:57]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:7-56,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:24-56,
    AnnBang),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:25-56,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:56]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:25-56,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:32-55,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:55]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:32-55,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:134:32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:7-52,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:53]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:7-52,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:30-52,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:30-52,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:135:30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:7-52,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:53]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:7-52,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:30-52,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:30-52,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:136:30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:7-41,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:42]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:7-41,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:137:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:7-30,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:7-30,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:138:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:7-30,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:7-30,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:139:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:7-44,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:21-22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:30-44,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:44]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:30-44,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:140:30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:143:5-21,
    AnnDeriving),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:143:5-12]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(148,1)-(150,47),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:148:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(148,1)-(150,47),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:149:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(148,1)-(150,47),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:155:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:149:5-17,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:20-32,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:20-32,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:34-47,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:34-47,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:150:34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(155,1)-(161,18),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:155:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(155,1)-(161,18),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:156:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(155,1)-(161,18),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:156:4-15,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:157:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:157:4-19,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:158:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:158:4-13,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:159:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:159:4-14,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:160:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:160:4-15,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:161:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1-42,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:22-23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:1-42,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:25-42,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:163:36-37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-46,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-46,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:164:1-46,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-46,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-46,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:165:1-46,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-47,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-47,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:166:1-47,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1-42,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:22-23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:1-42,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:25-42,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:168:36-37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-43,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-43,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:169:1-43,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-43,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-43,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:170:1-43,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-43,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-43,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:171:1-43,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-44,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-44,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:172:1-44,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1-43,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:23-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:1-43,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:26-43,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:174:37-38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-46,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-46,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:1-46,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:23-39,
    AnnCloseC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:39]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:23-39,
    AnnOpenC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:175:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-47,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-47,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:176:1-47,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1-42,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:23-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:1-42,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:26-42,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:35-36]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:41-42,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:42]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:41-42,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:186:41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:1-35,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:246:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:34-35,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:34-35,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:200:34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(246,1)-(254,33),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:246:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(246,1)-(254,33),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:247:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(246,1)-(254,33),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:247:4-14,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:248:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:248:4-16,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:2]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:19-29,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:29]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:19-29,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:250:19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:4-33,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:33]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:4-33,
    AnnDeriving),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:4-11]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:4-33,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:14-15,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:16]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:18-20,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:23-26,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:254:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(354,1)-(356,43),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(354,1)-(356,43),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(354,1)-(356,43),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:363:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:354:16-17,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:355:14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:14-43,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:43]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:14-43,
    AnnDeriving),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:14-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:14-43,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:24-25,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:28-30,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:33-36,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:356:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(363,1)-(369,43),
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:363:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(363,1)-(369,43),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(363,1)-(369,43),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,17)-(368,18),
    AnnCloseC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:368:18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,17)-(368,18),
    AnnOpenC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:19-36,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:19-36,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:364:27-28]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:19-37,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:366:28-29]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:14-43,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:43]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:14-43,
    AnnDeriving),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:14-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:14-43,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:24-25,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:28-30,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:33-36,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:369:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1-24,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:15-16]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:373:1-24,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:15]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:377:1-18,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1-35,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:22-23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:388:1-35,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,1)-(390,64),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,25)-(390,64),
    AnnCloseC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:64]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(389,25)-(390,64),
    AnnOpenC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:39-53,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:54]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:39-53,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:389:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:39-62,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:390:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1-35,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:22-23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:397:1-35,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:1-17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,1)-(399,64),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,25)-(399,64),
    AnnCloseC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:64]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(398,25)-(399,64),
    AnnOpenC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:39-62,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:63]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:39-62,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:398:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:39-62,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:399:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1-35,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:22-23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:405:1-35,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:1-68,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:25-68,
    AnnCloseC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:68]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:25-68,
    AnnOpenC),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:39-51,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:39-51,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:54-66,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:406:63]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(415,1)-(423,53),
    AnnInstance),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:1-8]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(415,1)-(423,53),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(415,1)-(423,53),
    AnnWhere),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:415:26-30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,3)-(423,53),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(416,3)-(423,53),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:416:3-11]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(417,5)-(423,53),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:417:5-8]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(417,5)-(423,53),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:417:12-13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:7-46,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:25-46,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:418:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:7-51,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:25-51,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:419:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:7-48,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:25-48,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:420:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:7-48,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:25-48,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:421:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:7-57,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:25-57,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:422:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:25-53,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:423:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(425,1)-(427,55),
    AnnInstance),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:1-8]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(425,1)-(427,55),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(425,1)-(427,55),
    AnnWhere),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:425:22-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-55,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:39]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-55,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-11]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:3-55,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:15-35,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:15-35,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:426:15]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-55,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:39]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-55,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:3-11]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:15-37,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:15-37,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:427:15]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1-42,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:12-13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:1-42,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:15-42,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:24-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:27-42,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:429:34-35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:1-75,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:433:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-58,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:42]),
  ((../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:19-75,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:430:60]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:433:1])],
 [(../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(101,1)-(114,19),
   [AnnLineComment "-- The write side",
    AnnLineComment "-- The read side",
    AnnLineComment "--   messages only)",
    AnnLineComment "--   descriptive string (used for error",
    AnnLineComment "-- file for a FIFO, otherwise some",
    AnnLineComment "-- A handle to a read/write stream"]),
  (../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(102,5)-(105,24),
   [AnnLineComment "-- only)",
    AnnLineComment "-- the file (used for error messages",
    AnnLineComment "-- A normal handle to a file"]),
  (../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(127,14)-(142,5),
   [AnnLineComment "-- duplex handle.",
    AnnLineComment "-- ptr to the write side of a",
    AnnLineComment "-- spare buffers",
    AnnLineComment "-- the current buffer",
    AnnLineComment "-- type (read/write/append etc.)"]),
  (../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(246,1)-(254,33),
   [AnnLineComment "-- is 'Just' @n@ and is otherwise implementation-dependent.",
    AnnLineComment "-- The size of the buffer is @n@ items if the argument",
    AnnLineComment "-- ^ block-buffering should be enabled if possible.",
    AnnLineComment "-- ^ line-buffering should be enabled if possible.",
    AnnLineComment "-- ^ buffering is disabled if possible."]),
  (../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(354,1)-(356,43),
   [AnnLineComment "-- ^ '\\r\\n'", AnnLineComment "-- ^ '\\n'"]),
  (../../hackage-packages/base-4.7.0.2/GHC/IO/Handle/Types.hs:(364,17)-(368,18),
   [AnnLineComment "-- ^ the representation of newlines on output",
    AnnLineComment "-- ^ the representation of newlines on input"]),
  (<no location info>,
   [AnnLineComment "-- than the derived one.",
    AnnLineComment "-- we provide a more user-friendly Show instance for it",
    AnnLineComment "-- handle types are 'show'n when printing error msgs, so",
    AnnLineComment "-- Show instance for Handles",
    AnnLineComment "-- ---------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- > noNewlineTranslation  = NewlineMode { inputNL  = LF, outputNL = LF }",
    AnnLineComment "--",
    AnnLineComment "-- | Do no newline translation at all.",
    AnnLineComment "--",
    AnnLineComment "-- >                                    outputNL = nativeNewline }",
    AnnLineComment "-- > nativeNewlineMode  = NewlineMode { inputNL  = nativeNewline",
    AnnLineComment "--",
    AnnLineComment "-- | Use the native newline representation on both input and output",
    AnnLineComment "--",
    AnnLineComment "-- >                                       outputNL = nativeNewline }",
    AnnLineComment "-- > universalNewlineMode  = NewlineMode { inputNL  = CRLF,",
    AnnLineComment "--",
    AnnLineComment "-- that @readFile >>= writeFile@ might yield a different file.",
    AnnLineComment "-- works with text files using any newline convention.  The downside is",
    AnnLineComment "-- represetnation on output.  This mode can be used on any platform, and",
    AnnLineComment "-- | Map '\\r\\n' into '\\n' on input, and '\\n' to the native newline",
    AnnLineComment "-- on Unix systems, 'CRLF' on Windows.",
    AnnLineComment "-- | The native newline representation for the current platform: 'LF'",
    AnnLineComment "-- translate into '\\n' on input.",
    AnnLineComment "-- newline mode specifies how to translate '\\n' on output, and what to",
    AnnLineComment "-- are assumed to represent newlines with the '\\n' character; the",
    AnnLineComment "-- internal Strings and the external file or stream.  Haskell Strings",
    AnnLineComment "-- | Specifies the translation, if any, of newline characters between",
    AnnLineComment "-- | The representation of a newline in the external file or stream.",
    AnnLineComment "-- Newline translation",
    AnnLineComment "-- ---------------------------------------------------------------------------",
    AnnBlockComment "{-\n[note Buffering Implementation]\n\nEach Handle has two buffers: a byte buffer (haByteBuffer) and a Char\nbuffer (haCharBuffer).\n\n[note Buffered Reading]\n\nFor read Handles, bytes are read into the byte buffer, and immediately\ndecoded into the Char buffer (see\nGHC.IO.Handle.Internals.readTextDevice).  The only way there might be\nsome data left in the byte buffer is if there is a partial multi-byte\ncharacter sequence that cannot be decoded into a full character.\n\nNote that the buffering mode (haBufferMode) makes no difference when\nreading data into a Handle.  When reading, we can always just read all\nthe data there is available without blocking, decode it into the Char\nbuffer, and then provide it immediately to the caller.\n\n[note Buffered Writing]\n\nCharacters are written into the Char buffer by e.g. hPutStr.  At the\nend of the operation, or when the char buffer is full, the buffer is\ndecoded to the byte buffer (see writeCharBuffer).  This is so that we\ncan detect encoding errors at the right point.\n\nHence, the Char buffer is always empty between Handle operations.\n\n[note Buffer Sizing]\n\nThe char buffer is always a default size (dEFAULT_CHAR_BUFFER_SIZE).\nThe byte buffer size is chosen by the underlying device (via its\nIODevice.newBuffer).  Hence the size of these buffers is not under\nuser control.\n\nThere are certain minimum sizes for these buffers imposed by the\nlibrary (but not checked):\n\n - we must be able to buffer at least one character, so that\n   hLookAhead can work\n\n - the byte buffer must be able to store at least one encoded\n   character in the current encoding (6 bytes?)\n\n - when reading, the char buffer must have room for two characters, so\n   that we can spot the \\r\\n sequence.\n\nHow do we implement hSetBuffering?\n\nFor reading, we have never used the user-supplied buffer size, because\nthere's no point: we always pass all available data to the reader\nimmediately.  Buffering would imply waiting until a certain amount of\ndata is available, which has no advantages.  So hSetBuffering is\nessentially a no-op for read handles, except that it turns on/off raw\nmode for the underlying device if necessary.\n\nFor writing, the buffering mode is handled by the write operations\nthemselves (hPutChar and hPutStr).  Every write ends with\nwriteCharBuffer, which checks whether the buffer should be flushed\naccording to the current buffering mode.  Additionally, we look for\nnewlines and flush if the mode is LineBuffering.\n\n[note Buffer Flushing]\n\n** Flushing the Char buffer\n\nWe must be able to flush the Char buffer, in order to implement\nhSetEncoding, and things like hGetBuf which want to read raw bytes.\n\nFlushing the Char buffer on a write Handle is easy: it is always empty.\n\nFlushing the Char buffer on a read Handle involves rewinding the byte\nbuffer to the point representing the next Char in the Char buffer.\nThis is done by\n\n - remembering the state of the byte buffer *before* the last decode\n\n - re-decoding the bytes that represent the chars already read from the\n   Char buffer.  This gives us the point in the byte buffer that\n   represents the *next* Char to be read.\n\nIn order for this to work, after readTextHandle we must NOT MODIFY THE\nCONTENTS OF THE BYTE OR CHAR BUFFERS, except to remove characters from\nthe Char buffer.\n\n** Flushing the byte buffer\n\nThe byte buffer can be flushed if the Char buffer has already been\nflushed (see above).  For a read Handle, flushing the byte buffer\nmeans seeking the device back by the number of bytes in the buffer,\nand hence it is only possible on a seekable Handle.\n\n-}",
    AnnLineComment "-- and terminals will normally be line-buffered.",
    AnnLineComment "-- For most implementations, physical files will normally be block-buffered",
    AnnLineComment "-- which is attached to that handle.",
    AnnLineComment "-- implementation-dependent and may depend on the file system object",
    AnnLineComment "-- The default buffering mode when a handle is opened is",
    AnnLineComment "--",
    AnnLineComment "--    handle may require a one-character buffer.",
    AnnLineComment "--    The 'System.IO.hLookAhead' operation implies that even a no-buffered",
    AnnLineComment "--  * /no-buffering/: the next input item is read and returned.",
    AnnLineComment "--",
    AnnLineComment "--    the next block of data is read into the buffer.",
    AnnLineComment "--  * /block-buffering/: when the buffer for the handle becomes empty,",
    AnnLineComment "--",
    AnnLineComment "--    until the newline character is available or the buffer is full.",
    AnnLineComment "--    character are read into the buffer.  No characters are available",
    AnnLineComment "--    buffer is empty, characters up to and including the next newline",
    AnnLineComment "--    the next item is obtained from the buffer; otherwise, when the",
    AnnLineComment "--  * /line-buffering/: when the buffer for the handle is not empty,",
    AnnLineComment "--",
    AnnLineComment "-- Similarly, input occurs according to the buffer mode for the handle:",
    AnnLineComment "--",
    AnnLineComment "-- The output buffer is emptied as soon as it has been written out.",
    AnnLineComment "-- but not less frequently, than specified above.",
    AnnLineComment "-- An implementation is free to flush the buffer more frequently,",
    AnnLineComment "--", AnnLineComment "--    in the buffer.",
    AnnLineComment "--  * /no-buffering/: output is written immediately, and never stored",
    AnnLineComment "--",
    AnnLineComment "--    overflows, a 'System.IO.hFlush' is issued, or the handle is closed.",
    AnnLineComment "--  * /block-buffering/: the entire buffer is written out whenever it",
    AnnLineComment "--",
    AnnLineComment "--    a 'System.IO.hFlush' is issued, or the handle is closed.",
    AnnLineComment "--    whenever a newline is output, the buffer overflows,",
    AnnLineComment "--  * /line-buffering/: the entire output buffer is flushed",
    AnnLineComment "--",
    AnnLineComment "-- from the internal buffer according to the buffer mode:",
    AnnLineComment "-- effects. For output, items are written out, or /flushed/,",
    AnnLineComment "-- block-buffering or no-buffering.  These modes have the following",
    AnnLineComment "-- | Three kinds of buffering are supported: line-buffering,",
    AnnLineComment "-- Buffering modes",
    AnnLineComment "-- ---------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "--   * In a wriite Handle, the Char buffer is always empty (we encode when writing)",
    AnnLineComment "--   * In a read Handle, the byte buffer is always empty (we decode when reading)",
    AnnLineComment "--      hLookAhead and hIsEOF).",
    AnnLineComment "--     (an unbuffered handle needs a 1 character buffer in order to support",
    AnnLineComment "--   * A handle *always* has a buffer, even if it is only 1 character long",
    AnnLineComment "--", AnnLineComment "-- INVARIANTS on Handles:",
    AnnLineComment "--  of the following:",
    AnnLineComment "--  Internally, we classify handles as being one",
    AnnLineComment "-- same size as the main buffer.",
    AnnLineComment "-- a new one for each hPutStr.  These buffers are *guaranteed* to be the",
    AnnLineComment "-- we keep a few spare buffers around in a handle to avoid allocating",
    AnnLineComment "--      seekable.",
    AnnLineComment "--    * A 'FileHandle' is seekable.  A 'DuplexHandle' may or may not be",
    AnnLineComment "-- NOTES:",
    AnnLineComment "-- is made to compare the internal state of different handles for equality.",
    AnnLineComment "-- equal according to '==' only to itself; no attempt",
    AnnLineComment "-- enough information to identify the handle for debugging.  A handle is",
    AnnLineComment "-- produced by showing a handle is system dependent; it should include",
    AnnLineComment "-- remain to it.  Handles are in the 'Show' and 'Eq' classes.  The string",
    AnnLineComment "-- though an implementation cannot re-use its storage while references",
    AnnLineComment "-- Once it is closed it can no longer be used for either input or output,",
    AnnLineComment "-- first allocated.",
    AnnLineComment "-- it manages only output or both input and output.  A handle is /open/ when",
    AnnLineComment "-- manages only input or both input and output; likewise, it is /writable/ if",
    AnnLineComment "-- input or output operation will occur.  A handle is /readable/ if it",
    AnnLineComment "-- Most handles will also have a current I\\/O position indicating where the next",
    AnnLineComment "--",
    AnnLineComment "--  * a buffer (whose length may be zero).",
    AnnLineComment "--",
    AnnLineComment "--  * whether buffering is disabled, or enabled on a line or block basis;",
    AnnLineComment "--",
    AnnLineComment "--  * whether the object is seekable;",
    AnnLineComment "--",
    AnnLineComment "--  * whether it is /open/, /closed/ or /semi-closed/;",
    AnnLineComment "--",
    AnnLineComment "--  * whether it manages input or output or both;",
    AnnLineComment "--",
    AnnLineComment "-- with file system objects.  A handle has at least the following properties:",
    AnnLineComment "-- /handle/: a record used by the Haskell run-time system to /manage/ I\\/O",
    AnnLineComment "-- represented by values of type @Handle@.  Each value of this type is a",
    AnnLineComment "-- | Haskell defines operations to read and write characters from and to files,",
    AnnLineComment "-- and close the OS file handle, so as to free up a (precious) resource.",
    AnnLineComment "-- Note: when a Handle is garbage collected, we want to flush its buffer",
    AnnLineComment "--      FilePath used when IO.openFile was called)",
    AnnLineComment "--    * user-friendly name (usually the",
    AnnLineComment "--    * buffer, and spare buffers",
    AnnLineComment "--    * buffering mode",
    AnnLineComment "--    * the underlying file descriptor",
    AnnLineComment "--    * type (read,write,closed etc.)",
    AnnLineComment "--  the following pieces of info:",
    AnnLineComment "--  containing the state of the I/O port/device. We record",
    AnnLineComment "--  A Handle is represented by (a reference to) a record",
    AnnLineComment "-- Handle type",
    AnnLineComment "-- ---------------------------------------------------------------------------",
    AnnLineComment "-----------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- Basic types for the implementation of IO Handles.",
    AnnLineComment "--",
    AnnLineComment "-- Portability :  non-portable",
    AnnLineComment "-- Stability   :  internal",
    AnnLineComment "-- Maintainer  :  libraries@haskell.org",
    AnnLineComment "--",
    AnnLineComment "-- License     :  see libraries/base/LICENSE",
    AnnLineComment "-- Copyright   :  (c) The University of Glasgow, 1994-2009",
    AnnLineComment "-- Module      :  GHC.IO.Handle.Types",
    AnnLineComment "-- |",
    AnnLineComment "-----------------------------------------------------------------------------",
    AnnBlockComment "{-# OPTIONS_HADDOCK hide #-}",
    AnnBlockComment "{-# OPTIONS_GHC -funbox-strict-fields #-}",
    AnnBlockComment "{-# LANGUAGE CPP\n           , NoImplicitPrelude\n           , ExistentialQuantification\n           , DeriveDataTypeable\n  #-}",
    AnnBlockComment "{-# LANGUAGE Trustworthy #-}"])])