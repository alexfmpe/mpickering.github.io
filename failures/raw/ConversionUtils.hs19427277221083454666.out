{-# LANGUAGE Trustworthy #-}
{-# LANGUAGE CPP, MagicHash, UnboxedTuples, NoImplicitPrelude #-}
{-# OPTIONS_GHC -O2 #-}
{-# OPTIONS_HADDOCK hide #-}

-----------------------------------------------------------------------------
-- |
-- Module      :  GHC.Float.ConversionUtils
-- Copyright   :  (c) Daniel Fischer 2010
-- License     :  see libraries/base/LICENSE
--
-- Maintainer  :  cvs-ghc@haskell.org
-- Stability   :  internal
-- Portability :  non-portable (GHC Extensions)
--
-- Utilities for conversion between Double/Float and Rational
--
-----------------------------------------------------------------------------

#include "MachDeps.h"

module GHC.Float.ConversionUtils ( elimZerosInteger, elimZerosInt# ) where

import GHC.Base
import GHC.Integer
#if WORD_SIZE_IN_BITS < 64
import GHC.IntWord64
#endif

default ()

#if WORD_SIZE_IN_BITS < 64

#define TO64    integerToInt64

toByte64# :: Int64# -> Int#
toByte64# i = word2Int# (and# 255## (int2Word# (int64ToInt# i)))

-- Double mantissae have 53 bits, too much for Int#
elim64# :: Int64# -> Int# -> (# Integer, Int# #)
elim64# n e =
    case zeroCount (toByte64# n) of
      t | isTrue# (e <=# t) -> (# int64ToInteger (uncheckedIShiftRA64# n e), 0# #)
        | isTrue# (t <# 8#) -> (# int64ToInteger (uncheckedIShiftRA64# n t), e -# t #)
        | otherwise         -> elim64# (uncheckedIShiftRA64# n 8#) (e -# 8#)

#else

#define TO64    integerToInt

-- Double mantissae fit it Int#
elim64# :: Int# -> Int# -> (# Integer, Int# #)
elim64# = elimZerosInt#

#endif

{-# INLINE elimZerosInteger #-}
elimZerosInteger :: Integer -> Int# -> (# Integer, Int# #)
elimZerosInteger m e = elim64# (integerToIntTO64 m) e    m) e

elimZerosInt# :: Int# -> Int# -> (# Integer, Int# #)
elimZerosInt# n e =
    case zeroCount (toByte# n) of
      t | isTrue# (e <=# t) -> (# smallInteger (uncheckedIShiftRA# n e), 0# #)
        | isTrue# (t <# 8#) -> (# smallInteger (uncheckedIShiftRA# n t), e -# t #)
        | otherwise         -> elimZerosInt# (uncheckedIShiftRA# n 8#) (e -# 8#)

{-# INLINE zeroCount #-}
zeroCount :: Int# -> Int#
zeroCount i =
    case zeroCountArr of
      BA ba -> indexInt8Array# ba i

toByte# :: Int# -> Int#
toByte# i = word2Int# (and# 255## (int2Word# i))


data BA = BA ByteArray#

-- Number of trailing zero bits in a byte
zeroCountArr :: BA
zeroCountArr =
    let mkArr s =
          case newByteArray# 256# s of
            (# s1, mba #) ->
              case writeInt8Array# mba 0# 8# s1 of
                s2 ->
                  let fillA step val idx st
                        | isTrue# (idx <# 256#) =
                                        case writeInt8Array# mba idx val st of
                                          nx -> fillA step val (idx +# step) nx
                        | isTrue# (step <# 256#) =
                                        fillA (2# *# step) (val +# 1#) step  st
                        | otherwise   = st
                  in case fillA 2# 0# 1# s2 of
                       s3 -> case unsafeFreezeByteArray# mba s3 of
                                (# _, ba #) -> ba
    in case mkArr realWorld# of
        b -> BA b


==============
../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs
==============
lengths:(3139,3119)

==============

({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,28)) "{-# LANGUAGE Trustworthy #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,66)) "{-# LANGUAGE CPP, MagicHash, UnboxedTuples, NoImplicitPrelude #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,24)) "{-# OPTIONS_GHC -O2 #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,29)) "{-# OPTIONS_HADDOCK hide #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,78)) "-----------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- Module      :  GHC.Float.ConversionUtils" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,42)) "-- Copyright   :  (c) Daniel Fischer 2010" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Maintainer  :  cvs-ghc@haskell.org" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- Portability :  non-portable (GHC Extensions)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,62)) "-- Utilities for conversion between Double/Float and Rational" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,21)) "#include \"MachDeps.h\"" Nothing),DP (2,1)),((G AnnModule),DP (21,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((G AnnEofPos),DP (3,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:8-32
     }
    Nothing{ModuleName: GHC.Float.ConversionUtils})) 
  (Just 
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:34-68
     }
    Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
    [
     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:36-51
       }
      Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:36-51
         }
        Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
        (Unqual {OccName: elimZerosInteger})))),
     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:54-66
       }
      Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:54-66
         }
        Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: elimZerosInt#}))))])) 
  [
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:24:1-15
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:24:8-15
       }
      Nothing{ModuleName: GHC.Base}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:1-18
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:8-18
       }
      Nothing{ModuleName: GHC.Integer}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-10
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "GHC.IntWord64" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDefault),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
    (DefD 
     (DefaultDecl 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (22,1) [DComment (DP (2,1),DP (2,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,30)) "#define TO64    integerToInt64" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "toByte64#" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Int64#" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Int#" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "toByte64#" Nothing,DComment (DP (0,1),DP (0,2)) "i" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "word2Int#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "and#" Nothing,DComment (DP (0,1),DP (0,6)) "255##" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "int2Word#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "int64ToInt#" Nothing,DComment (DP (0,1),DP (0,2)) "i" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,52)) "-- Double mantissae have 53 bits, too much for Int#" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "elim64#" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Int64#" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Int#" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "(#" Nothing,DComment (DP (0,1),DP (0,8)) "Integer" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Int#" Nothing,DComment (DP (0,1),DP (0,3)) "#)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "elim64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (1,5),DP (1,9)) "case" Nothing,DComment (DP (0,1),DP (0,10)) "zeroCount" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "toByte64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing,DComment (DP (1,7),DP (1,7)) "" Nothing,DComment (DP (0,0),DP (0,1)) "t" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,8)) "isTrue#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "e" Nothing,DComment (DP (0,1),DP (0,4)) "<=#" Nothing,DComment (DP (0,1),DP (0,2)) "t" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "(#" Nothing,DComment (DP (0,1),DP (0,15)) "int64ToInteger" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,20)) "uncheckedIShiftRA64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,3)) "0#" Nothing,DComment (DP (0,1),DP (0,3)) "#)" Nothing,DComment (DP (1,9),DP (1,10)) "|" Nothing,DComment (DP (0,1),DP (0,8)) "isTrue#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "t" Nothing,DComment (DP (0,1),DP (0,3)) "<#" Nothing,DComment (DP (0,1),DP (0,3)) "8#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "(#" Nothing,DComment (DP (0,1),DP (0,15)) "int64ToInteger" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,20)) "uncheckedIShiftRA64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,2)) "t" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing,DComment (DP (0,1),DP (0,3)) "-#" Nothing,DComment (DP (0,1),DP (0,2)) "t" Nothing,DComment (DP (0,1),DP (0,3)) "#)" Nothing,DComment (DP (1,9),DP (1,10)) "|" Nothing,DComment (DP (0,1),DP (0,10)) "otherwise" Nothing,DComment (DP (0,9),DP (0,11)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "elim64#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,20)) "uncheckedIShiftRA64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "8#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "e" Nothing,DComment (DP (0,1),DP (0,3)) "-#" Nothing,DComment (DP (0,1),DP (0,3)) "8#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing,DComment (DP (2,1),DP (2,28)) "#define TO64    integerToInt" Nothing,DComment (DP (2,1),DP (2,32)) "-- Double mantissae fit it Int#" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1-7
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: elim64#}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-46
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-46
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-15
            }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int#}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:20-46
            }
           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:20-23
              }
             Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int#}))) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:28-46
              }
             Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
             (HsTupleTy 
              (HsUnboxedTuple) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:31-37
                 }
                Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Integer}))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:40-43
                 }
                Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int#})))])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-7
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: elim64#})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-7
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: elim64#})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:9-23
              }
             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:11-23
                }
               Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: elimZerosInt#})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1-31
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,6)) "#endif" Nothing] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:12-27
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: elimZerosInteger})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1-58
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1-16
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: elimZerosInteger}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-58
        }
       Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-58
          }
         Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-27
            }
           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Integer}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:32-58
            }
           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:32-35
              }
             Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int#}))) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:40-58
              }
             Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
             (HsTupleTy 
              (HsUnboxedTuple) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:43-49
                 }
                Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Integer}))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:52-55
                 }
                Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int#})))])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-16
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: elimZerosInteger})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-16
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: elimZerosInteger})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:18
             }
            Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m}))),
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:20
             }
            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: e})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:22-49
              }
             Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:24-49
                }
               Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:24-47
                  }
                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:24-30
                    }
                   Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: elim64#}))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:32-47
                    }
                   Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsPar 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:33-46
                      }
                     Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:33-44
                        }
                       Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: integerToInt}))) 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:46
                        }
                       Just (Ann (DP (0,4)) (ColDelta 46) DP (0,1) [DComment (DP (0,-12),DP (0,-8)) "TO64" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: m}))))))))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:49
                  }
                 Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: e})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1-52
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1-13
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: elimZerosInt#}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-52
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-52
          }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-21
            }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int#}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:26-52
            }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:26-29
              }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int#}))) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:34-52
              }
             Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
             (HsTupleTy 
              (HsUnboxedTuple) 
              [
               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:37-43
                 }
                Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Integer}))),
               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:46-49
                 }
                Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Int#})))])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:1-13
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: elimZerosInt#})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:1-13
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: elimZerosInt#})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:15
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: n}))),
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:17
             }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: e})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,19)-(66,80)
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(63,5)-(66,80)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(64,7)-(66,80) Ref "delta-1"),DP (0,0))])
               (HsCase 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:10-30
                  }
                 Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:10-18
                    }
                   Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: zeroCount}))) 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:20-30
                    }
                   Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsPar 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:21-29
                      }
                     Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:21-27
                        }
                       Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: toByte#}))) 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:29
                        }
                       Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: n}))))))))) 
                (MG 
                 [
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(64,7)-(66,80)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:7
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: t})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:9-78
                        }
                       Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVbar),DP (0,0)),((G AnnRarrow),DP (0,1))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:11-27
                           }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:11-27
                             }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:11-17
                               }
                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: isTrue#}))) 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:19-27
                               }
                              Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                              (HsPar 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:20-26
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:20
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: e}))) 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:22-24
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: <=#}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:26
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: t}))))))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:32-78
                          }
                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
                         (ExplicitTuple 
                          [
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-71
                             }
                            Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
                            (Present 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-71
                               }
                              Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnComma),DP (0,0))])
                              (HsApp 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-46
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: smallInteger}))) 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:48-71
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (HsPar 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:49-70
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:49-68
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:49-66
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: uncheckedIShiftRA#}))) 
                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:68
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: n}))))) 
                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:70
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: e}))))))))))),
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:74-75
                             }
                            Just (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [])
                            (Present 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:74-75
                               }
                              Just (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsLit 
                               (HsIntPrim "0#" 
                                (0))))))] 
                          (Unboxed))))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:9-82
                        }
                       Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnRarrow),DP (0,1))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:11-27
                           }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:11-27
                             }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:11-17
                               }
                              Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: isTrue#}))) 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:19-27
                               }
                              Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                              (HsPar 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:20-26
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:20
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: t}))) 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:22-23
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: <#}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:25-26
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsLit 
                                   (HsIntPrim "8#" 
                                    (8)))))))))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:32-82
                          }
                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
                         (ExplicitTuple 
                          [
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-71
                             }
                            Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])
                            (Present 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-71
                               }
                              Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnComma),DP (0,0))])
                              (HsApp 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-46
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: smallInteger}))) 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:48-71
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (HsPar 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:49-70
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:49-68
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:49-66
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: uncheckedIShiftRA#}))) 
                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:68
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: n}))))) 
                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:70
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: t}))))))))))),
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74-79
                             }
                            Just (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [])
                            (Present 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74-79
                               }
                              Just (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: e}))) 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:76-77
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: -#}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:79
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: t})))))))] 
                          (Unboxed))))),
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:9-80
                        }
                       Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnRarrow),DP (0,9))])
                       (GRHS 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:11-19
                           }
                          Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                          (BodyStmt 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:11-19
                             }
                            Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: otherwise}))) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (HsLit 
                            (HsString "" {FastString: "noSyntaxExpr"})) 
                           (PlaceHolder)))] 
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:32-80
                          }
                         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:32-70
                            }
                           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:32-44
                              }
                             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: elimZerosInt#}))) 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:46-70
                              }
                             Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:47-69
                                }
                               Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:47-66
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                                 (HsApp 
                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:47-64
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: uncheckedIShiftRA#}))) 
                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:66
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: n}))))) 
                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:68-69
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsLit 
                                  (HsIntPrim "8#" 
                                   (8)))))))))) 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:72-80
                            }
                           Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:73-79
                              }
                             Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:73
                                }
                               Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: e}))) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:75-76
                                }
                               Just (Ann (DP (0,1)) (ColDelta 68) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: -#}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:78-79
                                }
                               Just (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsIntPrim "8#" 
                                 (8))))))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1-24
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:12-20
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: zeroCount})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1-25
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: zeroCount}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-25
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-25
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-17
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int#}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:22-25
            }
           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int#}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: zeroCount})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: zeroCount})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:11
             }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: i})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,13)-(72,35)
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(71,5)-(72,35)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-35 Ref "delta-2"),DP (0,0))])
               (HsCase 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:71:10-21
                  }
                 Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: zeroCountArr}))) 
                (MG 
                 [
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-35
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                   (Match 
                    (Nothing) 
                    [
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-11
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-8
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: BA})) 
                       (PrefixCon 
                        [
                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:10-11
                           }
                          Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (VarPat 
                           (Unqual {OccName: ba})))])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:13-35
                        }
                       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:16-35
                          }
                         Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:16-33
                            }
                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:16-30
                              }
                             Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: indexInt8Array#}))) 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:32-33
                              }
                             Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: ba}))))) 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:35
                            }
                           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: i})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1-23
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1-7
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: toByte#}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-23
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-23
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-15
            }
           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int#}))) 
          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:20-23
            }
           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int#}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-7
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: toByte#})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-7
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: toByte#})) 
            (False))) 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:9
             }
            Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: i})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:11-48
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:13-48
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:13-21
                  }
                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: word2Int#}))) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:23-48
                  }
                 Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsPar 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:24-47
                    }
                   Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:24-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:24-27
                        }
                       Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: and#}))) 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:29-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsLit 
                        (HsWordPrim "255##" 
                         (255)))))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:35-47
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:36-46
                        }
                       Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:36-44
                          }
                         Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: int2Word#}))) 
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:46
                          }
                         Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: i})))))))))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1-23
     }
    Just (Ann (DP (3,1)) (ColDelta 1) DP (3,1) [] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:6-7
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: BA})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:11-23
          }
         Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:11-12
             }
            Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: BA}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:14-23
              }
             Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: ByteArray#})))]) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1-18
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,42)) "-- Number of trailing zero bits in a byte" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: zeroCountArr}))] 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:17-18
        }
       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] [])
         []) 
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:17-18
          }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: BA}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:82:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: zeroCountArr})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:82:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: zeroCountArr})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,14)-(99,17)
              }
             Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,5)-(99,17)
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49) NotNeeded),DP (0,0)),((G AnnIn),DP (1,0))])
               (HsLet 
                (HsValBinds 
                 (ValBindsIn {Bag(Located (HsBind RdrName)): 
                  [
                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (FunBind 
                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:9-13
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (Unqual {OccName: mkArr})) 
                     (False) 
                     (MG 
                      [
                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49)
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                        (Match 
                         (Just 
                          ((,) 
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:9-13
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (Unqual {OccName: mkArr})) 
                           (False))) 
                         [
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:15
                            }
                           Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: s})))] 
                         (Nothing) 
                         (GRHSs 
                          [
                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,17)-(97,49)
                             }
                            Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
                            (GRHS 
                             [] 
                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(84,11)-(97,49)
                               }
                              Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,13)-(97,49) Ref "delta-3"),DP (0,0))])
                              (HsCase 
                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:16-35
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:16-33
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:16-28
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: newByteArray#}))) 
                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:30-33
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsLit 
                                     (HsIntPrim "256#" 
                                      (256)))))) 
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:35
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: s}))))) 
                               (MG 
                                [
                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,13)-(97,49)
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:13-25
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
                                     (TuplePat 
                                      [
                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:16-17
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: s1}))),
                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:20-22
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (VarPat 
                                         (Unqual {OccName: mba})))] 
                                      (Unboxed) 
                                      []))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,27)-(97,49)
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(86,15)-(97,49)
                                         }
                                        Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,17)-(97,49) Ref "delta-4"),DP (0,0))])
                                        (HsCase 
                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-47
                                           }
                                          Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-44
                                             }
                                            Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-41
                                               }
                                              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                              (HsApp 
                                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-38
                                                 }
                                                Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                                                (HsApp 
                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-34
                                                   }
                                                  Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: writeInt8Array#}))) 
                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:36-38
                                                   }
                                                  Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                  (HsVar 
                                                   (Unqual {OccName: mba}))))) 
                                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:40-41
                                                 }
                                                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                (HsLit 
                                                 (HsIntPrim "0#" 
                                                  (0)))))) 
                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:43-44
                                               }
                                              Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                              (HsLit 
                                               (HsIntPrim "8#" 
                                                (8)))))) 
                                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:46-47
                                             }
                                            Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: s1}))))) 
                                         (MG 
                                          [
                                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,17)-(97,49)
                                             }
                                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                            (Match 
                                             (Nothing) 
                                             [
                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:87:17-18
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (VarPat 
                                                (Unqual {OccName: s2})))] 
                                             (Nothing) 
                                             (GRHSs 
                                              [
                                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,20)-(97,49)
                                                 }
                                                Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                                (GRHS 
                                                 [] 
                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,19)-(97,49)
                                                   }
                                                  Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42) NotNeeded),DP (0,0)),((G AnnIn),DP (1,0))])
                                                  (HsLet 
                                                   (HsValBinds 
                                                    (ValBindsIn {Bag(Located (HsBind RdrName)): 
                                                     [
                                                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42)
                                                        }
                                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                       (FunBind 
                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:23-27
                                                          }
                                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                         (Unqual {OccName: fillA})) 
                                                        (False) 
                                                        (MG 
                                                         [
                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42)
                                                            }
                                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                           (Match 
                                                            (Just 
                                                             ((,) 
                                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:23-27
                                                                }
                                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                               (Unqual {OccName: fillA})) 
                                                              (False))) 
                                                            [
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:29-32
                                                               }
                                                              Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (VarPat 
                                                               (Unqual {OccName: step}))),
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:34-36
                                                               }
                                                              Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (VarPat 
                                                               (Unqual {OccName: val}))),
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:38-40
                                                               }
                                                              Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (VarPat 
                                                               (Unqual {OccName: idx}))),
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:42-43
                                                               }
                                                              Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (VarPat 
                                                               (Unqual {OccName: st})))] 
                                                            (Nothing) 
                                                            (GRHSs 
                                                             [
                                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(89,25)-(91,79)
                                                                }
                                                               Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                                                               (GRHS 
                                                                [
                                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:27-47
                                                                   }
                                                                  Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                                                                  (BodyStmt 
                                                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:27-47
                                                                     }
                                                                    Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                                                    (HsApp 
                                                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:27-33
                                                                       }
                                                                      Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                      (HsVar 
                                                                       (Unqual {OccName: isTrue#}))) 
                                                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:35-47
                                                                       }
                                                                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                      (HsPar 
                                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:36-46
                                                                         }
                                                                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                                                        (OpApp 
                                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:36-38  }
                                                                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: idx}))) 
                                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:40-41  }
                                                                          Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: <#}))) 
                                                                         (PlaceHolder) 
                                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:43-46  }
                                                                          Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                          (HsLit 
                                                                           (HsIntPrim "256#" 
                                                                            (256)))))))))) 
                                                                   (HsLit 
                                                                    (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                   (HsLit 
                                                                    (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                   (PlaceHolder)))] 
                                                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(90,41)-(91,79)
                                                                  }
                                                                 Just (Ann (DP (1,18)) (ColDelta 18) DP (1,18) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-79 Ref "delta-5"),DP (0,0))])
                                                                 (HsCase 
                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-75
                                                                    }
                                                                   Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                                                                   (HsApp 
                                                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-72
                                                                      }
                                                                     Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                                                                     (HsApp 
                                                                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-68
                                                                        }
                                                                       Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                                                                       (HsApp 
                                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-64 }
                                                                         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                                                                         (HsApp 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-60   }
                                                                           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                           (HsVar 
                                                                            (Unqual {OccName: writeInt8Array#}))) 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:62-64   }
                                                                           Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                           (HsVar 
                                                                            (Unqual {OccName: mba}))))) 
                                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:66-68 }
                                                                         Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                         (HsVar 
                                                                          (Unqual {OccName: idx}))))) 
                                                                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:70-72
                                                                        }
                                                                       Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                       (HsVar 
                                                                        (Unqual {OccName: val}))))) 
                                                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:74-75
                                                                      }
                                                                     Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: st}))))) 
                                                                  (MG 
                                                                   [
                                                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-79
                                                                      }
                                                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                                     (Match 
                                                                      (Nothing) 
                                                                      [
                                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-44
                                                                         }
                                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                        (VarPat 
                                                                         (Unqual {OccName: nx})))] 
                                                                      (Nothing) 
                                                                      (GRHSs 
                                                                       [
                                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:46-79 }
                                                                         Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                                                         (GRHS 
                                                                          [] 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-79   }
                                                                           Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                                                                           (HsApp 
                                                                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-76     }
                                                                             Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                                             (HsApp 
                                                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-62       }
                                                                               Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                                               (HsApp 
                                                                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-58         }
                                                                                 Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])
                                                                                 (HsApp 
                                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-53           }
                                                                                   Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                                   (HsVar 
                                                                                    (Unqual {OccName: fillA}))) 
                                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:55-58           }
                                                                                   Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                                   (HsVar 
                                                                                    (Unqual {OccName: step}))))) 
                                                                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:60-62         }
                                                                                 Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                                 (HsVar 
                                                                                  (Unqual {OccName: val}))))) 
                                                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:64-76       }
                                                                               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                               (HsPar 
                                                                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:65-75         }
                                                                                 Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                                                                                 (OpApp 
                                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:65-67           }
                                                                                   Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                                   (HsVar 
                                                                                    (Unqual {OccName: idx}))) 
                                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:69-70           }
                                                                                   Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                                   (HsVar 
                                                                                    (Unqual {OccName: +#}))) 
                                                                                  (PlaceHolder) 
                                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:72-75           }
                                                                                   Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                                   (HsVar 
                                                                                    (Unqual {OccName: step}))))))))) 
                                                                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:78-79     }
                                                                             Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                             (HsVar 
                                                                              (Unqual {OccName: nx})))))))] 
                                                                       (EmptyLocalBinds))))] 
                                                                   [] 
                                                                   (PlaceHolder) 
                                                                   (FromSource)))))),
                                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(92,25)-(93,79)
                                                                }
                                                               Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])
                                                               (GRHS 
                                                                [
                                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:27-48
                                                                   }
                                                                  Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                                                                  (BodyStmt 
                                                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:27-48
                                                                     }
                                                                    Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                                                                    (HsApp 
                                                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:27-33
                                                                       }
                                                                      Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                      (HsVar 
                                                                       (Unqual {OccName: isTrue#}))) 
                                                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:35-48
                                                                       }
                                                                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                      (HsPar 
                                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:36-47
                                                                         }
                                                                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                                                                        (OpApp 
                                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:36-39  }
                                                                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: step}))) 
                                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:41-42  }
                                                                          Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                          (HsVar 
                                                                           (Unqual {OccName: <#}))) 
                                                                         (PlaceHolder) 
                                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:44-47  }
                                                                          Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                          (HsLit 
                                                                           (HsIntPrim "256#" 
                                                                            (256)))))))))) 
                                                                   (HsLit 
                                                                    (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                   (HsLit 
                                                                    (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                   (PlaceHolder)))] 
                                                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-79
                                                                  }
                                                                 Just (Ann (DP (1,18)) (ColDelta 18) DP (1,18) [] [])
                                                                 (HsApp 
                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-75
                                                                    }
                                                                   Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                                   (HsApp 
                                                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-70
                                                                      }
                                                                     Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                                     (HsApp 
                                                                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-58
                                                                        }
                                                                       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                                                                       (HsApp 
                                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-45 }
                                                                         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                         (HsVar 
                                                                          (Unqual {OccName: fillA}))) 
                                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:47-58 }
                                                                         Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                         (HsPar 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:48-57   }
                                                                           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                                                                           (OpApp 
                                                                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:48-49     }
                                                                             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                             (HsLit 
                                                                              (HsIntPrim "2#" 
                                                                               (2)))) 
                                                                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:51-52     }
                                                                             Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                             (HsVar 
                                                                              (Unqual {OccName: *#}))) 
                                                                            (PlaceHolder) 
                                                                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:54-57     }
                                                                             Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                             (HsVar 
                                                                              (Unqual {OccName: step}))))))))) 
                                                                      ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:60-70
                                                                        }
                                                                       Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                                                       (HsPar 
                                                                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:61-69 }
                                                                         Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                                                                         (OpApp 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:61-63   }
                                                                           Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                           (HsVar 
                                                                            (Unqual {OccName: val}))) 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:65-66   }
                                                                           Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                           (HsVar 
                                                                            (Unqual {OccName: +#}))) 
                                                                          (PlaceHolder) 
                                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:68-69   }
                                                                           Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                           (HsLit 
                                                                            (HsIntPrim "1#" 
                                                                             (1)))))))))) 
                                                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:72-75
                                                                      }
                                                                     Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                     (HsVar 
                                                                      (Unqual {OccName: step}))))) 
                                                                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:78-79
                                                                    }
                                                                   Just (Ann (DP (0,2)) (ColDelta 55) DP (0,2) [] [((G AnnVal),DP (0,0))])
                                                                   (HsVar 
                                                                    (Unqual {OccName: st}))))))),
                                                              ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:25-42
                                                                }
                                                               Just (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,3))])
                                                               (GRHS 
                                                                [
                                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:27-35
                                                                   }
                                                                  Just (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])
                                                                  (BodyStmt 
                                                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:27-35
                                                                     }
                                                                    Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                    (HsVar 
                                                                     (Unqual {OccName: otherwise}))) 
                                                                   (HsLit 
                                                                    (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                   (HsLit 
                                                                    (HsString "" {FastString: "noSyntaxExpr"})) 
                                                                   (PlaceHolder)))] 
                                                                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:41-42
                                                                  }
                                                                 Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                 (HsVar 
                                                                  (Unqual {OccName: st})))))] 
                                                             (EmptyLocalBinds))))] 
                                                         [] 
                                                         (PlaceHolder) 
                                                         (FromSource)) 
                                                        (WpHole) 
                                                        (PlaceHolder) 
                                                        []))]} 
                                                     [])) 
                                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(95,22)-(97,49)
                                                     }
                                                    Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,24)-(97,49) Ref "delta-6"),DP (0,0))])
                                                    (HsCase 
                                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-43
                                                       }
                                                      Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                                                      (HsApp 
                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-40
                                                         }
                                                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                                        (HsApp 
                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-37
                                                           }
                                                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                                          (HsApp 
                                                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-34
                                                             }
                                                            Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                                            (HsApp 
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-31
                                                               }
                                                              Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                              (HsVar 
                                                               (Unqual {OccName: fillA}))) 
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:33-34
                                                               }
                                                              Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                              (HsLit 
                                                               (HsIntPrim "2#" 
                                                                (2)))))) 
                                                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:36-37
                                                             }
                                                            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                            (HsLit 
                                                             (HsIntPrim "0#" 
                                                              (0)))))) 
                                                         ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:39-40
                                                           }
                                                          Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                          (HsLit 
                                                           (HsIntPrim "1#" 
                                                            (1)))))) 
                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:42-43
                                                         }
                                                        Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                        (HsVar 
                                                         (Unqual {OccName: s2}))))) 
                                                     (MG 
                                                      [
                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,24)-(97,49)
                                                         }
                                                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                        (Match 
                                                         (Nothing) 
                                                         [
                                                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:24-25
                                                            }
                                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                           (VarPat 
                                                            (Unqual {OccName: s3})))] 
                                                         (Nothing) 
                                                         (GRHSs 
                                                          [
                                                           ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,27)-(97,49)
                                                             }
                                                            Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                                            (GRHS 
                                                             [] 
                                                             ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,30)-(97,49)
                                                               }
                                                              Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-49 Ref "delta-7"),DP (0,0))])
                                                              (HsCase 
                                                               ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:35-63
                                                                 }
                                                                Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                                                                (HsApp 
                                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:35-60
                                                                   }
                                                                  Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                                                                  (HsApp 
                                                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:35-56
                                                                     }
                                                                    Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                                    (HsVar 
                                                                     (Unqual {OccName: unsafeFreezeByteArray#}))) 
                                                                   ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:58-60
                                                                     }
                                                                    Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                    (HsVar 
                                                                     (Unqual {OccName: mba}))))) 
                                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:62-63
                                                                   }
                                                                  Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                  (HsVar 
                                                                   (Unqual {OccName: s3}))))) 
                                                               (MG 
                                                                [
                                                                 ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-49
                                                                   }
                                                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                                                  (Match 
                                                                   (Nothing) 
                                                                   [
                                                                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-43
                                                                      }
                                                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
                                                                     (TuplePat 
                                                                      [
                                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:36   }
                                                                        Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                                                                        (WildPat 
                                                                         (PlaceHolder))),
                                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:39-40
                                                                         }
                                                                        Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                        (VarPat 
                                                                         (Unqual {OccName: ba})))] 
                                                                      (Unboxed) 
                                                                      []))] 
                                                                   (Nothing) 
                                                                   (GRHSs 
                                                                    [
                                                                     ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:45-49
                                                                       }
                                                                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                                                      (GRHS 
                                                                       [] 
                                                                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:48-49
                                                                         }
                                                                        Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                                        (HsVar 
                                                                         (Unqual {OccName: ba})))))] 
                                                                    (EmptyLocalBinds))))] 
                                                                [] 
                                                                (PlaceHolder) 
                                                                (FromSource))))))] 
                                                          (EmptyLocalBinds))))] 
                                                      [] 
                                                      (PlaceHolder) 
                                                      (FromSource))))))))] 
                                              (EmptyLocalBinds))))] 
                                          [] 
                                          (PlaceHolder) 
                                          (FromSource))))))] 
                                    (EmptyLocalBinds))))] 
                                [] 
                                (PlaceHolder) 
                                (FromSource))))))] 
                          (EmptyLocalBinds))))] 
                      [] 
                      (PlaceHolder) 
                      (FromSource)) 
                     (WpHole) 
                     (PlaceHolder) 
                     []))]} 
                  [])) 
                ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(98,8)-(99,17)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9-17 Ref "delta-8"),DP (0,0))])
                 (HsCase 
                  ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:13-28
                    }
                   Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:13-17
                      }
                     Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: mkArr}))) 
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:19-28
                      }
                     Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: realWorld#}))))) 
                  (MG 
                   [
                    ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9-17
                      }
                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                     (Match 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: b})))] 
                      (Nothing) 
                      (GRHSs 
                       [
                        ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:11-17
                          }
                         Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                         (GRHS 
                          [] 
                          ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:14-17
                            }
                           Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:14-15
                              }
                             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: BA}))) 
                            ({ ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:17
                              }
                             Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: b})))))))] 
                       (EmptyLocalBinds))))] 
                   [] 
                   (PlaceHolder) 
                   (FromSource))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,28)) "{-# LANGUAGE Trustworthy #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,66)) "{-# LANGUAGE CPP, MagicHash, UnboxedTuples, NoImplicitPrelude #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,24)) "{-# OPTIONS_GHC -O2 #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,29)) "{-# OPTIONS_HADDOCK hide #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,78)) "-----------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- Module      :  GHC.Float.ConversionUtils" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,42)) "-- Copyright   :  (c) Daniel Fischer 2010" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- License     :  see libraries/base/LICENSE" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Maintainer  :  cvs-ghc@haskell.org" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,27)) "-- Stability   :  internal" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- Portability :  non-portable (GHC Extensions)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,62)) "-- Utilities for conversion between Double/Float and Rational" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,78)) "-----------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,21)) "#include \"MachDeps.h\"" Nothing),DP (2,1)),((G AnnModule),DP (21,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,1)) "" Nothing),DP (2,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((G AnnEofPos),DP (3,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:34-68 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:36-51 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:36-51 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:54-66 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:54-66 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:24:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:1-18 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-10 CN "DefD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "GHC.IntWord64" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDefault),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1-46 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (22,1) [DComment (DP (2,1),DP (2,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,30)) "#define TO64    integerToInt64" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "toByte64#" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Int64#" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Int#" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "toByte64#" Nothing,DComment (DP (0,1),DP (0,2)) "i" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "word2Int#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,4)) "and#" Nothing,DComment (DP (0,1),DP (0,6)) "255##" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "int2Word#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "int64ToInt#" Nothing,DComment (DP (0,1),DP (0,2)) "i" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,52)) "-- Double mantissae have 53 bits, too much for Int#" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "elim64#" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "Int64#" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Int#" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "(#" Nothing,DComment (DP (0,1),DP (0,8)) "Integer" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Int#" Nothing,DComment (DP (0,1),DP (0,3)) "#)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "elim64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (1,5),DP (1,9)) "case" Nothing,DComment (DP (0,1),DP (0,10)) "zeroCount" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "toByte64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing,DComment (DP (1,7),DP (1,7)) "" Nothing,DComment (DP (0,0),DP (0,1)) "t" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,8)) "isTrue#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "e" Nothing,DComment (DP (0,1),DP (0,4)) "<=#" Nothing,DComment (DP (0,1),DP (0,2)) "t" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "(#" Nothing,DComment (DP (0,1),DP (0,15)) "int64ToInteger" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,20)) "uncheckedIShiftRA64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,3)) "0#" Nothing,DComment (DP (0,1),DP (0,3)) "#)" Nothing,DComment (DP (1,9),DP (1,10)) "|" Nothing,DComment (DP (0,1),DP (0,8)) "isTrue#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "t" Nothing,DComment (DP (0,1),DP (0,3)) "<#" Nothing,DComment (DP (0,1),DP (0,3)) "8#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "(#" Nothing,DComment (DP (0,1),DP (0,15)) "int64ToInteger" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,20)) "uncheckedIShiftRA64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,2)) "t" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing,DComment (DP (0,1),DP (0,3)) "-#" Nothing,DComment (DP (0,1),DP (0,2)) "t" Nothing,DComment (DP (0,1),DP (0,3)) "#)" Nothing,DComment (DP (1,9),DP (1,10)) "|" Nothing,DComment (DP (0,1),DP (0,10)) "otherwise" Nothing,DComment (DP (0,9),DP (0,11)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "elim64#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,20)) "uncheckedIShiftRA64#" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "8#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "e" Nothing,DComment (DP (0,1),DP (0,3)) "-#" Nothing,DComment (DP (0,1),DP (0,3)) "8#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing,DComment (DP (2,1),DP (2,28)) "#define TO64    integerToInt" Nothing,DComment (DP (2,1),DP (2,32)) "-- Double mantissae fit it Int#" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:20-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:20-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:28-46 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:31-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:40-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:9-23 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:11-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1-31 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,6)) "#endif" Nothing] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:12-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1-58 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-58 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-58 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:32-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:32-58 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:40-58 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:43-49 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:52-55 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:18 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:20 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:22-49 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:24-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:24-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:24-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:32-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:33-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:33-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 46) DP (0,1) [DComment (DP (0,-12),DP (0,-8)) "TO64" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "e" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1-52 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-52 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-52 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:26-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:26-52 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:34-52 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:37-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:46-49 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:1-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,19)-(66,80) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(63,5)-(66,80) CN "HsCase" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(64,7)-(66,80) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:10-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:10-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:20-30 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:21-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:21-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(64,7)-(66,80) CN "(:)" Ref "delta-1",
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(64,7)-(66,80) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:9-78 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVbar),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:11-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:11-27 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:19-27 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:20-26 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:22-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:32-78 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-71 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:48-71 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:49-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:49-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:49-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:70 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:74-75 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:74-75 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:9-82 CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:11-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:11-27 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:11-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:19-27 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:20-26 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:22-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:25-26 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:32-82 CN "ExplicitTuple" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-71 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:48-71 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:49-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:49-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:49-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:70 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74-79 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74-79 CN "Present" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:76-77 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:79 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:9-80 CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnRarrow),DP (0,9))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:11-19 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:11-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:32-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:32-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:32-80 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:46-70 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:47-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:47-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:47-69 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:68-69 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:72-80 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:73 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:73-79 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:75-76 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 68) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:78-79 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1-24 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:12-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-25 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:22-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,13)-(72,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(71,5)-(72,35) CN "HsCase" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-35 Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:71:10-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-11 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-35 CN "(:)" Ref "delta-2",
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:7-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:10-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:13-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:16-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:16-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:16-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1-23 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-23 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:20-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:9 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:11-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:13-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:13-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:23-48 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:24-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:24-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:29-33 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:35-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:36-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:36-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1-23 CN "TyClD" NotNeeded,
  (Ann (DP (3,1)) (ColDelta 1) DP (3,1) [] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:6-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:11-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:11-23 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:14-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1-18 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,42)) "-- Number of trailing zero bits in a byte" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:17-18 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:17-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:82:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,14)-(99,17) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,5)-(99,17) CN "HsLet" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49) NotNeeded),DP (0,0)),((G AnnIn),DP (1,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:9-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,17)-(97,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(84,11)-(97,49) CN "HsCase" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,13)-(97,49) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:16-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:16-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:16-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:30-33 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:13-25 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,13)-(97,49) CN "(:)" Ref "delta-3",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,13)-(97,49) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:16-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:20-22 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,27)-(97,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(86,15)-(97,49) CN "HsCase" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,17)-(97,49) Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-41 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:20-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:36-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:40-41 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:43-44 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:46-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:87:17-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,17)-(97,49) CN "(:)" Ref "delta-4",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,17)-(97,49) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,20)-(97,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,19)-(97,49) CN "HsLet" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnLet),DP (0,0)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42) NotNeeded),DP (0,0)),((G AnnIn),DP (1,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:23-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42) CN "HsValBinds" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:29-32 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:34-36 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:38-40 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:42-43 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(89,25)-(91,79) CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:27-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:27-47 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:27-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:35-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:36-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:36-46 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:40-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:43-46 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(90,41)-(91,79) CN "HsCase" NotNeeded,
  (Ann (DP (1,18)) (ColDelta 18) DP (1,18) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-79 Ref "delta-5"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-68 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:46-75 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:62-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:66-68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:70-72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:74-75 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-44 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-79 CN "(:)" Ref "delta-5",
  (Ann (DP (1,0)) (ColDelta 20) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:43-79 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:46-79 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-76 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:49-79 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:55-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:60-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:64-76 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:65-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:65-75 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:69-70 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:72-75 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:78-79 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(92,25)-(93,79) CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:27-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:27-48 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:27-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:35-48 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:36-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:36-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:44-47 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-75 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:41-79 CN "HsApp" NotNeeded,
  (Ann (DP (1,18)) (ColDelta 18) DP (1,18) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:47-58 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:48-49 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:48-57 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:51-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:54-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:60-70 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:61-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:61-69 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:65-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:68-69 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:72-75 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:78-79 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 55) DP (0,2) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:25-42 CN "GRHS" NotNeeded,
  (Ann (DP (1,2)) (ColDelta 2) DP (1,2) [] [((G AnnVbar),DP (0,0)),((G AnnEqual),DP (0,3))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:27-35 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 4) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:27-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(95,22)-(97,49) CN "HsCase" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,24)-(97,49) Ref "delta-6"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:27-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:33-34 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:36-37 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:39-40 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:42-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:24-25 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,24)-(97,49) CN "(:)" Ref "delta-6",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,24)-(97,49) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,27)-(97,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,30)-(97,49) CN "HsCase" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-49 Ref "delta-7"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:35-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:35-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:35-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:58-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:62-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-43 CN "TuplePat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-49 CN "(:)" Ref "delta-7",
  (Ann (DP (1,0)) (ColDelta 9) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-49 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:36 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:39-40 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:45-49 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:48-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(98,8)-(99,17) CN "HsCase" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9-17 Ref "delta-8"),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:13-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:19-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9-17 CN "(:)" Ref "delta-8",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:9-17 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:11-17 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:14-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:14-17 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:17 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-53,0)) (ColDelta 0) DP (-53,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-78,0)) (ColDelta 0) DP (-78,0) [] []))]
==============
([((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:1:1,
    AnnModule),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:1:1,
    AnnWhere),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:70-74]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:34-68,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:68]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:34-68,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:36-51,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:22:52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:24:1-15,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:24:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:24:1-15,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:1-18,
    AnnImport),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:1-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:25:1-18,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-10,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-10,
    AnnDefault),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-10,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:30:1-10,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1-46,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:9-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:1-46,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:12-46,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:17-18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:20-46,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:25-26]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:28-46,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:45-46]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:28-46,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:28-29]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:31-37,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:52:38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:53:1-23,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1-31,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:29-31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1-31,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:57:1-31,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1-58,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:18-19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:1-58,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:21-58,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:29-30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:32-58,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:37-38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:40-58,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:57-58]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:40-58,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:40-41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:43-49,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:58:50]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:22]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-16]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:1-49,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:32-47,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:32-47,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:59:32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1-52,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:15-16]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:1-52,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:18-52,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:23-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:26-52,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:31-32]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:34-52,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:51-52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:34-52,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:34-35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:37-43,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:61:44]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:62:1-13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(62,1)-(66,80),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(63,5)-(66,80),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:5-8]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(63,5)-(66,80),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:32-33]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:20-30,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:20-30,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:63:20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:9-78,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:29-30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:9-78,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:19-27,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:19-27,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:20-26,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:22-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:32-78,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:77-78]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:32-78,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:32-33]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:35-71,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:72]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:48-71,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:71]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:48-71,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:64:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:9-82,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:29-30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:9-82,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:19-27,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:19-27,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:19]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:20-26,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:22-23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:32-82,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:81-82]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:32-82,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:32-33]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:35-71,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:72]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:48-71,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:71]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:48-71,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:74-79,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:65:76-77]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:9-80,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:29-30]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:9-80,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:46-70,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:70]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:46-70,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:46]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:72-80,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:80]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:72-80,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:72]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:73-79,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:66:75-76]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1-24,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:22-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1-24,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:68:1-24,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1-25,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:11-12]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:1-25,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:14-25,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:69:19-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:70:1-9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(70,1)-(72,35),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(71,5)-(72,35),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:71:5-8]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(71,5)-(72,35),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:71:23-24]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:13-35,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:72:13-14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1-23,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:9-10]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:1-23,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:12-23,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:74:17-18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:11]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48,
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:1-48,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:23-48,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:23-48,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:23]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:35-47,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:35-47,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:75:35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1-23,
    AnnData),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1-4]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1-23,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:9]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:78:1-23,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1-18,
    AnnDcolon),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:14-15]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:81:1-18,
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:82:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:82:14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:82:1-12]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(82,1)-(99,17),
    AnnSemi),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:102:1]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,5)-(99,17),
    AnnIn),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:5-6]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,5)-(99,17),
    AnnLet),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:5-7]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:17]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(83,9)-(97,49),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:83:9-13]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(84,11)-(97,49),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:11-14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(84,11)-(97,49),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:84:37-38]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:13-25,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:24-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:13-25,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:13-14]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:16-17,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(85,27)-(97,49),
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:85:27-28]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(86,15)-(97,49),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:15-18]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(86,15)-(97,49),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:86:49-50]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(87,20)-(97,49),
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:87:20-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,19)-(97,49),
    AnnIn),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:19-20]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,19)-(97,49),
    AnnLet),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:19-21]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(88,23)-(94,42),
    AnnFunId),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:88:23-27]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(89,25)-(91,79),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:49]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(89,25)-(91,79),
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:35-47,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:35-47,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:36-46,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:89:40-41]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(90,41)-(91,79),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:41-44]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(90,41)-(91,79),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:90:77-78]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:46-79,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:46-47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:64-76,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:76]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:64-76,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:64]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:65-75,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:91:69-70]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(92,25)-(93,79),
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:50]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(92,25)-(93,79),
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:35-48,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:48]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:35-48,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:35]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:36-47,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:92:41-42]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:47-58,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:58]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:47-58,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:47]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:48-57,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:51-52]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:60-70,
    AnnCloseP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:70]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:60-70,
    AnnOpenP),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:60]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:61-69,
    AnnVal),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:93:65-66]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:25-42,
    AnnEqual),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:39]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:25-42,
    AnnVbar),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:94:25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(95,22)-(97,49),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:22-25]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(95,22)-(97,49),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:95:45-46]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,27)-(97,49),
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:27-28]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,30)-(97,49),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:30-33]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(96,30)-(97,49),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:96:65-66]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-43,
    AnnClose),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:42-43]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-43,
    AnnOpen),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:33-34]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:36,
    AnnComma),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:37]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:45-49,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:97:45-46]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(98,8)-(99,17),
    AnnCase),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:8-11]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:(98,8)-(99,17),
    AnnOf),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:98:30-31]),
  ((../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:11-17,
    AnnRarrow),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:99:11-12]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/base-4.7.0.2/GHC/Float/ConversionUtils.hs:102:1])],
 [(<no location info>,
   [AnnLineComment "-- Number of trailing zero bits in a byte",
    AnnLineComment "-- Double mantissae fit it Int#",
    AnnLineComment "-----------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- Utilities for conversion between Double/Float and Rational",
    AnnLineComment "--",
    AnnLineComment "-- Portability :  non-portable (GHC Extensions)",
    AnnLineComment "-- Stability   :  internal",
    AnnLineComment "-- Maintainer  :  cvs-ghc@haskell.org",
    AnnLineComment "--",
    AnnLineComment "-- License     :  see libraries/base/LICENSE",
    AnnLineComment "-- Copyright   :  (c) Daniel Fischer 2010",
    AnnLineComment "-- Module      :  GHC.Float.ConversionUtils",
    AnnLineComment "-- |",
    AnnLineComment "-----------------------------------------------------------------------------",
    AnnBlockComment "{-# OPTIONS_HADDOCK hide #-}",
    AnnBlockComment "{-# OPTIONS_GHC -O2 #-}",
    AnnBlockComment "{-# LANGUAGE CPP, MagicHash, UnboxedTuples, NoImplicitPrelude #-}",
    AnnBlockComment "{-# LANGUAGE Trustworthy #-}"])])