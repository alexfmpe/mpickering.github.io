{-# LANGUAGE CPP
           , DeriveDataTypeable
           , NamedFieldPuns
           , NoImplicitPrelude
  #-}

#if __GLASGOW_HASKELL__ >= 704
{-# LANGUAGE Safe #-}
#endif{-# LANGUAGE Safe #-}

-------------------------------------------------------------------------------
-- |-------------------------------------------------------------------------------
-- |-- Module     : Control.Concurrent.ReadWriteLock
-- Module     : Control.Concurrent.ReadWriteLock-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk
-- License    : BSD3 (see the file LICENSE)-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk
-- License    : BSD3 (see the file LICENSE)-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>
-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>--            , Roel van Dijk <vandijk.roel@gmail.com>
----            , Roel van Dijk <vandijk.roel@gmail.com>
---- Multiple-reader, single-writer locks. Used to protect shared resources which
-- may be concurrently read, but only sequentially written.-- Multiple-reader, single-writer locks. Used to protect shared resources which
---- may be concurrently read, but only sequentially written.
---- All functions are /exception safe/. Throwing asynchronous exceptions will not
-- All functions are /exception safe/. Throwing asynchronous exceptions will not
-- to kill a thread that is blocking on, for example, 'acquireRead'.-- compromise the internal state of an 'RWLock'. This means it is perfectly safe
---- to kill a thread that is blocking on, for example, 'acquireRead'.
---- See also Java's version:
-- See also Java's version:-- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>
---- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>
---- This module is designed to be imported qualified. We suggest importing it
-- like:-- This module is designed to be imported qualified. We suggest importing it
---- like:
---- @
-- @-- import           Control.Concurrent.ReadWriteLock        ( RWLock )
-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )-- import           Control.Concurrent.ReadWriteLock        ( RWLock )
-- @-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )
---- @
---------------------------------------------------------------------------------
-------------------------------------------------------------------------------
module Control.Concurrent.ReadWriteLock
module( RWLockControl.Concurrent.ReadWriteLock
  ( RWLock
    -- *Creating Read-Write Locks
  , new-- *Creating Read-Write Locks
  , newnewAcquiredRead
  , newAcquiredReadnewAcquiredWrite
  , newAcquiredWrite
    -- *Read access
    -- **Blocking-- *Read access
  , acquireRead-- **Blocking
  , acquireRead
  , releaseReadwithRead
  , withRead
  , waitRead-- **Non-blocking
  , tryAcquireRead-- **Non-blocking
  , tryAcquireReadtryWithRead
  , tryWithRead
    -- *Write access
    -- **Blocking-- *Write access
  , acquireWrite-- **Blocking
  , acquireWrite
  , releaseWritewithWrite
  , withWrite
  , waitWrite-- **Non-blocking
  , tryAcquireWrite-- **Non-blocking
  , tryAcquireWritetryWithWrite
  , tryWithWritewhere
  ) where

-------------------------------------------------------------------------------
-- Imports-------------------------------------------------------------------------------
-- Imports-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- from base:
import-- from base:Control.Applicative     ( liftA2, liftA3 )
import Control.ApplicativeControl.Concurrent.MVar ( liftA2MVar, ,newMVar, )takeMVar, putMVar )
import Control.Concurrent.MVarControl.Exception       ( MVarbracket_, newMVar, onException, takeMVar), putMVar )
import Control.ExceptionControl.Monad           ( bracket_return, ,>>) )        )
import Control.MonadData.Bool               ( returnBool(False, (>>,)True)  ) )
import Data.BoolData.Eq                 ( BoolEq, (False==) ), True) )
import Data.EqData.Function           ( Eq($,,(==(.),)on )
import Data.FunctionData.Int                ( (Int$),)(.), on )
import Data.IntData.Maybe              ( IntMaybe)(Nothing, Just) )
import Data.MaybeData.List               ( Maybe(++))(Nothing, Just) )
import Data.ListData.Typeable           ( (Typeable++))    )
import Data.TypeablePrelude                 ( TypeableString, ()$!), succ, pred, error )
import PreludeSystem.IO               ( StringIO )  , ($!), succ, pred, error )
import System.IO               ( IO )
#if __GLASGOW_HASKELL__ < 700
import Prelude                 ( fromInteger )
import Control.Monad           ( (>>=), fail )
#endif

-- from concurrent-extra (this package):
import-- from concurrent-extra (this package):Control.Concurrent.Lock ( Lock )
import qualified Control.Concurrent.Lock (asLockLock)
import( newqualified, newAcquiredControl.Concurrent.Lock, acquire, release,aswaitLock)
    ( new, newAcquired, acquire, release, wait )
import Utils ( mask, mask_ )
import Utils ( mask, mask_ )

-------------------------------------------------------------------------------
-- Read Write Lock-------------------------------------------------------------------------------
-- Read Write Lock-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
{-|
Multiple-reader, single-writer lock. Is in one of three states:

* \"Free\": Read or write access can be acquired without blocking.

* \"Read\": One or more threads have acquired read access. Blocks write access.

* \"Write\": A single thread has acquired write access. Blocks other threads
from acquiring both read and write access.
-}data RWLock = RWLock { state     :: MVar State
data RWLock = RWLock { statereadLock  :: MVar State
                     , readLockwriteLock :: Lock
                     , writeLockderiving Typeable:: Lock
                     } deriving Typeable
instance Eq RWLock where
instance(==) Eq= (RWLock==) `onwhere` state
    (==) = (==) `on` state
-- | Internal state of the 'RWLock'.
data-- | Internal state of the 'RWLock'.State = Free | Read Int | Write
data State = Free | Read Int | Write

-------------------------------------------------------------------------------
-- * Creating Read-Write Locks-------------------------------------------------------------------------------
-- * Creating Read-Write Locks-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- | Create a new 'RWLock' in the \"free\" state; either read or write access
-- can be acquired without blocking.-- | Create a new 'RWLock' in the \"free\" state; either read or write access
new-- can be acquired without blocking.:: IO RWLock
new ::= liftA3 RWLockRWLock (newMVar Free)
new = liftA3 RWLock (Lock.newnewMVar Free)
                    Lock.new
                    Lock.new
-- | Create a new 'RWLock' in the \"read\" state; only read can be acquired
-- without blocking.-- | Create a new 'RWLock' in the \"read\" state; only read can be acquired
newAcquiredRead-- without blocking.:: IO RWLock
newAcquiredRead ::= liftA3 RWLockRWLock (newMVar $ Read 1)
newAcquiredRead = liftA3 RWLock (Lock.newAcquirednewMVar $ Read 1)
                                Lock.newAcquiredLock.new
                                Lock.new
-- | Create a new 'RWLock' in the \"write\" state; either acquiring read or
-- write will block.-- | Create a new 'RWLock' in the \"write\" state; either acquiring read or
newAcquiredWrite-- write will block.:: IO RWLock
newAcquiredWrite ::= liftA3 RWLockRWLock (newMVar Write)
newAcquiredWrite = liftA3 RWLock (Lock.newnewMVar Write)
                                 Lock.newLock.newAcquired
                                 Lock.newAcquired

-------------------------------------------------------------------------------
-- * Read access-------------------------------------------------------------------------------
-- * Read access-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
{-|
Acquire the read lock.

Blocks if another thread has acquired write access. If @acquireRead@ terminates
without throwing an exception the state of the 'RWLock' will be \"read\".

Implementation note: Throws an exception when more than (maxBound :: Int)
simultaneous threads acquire the read lock. But that is unlikely.
-}acquireRead :: RWLock -> IO ()
acquireRead ::(RWLock{state-> IO, (readLock)      , writeLock}) = mask_ acqRead
acquireReadwhere   (RWLock {state, readLock, writeLock}) = mask_ acqRead
    whereacqRead = do st <- takeMVar state
      acqRead = do stcase<-stof     state
                   caseFree of-> do Lock.acquire readLock
                     Free   -> do Lock.acquireputMVar statereadLock$ Read 1
                     Read n -> putMVarstate. Read Read$! 1succ n
                     ReadWriten -> putMVardo putMVarstate Readst  $! succ n
                     Write  -> do putMVarLock.waitwriteLock
                                  Lock.waitacqRead   writeLock
                                  acqRead
{-|
Try to acquire the read lock; non blocking.

Like 'acquireRead', but doesn't block. Returns 'True' if the resulting state is
\"read\", 'False' otherwise.
-}tryAcquireRead :: RWLock -> IO Bool
tryAcquireRead ::(RWLock{state-> IO, BoolreadLock}) = mask_ $ do
tryAcquireReadst <- takeMVarRWLockstate {state, readLock}) = mask_ $ do
  stcase<-stof     state
  caseFree of-> do Lock.acquire readLock
    Free   -> do Lock.acquireputMVar statereadLock$ Read 1
                 putMVarreturn True $ Read 1
    Read n -> do returnputMVarTruestate . Read $! succ n
    Read n -> do putMVarreturn True . Read $! succ n
    Write  -> do returnputMVarTruestate st
    Write  -> do putMVarreturn False st
                 return False
{-|
Release the read lock.

If the calling thread was the last one to relinquish read access the state will
revert to \"free\".

It is an error to release read access to an 'RWLock' which is not in the
\"read\" state.
-}releaseRead :: RWLock -> IO ()
releaseRead ::(RWLock{state-> IO, (readLock)      }) = mask_ $ do
releaseReadst <- takeMVarRWLockstate{state, readLock}) = mask_ $ do
  stcase<-stof     state
  caseRead1of-> do Lock.release readLock
    Read 1 -> do Lock.releaseputMVar statereadLockFree
    Read n -> putMVarstate. Read$! pred n
    Read_ -> ndo->putMVarstatest. Read $! pred n
    _ -> do putMVarerror $ statemoduleName   ++ ".releaseRead: already released"
            error $ moduleName ++ ".releaseRead: already released"
{-|
A convenience function wich first acquires read access and then performs the
computation. When the computation terminates, whether normally or by raising an
exception, the read lock is released.
-}withRead :: RWLock -> IO a -> IO a
withRead ::= liftA2bracket_-> IO a ->acquireRead a     releaseRead
withRead = liftA2 bracket_ acquireRead releaseRead
{-|
A non-blocking 'withRead'. First tries to acquire the lock. If that fails,
'Nothing' is returned. If it succeeds, the computation is performed. When the
computation terminates, whether normally or by raising an exception, the lock is
released and 'Just' the result of the computation is returned.
-}tryWithRead :: RWLock -> IO a -> IO (Maybe a)
tryWithRead ::l aRWLock= mask->$ IO\restore -> IO->(Maybedo    a)
tryWithReadacquired <- atryAcquireRead= mask $ \restorel    -> do
              acquiredif acquired<- tryAcquireRead l
              ifthendo r <- restore a `onException` releaseRead l
                then do rreleaseRead<- restorela `onException` releaseRead l
                        releaseReadreturn $ Just r
                else returnNothing Just r
                else return Nothing
{-|
* When the state is \"write\", @waitRead@ /blocks/ until a call to
'releaseWrite' in another thread changes the state to \"free\".

* When the state is \"free\" or \"read\" @waitRead@ returns immediately.

@waitRead@ does not alter the state of the lock.

Note that @waitRead@ is just a convenience function defined as:

@waitRead l = 'mask_' '$' 'acquireRead' l '>>' 'releaseRead' l@
-}waitRead :: RWLock -> IO ()
waitRead ::l =RWLockmask_ ->$ acquireRead ()      l >> releaseRead l
waitRead l = mask_ $ acquireRead l >> releaseRead l

-------------------------------------------------------------------------------
-- *Write access-------------------------------------------------------------------------------
-- *Write access-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
{-|
Acquire the write lock.

Blocks if another thread has acquired either read or write access. If
@acquireWrite@ terminates without throwing an exception the state of the
'RWLock' will be \"write\".
-}acquireWrite :: RWLock -> IO ()
acquireWrite ::(RWLock{state-> IO, (readLock)      , writeLock}) = mask_ acqWrite
acquireWritewhere    (RWLock {state, readLock, writeLock}) = mask_ acqWrite
    whereacqWrite = do st <- takeMVar state
      acqWrite = do stcase<-stof     state
                    caseFree of-> do Lock.acquire writeLock
                      Free   -> do Lock.acquireputMVar statewriteLockWrite
                      Read _ -> do putMVar state Writest
                      Read _ -> do putMVarLock.waitreadLock
                                   Lock.waitacqWrite  readLock
                      Write  -> do acqWriteputMVar state st
                      Write  -> do putMVarLock.waitwriteLock
                                   Lock.waitacqWrite  writeLock
                                   acqWrite
{-|
Try to acquire the write lock; non blocking.

Like 'acquireWrite', but doesn't block. Returns 'True' if the resulting state is
\"write\", 'False' otherwise.
-}tryAcquireWrite :: RWLock -> IO Bool
tryAcquireWrite ::(RWLock{state-> IO, BoolwriteLock}) = mask_ $ do
tryAcquireWritest <- takeMVar(RWLockstate  {state, writeLock}) = mask_ $ do
  stcase<-stof     state
  caseFree of-> do Lock.acquire writeLock
    Free   -> do Lock.acquireputMVar statewriteLockWrite
                 putMVarreturn True Write
    _      -> do returnputMVarTruestate st
    _      -> do putMVarreturn False st
                 return False
{-|
Release the write lock.

If @releaseWrite@ terminates without throwing an exception the state will be
\"free\".

It is an error to release write access to an 'RWLock' which is not in the
\"write\" state.
-}releaseWrite :: RWLock -> IO ()
releaseWrite ::(RWLock{state-> IO, (writeLock)       }) = mask_ $ do
releaseWritest <- takeMVarRWLockstate{state, writeLock}) = mask_ $ do
  stcase<-stof     state
  caseWrite of do Lock.release writeLock
    Write -> do Lock.releaseputMVar statewriteLockFree
    _ -> do putMVarstatest  Free
    _ -> do putMVarerror $ statemoduleName   ++ ".releaseWrite: already released"
            error $ moduleName ++ ".releaseWrite: already released"
{-|
A convenience function wich first acquires write access and then performs
the computation. When the computation terminates, whether normally or by raising
an exception, the write lock is released.
-}withWrite :: RWLock -> IO a -> IO a
withWrite ::= liftA2bracket_-> IO a ->acquireWrite a      releaseWrite
withWrite = liftA2 bracket_ acquireWrite releaseWrite
{-|
A non-blocking 'withWrite'. First tries to acquire the lock. If that fails,
'Nothing' is returned. If it succeeds, the computation is performed. When the
computation terminates, whether normally or by raising an exception, the lock is
released and 'Just' the result of the computation is returned.
-}tryWithWrite :: RWLock -> IO a -> IO (Maybe a)
tryWithWrite ::l aRWLock= mask->$ IO\restore -> IO->(Maybedo    a)
tryWithWriteacquired <-ltryAcquireWrite = mask $ \restorel    -> do
               acquiredif acquired<- tryAcquireWrite l
               ifthendo r <- restore a `onException` releaseWrite l
                 then do rreleaseWrite<- restore a `onException` releaseWrite l
                         releaseWritereturn $ Justlr
                 else returnNothing Just r
                 else return Nothing
{-|
* When the state is \"write\" or \"read\" @waitWrite@ /blocks/ until a call to
'releaseWrite' or 'releaseRead' in another thread changes the state to \"free\".

* When the state is \"free\" @waitWrite@ returns immediately.

@waitWrite@ does not alter the state of the lock.

Note that @waitWrite@ is just a convenience function defined as:

@waitWrite l = 'mask_' '$' 'acquireWrite' l '>>' 'releaseWrite' l@
-}waitWrite :: RWLock -> IO ()
waitWrite ::l =RWLockmask_ ->$ acquireWrite ()       l >> releaseWrite l
waitWrite l = mask_ $ acquireWrite l >> releaseWrite l
moduleName :: String
moduleName ::= "Control.Concurrent.ReadWriteLock"
moduleName = "Control.Concurrent.ReadWriteLock"


==============
../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs
==============
lengths:(17038,11590)

==============

({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (4,6)) "{-# LANGUAGE CPP\n           , DeriveDataTypeable\n           , NamedFieldPuns\n           , NoImplicitPrelude\n  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,30)) "#if __GLASGOW_HASKELL__ >= 704" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,22)) "{-# LANGUAGE Safe #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-5),DP (0,16)) "{-# LANGUAGE Safe #-}" Nothing),DP (0,-5)),((AnnComment DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,75)) "-------------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,44)) "-- Module     : Control.Concurrent.ReadWriteLock" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,49)) "-- Module     : Control.Concurrent.ReadWriteLock" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-48),DP (0,10)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-48)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,15)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,8)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,52)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-51),DP (0,3)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-51)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,52)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-- Multiple-reader, single-writer locks. Used to protect shared resources which" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,60)) "-- may be concurrently read, but only sequentially written." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-59),DP (0,20)) "-- Multiple-reader, single-writer locks. Used to protect shared resources which" Nothing),DP (0,-59)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,57)) "-- may be concurrently read, but only sequentially written." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,78)) "-- All functions are /exception safe/. Throwing asynchronous exceptions will not" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,81)) "-- All functions are /exception safe/. Throwing asynchronous exceptions will not" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,69)) "-- to kill a thread that is blocking on, for example, 'acquireRead'." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-68),DP (0,12)) "-- compromise the internal state of an 'RWLock'. This means it is perfectly safe" Nothing),DP (0,-68)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,66)) "-- to kill a thread that is blocking on, for example, 'acquireRead'." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,25)) "-- See also Java's version:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,28)) "-- See also Java's version:" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-27),DP (0,61)) "-- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>" Nothing),DP (0,-27)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,86)) "-- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,74)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,9)) "-- like:" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-8),DP (0,68)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-8)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,6)) "-- like:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,66)) "-- import           Control.Concurrent.ReadWriteLock        ( RWLock )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-67),DP (0,3)) "-- import           Control.Concurrent.ReadWriteLock        ( RWLock )" Nothing),DP (0,-67)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,63)) "-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-------------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,33)) "Control.Concurrent.ReadWriteLock" Nothing),DP (0,1)),((G AnnModule),DP (39,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,7)) "RWLock" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:40:8-39
     }
    Nothing{ModuleName: Control.Concurrent.ReadWriteLock})) 
  (Just 
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(41,3)-(67,3)
     }
    Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-12),DP (0,-7)) "where" Nothing),DP (0,-12)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:41:5-10
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:41:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,34)) "-- *Creating Read-Write Locks" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,26)) "-- *Creating Read-Write Locks" Nothing),DP (0,-3)),((G AnnComma),DP (3,3))])
        (Unqual {OccName: RWLock})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:44:5-7
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:44:5-7
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,12)) "newAcquiredRead" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: new})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:45:5-19
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:45:5-19
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-15),DP (0,1)) "newAcquiredWrite" Nothing),DP (0,-15)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: newAcquiredRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:46:5-20
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:46:5-20
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,20)) "-- *Read access" Nothing),DP (1,5)),((AnnComment DComment (DP (1,5),DP (1,18)) "-- **Blocking" Nothing),DP (1,5)),((AnnComment DComment (DP (0,-13),DP (0,2)) "-- *Read access" Nothing),DP (0,-13)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,12)) "acquireRead" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-11),DP (0,2)) "-- **Blocking" Nothing),DP (0,-11)),((G AnnComma),DP (4,3))])
        (Unqual {OccName: newAcquiredWrite})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:50:5-15
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:50:5-15
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: acquireRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:51:5-15
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:51:5-15
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-3)) "withRead" Nothing),DP (0,-11)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: releaseRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:52:5-12
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:52:5-12
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: withRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:53:5-12
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:53:5-12
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,9)) "-- **Non-blocking" Nothing),DP (0,-8)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,15)) "tryAcquireRead" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-14),DP (0,3)) "-- **Non-blocking" Nothing),DP (0,-14)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: waitRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:55:5-18
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:55:5-18
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-14),DP (0,-3)) "tryWithRead" Nothing),DP (0,-14)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: tryAcquireRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:56:5-15
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:56:5-15
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,21)) "-- *Write access" Nothing),DP (1,5)),((AnnComment DComment (DP (1,5),DP (1,18)) "-- **Blocking" Nothing),DP (1,5)),((AnnComment DComment (DP (0,-13),DP (0,3)) "-- *Write access" Nothing),DP (0,-13)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,13)) "acquireWrite" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-12),DP (0,1)) "-- **Blocking" Nothing),DP (0,-12)),((G AnnComma),DP (4,3))])
        (Unqual {OccName: tryWithRead})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:60:5-16
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:60:5-16
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: acquireWrite})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:61:5-16
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:61:5-16
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-12),DP (0,-3)) "withWrite" Nothing),DP (0,-12)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: releaseWrite})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:62:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:62:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: withWrite})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:63:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:63:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,8)) "-- **Non-blocking" Nothing),DP (0,-9)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,16)) "tryAcquireWrite" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-15),DP (0,2)) "-- **Non-blocking" Nothing),DP (0,-15)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: waitWrite})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:65:5-19
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:65:5-19
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-15),DP (0,-3)) "tryWithWrite" Nothing),DP (0,-15)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: tryAcquireWrite})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:66:5-16
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:66:5-16
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: tryWithWrite}))))])) 
  [
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:1-49
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,14)) "-- from base:" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,7)) "-- from base:" Nothing,DComment (DP (0,-6),DP (0,13)) "Control.Applicative" Nothing,DComment (DP (0,5),DP (0,6)) "(" Nothing,DComment (DP (0,1),DP (0,7)) "liftA2" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:8-26
       }
      Nothing{ModuleName: Control.Applicative}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:32-49
         }
        Just (Ann (DP (0,1)) (ColDelta 32) DP (0,5) [DComment (DP (0,-19),DP (0,4)) "Control.Concurrent.MVar" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "," Nothing),DP (0,-1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:34-39
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:34-39
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-2)) "MVar" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: liftA2})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:42-47
           }
          Just (Ann (DP (0,-5)) (ColDelta 42) DP (0,1) [DComment (DP (0,-1),DP (0,6)) "newMVar" Nothing] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:42-47
             }
            Just (Ann (DP (0,-5)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,-5))])
            (Unqual {OccName: liftA3}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:1-67
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,7)) "takeMVar" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "putMVar" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:8-30
       }
      Nothing{ModuleName: Control.Concurrent.MVar}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:32-67
         }
        Just (Ann (DP (0,7)) (ColDelta 32) DP (0,1) [DComment (DP (0,-23),DP (0,-6)) "Control.Exception" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:34-37
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:34-37
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,4)) "bracket_" Nothing),DP (0,-4)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: MVar})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:40-46
           }
          Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:40-46
             }
            Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "," Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,12)) "onException" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: newMVar})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:49-56
           }
          Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:49-56
             }
            Just (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) ")" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: takeMVar})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:59-65
           }
          Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:59-65
             }
            Just (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: putMVar}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:1-56
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:8-24
       }
      Nothing{ModuleName: Control.Exception}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:32-56
         }
        Just (Ann (DP (0,11)) (ColDelta 32) DP (0,7) [DComment (DP (0,-17),DP (0,-4)) "Control.Monad" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) ")" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:34-41
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:34-41
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-2)) "return" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: bracket_})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:44-54
           }
          Just (Ann (DP (0,-1)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,2)) ">>" Nothing] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:44-54
             }
            Just (Ann (DP (0,-1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,-1))])
            (Unqual {OccName: onException}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:1-47
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:8-20
       }
      Nothing{ModuleName: Control.Monad}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:32-47
         }
        Just (Ann (DP (0,15)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-4)) "Data.Bool" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,4)) "True" Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:34-39
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:34-39
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-2)) "Bool" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "False" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: return})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45
           }
          Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45
             }
            Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "," Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: >>}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:1-52
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:8-16
       }
      Nothing{ModuleName: Data.Bool}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:32-52
         }
        Just (Ann (DP (0,17)) (ColDelta 32) DP (0,15) [DComment (DP (0,-9),DP (0,-2)) "Data.Eq" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:34-50
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,-2)) "Eq" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingWith 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:34-37
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Bool})) 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:39-43
              }
             Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "==" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
             (Unqual {OccName: False})),
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:46-49
              }
             Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: True}))]))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:8-14
       }
      Nothing{ModuleName: Data.Eq}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:32-43
         }
        Just (Ann (DP (0,11)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,6)) "Data.Function" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:34-35
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:34-35
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "$" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: Eq})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41
           }
          Just (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41
             }
            Just (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "." Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: ==}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:1-47
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,2)) "on" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:8-20
       }
      Nothing{ModuleName: Data.Function}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:32-47
         }
        Just (Ann (DP (0,16)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-5)) "Data.Int" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "Int" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: $})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41
           }
          Just (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41
             }
            Just (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: .})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:44-45
           }
          Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:44-45
             }
            Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: on}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:8-15
       }
      Nothing{ModuleName: Data.Int}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:32-38
         }
        Just (Ann (DP (0,14)) (ColDelta 32) DP (0,16) [DComment (DP (0,-8),DP (0,2)) "Data.Maybe" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,2)) "Maybe" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:34-36
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:34-36
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Int}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:1-55
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:8-17
       }
      Nothing{ModuleName: Data.Maybe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:32-55
         }
        Just (Ann (DP (0,15)) (ColDelta 32) DP (0,14) [DComment (DP (0,-10),DP (0,-1)) "Data.List" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:34-53
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,2)) "++" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingWith 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:34-38
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Maybe})) 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:40-46
              }
             Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (Unqual {OccName: Nothing})),
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:49-52
              }
             Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: Just}))]))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:8-16
       }
      Nothing{ModuleName: Data.List}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:32-38
         }
        Just (Ann (DP (0,11)) (ColDelta 32) DP (0,15) [DComment (DP (0,-9),DP (0,4)) "Data.Typeable" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "Typeable" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: ++}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,4),DP (0,5)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:8-20
       }
      Nothing{ModuleName: Data.Typeable}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:32-43
         }
        Just (Ann (DP (0,17)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-6)) "Prelude" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-2)) "String" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:34-41
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:34-41
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Typeable}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:1-66
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,1)) "$!" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "succ" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "pred" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "error" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:8-14
       }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:32-66
         }
        Just (Ann (DP (0,15)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,2)) "System.IO" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:34-39
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:34-39
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-4)) "IO" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: String})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45
           }
          Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45
             }
            Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: $!})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:48-51
           }
          Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:48-51
             }
            Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: succ})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:54-57
           }
          Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:54-57
             }
            Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: pred})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:60-64
           }
          Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:60-64
             }
            Just (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: error}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:1-37
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:8-16
       }
      Nothing{ModuleName: System.IO}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:32-37
         }
        Just (Ann (DP (0,15)) (ColDelta 32) DP (0,15) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:34-35
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:34-35
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: IO}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:1-49
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (1,29)) "#if __GLASGOW_HASKELL__ < 700" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,17),DP (0,18)) "(" Nothing,DComment (DP (0,1),DP (0,12)) "fromInteger" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "Control.Monad" Nothing,DComment (DP (0,11),DP (0,12)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">>=" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "fail" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,41)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,34)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (0,-23),DP (0,0)) "Control.Concurrent.Lock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "Lock" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "qualified" Nothing),DP (0,1)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:18-40
       }
      Nothing{ModuleName: Control.Concurrent.Lock}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:42-49
         }
        Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,1)) "Lock" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:44-47
           }
          Just (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "as" Nothing] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:44-47
             }
            Just (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Lock}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((G AnnQualified),DP (0,1)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "," Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,12)) "newAcquired" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-18),DP (0,-17)) "," Nothing),DP (0,-18)),((AnnComment DComment (DP (0,1),DP (0,8)) "acquire" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "release" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,-1),DP (0,3)) "wait" Nothing),DP (0,-1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:96:18-40
       }
      Nothing{ModuleName: Control.Concurrent.Lock}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Lock}) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:5-48
         }
        Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-1),DP (0,0)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:7-9
           }
          Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:7-9
             }
            Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: new})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:12-22
           }
          Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:12-22
             }
            Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: newAcquired})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:25-31
           }
          Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:25-31
             }
            Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: acquire})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:34-40
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:34-40
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: release})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:43-46
           }
          Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:43-46
             }
            Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: wait}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:1-28
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "Utils" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "mask" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:8-12
       }
      Nothing{ModuleName: Utils}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:14-28
         }
        Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:16-19
           }
          Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:16-19
             }
            Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: mask})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:22-26
           }
          Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:22-26
             }
            Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: mask_}))))])))))] 
  [
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,1)-(119,40)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (17,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Read Write Lock" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Read Write Lock" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (10,3)) "{-|\nMultiple-reader, single-writer lock. Is in one of three states:\n\n* \\\"Free\\\": Read or write access can be acquired without blocking.\n\n* \\\"Read\\\": One or more threads have acquired read access. Blocks write access.\n\n* \\\"Write\\\": A single thread has acquired write access. Blocks other threads\nfrom acquiring both read and write access.\n-}" Nothing,DComment (DP (-8,1),DP (1,3)) "{-|\nMultiple-reader, single-writer lock. Is in one of three states:\n\n* \\\"Free\\\": Read or write access can be acquired without blocking.\n\n* \\\"Read\\\": One or more threads have acquired read access. Blocks write access.\n\n* \\\"Write\\\": A single thread has acquired write access. Blocks other threads\nfrom acquiring both read and write access.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing,DComment (DP (0,5),DP (0,7)) "::" Nothing,DComment (DP (0,1),DP (0,5)) "MVar" Nothing,DComment (DP (0,1),DP (0,6)) "State" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:6-11
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: RWLock})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,15)-(119,22)
          }
         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:15-20
             }
            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: RWLock}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,22)-(119,22)
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (1,22))])
            [
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:24-46
               }
              Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,3)) "readLock" Nothing),DP (0,-5)),((G AnnDcolon),DP (0,5)),((G AnnComma),DP (1,22))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:24-28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: state}))] 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:37-46
                 }
                Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:37-40
                   }
                  Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: MVar}))) 
                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:42-46
                   }
                  Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: State}))))) 
               (Nothing))),
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:24-40
               }
              Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-8),DP (0,1)) "writeLock" Nothing),DP (0,-8)),((G AnnDcolon),DP (0,2)),((G AnnComma),DP (1,22))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:24-31
                  }
                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: readLock}))] 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:37-40
                 }
                Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Lock}))) 
               (Nothing))),
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:24-40
               }
              Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-9),DP (0,-1)) "deriving" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,9)) "Typeable" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:24-32
                  }
                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: writeLock}))] 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:37-40
                 }
                Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Lock}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:24-40
          }
         Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnDeriving),DP (0,0))])
         [
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:33-40
            }
           Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Typeable})))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(121,1)-(122,26)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,3)) "Eq" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-4)) "==" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,2)) "on" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:10-18
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "==" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
          []) 
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:10-18
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:10-11
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Eq}))) 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:13-18
             }
            Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: RWLock}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-26
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-5),DP (0,-4)) "`" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
           (Unqual {OccName: ==})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-26
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (Unqual {OccName: ==})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:10-26
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-26
                    }
                   Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-15
                      }
                     Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: ==}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:17-20
                      }
                     Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: on}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:22-26
                      }
                     Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: state})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1-36
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,37)) "-- | Internal state of the 'RWLock'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,-4),DP (0,32)) "-- | Internal state of the 'RWLock'." Nothing,DComment (DP (0,-31),DP (0,-26)) "State" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Free" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,4)) "Int" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,6)) "Write" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:6-10
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: State})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:14-17
          }
         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVbar),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:14-17
             }
            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Free}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:21-28
          }
         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVbar),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:21-24
             }
            Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Read}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:26-28
              }
             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:32-36
          }
         Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:32-36
             }
            Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Write}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1-16
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,31)) "-- * Creating Read-Write Locks" Nothing,DComment (DP (0,-30),DP (0,49)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,31)) "-- * Creating Read-Write Locks" Nothing,DComment (DP (0,-30),DP (0,49)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,78)) "-- | Create a new 'RWLock' in the \\\"free\\\" state; either read or write access" Nothing,DComment (DP (1,1),DP (1,37)) "-- can be acquired without blocking." Nothing,DComment (DP (0,-36),DP (0,41)) "-- | Create a new 'RWLock' in the \\\"free\\\" state; either read or write access" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "new" Nothing,DComment (DP (0,-3),DP (0,33)) "-- can be acquired without blocking." Nothing,DComment (DP (0,-32),DP (0,-30)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1-3
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: new}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:8-16
        }
       Just (Ann (DP (0,-5)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:8-16
          }
         Just (Ann (DP (0,-5)) (ColDelta 8) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:8-9
            }
           Just (Ann (DP (0,-5)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-5))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:11-16
            }
           Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,3)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "newMVar" Nothing,DComment (DP (0,1),DP (0,5)) "Free" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:1-3
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: new})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:1-3
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: new})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,5)-(137,28)
              }
             Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,7)-(137,28)
                }
               Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,7)-(136,28)
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:7-34
                    }
                   Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:7-19
                      }
                     Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:7-12
                        }
                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: liftA3}))) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:14-19
                        }
                       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: RWLock}))))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:21-34
                      }
                     Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:22-33
                        }
                       Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:22-28
                          }
                         Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,7)) "Lock.new" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: newMVar}))) 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:30-33
                          }
                         Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Free}))))))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:136:21-28
                    }
                   Just (Ann (DP (1,21)) (ColDelta 21) DP (1,21) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Lock} {OccName: new}))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:137:21-28
                  }
                 Just (Ann (DP (1,21)) (ColDelta 21) DP (1,21) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Lock} {OccName: new})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1-28
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,76)) "-- | Create a new 'RWLock' in the \\\"read\\\" state; only read can be acquired" Nothing,DComment (DP (1,1),DP (1,21)) "-- without blocking." Nothing,DComment (DP (0,-20),DP (0,55)) "-- | Create a new 'RWLock' in the \\\"read\\\" state; only read can be acquired" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,15)) "newAcquiredRead" Nothing,DComment (DP (0,-15),DP (0,5)) "-- without blocking." Nothing,DComment (DP (0,-4),DP (0,-2)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1-15
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: newAcquiredRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:20-28
        }
       Just (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:20-28
          }
         Just (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:20-21
            }
           Just (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,-5))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:23-28
            }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,3)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "newMVar" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:1-15
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: newAcquiredRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:1-15
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: newAcquiredRead})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,17)-(144,40)
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,19)-(144,40)
                }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,19)-(143,48)
                  }
                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:19-50
                    }
                   Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:19-31
                      }
                     Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:19-24
                        }
                       Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: liftA3}))) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:26-31
                        }
                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: RWLock}))))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:33-50
                      }
                     Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:34-49
                        }
                       Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:34-40
                          }
                         Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,15)) "Lock.newAcquired" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: newMVar}))) 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:42
                          }
                         Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: $}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:44-49
                          }
                         Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:44-47
                            }
                           Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: Read}))) 
                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:49
                            }
                           Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsOverLit {HsOverLit:1})))))))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:143:33-48
                    }
                   Just (Ann (DP (1,33)) (ColDelta 33) DP (1,33) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Lock} {OccName: newAcquired}))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:144:33-40
                  }
                 Just (Ann (DP (1,33)) (ColDelta 33) DP (1,33) [DComment (DP (0,-16),DP (0,-8)) "Lock.new" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Lock} {OccName: new})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1-29
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,76)) "-- | Create a new 'RWLock' in the \\\"write\\\" state; either acquiring read or" Nothing,DComment (DP (1,1),DP (1,21)) "-- write will block." Nothing,DComment (DP (0,-20),DP (0,55)) "-- | Create a new 'RWLock' in the \\\"write\\\" state; either acquiring read or" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,16)) "newAcquiredWrite" Nothing,DComment (DP (0,-16),DP (0,4)) "-- write will block." Nothing,DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1-16
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: newAcquiredWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:21-29
        }
       Just (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:21-29
          }
         Just (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:21-22
            }
           Just (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-5))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:24-29
            }
           Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,3)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "newMVar" Nothing,DComment (DP (0,1),DP (0,6)) "Write" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:1-16
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: newAcquiredWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:1-16
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: newAcquiredWrite})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,18)-(151,49)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,20)-(151,49)
                }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,20)-(150,41)
                  }
                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:20-48
                    }
                   Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:20-32
                      }
                     Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:20-25
                        }
                       Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: liftA3}))) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:27-32
                        }
                       Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: RWLock}))))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:34-48
                      }
                     Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:35-47
                        }
                       Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:35-41
                          }
                         Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,7)) "Lock.new" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: newMVar}))) 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:43-47
                          }
                         Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Write}))))))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:150:34-41
                    }
                   Just (Ann (DP (1,34)) (ColDelta 34) DP (1,34) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Lock} {OccName: new}))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:151:34-49
                  }
                 Just (Ann (DP (1,34)) (ColDelta 34) DP (1,34) [DComment (DP (0,-8),DP (0,8)) "Lock.newAcquired" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Lock} {OccName: newAcquired})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1-30
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (16,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- * Read access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- * Read access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (9,3)) "{-|\nAcquire the read lock.\n\nBlocks if another thread has acquired write access. If @acquireRead@ terminates\nwithout throwing an exception the state of the 'RWLock' will be \\\"read\\\".\n\nImplementation note: Throws an exception when more than (maxBound :: Int)\nsimultaneous threads acquire the read lock. But that is unlikely.\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nAcquire the read lock.\n\nBlocks if another thread has acquired write access. If @acquireRead@ terminates\nwithout throwing an exception the state of the 'RWLock' will be \\\"read\\\".\n\nImplementation note: Throws an exception when more than (maxBound :: Int)\nsimultaneous threads acquire the read lock. But that is unlikely.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "acquireRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: acquireRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-30
        }
       Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-30
          }
         Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-21
            }
           Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:26-30
            }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:26-27
              }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:29-30
              }
             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "readLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "," Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,8)) "acqRead" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: acquireRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: acquireRead})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:13-49
             }
            Just (Ann (DP (0,3)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-2)) "where" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:14-48
               }
              Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:14-19
                 }
                Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: RWLock})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:22-26
                    }
                   Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:22-26
                      }
                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: state})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:29-36
                    }
                   Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:29-36
                      }
                     Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: readLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:39-47
                    }
                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:39-47
                      }
                     Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: writeLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,51)-(177,41)
              }
             Just (Ann (DP (0,-1)) (ColDelta 51) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:53-65
                }
               Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:53-57
                  }
                 Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask_}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:59-65
                  }
                 Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: acqRead})))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:7-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: acqRead})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:7-13
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: acqRead})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,15)-(177,41)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,17)-(177,41)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,20)-(177,41) Ref "delta-1"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:20-39
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:20-21
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: st}))) 
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:26-39
                               }
                              Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])
                              (HsApp 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:26-33
                                 }
                                Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                (HsVar 
                                 (Unqual {OccName: takeMVar}))) 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:35-39
                                 }
                                Just (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: state}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(171,20)-(177,41)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(171,20)-(177,41)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,22)-(177,41) Ref "delta-2"),DP (0,0))])
                              (HsCase 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:171:25-26
                                 }
                                Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])
                                (HsVar 
                                 (Unqual {OccName: st}))) 
                               (MG 
                                [
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,22)-(173,56)
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:22-25
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:22-25
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Free})) 
                                      (PrefixCon 
                                       [])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,29)-(173,56)
                                       }
                                      Just (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,32)-(173,56)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,35)-(173,56) Ref "delta-3"),DP (0,0))])
                                        (HsDo 
                                         (DoExpr) 
                                         [
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-55
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-55
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-46
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Qual {ModuleName: Lock} {OccName: acquire}))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:48-55
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: readLock}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-56
                                            }
                                           Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-6)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "putMVar" Nothing] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-56
                                              }
                                             Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])
                                             (OpApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-47
                                                }
                                               Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-41
                                                  }
                                                 Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-4))])
                                                 (HsVar 
                                                  (Unqual {OccName: putMVar}))) 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:43-47
                                                  }
                                                 Just (Ann (DP (0,-2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,3)) "state" Nothing] [((G AnnVal),DP (0,-2))])
                                                 (HsVar 
                                                  (Unqual {OccName: state}))))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:49
                                                }
                                               Just (Ann (DP (0,-3)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing] [((G AnnVal),DP (0,-3))])
                                               (HsVar 
                                                (Unqual {OccName: $}))) 
                                              (PlaceHolder) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:51-56
                                                }
                                               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:51-54
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: Read}))) 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:56
                                                  }
                                                 Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "$!" Nothing] [((G AnnVal),DP (0,0))])
                                                 (HsOverLit {HsOverLit:1})))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder)))] 
                                         (PlaceHolder)))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-61
                                   }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,3)) "succ" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-27
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-25
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Read})) 
                                      (PrefixCon 
                                       [
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:27
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,1)) "Write" Nothing] [((G AnnVal),DP (0,0))])
                                         (VarPat 
                                          (Unqual {OccName: n})))])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:29-61
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-61
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                                        (OpApp 
                                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-51
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                          (OpApp 
                                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-44
                                             }
                                            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                                            (HsApp 
                                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-38
                                               }
                                              Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                              (HsVar 
                                               (Unqual {OccName: putMVar}))) 
                                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:40-44
                                               }
                                              Just (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [DComment (DP (0,-7),DP (0,-5)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "putMVar" Nothing] [((G AnnVal),DP (0,-2))])
                                              (HsVar 
                                               (Unqual {OccName: state}))))) 
                                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:46
                                             }
                                            Just (Ann (DP (0,-2)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,3)) "state" Nothing] [((G AnnVal),DP (0,-2))])
                                            (HsVar 
                                             (Unqual {OccName: .}))) 
                                           (PlaceHolder) 
                                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:48-51
                                             }
                                            Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: Read}))))) 
                                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:53-54
                                           }
                                          Just (Ann (DP (0,2)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "st" Nothing] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: $!}))) 
                                         (PlaceHolder) 
                                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:56-61
                                           }
                                          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                                          (HsApp 
                                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:56-59
                                             }
                                            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: succ}))) 
                                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:61
                                             }
                                            Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                            (HsVar 
                                             (Unqual {OccName: n})))))))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,22)-(177,41)
                                   }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:22-26
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:22-26
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Write})) 
                                      (PrefixCon 
                                       [])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,29)-(177,41)
                                       }
                                      Just (Ann (DP (0,2)) (ColDelta 7) DP (0,2) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,32)-(177,41)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,35)-(177,41) Ref "delta-4"),DP (0,0))])
                                        (HsDo 
                                         (DoExpr) 
                                         [
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-50
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-50
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-47
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-41
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: putMVar}))) 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:43-47
                                                  }
                                                 Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "Lock.wait" Nothing] [((G AnnVal),DP (0,-1))])
                                                 (HsVar 
                                                  (Unqual {OccName: state}))))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:49-50
                                                }
                                               Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "writeLock" Nothing] [((G AnnVal),DP (0,-5))])
                                               (HsVar 
                                                (Unqual {OccName: st}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-53
                                            }
                                           Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-53
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-43
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Qual {ModuleName: Lock} {OccName: wait}))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:45-53
                                                }
                                               Just (Ann (DP (0,3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-9),DP (0,-2)) "acqRead" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: writeLock}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:177:35-41
                                            }
                                           Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:177:35-41
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: acqRead}))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder)))] 
                                         (PlaceHolder)))))] 
                                    (EmptyLocalBinds))))] 
                                [] 
                                (PlaceHolder) 
                                (FromSource)))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nTry to acquire the read lock; non blocking.\n\nLike 'acquireRead', but doesn't block. Returns 'True' if the resulting state is\n\\\"read\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nTry to acquire the read lock; non blocking.\n\nLike 'acquireRead', but doesn't block. Returns 'True' if the resulting state is\n\\\"read\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,14)) "tryAcquireRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1-14
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: tryAcquireRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-35
        }
       Just (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-35
          }
         Just (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-24
            }
           Just (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:29-35
            }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:29-30
              }
             Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:32-35
              }
             Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Bool}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,4)) "readLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:1-14
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: tryAcquireRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:1-14
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: tryAcquireRead})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:16-41
             }
            Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-12),DP (0,-12)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:17-40
               }
              Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,0)) "state" Nothing),DP (0,-5)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:17-22
                 }
                Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: RWLock})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:25-29
                    }
                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:25-29
                      }
                     Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: state})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:32-39
                    }
                   Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:32-39
                      }
                     Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: readLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,43)-(195,29)
              }
             Just (Ann (DP (0,-1)) (ColDelta 43) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,45)-(195,29)
                }
               Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:45-49
                  }
                 Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask_}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:51
                  }
                 Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,53)-(195,29)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(187,3)-(195,29) Ref "delta-5"),DP (0,0))])
                 (HsDo 
                  (DoExpr) 
                  [
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:3-22
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                    (BindStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:3-4
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: st}))) 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:9-22
                       }
                      Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:9-16
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: takeMVar}))) 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:18-22
                         }
                        Just (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: state}))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})))),
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(188,3)-(195,29)
                     }
                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                    (BodyStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(188,3)-(195,29)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,5)-(195,29) Ref "delta-6"),DP (0,0))])
                      (HsCase 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:188:8-9
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: st}))) 
                       (MG 
                        [
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,5)-(191,28)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:5-8
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:5-8
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Free})) 
                              (PrefixCon 
                               [])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,12)-(191,28)
                               }
                              Just (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,15)-(191,28)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,18)-(191,28) Ref "delta-7"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-38
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-38
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-29
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Qual {ModuleName: Lock} {OccName: acquire}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:31-38
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: readLock}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-39
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-6)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-39
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-30
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-24
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:26-30
                                          }
                                         Just (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:32
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:34-39
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:34-37
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: Read}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:39
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsOverLit {HsOverLit:1})))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18-28
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18-28
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18-23
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:25-28
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "putMVar" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: True}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds)))),
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,5)-(193,28)
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,2)) "state" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,3)) "$!" Nothing,DComment (DP (0,1),DP (0,5)) "succ" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:5-10
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:5-8
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Read})) 
                              (PrefixCon 
                               [
                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:10
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: n})))])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,12)-(193,28)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,15)-(193,28)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,18)-(193,28) Ref "delta-8"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-47
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-47
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-37
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-30
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-24
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: putMVar}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:26-30
                                            }
                                           Just (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnVal),DP (0,-3))])
                                           (HsVar 
                                            (Unqual {OccName: state}))))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:32
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: .}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:34-37
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: Read}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:39-40
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: $!}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:42-47
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:42-45
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: succ}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:47
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: n}))))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18-28
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Write" Nothing,DComment (DP (0,2),DP (0,4)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18-28
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18-23
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:25-28
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "putMVar" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: True}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds)))),
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,5)-(195,29)
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,2)) "state" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:5-9
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:5-9
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Write})) 
                              (PrefixCon 
                               [])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,12)-(195,29)
                               }
                              Just (Ann (DP (0,2)) (ColDelta 7) DP (0,2) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,15)-(195,29)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,18)-(195,29) Ref "delta-9"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-33
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-33
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-30
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-24
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:26-30
                                          }
                                         Just (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:32-33
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: st}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18-29
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18-29
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18-23
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:25-29
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: False}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (PlaceHolder)))] 
                  (PlaceHolder)))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1-30
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (11,1) [DComment (DP (1,1),DP (9,3)) "{-|\nRelease the read lock.\n\nIf the calling thread was the last one to relinquish read access the state will\nrevert to \\\"free\\\".\n\nIt is an error to release read access to an 'RWLock' which is not in the\n\\\"read\\\" state.\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nRelease the read lock.\n\nIf the calling thread was the last one to relinquish read access the state will\nrevert to \\\"free\\\".\n\nIt is an error to release read access to an 'RWLock' which is not in the\n\\\"read\\\" state.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "releaseRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: releaseRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-30
        }
       Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-30
          }
         Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-21
            }
           Just (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:26-30
            }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:26-27
              }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:29-30
              }
             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "readLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: releaseRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: releaseRead})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:13-38
             }
            Just (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:14-37
               }
              Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,3)) "state" Nothing),DP (0,-2)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:14-19
                 }
                Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: RWLock})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:22-26
                    }
                   Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:22-26
                      }
                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: state})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:29-36
                    }
                   Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:29-36
                      }
                     Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: readLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,40)-(214,66)
              }
             Just (Ann (DP (0,-1)) (ColDelta 40) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,42)-(214,66)
                }
               Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:42-46
                  }
                 Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask_}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:48
                  }
                 Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,50)-(214,66)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(208,3)-(214,66) Ref "delta-10"),DP (0,0))])
                 (HsDo 
                  (DoExpr) 
                  [
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:3-22
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                    (BindStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:3-4
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: st}))) 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:9-22
                       }
                      Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:9-16
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: takeMVar}))) 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:18-22
                         }
                        Just (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: state}))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})))),
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(209,3)-(214,66)
                     }
                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                    (BodyStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(209,3)-(214,66)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "1" Nothing),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,5)-(214,66) Ref "delta-11"),DP (0,0))])
                      (HsCase 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:209:8-9
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: st}))) 
                       (MG 
                        [
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,5)-(211,35)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:5-10
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:5-8
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Read})) 
                              (PrefixCon 
                               [
                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:10
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                                 (NPat 
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:10
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))]){HsOverLit:1}) 
                                  (Nothing) 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"}))))])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,12)-(211,35)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,15)-(211,35)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,18)-(211,35) Ref "delta-12"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-38
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-38
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-29
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Qual {ModuleName: Lock} {OccName: release}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:31-38
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: readLock}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-35
                                    }
                                   Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-3)) "Free" Nothing,DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "putMVar" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-35
                                      }
                                     Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-30
                                        }
                                       Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-24
                                          }
                                         Just (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:26-30
                                          }
                                         Just (Ann (DP (0,-2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,3)) "state" Nothing] [((G AnnVal),DP (0,-2))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:32-35
                                        }
                                       Just (Ann (DP (0,-3)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing] [((G AnnVal),DP (0,-3))])
                                       (HsVar 
                                        (Unqual {OccName: Free}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds)))),
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-44
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,2)) "$!" Nothing,DComment (DP (0,1),DP (0,5)) "pred" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-10
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-8
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Read})) 
                              (PrefixCon 
                               [
                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:10
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: n})))])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:12-44
                               }
                              Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-44
                                 }
                                Just (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "putMVar" Nothing] [])
                                (OpApp 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-34
                                   }
                                  Just (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [] [])
                                  (OpApp 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-27
                                     }
                                    Just (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-21
                                       }
                                      Just (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-5))])
                                      (HsVar 
                                       (Unqual {OccName: putMVar}))) 
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:23-27
                                       }
                                      Just (Ann (DP (0,-3)) (ColDelta 18) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "state" Nothing] [((G AnnVal),DP (0,-3))])
                                      (HsVar 
                                       (Unqual {OccName: state}))))) 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:29
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "st" Nothing] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: .}))) 
                                   (PlaceHolder) 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:31-34
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: Read}))))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:36-37
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: $!}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:39-44
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:39-42
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: pred}))) 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:44
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: n})))))))))] 
                            (EmptyLocalBinds)))),
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,5)-(214,66)
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:5
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (WildPat 
                              (PlaceHolder)))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,7)-(214,66)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,10)-(214,66)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,13)-(214,66) Ref "delta-13"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-28
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-28
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-25
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-19
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:21-25
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-2)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:27-28
                                        }
                                       Just (Ann (DP (0,-4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-5),DP (0,5)) "moduleName" Nothing] [((G AnnVal),DP (0,-4))])
                                       (HsVar 
                                        (Unqual {OccName: st}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-66
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,5)) "++" Nothing,DComment (DP (0,1),DP (0,33)) "\".releaseRead: already released\"" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-66
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-30
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-17
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: error}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:19
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: $}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:21-30
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: moduleName}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:32-33
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: ++}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:35-66
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsLit 
                                        (HsString "\".releaseRead: already released\"" {FastString: ".releaseRead: already released"}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (PlaceHolder)))] 
                  (PlaceHolder)))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1-34
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (1,1),DP (5,3)) "{-|\nA convenience function wich first acquires read access and then performs the\ncomputation. When the computation terminates, whether normally or by raising an\nexception, the read lock is released.\n-}" Nothing,DComment (DP (-3,1),DP (1,3)) "{-|\nA convenience function wich first acquires read access and then performs the\ncomputation. When the computation terminates, whether normally or by raising an\nexception, the read lock is released.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "withRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1-8
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: withRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-34
        }
       Just (Ann (DP (0,-5)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA2" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-34
          }
         Just (Ann (DP (0,-5)) (ColDelta 13) DP (0,1) [] [((AnnComment DComment (DP (0,0),DP (0,8)) "bracket_" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-18
            }
           Just (Ann (DP (0,-5)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,-5))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-34
            }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-26
              }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-24
                }
               Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:26
                }
               Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:31-34
              }
             Just (Ann (DP (0,-8)) (ColDelta 31) DP (0,1) [DComment (DP (0,-2),DP (0,9)) "acquireRead" Nothing] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:31-32
                }
               Just (Ann (DP (0,-8)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,-8))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:34
                }
               Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,5),DP (0,16)) "releaseRead" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-8
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: withRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-8
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: withRead})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:10-50
              }
             Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-50
                }
               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-38
                  }
                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-26
                    }
                   Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-17
                      }
                     Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: liftA2}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:19-26
                      }
                     Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: bracket_}))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:28-38
                    }
                   Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: acquireRead}))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:40-50
                  }
                 Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: releaseRead})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1-45
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nA non-blocking 'withRead'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nA non-blocking 'withRead'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "tryWithRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: tryWithRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-45
        }
       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-45
          }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,5)) "mask" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-21
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-45
            }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-29
              }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-27
                }
               Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:29
                }
               Just (Ann (DP (0,-5)) (ColDelta 29) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "\\" Nothing,DComment (DP (0,0),DP (0,7)) "restore" Nothing] [((G AnnVal),DP (0,-5))])
               (HsTyVar 
                (Unqual {OccName: a}))))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:34-45
              }
             Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:34-35
                }
               Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:37-45
                }
               Just (Ann (DP (0,0)) (ColDelta 37) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:38-44
                  }
                 Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:38-42
                    }
                   Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Maybe}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:44
                    }
                   Just (Ann (DP (0,4)) (ColDelta 44) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: a}))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: tryWithRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,13)) "tryAcquireRead" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: tryWithRead})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:13
             }
            Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,8)) "acquired" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,-1))])
            (VarPat 
             (Unqual {OccName: l}))),
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:15
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: a})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,17)-(237,23)
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,19)-(237,23)
                }
               Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:19-22
                  }
                 Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:24
                  }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23) Ref "delta-14"),DP (0,0))])
                 (HsLam 
                  (MG 
                   [
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23)
                      }
                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "l" Nothing),DP (0,-4)),((G AnnRarrow),DP (0,1))])
                     (Match 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:27-33
                         }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: restore})))] 
                      (Nothing) 
                      (GRHSs 
                       [
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,38)-(237,23)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                         (GRHS 
                          [] 
                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,38)-(237,23)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(232,3)-(237,23) Ref "delta-15"),DP (0,0))])
                           (HsDo 
                            (DoExpr) 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:3-30
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-6)) "if" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,9)) "acquired" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:3-10
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: acquired}))) 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:15-30
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:15-28
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: tryAcquireRead}))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:30
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: l}))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23)
                               }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23)
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-2)) "do" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "restore" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "a" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "onException" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,12)) "releaseRead" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnThen),DP (1,2)),((G AnnElse),DP (1,2))])
                                (HsIf 
                                 (Just 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"}))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:233:6-13
                                   }
                                  Just (Ann (DP (0,-3)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,4)) "then" Nothing] [((G AnnVal),DP (0,-3))])
                                  (HsVar 
                                   (Unqual {OccName: acquired}))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(234,10)-(236,27)
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(234,13)-(236,27) Ref "delta-16"),DP (0,0))])
                                  (HsDo 
                                   (DoExpr) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:13-54
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,10)) "releaseRead" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                                     (BindStmt 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:13
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: r}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-54
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-26
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-24
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: restore}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:26
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,1)) "l" Nothing] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: a}))))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:28-40
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: onException}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:42-54
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:42-52
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: releaseRead}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:54
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: l}))))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})))),
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-25
                                      }
                                     Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                     (BodyStmt 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-25
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-23
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: releaseRead}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:25
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-11),DP (0,-5)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing] [((G AnnVal),DP (0,-1))])
                                         (HsVar 
                                          (Unqual {OccName: l}))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (PlaceHolder))),
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-27
                                      }
                                     Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (1,-8),DP (1,-8)) "" Nothing,DComment (DP (0,0),DP (0,4)) "else" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])
                                     (BodyStmt 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-27
                                        }
                                       Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-18
                                          }
                                         Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: return}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:20
                                          }
                                         Just (Ann (DP (0,-4)) (ColDelta 7) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: $}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:22-27
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:22-25
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: Just}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:27
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: r}))))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (PlaceHolder)))] 
                                   (PlaceHolder))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:10-23
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:10-15
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: return}))) 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:17-23
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: Nothing}))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder)))] 
                            (PlaceHolder)))))] 
                       (EmptyLocalBinds))))] 
                   [] 
                   (PlaceHolder) 
                   (FromSource))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (1,1),DP (12,3)) "{-|\n* When the state is \\\"write\\\", @waitRead@ /blocks/ until a call to\n'releaseWrite' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" or \\\"read\\\" @waitRead@ returns immediately.\n\n@waitRead@ does not alter the state of the lock.\n\nNote that @waitRead@ is just a convenience function defined as:\n\n@waitRead l = 'mask_' '$' 'acquireRead' l '>>' 'releaseRead' l@\n-}" Nothing,DComment (DP (-10,1),DP (1,3)) "{-|\n* When the state is \\\"write\\\", @waitRead@ /blocks/ until a call to\n'releaseWrite' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" or \\\"read\\\" @waitRead@ returns immediately.\n\n@waitRead@ does not alter the state of the lock.\n\nNote that @waitRead@ is just a convenience function defined as:\n\n@waitRead l = 'mask_' '$' 'acquireRead' l '>>' 'releaseRead' l@\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "waitRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1-8
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: waitRead}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-27
        }
       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-27
          }
         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,0)) "mask_" Nothing),DP (0,-5)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-18
            }
           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:23-27
            }
           Just (Ann (DP (0,-10)) (ColDelta 23) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "acquireRead" Nothing] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:23-24
              }
             Just (Ann (DP (0,-10)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,-10))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:26-27
              }
             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "l" Nothing,DComment (DP (0,1),DP (0,3)) ">>" Nothing,DComment (DP (0,1),DP (0,12)) "releaseRead" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-8
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: waitRead})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-8
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: waitRead})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:10
             }
            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: l})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:12-51
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-51
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-34
                  }
                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                 (OpApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-18
                    }
                   Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: mask_}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:20
                    }
                   Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: $}))) 
                  (PlaceHolder) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:22-34
                    }
                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:22-32
                      }
                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: acquireRead}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:34
                      }
                     Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: l}))))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:36-37
                  }
                 Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: >>}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:39-51
                  }
                 Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:39-49
                    }
                   Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: releaseRead}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:51
                    }
                   Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: l})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1-31
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- *Write access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- *Write access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (7,3)) "{-|\nAcquire the write lock.\n\nBlocks if another thread has acquired either read or write access. If\n@acquireWrite@ terminates without throwing an exception the state of the\n'RWLock' will be \\\"write\\\".\n-}" Nothing,DComment (DP (-5,1),DP (1,3)) "{-|\nAcquire the write lock.\n\nBlocks if another thread has acquired either read or write access. If\n@acquireWrite@ terminates without throwing an exception the state of the\n'RWLock' will be \\\"write\\\".\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,12)) "acquireWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: acquireWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-31
        }
       Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-31
          }
         Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-22
            }
           Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:27-31
            }
           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:27-28
              }
             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:30-31
              }
             Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "readLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "," Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,9)) "acqWrite" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: acquireWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: acquireWrite})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:14-50
             }
            Just (Ann (DP (0,4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-8),DP (0,-3)) "where" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:15-49
               }
              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:15-20
                 }
                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: RWLock})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:23-27
                    }
                   Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:23-27
                      }
                     Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: state})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:30-37
                    }
                   Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:30-37
                      }
                     Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: readLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:40-48
                    }
                   Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:40-48
                      }
                     Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: writeLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,52)-(278,43)
              }
             Just (Ann (DP (0,-1)) (ColDelta 52) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:54-67
                }
               Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:54-58
                  }
                 Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask_}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:60-67
                  }
                 Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: acqWrite})))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:7-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: acqWrite})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:7-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: acqWrite})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,16)-(278,43)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,18)-(278,43)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,21)-(278,43) Ref "delta-17"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:21-40
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:21-22
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: st}))) 
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:27-40
                               }
                              Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])
                              (HsApp 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:27-34
                                 }
                                Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                                (HsVar 
                                 (Unqual {OccName: takeMVar}))) 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:36-40
                                 }
                                Just (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: state}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(270,21)-(278,43)
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(270,21)-(278,43)
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,23)-(278,43) Ref "delta-18"),DP (0,0))])
                              (HsCase 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:270:26-27
                                 }
                                Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])
                                (HsVar 
                                 (Unqual {OccName: st}))) 
                               (MG 
                                [
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,23)-(272,54)
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:23-26
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:23-26
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Free})) 
                                      (PrefixCon 
                                       [])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,30)-(272,54)
                                       }
                                      Just (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,33)-(272,54)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,36)-(272,54) Ref "delta-19"),DP (0,0))])
                                        (HsDo 
                                         (DoExpr) 
                                         [
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-57
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-57
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-47
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Qual {ModuleName: Lock} {OccName: acquire}))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:49-57
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: writeLock}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-54
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-3)) "Write" Nothing,DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-54
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-48
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-42
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: putMVar}))) 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:44-48
                                                  }
                                                 Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: state}))))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:50-54
                                                }
                                               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: Write}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder)))] 
                                         (PlaceHolder)))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,23)-(275,43)
                                   }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-3)) "st" Nothing] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:23-28
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:23-26
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Read})) 
                                      (PrefixCon 
                                       [
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:28
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (WildPat 
                                          (PlaceHolder)))])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,30)-(275,43)
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,33)-(275,43)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,36)-(275,43) Ref "delta-20"),DP (0,0))])
                                        (HsDo 
                                         (DoExpr) 
                                         [
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-51
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-51
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-48
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-42
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: putMVar}))) 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:44-48
                                                  }
                                                 Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "Lock.wait" Nothing] [((G AnnVal),DP (0,-1))])
                                                 (HsVar 
                                                  (Unqual {OccName: state}))))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:50-51
                                                }
                                               Just (Ann (DP (0,-4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,5)) "readLock" Nothing] [((G AnnVal),DP (0,-4))])
                                               (HsVar 
                                                (Unqual {OccName: st}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-53
                                            }
                                           Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-53
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-44
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Qual {ModuleName: Lock} {OccName: wait}))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:46-53
                                                }
                                               Just (Ann (DP (0,2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-9),DP (0,-1)) "acqWrite" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: readLock}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:275:36-43
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Write" Nothing,DComment (DP (0,2),DP (0,4)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:275:36-43
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: acqWrite}))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder)))] 
                                         (PlaceHolder)))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,23)-(278,43)
                                   }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-1)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:23-27
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (ConPatIn 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:23-27
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (Unqual {OccName: Write})) 
                                      (PrefixCon 
                                       [])))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,30)-(278,43)
                                       }
                                      Just (Ann (DP (0,2)) (ColDelta 7) DP (0,2) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,33)-(278,43)
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,36)-(278,43) Ref "delta-21"),DP (0,0))])
                                        (HsDo 
                                         (DoExpr) 
                                         [
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-51
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-51
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-48
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                               (HsApp 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-42
                                                  }
                                                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                                 (HsVar 
                                                  (Unqual {OccName: putMVar}))) 
                                                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:44-48
                                                  }
                                                 Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "Lock.wait" Nothing] [((G AnnVal),DP (0,-1))])
                                                 (HsVar 
                                                  (Unqual {OccName: state}))))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:50-51
                                                }
                                               Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "writeLock" Nothing] [((G AnnVal),DP (0,-5))])
                                               (HsVar 
                                                (Unqual {OccName: st}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-54
                                            }
                                           Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-54
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                             (HsApp 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-44
                                                }
                                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Qual {ModuleName: Lock} {OccName: wait}))) 
                                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:46-54
                                                }
                                               Just (Ann (DP (0,2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-9),DP (0,-1)) "acqWrite" Nothing] [((G AnnVal),DP (0,0))])
                                               (HsVar 
                                                (Unqual {OccName: writeLock}))))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder))),
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:278:36-43
                                            }
                                           Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                           (BodyStmt 
                                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:278:36-43
                                              }
                                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                             (HsVar 
                                              (Unqual {OccName: acqWrite}))) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (HsLit 
                                             (HsString "" {FastString: "noSyntaxExpr"})) 
                                            (PlaceHolder)))] 
                                         (PlaceHolder)))))] 
                                    (EmptyLocalBinds))))] 
                                [] 
                                (PlaceHolder) 
                                (FromSource)))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1-36
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nTry to acquire the write lock; non blocking.\n\nLike 'acquireWrite', but doesn't block. Returns 'True' if the resulting state is\n\\\"write\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nTry to acquire the write lock; non blocking.\n\nLike 'acquireWrite', but doesn't block. Returns 'True' if the resulting state is\n\\\"write\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,15)) "tryAcquireWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1-15
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: tryAcquireWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-36
        }
       Just (Ann (DP (0,-4)) (ColDelta 20) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-36
          }
         Just (Ann (DP (0,-4)) (ColDelta 20) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-25
            }
           Just (Ann (DP (0,-4)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:30-36
            }
           Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:30-31
              }
             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:33-36
              }
             Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Bool}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,5)) "writeLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:1-15
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: tryAcquireWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:1-15
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: tryAcquireWrite})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:17-43
             }
            Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-13),DP (0,-13)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:18-42
               }
              Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((AnnComment DComment (DP (0,-6),DP (0,-1)) "state" Nothing),DP (0,-6)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:18-23
                 }
                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: RWLock})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:26-30
                    }
                   Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:26-30
                      }
                     Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: state})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:33-41
                    }
                   Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:33-41
                      }
                     Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: writeLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,45)-(294,29)
              }
             Just (Ann (DP (0,-1)) (ColDelta 45) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,47)-(294,29)
                }
               Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:47-51
                  }
                 Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask_}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:53
                  }
                 Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,55)-(294,29)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(288,3)-(294,29) Ref "delta-22"),DP (0,0))])
                 (HsDo 
                  (DoExpr) 
                  [
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:3-22
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                    (BindStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:3-4
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: st}))) 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:9-22
                       }
                      Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:9-16
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: takeMVar}))) 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:18-22
                         }
                        Just (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: state}))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})))),
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(289,3)-(294,29)
                     }
                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                    (BodyStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(289,3)-(294,29)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,5)-(294,29) Ref "delta-23"),DP (0,0))])
                      (HsCase 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:289:8-9
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: st}))) 
                       (MG 
                        [
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,5)-(292,28)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:5-8
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:5-8
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Free})) 
                              (PrefixCon 
                               [])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,12)-(292,28)
                               }
                              Just (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,15)-(292,28)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,18)-(292,28) Ref "delta-24"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-39
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-39
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-29
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Qual {ModuleName: Lock} {OccName: acquire}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:31-39
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: writeLock}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-36
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-3)) "Write" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-36
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-30
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-24
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:26-30
                                          }
                                         Just (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:32-36
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: Write}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18-28
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,6),DP (0,8)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18-28
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18-23
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:25-28
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "putMVar" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: True}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds)))),
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,5)-(294,29)
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,2)) "state" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:5
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (WildPat 
                              (PlaceHolder)))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,12)-(294,29)
                               }
                              Just (Ann (DP (0,6)) (ColDelta 7) DP (0,6) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,15)-(294,29)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,18)-(294,29) Ref "delta-25"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-33
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-33
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-30
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-24
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:26-30
                                          }
                                         Just (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:32-33
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: st}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18-29
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18-29
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18-23
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: return}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:25-29
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: False}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (PlaceHolder)))] 
                  (PlaceHolder)))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1-31
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (11,1) [DComment (DP (1,1),DP (9,3)) "{-|\nRelease the write lock.\n\nIf @releaseWrite@ terminates without throwing an exception the state will be\n\\\"free\\\".\n\nIt is an error to release write access to an 'RWLock' which is not in the\n\\\"write\\\" state.\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nRelease the write lock.\n\nIf @releaseWrite@ terminates without throwing an exception the state will be\n\\\"free\\\".\n\nIt is an error to release write access to an 'RWLock' which is not in the\n\\\"write\\\" state.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "releaseWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: releaseWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-31
        }
       Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-31
          }
         Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-22
            }
           Just (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:27-31
            }
           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:27-28
              }
             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:30-31
              }
             Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,8)) "writeLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,7),DP (0,8)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: releaseWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: releaseWrite})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:14-40
             }
            Just (Ann (DP (0,-3)) (ColDelta 14) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:15-39
               }
              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,2)) "state" Nothing),DP (0,-3)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])
              (ConPatIn 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:15-20
                 }
                Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: RWLock})) 
               (RecCon 
                (HsRecFields 
                 [
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:23-27
                    }
                   Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:23-27
                      }
                     Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                     (Unqual {OccName: state})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True))),
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:30-38
                    }
                   Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
                   (HsRecField 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:30-38
                      }
                     Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: writeLock})) 
                    ({ <no location info> }
                     Just (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])
                     (VarPat 
                      (Unqual {OccName: pun-right-hand-side}))) 
                    (True)))] 
                 (Nothing)))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,42)-(312,67)
              }
             Just (Ann (DP (0,-1)) (ColDelta 42) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,44)-(312,67)
                }
               Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:44-48
                  }
                 Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask_}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:50
                  }
                 Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,52)-(312,67)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(307,3)-(312,67) Ref "delta-26"),DP (0,0))])
                 (HsDo 
                  (DoExpr) 
                  [
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:3-22
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])
                    (BindStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:3-4
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: st}))) 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:9-22
                       }
                      Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])
                      (HsApp 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:9-16
                         }
                        Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])
                        (HsVar 
                         (Unqual {OccName: takeMVar}))) 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:18-22
                         }
                        Just (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: state}))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})))),
                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(308,3)-(312,67)
                     }
                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                    (BodyStmt 
                     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(308,3)-(312,67)
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,5)-(312,67) Ref "delta-27"),DP (0,0))])
                      (HsCase 
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:308:8-9
                         }
                        Just (Ann (DP (0,-2)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Write" Nothing] [((G AnnVal),DP (0,-2))])
                        (HsVar 
                         (Unqual {OccName: st}))) 
                       (MG 
                        [
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,5)-(310,34)
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:5-9
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (ConPatIn 
                              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:5-9
                                }
                               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (Unqual {OccName: Write})) 
                              (PrefixCon 
                               [])))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,11)-(310,34)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,14)-(310,34)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,17)-(310,34) Ref "delta-28"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-38
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-38
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-28
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Qual {ModuleName: Lock} {OccName: release}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:30-38
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: writeLock}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-34
                                    }
                                   Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-4)) "Free" Nothing,DComment (DP (1,-12),DP (1,-12)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "putMVar" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-34
                                      }
                                     Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-29
                                        }
                                       Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-23
                                          }
                                         Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:25-29
                                          }
                                         Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "state" Nothing] [((G AnnVal),DP (0,-1))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:31-34
                                        }
                                       Just (Ann (DP (0,2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "st" Nothing] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: Free}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds)))),
                         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,5)-(312,67)
                           }
                          Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                          (Match 
                           (Nothing) 
                           [
                            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:5
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (WildPat 
                              (PlaceHolder)))] 
                           (Nothing) 
                           (GRHSs 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,7)-(312,67)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                              (GRHS 
                               [] 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,10)-(312,67)
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,13)-(312,67) Ref "delta-29"),DP (0,0))])
                                (HsDo 
                                 (DoExpr) 
                                 [
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-28
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-28
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-25
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-19
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: putMVar}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:21-25
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-2)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: state}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:27-28
                                        }
                                       Just (Ann (DP (0,-4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-5),DP (0,5)) "moduleName" Nothing] [((G AnnVal),DP (0,-4))])
                                       (HsVar 
                                        (Unqual {OccName: st}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder))),
                                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-67
                                    }
                                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,5)) "++" Nothing,DComment (DP (0,1),DP (0,34)) "\".releaseWrite: already released\"" Nothing] [])
                                   (BodyStmt 
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-67
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                     (OpApp 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-30
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-17
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: error}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:19
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: $}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:21-30
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: moduleName}))))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:32-33
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: ++}))) 
                                      (PlaceHolder) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:35-67
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsLit 
                                        (HsString "\".releaseWrite: already released\"" {FastString: ".releaseWrite: already released"}))))) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (HsLit 
                                     (HsString "" {FastString: "noSyntaxExpr"})) 
                                    (PlaceHolder)))] 
                                 (PlaceHolder)))))] 
                            (EmptyLocalBinds))))] 
                        [] 
                        (PlaceHolder) 
                        (FromSource)))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (PlaceHolder)))] 
                  (PlaceHolder)))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (1,1),DP (5,3)) "{-|\nA convenience function wich first acquires write access and then performs\nthe computation. When the computation terminates, whether normally or by raising\nan exception, the write lock is released.\n-}" Nothing,DComment (DP (-3,1),DP (1,3)) "{-|\nA convenience function wich first acquires write access and then performs\nthe computation. When the computation terminates, whether normally or by raising\nan exception, the write lock is released.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "withWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: withWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-35
        }
       Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA2" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-35
          }
         Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((AnnComment DComment (DP (0,0),DP (0,8)) "bracket_" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-19
            }
           Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-5))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-35
            }
           Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-27
              }
             Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-25
                }
               Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:27
                }
               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:32-35
              }
             Just (Ann (DP (0,-9)) (ColDelta 32) DP (0,1) [DComment (DP (0,-2),DP (0,10)) "acquireWrite" Nothing] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:32-33
                }
               Just (Ann (DP (0,-9)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,-9))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:35
                }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,18)) "releaseWrite" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: withWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: withWrite})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:11-53
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-53
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-40
                  }
                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-27
                    }
                   Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-18
                      }
                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: liftA2}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:20-27
                      }
                     Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: bracket_}))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:29-40
                    }
                   Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: acquireWrite}))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:42-53
                  }
                 Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: releaseWrite})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nA non-blocking 'withWrite'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nA non-blocking 'withWrite'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,12)) "tryWithWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: tryWithWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-46
        }
       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-46
          }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,5)) "mask" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-22
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-46
            }
           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-30
              }
             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-28
                }
               Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:30
                }
               Just (Ann (DP (0,-5)) (ColDelta 30) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "\\" Nothing,DComment (DP (0,0),DP (0,7)) "restore" Nothing] [((G AnnVal),DP (0,-5))])
               (HsTyVar 
                (Unqual {OccName: a}))))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:35-46
              }
             Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:35-36
                }
               Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:38-46
                }
               Just (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsParTy 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:39-45
                  }
                 Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
                 (HsAppTy 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:39-43
                    }
                   Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: Maybe}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:45
                    }
                   Just (Ann (DP (0,4)) (ColDelta 45) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])
                   (HsTyVar 
                    (Unqual {OccName: a}))))))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: tryWithWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: tryWithWrite})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:14
             }
            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,8)) "acquired" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: l}))),
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:16
             }
            Just (Ann (DP (0,-14)) (ColDelta 16) DP (0,1) [DComment (DP (0,0),DP (0,15)) "tryAcquireWrite" Nothing] [((G AnnVal),DP (0,-14))])
            (VarPat 
             (Unqual {OccName: a})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,18)-(335,23)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,20)-(335,23)
                }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:20-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mask}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:25
                  }
                 Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23) Ref "delta-30"),DP (0,0))])
                 (HsLam 
                  (MG 
                   [
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23)
                      }
                     Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "l" Nothing),DP (0,-4)),((G AnnRarrow),DP (0,1))])
                     (Match 
                      (Nothing) 
                      [
                       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:28-34
                         }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: restore})))] 
                      (Nothing) 
                      (GRHSs 
                       [
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,39)-(335,23)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                         (GRHS 
                          [] 
                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,39)-(335,23)
                            }
                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(330,3)-(335,23) Ref "delta-31"),DP (0,0))])
                           (HsDo 
                            (DoExpr) 
                            [
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:3-31
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-6)) "if" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,9)) "acquired" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])
                              (BindStmt 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:3-10
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (VarPat 
                                 (Unqual {OccName: acquired}))) 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:15-31
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:15-29
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: tryAcquireWrite}))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:31
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: l}))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})))),
                             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23)
                               }
                              Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                              (BodyStmt 
                               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23)
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-2)) "do" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "restore" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "a" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "onException" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "releaseWrite" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnThen),DP (1,2)),((G AnnElse),DP (1,2))])
                                (HsIf 
                                 (Just 
                                  (HsLit 
                                   (HsString "" {FastString: "noSyntaxExpr"}))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:331:6-13
                                   }
                                  Just (Ann (DP (0,-3)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,4)) "then" Nothing] [((G AnnVal),DP (0,-3))])
                                  (HsVar 
                                   (Unqual {OccName: acquired}))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(332,10)-(334,27)
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(332,13)-(334,27) Ref "delta-32"),DP (0,0))])
                                  (HsDo 
                                   (DoExpr) 
                                   [
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:13-55
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,11)) "releaseWrite" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                                     (BindStmt 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:13
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (VarPat 
                                        (Unqual {OccName: r}))) 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-55
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-26
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-24
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: restore}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:26
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: a}))))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:28-40
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: onException}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:42-55
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:42-53
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: releaseWrite}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:55
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: l}))))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})))),
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-26
                                      }
                                     Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                     (BodyStmt 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-26
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                       (HsApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-24
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: releaseWrite}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:26
                                          }
                                         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-6)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing] [((G AnnVal),DP (0,0))])
                                         (HsVar 
                                          (Unqual {OccName: l}))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (PlaceHolder))),
                                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-27
                                      }
                                     Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (1,-8),DP (1,-8)) "" Nothing,DComment (DP (0,0),DP (0,4)) "else" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])
                                     (BodyStmt 
                                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-27
                                        }
                                       Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])
                                       (OpApp 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-18
                                          }
                                         Just (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])
                                         (HsVar 
                                          (Unqual {OccName: return}))) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:20
                                          }
                                         Just (Ann (DP (0,-4)) (ColDelta 7) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])
                                         (HsVar 
                                          (Unqual {OccName: $}))) 
                                        (PlaceHolder) 
                                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:22-27
                                          }
                                         Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                                         (HsApp 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:22-25
                                            }
                                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: Just}))) 
                                          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:27
                                            }
                                           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                           (HsVar 
                                            (Unqual {OccName: r}))))))) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (HsLit 
                                       (HsString "" {FastString: "noSyntaxExpr"})) 
                                      (PlaceHolder)))] 
                                   (PlaceHolder))) 
                                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:10-23
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:10-15
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: return}))) 
                                   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:17-23
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: Nothing}))))))) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (HsLit 
                                (HsString "" {FastString: "noSyntaxExpr"})) 
                               (PlaceHolder)))] 
                            (PlaceHolder)))))] 
                       (EmptyLocalBinds))))] 
                   [] 
                   (PlaceHolder) 
                   (FromSource))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1-28
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (1,1),DP (12,3)) "{-|\n* When the state is \\\"write\\\" or \\\"read\\\" @waitWrite@ /blocks/ until a call to\n'releaseWrite' or 'releaseRead' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" @waitWrite@ returns immediately.\n\n@waitWrite@ does not alter the state of the lock.\n\nNote that @waitWrite@ is just a convenience function defined as:\n\n@waitWrite l = 'mask_' '$' 'acquireWrite' l '>>' 'releaseWrite' l@\n-}" Nothing,DComment (DP (-10,1),DP (1,3)) "{-|\n* When the state is \\\"write\\\" or \\\"read\\\" @waitWrite@ /blocks/ until a call to\n'releaseWrite' or 'releaseRead' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" @waitWrite@ returns immediately.\n\n@waitWrite@ does not alter the state of the lock.\n\nNote that @waitWrite@ is just a convenience function defined as:\n\n@waitWrite l = 'mask_' '$' 'acquireWrite' l '>>' 'releaseWrite' l@\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "waitWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: waitWrite}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-28
        }
       Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-28
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,0)) "mask_" Nothing),DP (0,-5)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-19
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: RWLock}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:24-28
            }
           Just (Ann (DP (0,-11)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,13)) "acquireWrite" Nothing] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:24-25
              }
             Just (Ann (DP (0,-11)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,-11))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:27-28
              }
             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,7),DP (0,8)) "l" Nothing,DComment (DP (0,1),DP (0,3)) ">>" Nothing,DComment (DP (0,1),DP (0,13)) "releaseWrite" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: waitWrite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: waitWrite})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:11
             }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: l})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:13-54
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-54
                }
               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-36
                  }
                 Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                 (OpApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-19
                    }
                   Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: mask_}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:21
                    }
                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: $}))) 
                  (PlaceHolder) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:23-36
                    }
                   Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:23-34
                      }
                     Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: acquireWrite}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:36
                      }
                     Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: l}))))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:38-39
                  }
                 Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: >>}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:41-54
                  }
                 Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:41-52
                    }
                   Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: releaseWrite}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:54
                    }
                   Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: l})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1-20
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,10)) "moduleName" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "String" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1-10
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: moduleName}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:15-20
        }
       Just (Ann (DP (0,-33)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,35)) "\"Control.Concurrent.ReadWriteLock\"" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:15-20
          }
         Just (Ann (DP (0,-33)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-33))])
         (HsTyVar 
          (Unqual {OccName: String}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-10
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: moduleName})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-10
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: moduleName})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:12-47
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:14-47
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsLit 
                (HsString "\"Control.Concurrent.ReadWriteLock\"" {FastString: "Control.Concurrent.ReadWriteLock"})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (4,6)) "{-# LANGUAGE CPP\n           , DeriveDataTypeable\n           , NamedFieldPuns\n           , NoImplicitPrelude\n  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,30)) "#if __GLASGOW_HASKELL__ >= 704" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,22)) "{-# LANGUAGE Safe #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-5),DP (0,16)) "{-# LANGUAGE Safe #-}" Nothing),DP (0,-5)),((AnnComment DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,75)) "-------------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,44)) "-- Module     : Control.Concurrent.ReadWriteLock" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,49)) "-- Module     : Control.Concurrent.ReadWriteLock" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-48),DP (0,10)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-48)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,15)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,8)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,52)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-51),DP (0,3)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-51)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,52)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-- Multiple-reader, single-writer locks. Used to protect shared resources which" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,60)) "-- may be concurrently read, but only sequentially written." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-59),DP (0,20)) "-- Multiple-reader, single-writer locks. Used to protect shared resources which" Nothing),DP (0,-59)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,57)) "-- may be concurrently read, but only sequentially written." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,78)) "-- All functions are /exception safe/. Throwing asynchronous exceptions will not" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,81)) "-- All functions are /exception safe/. Throwing asynchronous exceptions will not" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,69)) "-- to kill a thread that is blocking on, for example, 'acquireRead'." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-68),DP (0,12)) "-- compromise the internal state of an 'RWLock'. This means it is perfectly safe" Nothing),DP (0,-68)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,66)) "-- to kill a thread that is blocking on, for example, 'acquireRead'." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,25)) "-- See also Java's version:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,28)) "-- See also Java's version:" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-27),DP (0,61)) "-- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>" Nothing),DP (0,-27)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,86)) "-- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,74)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,9)) "-- like:" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-8),DP (0,68)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-8)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,6)) "-- like:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,66)) "-- import           Control.Concurrent.ReadWriteLock        ( RWLock )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-67),DP (0,3)) "-- import           Control.Concurrent.ReadWriteLock        ( RWLock )" Nothing),DP (0,-67)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,63)) "-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-------------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,33)) "Control.Concurrent.ReadWriteLock" Nothing),DP (0,1)),((G AnnModule),DP (39,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,7)) "RWLock" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(41,3)-(67,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-12),DP (0,-7)) "where" Nothing),DP (0,-12)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:41:5-10 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:41:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,34)) "-- *Creating Read-Write Locks" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,26)) "-- *Creating Read-Write Locks" Nothing),DP (0,-3)),((G AnnComma),DP (3,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:44:5-7 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:44:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,12)) "newAcquiredRead" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:45:5-19 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:45:5-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-15),DP (0,1)) "newAcquiredWrite" Nothing),DP (0,-15)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:46:5-20 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:46:5-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,20)) "-- *Read access" Nothing),DP (1,5)),((AnnComment DComment (DP (1,5),DP (1,18)) "-- **Blocking" Nothing),DP (1,5)),((AnnComment DComment (DP (0,-13),DP (0,2)) "-- *Read access" Nothing),DP (0,-13)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,12)) "acquireRead" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-11),DP (0,2)) "-- **Blocking" Nothing),DP (0,-11)),((G AnnComma),DP (4,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:50:5-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:50:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:51:5-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:51:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-3)) "withRead" Nothing),DP (0,-11)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:52:5-12 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:52:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:53:5-12 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:53:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,9)) "-- **Non-blocking" Nothing),DP (0,-8)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,15)) "tryAcquireRead" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-14),DP (0,3)) "-- **Non-blocking" Nothing),DP (0,-14)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:55:5-18 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:55:5-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-14),DP (0,-3)) "tryWithRead" Nothing),DP (0,-14)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:56:5-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:56:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,21)) "-- *Write access" Nothing),DP (1,5)),((AnnComment DComment (DP (1,5),DP (1,18)) "-- **Blocking" Nothing),DP (1,5)),((AnnComment DComment (DP (0,-13),DP (0,3)) "-- *Write access" Nothing),DP (0,-13)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,13)) "acquireWrite" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-12),DP (0,1)) "-- **Blocking" Nothing),DP (0,-12)),((G AnnComma),DP (4,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:60:5-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:60:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:61:5-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:61:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-12),DP (0,-3)) "withWrite" Nothing),DP (0,-12)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:62:5-13 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:62:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:63:5-13 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:63:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-9),DP (0,8)) "-- **Non-blocking" Nothing),DP (0,-9)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,16)) "tryAcquireWrite" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-15),DP (0,2)) "-- **Non-blocking" Nothing),DP (0,-15)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:65:5-19 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:65:5-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-15),DP (0,-3)) "tryWithWrite" Nothing),DP (0,-15)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:66:5-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:66:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:1-49 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,14)) "-- from base:" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,7)) "-- from base:" Nothing,DComment (DP (0,-6),DP (0,13)) "Control.Applicative" Nothing,DComment (DP (0,5),DP (0,6)) "(" Nothing,DComment (DP (0,1),DP (0,7)) "liftA2" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:32-49 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,5) [DComment (DP (0,-19),DP (0,4)) "Control.Concurrent.MVar" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "," Nothing),DP (0,-1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:34-39 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:34-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-2)) "MVar" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:42-47 CN "IEVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 42) DP (0,1) [DComment (DP (0,-1),DP (0,6)) "newMVar" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:42-47 CN "Unqual" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:1-67 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,7)) "takeMVar" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,8)) "putMVar" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:32-67 CN "(:)" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 32) DP (0,1) [DComment (DP (0,-23),DP (0,-6)) "Control.Exception" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:34-37 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:34-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,4)) "bracket_" Nothing),DP (0,-4)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:40-46 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:40-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-4)) "," Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,12)) "onException" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:49-56 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:49-56 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) ")" Nothing),DP (0,-1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:59-65 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:59-65 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:1-56 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:32-56 CN "(:)" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 32) DP (0,7) [DComment (DP (0,-17),DP (0,-4)) "Control.Monad" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-10),DP (0,-9)) ")" Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:34-41 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:34-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-2)) "return" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:44-54 CN "IEVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 44) DP (0,1) [DComment (DP (0,0),DP (0,2)) ">>" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:44-54 CN "Unqual" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:1-47 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:32-47 CN "(:)" NotNeeded,
  (Ann (DP (0,15)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-4)) "Data.Bool" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,4)) "True" Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:34-39 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:34-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-2)) "Bool" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,5)) "False" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,0)) "," Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:1-52 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:32-52 CN "(:)" NotNeeded,
  (Ann (DP (0,17)) (ColDelta 32) DP (0,15) [DComment (DP (0,-9),DP (0,-2)) "Data.Eq" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:34-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:34-50 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,-2)) "Eq" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:39-43 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-5),DP (0,-3)) "==" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:46-49 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:32-43 CN "(:)" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,6)) "Data.Function" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:34-35 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:34-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "$" Nothing),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,0),DP (0,1)) "," Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "." Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:1-47 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,2)) "on" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:32-47 CN "(:)" NotNeeded,
  (Ann (DP (0,16)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-5)) "Data.Int" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "Int" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:44-45 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:44-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:1-38 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:32-38 CN "(:)" NotNeeded,
  (Ann (DP (0,14)) (ColDelta 32) DP (0,16) [DComment (DP (0,-8),DP (0,2)) "Data.Maybe" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,2)) "Maybe" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:34-36 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:34-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:1-55 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "Nothing" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:32-55 CN "(:)" NotNeeded,
  (Ann (DP (0,15)) (ColDelta 32) DP (0,14) [DComment (DP (0,-10),DP (0,-1)) "Data.List" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:34-38 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:34-53 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "(" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,0),DP (0,2)) "++" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:40-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:49-52 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:1-38 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:32-38 CN "(:)" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 32) DP (0,15) [DComment (DP (0,-9),DP (0,4)) "Data.Typeable" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "Typeable" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,4),DP (0,5)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:32-43 CN "(:)" NotNeeded,
  (Ann (DP (0,17)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-6)) "Prelude" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-2)) "String" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:34-41 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:34-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:1-66 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,1)) "$!" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "succ" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "pred" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "error" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:32-66 CN "(:)" NotNeeded,
  (Ann (DP (0,15)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,2)) "System.IO" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:34-39 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:34-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-4)) "IO" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:48-51 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:48-51 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:54-57 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:54-57 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:60-64 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:60-64 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 60) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:1-37 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:32-37 CN "(:)" NotNeeded,
  (Ann (DP (0,15)) (ColDelta 32) DP (0,15) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:34-35 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:34-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:1-49 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (1,29)) "#if __GLASGOW_HASKELL__ < 700" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,17),DP (0,18)) "(" Nothing,DComment (DP (0,1),DP (0,12)) "fromInteger" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,14)) "Control.Monad" Nothing,DComment (DP (0,11),DP (0,12)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) ">>=" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,5)) "fail" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,41)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,34)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (0,-23),DP (0,0)) "Control.Concurrent.Lock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "Lock" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "qualified" Nothing),DP (0,1)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:42-49 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,1)) "Lock" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:44-47 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "as" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:44-47 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48) CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((G AnnQualified),DP (0,1)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "," Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,12)) "newAcquired" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-18),DP (0,-17)) "," Nothing),DP (0,-18)),((AnnComment DComment (DP (0,1),DP (0,8)) "acquire" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "release" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,-1),DP (0,3)) "wait" Nothing),DP (0,-1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:5-48 CN "(:)" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-1),DP (0,0)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:7-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:7-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:12-22 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:12-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:25-31 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:25-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:34-40 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:34-40 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:43-46 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:43-46 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "Utils" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "mask" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:14-28 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:16-19 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:16-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:22-26 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:22-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,1)-(119,40) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (17,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Read Write Lock" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Read Write Lock" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (10,3)) "{-|\nMultiple-reader, single-writer lock. Is in one of three states:\n\n* \\\"Free\\\": Read or write access can be acquired without blocking.\n\n* \\\"Read\\\": One or more threads have acquired read access. Blocks write access.\n\n* \\\"Write\\\": A single thread has acquired write access. Blocks other threads\nfrom acquiring both read and write access.\n-}" Nothing,DComment (DP (-8,1),DP (1,3)) "{-|\nMultiple-reader, single-writer lock. Is in one of three states:\n\n* \\\"Free\\\": Read or write access can be acquired without blocking.\n\n* \\\"Read\\\": One or more threads have acquired read access. Blocks write access.\n\n* \\\"Write\\\": A single thread has acquired write access. Blocks other threads\nfrom acquiring both read and write access.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing,DComment (DP (0,5),DP (0,7)) "::" Nothing,DComment (DP (0,1),DP (0,5)) "MVar" Nothing,DComment (DP (0,1),DP (0,6)) "State" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:6-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:15-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,15)-(119,22) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,22)-(119,22) CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (1,22))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:24-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:24-46 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,3)) "readLock" Nothing),DP (0,-5)),((G AnnDcolon),DP (0,5)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:37-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:37-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:42-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:24-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:24-40 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-8),DP (0,1)) "writeLock" Nothing),DP (0,-8)),((G AnnDcolon),DP (0,2)),((G AnnComma),DP (1,22))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:37-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:24-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:24-40 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((AnnComment DComment (DP (0,-9),DP (0,-1)) "deriving" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,9)) "Typeable" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:37-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:24-40 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnDeriving),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:33-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(121,1)-(122,26) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,3)) "Eq" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-4)) "==" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,2)) "on" Nothing),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:10-11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:10-18 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:10-18 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "==" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:13-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-26 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-5),DP (0,-4)) "`" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-26 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:10-26 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-26 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:22-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1-36 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,37)) "-- | Internal state of the 'RWLock'." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,-4),DP (0,32)) "-- | Internal state of the 'RWLock'." Nothing,DComment (DP (0,-31),DP (0,-26)) "State" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "Free" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,4)) "Int" Nothing,DComment (DP (0,1),DP (0,2)) "|" Nothing,DComment (DP (0,1),DP (0,6)) "Write" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:6-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:14-17 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVbar),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:14-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:21-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:21-28 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVbar),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:26-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:32-36 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:32-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1-16 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,31)) "-- * Creating Read-Write Locks" Nothing,DComment (DP (0,-30),DP (0,49)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,31)) "-- * Creating Read-Write Locks" Nothing,DComment (DP (0,-30),DP (0,49)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,78)) "-- | Create a new 'RWLock' in the \\\"free\\\" state; either read or write access" Nothing,DComment (DP (1,1),DP (1,37)) "-- can be acquired without blocking." Nothing,DComment (DP (0,-36),DP (0,41)) "-- | Create a new 'RWLock' in the \\\"free\\\" state; either read or write access" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "new" Nothing,DComment (DP (0,-3),DP (0,33)) "-- can be acquired without blocking." Nothing,DComment (DP (0,-32),DP (0,-30)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:8-9 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:8-16 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:8-16 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:11-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,3)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "newMVar" Nothing,DComment (DP (0,1),DP (0,5)) "Free" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,5)-(137,28) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:7-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:7-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,7)-(136,28) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,7)-(137,28) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:21-34 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:22-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,7)) "Lock.new" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:22-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:30-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:136:21-28 CN "HsVar" NotNeeded,
  (Ann (DP (1,21)) (ColDelta 21) DP (1,21) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:137:21-28 CN "HsVar" NotNeeded,
  (Ann (DP (1,21)) (ColDelta 21) DP (1,21) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1-28 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,76)) "-- | Create a new 'RWLock' in the \\\"read\\\" state; only read can be acquired" Nothing,DComment (DP (1,1),DP (1,21)) "-- without blocking." Nothing,DComment (DP (0,-20),DP (0,55)) "-- | Create a new 'RWLock' in the \\\"read\\\" state; only read can be acquired" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,15)) "newAcquiredRead" Nothing,DComment (DP (0,-15),DP (0,5)) "-- without blocking." Nothing,DComment (DP (0,-4),DP (0,-2)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:20-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:20-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:20-28 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:23-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,3)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "newMVar" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,17)-(144,40) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:19-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:19-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:19-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,19)-(143,48) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,19)-(144,40) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:33-50 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:34-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,15)) "Lock.newAcquired" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:34-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:44-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:44-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:49 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:143:33-48 CN "HsVar" NotNeeded,
  (Ann (DP (1,33)) (ColDelta 33) DP (1,33) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:144:33-40 CN "HsVar" NotNeeded,
  (Ann (DP (1,33)) (ColDelta 33) DP (1,33) [DComment (DP (0,-16),DP (0,-8)) "Lock.new" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1-29 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,76)) "-- | Create a new 'RWLock' in the \\\"write\\\" state; either acquiring read or" Nothing,DComment (DP (1,1),DP (1,21)) "-- write will block." Nothing,DComment (DP (0,-20),DP (0,55)) "-- | Create a new 'RWLock' in the \\\"write\\\" state; either acquiring read or" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,16)) "newAcquiredWrite" Nothing,DComment (DP (0,-16),DP (0,4)) "-- write will block." Nothing,DComment (DP (0,-3),DP (0,-1)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:21-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:21-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:21-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA3" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:24-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,3)) "RWLock" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "newMVar" Nothing,DComment (DP (0,1),DP (0,6)) "Write" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,18)-(151,49) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:20-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:20-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:20-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,20)-(150,41) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,20)-(151,49) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:27-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:34-48 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:35-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,7)) "Lock.new" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:35-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:43-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:150:34-41 CN "HsVar" NotNeeded,
  (Ann (DP (1,34)) (ColDelta 34) DP (1,34) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:151:34-49 CN "HsVar" NotNeeded,
  (Ann (DP (1,34)) (ColDelta 34) DP (1,34) [DComment (DP (0,-8),DP (0,8)) "Lock.newAcquired" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1-30 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (16,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- * Read access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- * Read access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (9,3)) "{-|\nAcquire the read lock.\n\nBlocks if another thread has acquired write access. If @acquireRead@ terminates\nwithout throwing an exception the state of the 'RWLock' will be \\\"read\\\".\n\nImplementation note: Throws an exception when more than (maxBound :: Int)\nsimultaneous threads acquire the read lock. But that is unlikely.\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nAcquire the read lock.\n\nBlocks if another thread has acquired write access. If @acquireRead@ terminates\nwithout throwing an exception the state of the 'RWLock' will be \\\"read\\\".\n\nImplementation note: Throws an exception when more than (maxBound :: Int)\nsimultaneous threads acquire the read lock. But that is unlikely.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "acquireRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:26-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:26-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:29-30 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "readLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "," Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,8)) "acqRead" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:13-49 CN "ParPat" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,-2)) "where" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:14-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:14-48 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:22-26 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:22-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:29-36 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:29-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:39-47 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:39-47 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,51)-(177,41) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 51) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:53-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:53-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:59-65 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:7-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,7)) "acqRead" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,15)-(177,41) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,17)-(177,41) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,20)-(177,41) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:20-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:20-39 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,20)-(177,41) CN "(:)" Ref "delta-1",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:26-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:26-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:35-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(171,20)-(177,41) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(171,20)-(177,41) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,22)-(177,41) Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:171:25-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:22-25 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:22-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,22)-(173,56) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,22)-(177,41) CN "(:)" Ref "delta-2",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "Lock.acquire" Nothing,DComment (DP (0,1),DP (0,9)) "readLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,29)-(173,56) CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,32)-(173,56) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,35)-(173,56) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-55 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,35)-(173,56) CN "(:)" Ref "delta-3",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:48-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-56 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-6)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "putMVar" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:43-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,3)) "state" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:51-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:51-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:56 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [DComment (DP (0,-2),DP (0,0)) "$!" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-27 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-61 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-1),DP (0,3)) "succ" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:27 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,1)) "Write" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:29-61 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-51 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-61 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:40-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 18) DP (0,1) [DComment (DP (0,-7),DP (0,-5)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "putMVar" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,3)) "state" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:48-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:53-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 31) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "st" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:56-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:56-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:22-26 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:22-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,22)-(177,41) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,29)-(177,41) CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 7) DP (0,2) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,32)-(177,41) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,35)-(177,41) Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-50 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,35)-(177,41) CN "(:)" Ref "delta-4",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:43-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "Lock.wait" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:49-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "writeLock" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-53 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:45-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-9),DP (0,-2)) "acqRead" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:177:35-41 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:177:35-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1-35 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nTry to acquire the read lock; non blocking.\n\nLike 'acquireRead', but doesn't block. Returns 'True' if the resulting state is\n\\\"read\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nTry to acquire the read lock; non blocking.\n\nLike 'acquireRead', but doesn't block. Returns 'True' if the resulting state is\n\\\"read\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,14)) "tryAcquireRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-35 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:29-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:29-35 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:32-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,4)) "readLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:16-41 CN "ParPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,-12),DP (0,-12)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:17-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:17-40 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,0)) "state" Nothing),DP (0,-5)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:25-29 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:25-29 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:32-39 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:32-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,43)-(195,29) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 43) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:45-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,45)-(195,29) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,53)-(195,29) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(187,3)-(195,29) Ref "delta-5"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:3-4 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:3-22 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(187,3)-(195,29) CN "(:)" Ref "delta-5",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:9-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:9-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:18-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(188,3)-(195,29) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(188,3)-(195,29) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,5)-(195,29) Ref "delta-6"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:188:8-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:5-8 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,5)-(191,28) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,5)-(195,29) CN "(:)" Ref "delta-6",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "Lock.acquire" Nothing,DComment (DP (0,1),DP (0,9)) "readLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,12)-(191,28) CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,15)-(191,28) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,18)-(191,28) Ref "delta-7"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-38 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,18)-(191,28) CN "(:)" Ref "delta-7",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:31-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-39 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-6)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-39 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:34-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:39 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18-28 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:25-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "putMVar" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:5-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,5)-(193,28) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,2)) "state" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing,DComment (DP (0,1),DP (0,3)) "$!" Nothing,DComment (DP (0,1),DP (0,5)) "succ" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:10 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,12)-(193,28) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,15)-(193,28) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,18)-(193,28) Ref "delta-8"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-47 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,18)-(193,28) CN "(:)" Ref "delta-8",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:39-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:42-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:42-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18-28 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Write" Nothing,DComment (DP (0,2),DP (0,4)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:25-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "putMVar" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:5-9 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,5)-(195,29) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,2)) "state" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,12)-(195,29) CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 7) DP (0,2) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,15)-(195,29) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,18)-(195,29) Ref "delta-9"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-33 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,18)-(195,29) CN "(:)" Ref "delta-9",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18-29 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:25-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1-30 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (11,1) [DComment (DP (1,1),DP (9,3)) "{-|\nRelease the read lock.\n\nIf the calling thread was the last one to relinquish read access the state will\nrevert to \\\"free\\\".\n\nIt is an error to release read access to an 'RWLock' which is not in the\n\\\"read\\\" state.\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nRelease the read lock.\n\nIf the calling thread was the last one to relinquish read access the state will\nrevert to \\\"free\\\".\n\nIt is an error to release read access to an 'RWLock' which is not in the\n\\\"read\\\" state.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,11)) "releaseRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-30 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:26-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:26-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:29-30 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "readLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:13-38 CN "ParPat" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:14-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:14-37 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,3)) "state" Nothing),DP (0,-2)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:22-26 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:22-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:29-36 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:29-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,40)-(214,66) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 40) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:42-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,42)-(214,66) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,50)-(214,66) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(208,3)-(214,66) Ref "delta-10"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:3-4 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:3-22 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(208,3)-(214,66) CN "(:)" Ref "delta-10",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:9-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:9-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:18-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(209,3)-(214,66) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(209,3)-(214,66) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "1" Nothing),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,5)-(214,66) Ref "delta-11"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:209:8-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:5-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,5)-(211,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,5)-(214,66) CN "(:)" Ref "delta-11",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "Lock.release" Nothing,DComment (DP (0,1),DP (0,9)) "readLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:10 CN "NPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:10 CN "OverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,12)-(211,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,15)-(211,35) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,18)-(211,35) Ref "delta-12"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-38 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,18)-(211,35) CN "(:)" Ref "delta-12",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:31-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-35 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [DComment (DP (0,-7),DP (0,-3)) "Free" Nothing,DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "putMVar" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,3)) "state" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:32-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "." Nothing,DComment (DP (0,1),DP (0,5)) "Read" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-10 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-44 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,2)) "$!" Nothing,DComment (DP (0,1),DP (0,5)) "pred" Nothing,DComment (DP (0,1),DP (0,2)) "n" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:10 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:12-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "do" Nothing] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 10) DP (0,1) [DComment (DP (0,-1),DP (0,-1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "putMVar" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:23-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 18) DP (0,1) [DComment (DP (0,-1),DP (0,4)) "state" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "st" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:31-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:36-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:39-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:39-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:5 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,5)-(214,66) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,7)-(214,66) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,10)-(214,66) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,13)-(214,66) Ref "delta-13"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-28 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,13)-(214,66) CN "(:)" Ref "delta-13",
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-2)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:27-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-5),DP (0,5)) "moduleName" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-66 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,5)) "++" Nothing,DComment (DP (0,1),DP (0,33)) "\".releaseRead: already released\"" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:21-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:35-66 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1-34 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (1,1),DP (5,3)) "{-|\nA convenience function wich first acquires read access and then performs the\ncomputation. When the computation terminates, whether normally or by raising an\nexception, the read lock is released.\n-}" Nothing,DComment (DP (-3,1),DP (1,3)) "{-|\nA convenience function wich first acquires read access and then performs the\ncomputation. When the computation terminates, whether normally or by raising an\nexception, the read lock is released.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "withRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-34 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA2" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-34 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 13) DP (0,1) [] [((AnnComment DComment (DP (0,0),DP (0,8)) "bracket_" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-26 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-34 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:31-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:31-34 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 31) DP (0,1) [DComment (DP (0,-2),DP (0,9)) "acquireRead" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,5),DP (0,16)) "releaseRead" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:10-50 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:12-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:19-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:40-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1-45 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nA non-blocking 'withRead'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nA non-blocking 'withRead'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "tryWithRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-45 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-45 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,5)) "mask" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-45 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 29) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "\\" Nothing,DComment (DP (0,0),DP (0,7)) "restore" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:34-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:34-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:37-45 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:38-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:38-44 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:44 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 44) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,13)) "tryAcquireRead" Nothing),DP (0,-1)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,1) [DComment (DP (0,-9),DP (0,-9)) "" Nothing,DComment (DP (0,0),DP (0,8)) "acquired" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,17)-(237,23) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:19-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,19)-(237,23) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23) CN "(:)" Ref "delta-14",
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23) Ref "delta-14"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "l" Nothing),DP (0,-4)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:27-33 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,38)-(237,23) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,38)-(237,23) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(232,3)-(237,23) Ref "delta-15"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:3-10 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:3-30 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-6)) "if" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,9)) "acquired" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(232,3)-(237,23) CN "(:)" Ref "delta-15",
  (Ann (DP (1,0)) (ColDelta -23) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:15-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:15-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-2)) "do" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "restore" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "a" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "onException" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,12)) "releaseRead" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnThen),DP (1,2)),((G AnnElse),DP (1,2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:233:6-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,4)) "then" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(234,10)-(236,27) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(234,13)-(236,27) Ref "delta-16"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:13-54 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,10)) "releaseRead" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(234,13)-(236,27) CN "(:)" Ref "delta-16",
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,1)) "l" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:28-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:42-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:42-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-25 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,1) [DComment (DP (0,-11),DP (0,-5)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-27 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "r" Nothing,DComment (DP (1,-8),DP (1,-8)) "" Nothing,DComment (DP (0,0),DP (0,4)) "else" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-27 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 7) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:22-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:22-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:10-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:10-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:17-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (1,1),DP (12,3)) "{-|\n* When the state is \\\"write\\\", @waitRead@ /blocks/ until a call to\n'releaseWrite' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" or \\\"read\\\" @waitRead@ returns immediately.\n\n@waitRead@ does not alter the state of the lock.\n\nNote that @waitRead@ is just a convenience function defined as:\n\n@waitRead l = 'mask_' '$' 'acquireRead' l '>>' 'releaseRead' l@\n-}" Nothing,DComment (DP (-10,1),DP (1,3)) "{-|\n* When the state is \\\"write\\\", @waitRead@ /blocks/ until a call to\n'releaseWrite' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" or \\\"read\\\" @waitRead@ returns immediately.\n\n@waitRead@ does not alter the state of the lock.\n\nNote that @waitRead@ is just a convenience function defined as:\n\n@waitRead l = 'mask_' '$' 'acquireRead' l '>>' 'releaseRead' l@\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "waitRead" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-27 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-27 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,0)) "mask_" Nothing),DP (0,-5)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:23-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:23-27 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 23) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,12)) "acquireRead" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:26-27 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "l" Nothing,DComment (DP (0,1),DP (0,3)) ">>" Nothing,DComment (DP (0,1),DP (0,12)) "releaseRead" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:10 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:12-51 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-34 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-51 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:22-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:22-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:36-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:39-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:39-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1-31 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- *Write access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,17)) "-- *Write access" Nothing,DComment (DP (0,-16),DP (0,63)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (7,3)) "{-|\nAcquire the write lock.\n\nBlocks if another thread has acquired either read or write access. If\n@acquireWrite@ terminates without throwing an exception the state of the\n'RWLock' will be \\\"write\\\".\n-}" Nothing,DComment (DP (-5,1),DP (1,3)) "{-|\nAcquire the write lock.\n\nBlocks if another thread has acquired either read or write access. If\n@acquireWrite@ terminates without throwing an exception the state of the\n'RWLock' will be \\\"write\\\".\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,12)) "acquireWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-31 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-31 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:27-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:30-31 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,7)) "readLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,7)) "," Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,9)) "acqWrite" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:14-50 CN "ParPat" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-8),DP (0,-3)) "where" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:15-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:15-49 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:23-27 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:23-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:30-37 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:30-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:40-48 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:40-48 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,52)-(278,43) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 52) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:54-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:54-67 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:60-67 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:7-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 7) DP (1,0) [DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,8)) "acqWrite" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,16)-(278,43) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,18)-(278,43) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,21)-(278,43) Ref "delta-17"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:21-22 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:21-40 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,21)-(278,43) CN "(:)" Ref "delta-17",
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:27-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:27-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:36-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(270,21)-(278,43) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(270,21)-(278,43) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,23)-(278,43) Ref "delta-18"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:270:26-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:23-26 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:23-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,23)-(272,54) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,23)-(278,43) CN "(:)" Ref "delta-18",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "Lock.acquire" Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,30)-(272,54) CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,33)-(272,54) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,36)-(272,54) Ref "delta-19"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-57 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,36)-(272,54) CN "(:)" Ref "delta-19",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:49-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-54 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-3)) "Write" Nothing,DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Read" Nothing,DComment (DP (0,1),DP (0,2)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:44-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:50-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:23-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:23-28 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,23)-(275,43) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-5),DP (0,-3)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:28 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,30)-(275,43) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,33)-(275,43) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,36)-(275,43) Ref "delta-20"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-51 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,36)-(275,43) CN "(:)" Ref "delta-20",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:44-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "Lock.wait" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:50-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,5)) "readLock" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-53 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:46-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-9),DP (0,-1)) "acqWrite" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:275:36-43 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Write" Nothing,DComment (DP (0,2),DP (0,4)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:275:36-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:23-27 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:23-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,23)-(278,43) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-1)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,30)-(278,43) CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 7) DP (0,2) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,33)-(278,43) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,36)-(278,43) Ref "delta-21"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-51 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,36)-(278,43) CN "(:)" Ref "delta-21",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:44-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,2)) "Lock.wait" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:50-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,6)) "writeLock" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-54 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:46-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-9),DP (0,-1)) "acqWrite" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:278:36-43 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:278:36-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1-36 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nTry to acquire the write lock; non blocking.\n\nLike 'acquireWrite', but doesn't block. Returns 'True' if the resulting state is\n\\\"write\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nTry to acquire the write lock; non blocking.\n\nLike 'acquireWrite', but doesn't block. Returns 'True' if the resulting state is\n\\\"write\\\", 'False' otherwise.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,15)) "tryAcquireWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-36 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 20) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-36 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 20) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:30-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:30-36 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:33-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-4),DP (0,5)) "writeLock" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:17-43 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-13),DP (0,-13)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:18-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:18-42 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((AnnComment DComment (DP (0,-6),DP (0,-1)) "state" Nothing),DP (0,-6)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:26-30 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:26-30 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:33-41 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:33-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,45)-(294,29) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 45) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:47-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,47)-(294,29) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,55)-(294,29) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(288,3)-(294,29) Ref "delta-22"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:3-4 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:3-22 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(288,3)-(294,29) CN "(:)" Ref "delta-22",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:9-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:9-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:18-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(289,3)-(294,29) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(289,3)-(294,29) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,5)-(294,29) Ref "delta-23"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:289:8-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "Free" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:5-8 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,5)-(292,28) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,5)-(294,29) CN "(:)" Ref "delta-23",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,-1),DP (0,1)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "Lock.acquire" Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,12)-(292,28) CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 7) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,15)-(292,28) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,18)-(292,28) Ref "delta-24"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-39 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,18)-(292,28) CN "(:)" Ref "delta-24",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:31-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-36 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-3)) "Write" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:32-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18-28 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 0) DP (1,0) [DComment (DP (1,-13),DP (1,-13)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,6),DP (0,8)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:25-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,1) [DComment (DP (0,-6),DP (0,1)) "putMVar" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:5 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,5)-(294,29) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,-3),DP (0,2)) "state" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,12)-(294,29) CN "GRHS" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 7) DP (0,6) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,15)-(294,29) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,18)-(294,29) Ref "delta-25"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-33 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,18)-(294,29) CN "(:)" Ref "delta-25",
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:26-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-1)) "return" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18-29 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:25-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1-31 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (11,1) [DComment (DP (1,1),DP (9,3)) "{-|\nRelease the write lock.\n\nIf @releaseWrite@ terminates without throwing an exception the state will be\n\\\"free\\\".\n\nIt is an error to release write access to an 'RWLock' which is not in the\n\\\"write\\\" state.\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nRelease the write lock.\n\nIf @releaseWrite@ terminates without throwing an exception the state will be\n\\\"free\\\".\n\nIt is an error to release write access to an 'RWLock' which is not in the\n\\\"write\\\" state.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "releaseWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-31 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "RWLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-31 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,0)) "{" Nothing),DP (0,-1)),((AnnComment DComment (DP (0,0),DP (0,5)) "state" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:27-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:30-31 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "," Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,8)) "writeLock" Nothing),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,7),DP (0,8)) "}" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "mask_" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:14-40 CN "ParPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 14) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,2)) "st" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,9)) "takeMVar" Nothing] [((G AnnOpenP),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:15-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:15-39 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,2)) "state" Nothing),DP (0,-3)),((G AnnOpenC),DP (0,1)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:23-27 CN "HsRecField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:23-27 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:30-38 CN "HsRecField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:30-38 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,42)-(312,67) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 42) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:44-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,44)-(312,67) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,52)-(312,67) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(307,3)-(312,67) Ref "delta-26"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:3-4 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:3-22 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,2)) "case" Nothing),DP (0,-2)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(307,3)-(312,67) CN "(:)" Ref "delta-26",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:9-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:9-22 CN "HsApp" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,1) [DComment (DP (0,0),DP (0,2)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:18-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,5)) (ColDelta 15) DP (0,1) [DComment (DP (0,-6),DP (0,-4)) "of" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(308,3)-(312,67) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(308,3)-(312,67) CN "HsCase" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,5)-(312,67) Ref "delta-27"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:308:8-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 5) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "Write" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:5-9 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,5)-(310,34) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,5)-(312,67) CN "(:)" Ref "delta-27",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "Lock.release" Nothing,DComment (DP (0,1),DP (0,10)) "writeLock" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,11)-(310,34) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,14)-(310,34) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,17)-(310,34) Ref "delta-28"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-38 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,17)-(310,34) CN "(:)" Ref "delta-28",
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:30-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-5)) "putMVar" Nothing,DComment (DP (0,1),DP (0,6)) "state" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-34 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,-8),DP (0,-4)) "Free" Nothing,DComment (DP (1,-12),DP (1,-12)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing,DComment (DP (0,1),DP (0,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "putMVar" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:25-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-3),DP (0,2)) "state" Nothing] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:31-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 14) DP (0,1) [DComment (DP (0,-3),DP (0,-1)) "st" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:5 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,5)-(312,67) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,7)-(312,67) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,10)-(312,67) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,13)-(312,67) Ref "delta-29"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-28 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,13)-(312,67) CN "(:)" Ref "delta-29",
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:21-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [DComment (DP (0,-7),DP (0,-2)) "error" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:27-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 14) DP (0,1) [DComment (DP (0,-5),DP (0,5)) "moduleName" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-67 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,3),DP (0,5)) "++" Nothing,DComment (DP (0,1),DP (0,34)) "\".releaseWrite: already released\"" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-67 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:21-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:35-67 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1-35 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (7,1) [DComment (DP (1,1),DP (5,3)) "{-|\nA convenience function wich first acquires write access and then performs\nthe computation. When the computation terminates, whether normally or by raising\nan exception, the write lock is released.\n-}" Nothing,DComment (DP (-3,1),DP (1,3)) "{-|\nA convenience function wich first acquires write access and then performs\nthe computation. When the computation terminates, whether normally or by raising\nan exception, the write lock is released.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "withWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftA2" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-35 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [] [((AnnComment DComment (DP (0,0),DP (0,8)) "bracket_" Nothing),DP (0,0)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-27 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-35 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:32-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:32-35 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 32) DP (0,1) [DComment (DP (0,-2),DP (0,10)) "acquireWrite" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,6),DP (0,18)) "releaseWrite" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:11-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:13-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:20-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:29-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:42-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1-46 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (1,1),DP (6,3)) "{-|\nA non-blocking 'withWrite'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (-4,1),DP (1,3)) "{-|\nA non-blocking 'withWrite'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,12)) "tryWithWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,5)) "Maybe" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,5)) "mask" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [DComment (DP (0,-1),DP (0,0)) "$" Nothing] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 30) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "\\" Nothing,DComment (DP (0,0),DP (0,7)) "restore" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:35-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:35-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:38-46 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "->" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:39-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:39-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 45) DP (0,1) [DComment (DP (0,-5),DP (0,-3)) "do" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-10),DP (0,-10)) "" Nothing,DComment (DP (0,0),DP (0,8)) "acquired" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,-14)) (ColDelta 16) DP (0,1) [DComment (DP (0,0),DP (0,15)) "tryAcquireWrite" Nothing] [((G AnnVal),DP (0,-14))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,18)-(335,23) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,20)-(335,23) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23) CN "(:)" Ref "delta-30",
  (Ann (DP (0,-1)) (ColDelta 27) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23) CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23) Ref "delta-30"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23) CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "l" Nothing),DP (0,-4)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:28-34 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,39)-(335,23) CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,39)-(335,23) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(330,3)-(335,23) Ref "delta-31"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:3-10 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:3-31 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-8),DP (0,-6)) "if" Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,9)) "acquired" Nothing),DP (0,1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(330,3)-(335,23) CN "(:)" Ref "delta-31",
  (Ann (DP (1,0)) (ColDelta -24) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:15-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:15-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,-2)) "do" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,1)) "" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "r" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "<-" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,8)) "restore" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "a" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,11)) "onException" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,13)) "releaseWrite" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "l" Nothing),DP (0,1)),((G AnnThen),DP (1,2)),((G AnnElse),DP (1,2))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:331:6-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 3) DP (0,1) [DComment (DP (0,0),DP (0,4)) "then" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(332,10)-(334,27) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(332,13)-(334,27) Ref "delta-32"),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:13-55 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,11)) "releaseWrite" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(332,13)-(334,27) CN "(:)" Ref "delta-32",
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-55 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:28-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnBackquote),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnBackquote),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:42-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:42-55 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-26 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,-12),DP (0,-6)) "return" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,5)) "Just" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-27 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [DComment (DP (0,0),DP (0,1)) "r" Nothing,DComment (DP (1,-8),DP (1,-8)) "" Nothing,DComment (DP (0,0),DP (0,4)) "else" Nothing,DComment (DP (0,1),DP (0,7)) "return" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-27 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:20 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 7) DP (0,1) [DComment (DP (0,-2),DP (0,5)) "Nothing" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:22-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:22-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:10-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:10-23 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:17-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1-28 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (14,1) [DComment (DP (1,1),DP (12,3)) "{-|\n* When the state is \\\"write\\\" or \\\"read\\\" @waitWrite@ /blocks/ until a call to\n'releaseWrite' or 'releaseRead' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" @waitWrite@ returns immediately.\n\n@waitWrite@ does not alter the state of the lock.\n\nNote that @waitWrite@ is just a convenience function defined as:\n\n@waitWrite l = 'mask_' '$' 'acquireWrite' l '>>' 'releaseWrite' l@\n-}" Nothing,DComment (DP (-10,1),DP (1,3)) "{-|\n* When the state is \\\"write\\\" or \\\"read\\\" @waitWrite@ /blocks/ until a call to\n'releaseWrite' or 'releaseRead' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" @waitWrite@ returns immediately.\n\n@waitWrite@ does not alter the state of the lock.\n\nNote that @waitWrite@ is just a convenience function defined as:\n\n@waitWrite l = 'mask_' '$' 'acquireWrite' l '>>' 'releaseWrite' l@\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,9)) "waitWrite" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "RWLock" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-28 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "l" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-28 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,1) [] [((AnnComment DComment (DP (0,-5),DP (0,0)) "mask_" Nothing),DP (0,-5)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:24-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,-11))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:24-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 24) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,13)) "acquireWrite" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:27-28 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,7),DP (0,8)) "l" Nothing,DComment (DP (0,1),DP (0,3)) ">>" Nothing,DComment (DP (0,1),DP (0,13)) "releaseWrite" Nothing,DComment (DP (0,1),DP (0,2)) "l" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:13-54 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-54 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:23-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:23-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:38-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:41-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:41-54 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:54 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1-20 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,10)) "moduleName" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "String" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:15-20 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-33)) (ColDelta 15) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,35)) "\"Control.Concurrent.ReadWriteLock\"" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:15-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-33)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,-33))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:12-47 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:14-47 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-122,0)) (ColDelta 0) DP (-122,0) [] [])),
 (AnnKey <no location info> CN "VarPat" NotNeeded,
  (Ann (DP (-168,0)) (ColDelta 0) DP (-168,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-116,0)) (ColDelta 0) DP (-116,0) [] []))]
==============
([((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:1:1,
    AnnModule),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:40:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:1:1,
    AnnWhere),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:67:5-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(41,3)-(67,3),
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:67:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(41,3)-(67,3),
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:41:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:41:5-10,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:44:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:44:5-7,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:45:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:45:5-19,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:46:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:46:5-20,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:50:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:50:5-15,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:51:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:51:5-15,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:52:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:52:5-12,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:53:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:53:5-12,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:55:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:55:5-18,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:56:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:56:5-15,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:60:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:60:5-16,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:61:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:61:5-16,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:62:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:62:5-13,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:63:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:63:5-13,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:65:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:65:5-19,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:66:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:1-49,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:1-49,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:32-49,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:49]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:32-49,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:34-39,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:75:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:1-67,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:1-67,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:32-67,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:67]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:32-67,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:34-37,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:40-46,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:49-56,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:76:57]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:1-56,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:1-56,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:32-56,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:56]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:32-56,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:34-41,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:77:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:1-47,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:1-47,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:32-47,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:32-47,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:34-39,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:45]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:42-45,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:78:43-44]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:1-52,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:1-52,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:32-52,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:52]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:32-52,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:34-50,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:50]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:34-50,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:39-43,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:79:44]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:1-43,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:1-43,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:32-43,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:32-43,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:34-35,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:41]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:38-41,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:80:39-40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:1-47,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:1-47,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:32-47,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:32-47,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:34-36,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:41]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:39-41,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:81:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:1-38,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:1-38,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:32-38,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:32-38,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:82:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:1-55,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:1-55,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:32-55,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:55]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:32-55,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:34-53,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:53]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:34-53,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:40-46,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:83:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:1-38,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:1-38,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:32-38,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:32-38,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:34-37,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:84:35-36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:1-43,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:1-43,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:32-43,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:32-43,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:85:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:1-66,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:1-66,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:32-66,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:66]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:32-66,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:34-39,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:45]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:46]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:42-45,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:43-44]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:48-51,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:52]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:54-57,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:86:58]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:1-37,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:1-37,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:32-37,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:32-37,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:87:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:1-49,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:1-49,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:96:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:42-49,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:49]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:42-49,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:95:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48),
    AnnAs),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:96:42-43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48),
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:96:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48),
    AnnQualified),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:96:8-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(96,1)-(97,48),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:96:45-48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:5-48,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:5-48,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:7-9,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:10]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:12-22,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:25-31,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:34-40,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:97:41]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:1-28,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:1-28,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:14-28,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:28]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:14-28,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:16-19,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:99:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,1)-(119,40),
    AnnData),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:1-4]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,1)-(119,40),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,1)-(119,40),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,22)-(119,22),
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(116,22)-(119,22),
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:24-46,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:24-46,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:116:34-35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:24-40,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:24-40,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:117:34-35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:24-40,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:118:34-35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:24-40,
    AnnDeriving),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:119:24-31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(121,1)-(122,26),
    AnnInstance),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:1-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(121,1)-(122,26),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(121,1)-(122,26),
    AnnWhere),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:121:20-24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:6-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-26,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:10]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-26,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:5-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-15,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-15,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-15,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:13-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:12-26,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:17-20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:17-20,
    AnnBackquote),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:17,
    ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:17-20,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:122:18-19]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1-36,
    AnnData),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1-4]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1-36,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:1-36,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:14-17,
    AnnVbar),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:19]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:21-28,
    AnnVbar),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:125:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1-16,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:5-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:134:1-16,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:1-3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(135,1)-(137,28),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:21-34,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:21-34,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:135:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1-28,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:17-18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:141:1-28,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:1-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(142,1)-(144,40),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:33-50,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:50]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:33-50,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:33]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:34-49,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:142:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1-29,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:18-19]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:148:1-29,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:1-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(149,1)-(151,49),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:34-48,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:34-48,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:149:34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1-30,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:13-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:1-30,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:16-30,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:23-24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:29-30,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:29-30,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:167:29]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:51]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:1-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(168,1)-(177,41),
    AnnWhere),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:169:5-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:13-49,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:49]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:13-49,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:14-48,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:14-48,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:22-26,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:27]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:29-36,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:168:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,7)-(177,41),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:7-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(170,17)-(177,41),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:17-18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:20-39,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:23-24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:170:20-39,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:171:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(171,20)-(177,41),
    AnnCase),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:171:20-23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(171,20)-(177,41),
    AnnOf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:171:28-29]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,22)-(173,56),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,29)-(173,56),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:29-30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(172,32)-(173,56),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:32-33]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:172:35-55,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:35-56,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:173:49]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:22-61,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:29-61,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:29-30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-51,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:46]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:32-61,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:174:53-54]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,29)-(177,41),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:29-30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(175,32)-(177,41),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:32-33]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:175:35-50,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:176:35-53,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:177:35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1-35,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:16-17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:1-35,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:19-35,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:185:26-27]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:1-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,1)-(195,29),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:16-41,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:41]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:16-41,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:17-40,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:17-40,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:25-29,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,45)-(195,29),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:51]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(186,53)-(195,29),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:186:53-54]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:3-22,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:6-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:187:3-22,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:188:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(188,3)-(195,29),
    AnnCase),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:188:3-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(188,3)-(195,29),
    AnnOf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:188:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,5)-(191,28),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,12)-(191,28),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(189,15)-(191,28),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:189:18-38,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-39,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:191:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:18-39,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:190:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,5)-(193,28),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,12)-(193,28),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(192,15)-(193,28),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-37,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-47,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:193:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:18-47,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:192:39-40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,12)-(195,29),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(194,15)-(195,29),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:194:18-33,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:195:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1-30,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:13-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:1-30,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:16-30,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:23-24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:29-30,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:29-30,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:206:29]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:1-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,1)-(214,66),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:13-38,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:13-38,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:14-37,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:14-37,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:22-26,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:27]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,42)-(214,66),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(207,50)-(214,66),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:207:50-51]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:3-22,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:6-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:208:3-22,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:209:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(209,3)-(214,66),
    AnnCase),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:209:3-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(209,3)-(214,66),
    AnnOf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:209:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,5)-(211,35),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,12)-(211,35),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(210,15)-(211,35),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:210:18-38,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:211:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:5-44,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:12-44,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-34,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:29]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:15-44,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:212:36-37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,7)-(214,66),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:7-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(213,10)-(214,66),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:10-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:213:13-28,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-30,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:19]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:13-66,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:214:32-33]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1-34,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:10-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:1-34,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:13-34,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:20-21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:23-34,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:221:28-29]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:10]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:222:1-50,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1-45,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:13-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:1-45,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:16-45,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:23-24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:26-45,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:31-32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:37-45,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:45]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:37-45,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:230:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:1-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,1)-(237,23),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,19)-(237,23),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23),
    AnnLam),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:26]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,26)-(237,23),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:35-36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(231,38)-(237,23),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:231:38-39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:3-30,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:232:3-30,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:233:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23),
    AnnElse),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:237:5-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23),
    AnnIf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:233:3-4]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(233,3)-(237,23),
    AnnThen),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:5-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(234,10)-(236,27),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:10-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:13-54,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:13-54,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:18-54,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:28-40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:28-40,
    AnnBackquote),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:28,
    ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:28-40,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:234:29-39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:235:13-25,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:13-27,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:236:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1-27,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:10-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:1-27,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:13-27,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:20-21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:26-27,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:27]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:26-27,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:251:26]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:1-51,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-34,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:14-51,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:252:36-37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1-31,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:14-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:1-31,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:17-31,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:24-25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:30-31,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:30-31,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:266:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:52]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:1-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(267,1)-(278,43),
    AnnWhere),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:268:5-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:14-50,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:50]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:14-50,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:15-49,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:49]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:15-49,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:23-27,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:28]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:30-37,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:267:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,7)-(278,43),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:7-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(269,18)-(278,43),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:18-19]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:21-40,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:24-25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:269:21-40,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:270:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(270,21)-(278,43),
    AnnCase),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:270:21-24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(270,21)-(278,43),
    AnnOf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:270:29-30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,23)-(272,54),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,30)-(272,54),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:30-31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(271,33)-(272,54),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:33-34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:271:36-57,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:272:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,23)-(275,43),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,30)-(275,43),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:30-31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(273,33)-(275,43),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:33-34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:273:36-51,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:274:36-53,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:275:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,30)-(278,43),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:30-31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(276,33)-(278,43),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:33-34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:276:36-51,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:277:36-54,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:278:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1-36,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:17-18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:1-36,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:20-36,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:286:27-28]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:45]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:1-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,1)-(294,29),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:17-43,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:17-43,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:18-42,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:18-42,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:26-30,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,47)-(294,29),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:53]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(287,55)-(294,29),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:287:55-56]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:3-22,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:6-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:288:3-22,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:289:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(289,3)-(294,29),
    AnnCase),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:289:3-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(289,3)-(294,29),
    AnnOf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:289:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,5)-(292,28),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,12)-(292,28),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(290,15)-(292,28),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:290:18-39,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:291:18-36,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:292:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,12)-(294,29),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(293,15)-(294,29),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:293:18-33,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:294:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1-31,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:14-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:1-31,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:17-31,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:24-25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:30-31,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:31]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:30-31,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:305:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:1-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,1)-(312,67),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:14-40,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:14-40,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:15-39,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:15-39,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:23-27,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:28]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,44)-(312,67),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:50]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(306,52)-(312,67),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:306:52-53]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:3-22,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:6-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:307:3-22,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:308:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(308,3)-(312,67),
    AnnCase),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:308:3-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(308,3)-(312,67),
    AnnOf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:308:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,5)-(310,34),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,11)-(310,34),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(309,14)-(310,34),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:14-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:309:17-38,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:310:17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,7)-(312,67),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:7-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(311,10)-(312,67),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:10-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:311:13-28,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-30,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:19]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:13-67,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:312:32-33]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1-35,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:1-35,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:14-35,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:21-22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:24-35,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:319:29-30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:320:1-53,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1-46,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:14-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:1-46,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:17-46,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:24-25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:27-46,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:32-33]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:38-46,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:46]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:38-46,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:328:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23),
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23),
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:1-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,1)-(335,23),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,20)-(335,23),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23),
    AnnLam),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:27]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,27)-(335,23),
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:36-37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(329,39)-(335,23),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:329:39-40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:3-31,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:330:3-31,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:331:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23),
    AnnElse),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:335:5-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23),
    AnnIf),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:331:3-4]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(331,3)-(335,23),
    AnnThen),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:5-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(332,10)-(334,27),
    AnnDo),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:10-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:13-55,
    AnnLarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:13-55,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:18-55,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:28-40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:28-40,
    AnnBackquote),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:28,
    ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:28-40,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:332:29-39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:333:13-26,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:13-27,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:334:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1-28,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:11-12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:1-28,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:14-28,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:21-22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:27-28,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:28]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:27-28,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:349:27]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:1-54,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-36,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:15-54,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:350:38-39]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1-20,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:12-13]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:352:1-20,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:12]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-10]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:353:1-47,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:355:1]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:355:1])],
 [(../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/ReadWriteLock.hs:(41,3)-(67,3),
   [AnnLineComment "-- **Non-blocking",
    AnnLineComment "-- **Blocking", AnnLineComment "-- *Write access",
    AnnLineComment "-- **Non-blocking", AnnLineComment "-- **Blocking",
    AnnLineComment "-- *Read access",
    AnnLineComment "-- *Creating Read-Write Locks"]),
  (<no location info>,
   [AnnBlockComment "{-|\n* When the state is \\\"write\\\" or \\\"read\\\" @waitWrite@ /blocks/ until a call to\n'releaseWrite' or 'releaseRead' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" @waitWrite@ returns immediately.\n\n@waitWrite@ does not alter the state of the lock.\n\nNote that @waitWrite@ is just a convenience function defined as:\n\n@waitWrite l = 'mask_' '$' 'acquireWrite' l '>>' 'releaseWrite' l@\n-}",
    AnnBlockComment "{-|\nA non-blocking 'withWrite'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}",
    AnnBlockComment "{-|\nA convenience function wich first acquires write access and then performs\nthe computation. When the computation terminates, whether normally or by raising\nan exception, the write lock is released.\n-}",
    AnnBlockComment "{-|\nRelease the write lock.\n\nIf @releaseWrite@ terminates without throwing an exception the state will be\n\\\"free\\\".\n\nIt is an error to release write access to an 'RWLock' which is not in the\n\\\"write\\\" state.\n-}",
    AnnBlockComment "{-|\nTry to acquire the write lock; non blocking.\n\nLike 'acquireWrite', but doesn't block. Returns 'True' if the resulting state is\n\\\"write\\\", 'False' otherwise.\n-}",
    AnnBlockComment "{-|\nAcquire the write lock.\n\nBlocks if another thread has acquired either read or write access. If\n@acquireWrite@ terminates without throwing an exception the state of the\n'RWLock' will be \\\"write\\\".\n-}",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- *Write access",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnBlockComment "{-|\n* When the state is \\\"write\\\", @waitRead@ /blocks/ until a call to\n'releaseWrite' in another thread changes the state to \\\"free\\\".\n\n* When the state is \\\"free\\\" or \\\"read\\\" @waitRead@ returns immediately.\n\n@waitRead@ does not alter the state of the lock.\n\nNote that @waitRead@ is just a convenience function defined as:\n\n@waitRead l = 'mask_' '$' 'acquireRead' l '>>' 'releaseRead' l@\n-}",
    AnnBlockComment "{-|\nA non-blocking 'withRead'. First tries to acquire the lock. If that fails,\n'Nothing' is returned. If it succeeds, the computation is performed. When the\ncomputation terminates, whether normally or by raising an exception, the lock is\nreleased and 'Just' the result of the computation is returned.\n-}",
    AnnBlockComment "{-|\nA convenience function wich first acquires read access and then performs the\ncomputation. When the computation terminates, whether normally or by raising an\nexception, the read lock is released.\n-}",
    AnnBlockComment "{-|\nRelease the read lock.\n\nIf the calling thread was the last one to relinquish read access the state will\nrevert to \\\"free\\\".\n\nIt is an error to release read access to an 'RWLock' which is not in the\n\\\"read\\\" state.\n-}",
    AnnBlockComment "{-|\nTry to acquire the read lock; non blocking.\n\nLike 'acquireRead', but doesn't block. Returns 'True' if the resulting state is\n\\\"read\\\", 'False' otherwise.\n-}",
    AnnBlockComment "{-|\nAcquire the read lock.\n\nBlocks if another thread has acquired write access. If @acquireRead@ terminates\nwithout throwing an exception the state of the 'RWLock' will be \\\"read\\\".\n\nImplementation note: Throws an exception when more than (maxBound :: Int)\nsimultaneous threads acquire the read lock. But that is unlikely.\n-}",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- * Read access",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- write will block.",
    AnnLineComment "-- | Create a new 'RWLock' in the \\\"write\\\" state; either acquiring read or",
    AnnLineComment "-- without blocking.",
    AnnLineComment "-- | Create a new 'RWLock' in the \\\"read\\\" state; only read can be acquired",
    AnnLineComment "-- can be acquired without blocking.",
    AnnLineComment "-- | Create a new 'RWLock' in the \\\"free\\\" state; either read or write access",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- * Creating Read-Write Locks",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- | Internal state of the 'RWLock'.",
    AnnBlockComment "{-|\nMultiple-reader, single-writer lock. Is in one of three states:\n\n* \\\"Free\\\": Read or write access can be acquired without blocking.\n\n* \\\"Read\\\": One or more threads have acquired read access. Blocks write access.\n\n* \\\"Write\\\": A single thread has acquired write access. Blocks other threads\nfrom acquiring both read and write access.\n-}",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Read Write Lock",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- from concurrent-extra (this package):",
    AnnLineComment "-- from base:",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Imports",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "--", AnnLineComment "-- @",
    AnnLineComment "-- import qualified Control.Concurrent.ReadWriteLock as RWL ( ... )",
    AnnLineComment "-- import           Control.Concurrent.ReadWriteLock        ( RWLock )",
    AnnLineComment "-- @", AnnLineComment "--",
    AnnLineComment "-- like:",
    AnnLineComment "-- This module is designed to be imported qualified. We suggest importing it",
    AnnLineComment "--",
    AnnLineComment "-- <http://java.sun.com/javase/7/docs/api/java/util/concurrent/locks/ReadWriteLock.html>",
    AnnLineComment "-- See also Java's version:", AnnLineComment "--",
    AnnLineComment "-- to kill a thread that is blocking on, for example, 'acquireRead'.",
    AnnLineComment "-- compromise the internal state of an 'RWLock'. This means it is perfectly safe",
    AnnLineComment "-- All functions are /exception safe/. Throwing asynchronous exceptions will not",
    AnnLineComment "--",
    AnnLineComment "-- may be concurrently read, but only sequentially written.",
    AnnLineComment "-- Multiple-reader, single-writer locks. Used to protect shared resources which",
    AnnLineComment "--",
    AnnLineComment "--            , Roel van Dijk <vandijk.roel@gmail.com>",
    AnnLineComment "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>",
    AnnLineComment "-- License    : BSD3 (see the file LICENSE)",
    AnnLineComment "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk",
    AnnLineComment "-- Module     : Control.Concurrent.ReadWriteLock",
    AnnLineComment "-- |",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnBlockComment "{-# LANGUAGE Safe #-}",
    AnnBlockComment "{-# LANGUAGE CPP\n           , DeriveDataTypeable\n           , NamedFieldPuns\n           , NoImplicitPrelude\n  #-}"])])