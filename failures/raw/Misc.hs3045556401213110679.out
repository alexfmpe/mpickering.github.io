{-# LANGUAGE CPP
           , MagicHash
           , NoImplicitPrelude
           , PackageImports
           , UnicodeSyntax
  #-}

module Text.Numeral.Misc where
module Text.Numeral.Misc where
--------------------------------------------------------------------------------
-- Imports--------------------------------------------------------------------------------
-- Imports--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
import "base" Prelude ( Integral, (^) )
import#if __GLASGOW_HASKELL__ >= 702"base" Prelude ( Integral, (^) )
import "base" Data.Function ( ($) )
import "base" Data.FunctionGHC.Exts      ( (Int$)()I#) )
import "base" GHC.ExtsPrelude       ( IntfromIntegral(I#) )   , toInteger )
import "base""integer-gmp"PreludeGHC.Integer.Logarithms fromIntegral, toInteger( integerLogBase#)       )
import#else   "integer-gmp" GHC.Integer.Logarithms ( integerLogBase# )
import "base" Data.Bool ( otherwise )
import "base" Data.Ord  ( (<) )
import "base" Prelude   ( div, (+), ($!), error )
#endif

--------------------------------------------------------------------------------
-- Misc--------------------------------------------------------------------------------
-- Misc--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- ^ Raise 10 to some power.
dec-- ^ Raise 10 to some power.∷ (Integral α) ⇒ α → α
dec ∷ (Integral10 ^)    α) ⇒ α → α
dec = (10 ^)
-- ^ The (base 10) logarithm of an integral value. Note that the
-- ^ The (base 10) logarithm of an integral value. Note that the-- result must be able to fit in an ordinary Int value. This means the
-- maximum input value is 10 ^ (maxBound ∷ Int).-- result must be able to fit in an ordinary Int value. This means the
intLog-- maximum input value is 10 ^ (maxBound ∷ Int).∷ (Integral α) ⇒ α → α
intLog-- GHC >= 7.2.x∷ (Integral α) ⇒ α → α
-- GHC >= 7.2.x#if __GLASGOW_HASKELL__ >= 702
intLog x = fromIntegral $ I# (integerLogBase# 10 (toInteger x))
intLog#else   x = fromIntegral $ I# (integerLogBase# 10 (toInteger x))
intLog x | x < 0 = error "intLog: undefined for negative numbers"
         | otherwise = go x 0
    where
      go n acc = case n `div` 10 of
                   0 → acc
                   1 → acc + 1
                   q → go q $! acc + 1
#endif

==============
../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs
==============
lengths:(2458,1559)

==============

({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (5,6)) "{-# LANGUAGE CPP\n           , MagicHash\n           , NoImplicitPrelude\n           , PackageImports\n           , UnicodeSyntax\n  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,7)) "module" Nothing),DP (2,1)),((AnnComment DComment (DP (0,1),DP (0,18)) "Text.Numeral.Misc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((G AnnModule),DP (8,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "intLog" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "|" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "<" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,41)) "\"intLog: undefined for negative numbers\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,10),DP (1,11)) "|" Nothing),DP (1,10)),((AnnComment DComment (DP (0,1),DP (0,10)) "otherwise" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "go" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,10)) "where" Nothing),DP (1,5)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,2)) "go" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "n" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "case" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "n" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "div" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "10" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,20),DP (1,20)) "" Nothing),DP (1,20)),((AnnComment DComment (DP (0,0),DP (0,1)) "0" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "\8594" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (1,20),DP (1,20)) "" Nothing),DP (1,20)),((AnnComment DComment (DP (0,0),DP (0,1)) "1" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "\8594" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "+" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (1,20),DP (1,20)) "" Nothing),DP (1,20)),((AnnComment DComment (DP (0,0),DP (0,1)) "q" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "\8594" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "go" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "q" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "$!" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "+" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:9:8-24
     }
    Nothing{ModuleName: Text.Numeral.Misc})) 
  (Nothing) 
  [
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:1-39
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,70)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,70)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,9)) "Integral" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "^" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,23)) "#if __GLASGOW_HASKELL__ >= 702" Nothing),DP (0,-6)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:15-21
       }
      Nothing{ModuleName: Prelude}) 
     (Just {FastString: "base"}) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:23-39
         }
        Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:25-32
           }
          Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:25-32
             }
            Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: Integral})))),
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37
           }
          Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37
             }
            Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: ^}))))]))))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,14)) "Data.Function" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "$" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:15-27
       }
      Nothing{ModuleName: Data.Function}) 
     (Just {FastString: "base"}) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:29-35
         }
        Just (Ann (DP (0,6)) (ColDelta 29) DP (0,1) [DComment (DP (0,-13),DP (0,-5)) "GHC.Exts" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33
           }
          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33
             }
            Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "Int" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: $}))))]))))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1-39
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,1)) "I#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:15-22
       }
      Nothing{ModuleName: GHC.Exts}) 
     (Just {FastString: "base"}) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:29-39
         }
        Just (Ann (DP (0,7)) (ColDelta 29) DP (0,6) [DComment (DP (0,-8),DP (0,-1)) "Prelude" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:31-37
           }
          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,9)) "fromIntegral" Nothing),DP (0,-3)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingWith 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:31-33
             }
            Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Int})) 
           [
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:35-36
              }
             Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: I#}))]))]))))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1-55
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,4)) "," Nothing,DComment (DP (0,1),DP (0,10)) "toInteger" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnPackageName),DP (0,1)),((AnnComment DComment (DP (0,-6),DP (0,7)) "\"integer-gmp\"" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:15-21
       }
      Nothing{ModuleName: Prelude}) 
     (Just {FastString: "base"}) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:29-55
         }
        Just (Ann (DP (0,-15)) (ColDelta 29) DP (0,7) [DComment (DP (0,0),DP (0,22)) "GHC.Integer.Logarithms" Nothing] [((G AnnOpenP),DP (0,-15)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "(" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,16)) "integerLogBase#" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:31-42
           }
          Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:31-42
             }
            Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: fromIntegral})))),
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:45-53
           }
          Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:45-53
             }
            Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: toInteger}))))]))))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1-63
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,7),DP (0,8)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-2)) "#else" Nothing),DP (0,-6)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:22-43
       }
      Nothing{ModuleName: GHC.Integer.Logarithms}) 
     (Just {FastString: "integer-gmp"}) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:45-63
         }
        Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:47-61
           }
          Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:47-61
             }
            Just (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: integerLogBase#}))))])))))] 
  [
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1-26
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,10)) "Data.Bool" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "otherwise" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,9)) "Data.Ord" Nothing,DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "<" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,3),DP (0,4)) "(" Nothing,DComment (DP (0,1),DP (0,4)) "div" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "+" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "$!" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "error" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,8)) "-- Misc" Nothing,DComment (DP (0,-7),DP (0,73)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,8)) "-- Misc" Nothing,DComment (DP (0,-7),DP (0,73)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,29)) "-- ^ Raise 10 to some power." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "dec" Nothing,DComment (DP (0,-3),DP (0,25)) "-- ^ Raise 10 to some power." Nothing,DComment (DP (0,-24),DP (0,-23)) "\8759" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Integral" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "\8658" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,1),DP (0,2)) "\8594" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing] [((AnnUnicode AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1-3
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: dec}))] 
      ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-26
        }
       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18
          }
         Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18
            }
           Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnUnicode AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:8-17
              }
             Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:8-15
                }
               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Integral}))) 
              ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:17 }
               Just (Ann (DP (0,4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "10" Nothing,DComment (DP (0,1),DP (0,2)) "^" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: α})))))))]) 
        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:22-26
          }
         Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((AnnUnicode AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:22 }
           Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: α}))) 
          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:26 }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: α}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-3
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: dec})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-3
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: dec})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:5-12
              }
             Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:7-12
                }
               Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
               (HsPar 
                ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:8-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                 (SectionL 
                  ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:8-9
                    }
                   Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsOverLit {HsOverLit:10})) 
                  ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:11 }
                   Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: ^})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1-29
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,65)) "-- ^ The (base 10) logarithm of an integral value. Note that the" Nothing,DComment (DP (1,1),DP (1,65)) "-- ^ The (base 10) logarithm of an integral value. Note that the" Nothing,DComment (DP (0,-64),DP (0,6)) "-- result must be able to fit in an ordinary Int value. This means the" Nothing,DComment (DP (1,1),DP (1,49)) "-- maximum input value is 10 ^ (maxBound \8759 Int)." Nothing,DComment (DP (0,-48),DP (0,22)) "-- result must be able to fit in an ordinary Int value. This means the" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "intLog" Nothing,DComment (DP (0,-6),DP (0,42)) "-- maximum input value is 10 ^ (maxBound \8759 Int)." Nothing,DComment (DP (0,-41),DP (0,-40)) "\8759" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Integral" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "\8658" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,1),DP (0,2)) "\8594" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,9)) "-- GHC >= 7.2.x" Nothing),DP (0,-6)),((AnnUnicode AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1-6
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: intLog}))] 
      ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-29
        }
       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21
          }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21
            }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnUnicode AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:11-20
              }
             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:11-18
                }
               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Integral}))) 
              ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:20 }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: α})))))))]) 
        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:25-29
          }
         Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((AnnUnicode AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:25 }
           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: α}))) 
          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:29 }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: α}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,16)) "-- GHC >= 7.2.x" Nothing,DComment (DP (0,-15),DP (0,14)) "#if __GLASGOW_HASKELL__ >= 702" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "intLog" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "fromIntegral" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "I#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "integerLogBase#" Nothing,DComment (DP (0,1),DP (0,3)) "10" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "toInteger" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-6
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: intLog})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-6
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: intLog})) 
            (False))) 
          [
           ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:8 }
            Just (Ann (DP (0,3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "#else" Nothing] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: x})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:10-63
              }
             Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:12-63
                }
               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:12-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: fromIntegral}))) 
                ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:25 }
                 Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:27-63
                  }
                 Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:27-28
                    }
                   Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: I#}))) 
                  ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:30-63
                    }
                   Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsPar 
                    ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:31-62
                      }
                     Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:31-48
                        }
                       Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:31-45
                          }
                         Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: integerLogBase#}))) 
                        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:47-48
                          }
                         Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsOverLit {HsOverLit:10})))) 
                      ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:50-62
                        }
                       Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                       (HsPar 
                        ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:51-61
                          }
                         Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:51-59
                            }
                           Just (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: toInteger}))) 
                          ({ ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:61 }
                           Just (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: x})))))))))))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (5,6)) "{-# LANGUAGE CPP\n           , MagicHash\n           , NoImplicitPrelude\n           , PackageImports\n           , UnicodeSyntax\n  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,7)) "module" Nothing),DP (2,1)),((AnnComment DComment (DP (0,1),DP (0,18)) "Text.Numeral.Misc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "where" Nothing),DP (0,1)),((G AnnModule),DP (8,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,6)) "intLog" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "|" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "<" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,6)) "error" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,41)) "\"intLog: undefined for negative numbers\"" Nothing),DP (0,1)),((AnnComment DComment (DP (1,10),DP (1,11)) "|" Nothing),DP (1,10)),((AnnComment DComment (DP (0,1),DP (0,10)) "otherwise" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "go" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "x" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "0" Nothing),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,10)) "where" Nothing),DP (1,5)),((AnnComment DComment (DP (1,7),DP (1,7)) "" Nothing),DP (1,7)),((AnnComment DComment (DP (0,0),DP (0,2)) "go" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "n" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,5)) "case" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "n" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "`" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,3)) "div" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "`" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "10" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "of" Nothing),DP (0,1)),((AnnComment DComment (DP (1,20),DP (1,20)) "" Nothing),DP (1,20)),((AnnComment DComment (DP (0,0),DP (0,1)) "0" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "\8594" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (1,20),DP (1,20)) "" Nothing),DP (1,20)),((AnnComment DComment (DP (0,0),DP (0,1)) "1" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "\8594" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "+" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (1,20),DP (1,20)) "" Nothing),DP (1,20)),((AnnComment DComment (DP (0,0),DP (0,1)) "q" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "\8594" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "go" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "q" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,3)) "$!" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,4)) "acc" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "+" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,2)) "1" Nothing),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:1-39 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,70)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,70)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,9)) "Integral" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "^" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,23)) "#if __GLASGOW_HASKELL__ >= 702" Nothing),DP (0,-6)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:23-39 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:25-32 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:25-32 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1-35 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,14)) "Data.Function" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "$" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:29-35 CN "(:)" NotNeeded,
  (Ann (DP (0,6)) (ColDelta 29) DP (0,1) [DComment (DP (0,-13),DP (0,-5)) "GHC.Exts" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,2)) "Int" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1-39 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-1),DP (0,1)) "I#" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:29-39 CN "(:)" NotNeeded,
  (Ann (DP (0,7)) (ColDelta 29) DP (0,6) [DComment (DP (0,-8),DP (0,-1)) "Prelude" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:31-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:31-37 CN "IEThingWith" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((AnnComment DComment (DP (0,-3),DP (0,9)) "fromIntegral" Nothing),DP (0,-3)),((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:35-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1-55 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,4)) "," Nothing,DComment (DP (0,1),DP (0,10)) "toInteger" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnPackageName),DP (0,1)),((AnnComment DComment (DP (0,-6),DP (0,7)) "\"integer-gmp\"" Nothing),DP (0,-6)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:29-55 CN "(:)" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 29) DP (0,7) [DComment (DP (0,0),DP (0,22)) "GHC.Integer.Logarithms" Nothing] [((G AnnOpenP),DP (0,-15)),((AnnComment DComment (DP (0,-9),DP (0,-8)) "(" Nothing),DP (0,-9)),((AnnComment DComment (DP (0,1),DP (0,16)) "integerLogBase#" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:31-42 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:31-42 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:45-53 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:45-53 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1-63 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,7),DP (0,8)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-2)) "#else" Nothing),DP (0,-6)),((G AnnPackageName),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:45-63 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:47-61 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:47-61 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 47) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1-26 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,10)) "Data.Bool" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "otherwise" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,9)) "Data.Ord" Nothing,DComment (DP (0,2),DP (0,3)) "(" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "<" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,7)) "\"base\"" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,3),DP (0,4)) "(" Nothing,DComment (DP (0,1),DP (0,4)) "div" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "+" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "$!" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,6)) "error" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,8)) "-- Misc" Nothing,DComment (DP (0,-7),DP (0,73)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,8)) "-- Misc" Nothing,DComment (DP (0,-7),DP (0,73)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,81)) "--------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,29)) "-- ^ Raise 10 to some power." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "dec" Nothing,DComment (DP (0,-3),DP (0,25)) "-- ^ Raise 10 to some power." Nothing,DComment (DP (0,-24),DP (0,-23)) "\8759" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Integral" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "\8658" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,1),DP (0,2)) "\8594" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing] [((AnnUnicode AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnUnicode AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-26 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:8-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:8-17 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 17) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "10" Nothing,DComment (DP (0,1),DP (0,2)) "^" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:22-26 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((AnnUnicode AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:5-12 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:7-12 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:8-9 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:8-11 CN "SectionL" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:11 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1-29 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,65)) "-- ^ The (base 10) logarithm of an integral value. Note that the" Nothing,DComment (DP (1,1),DP (1,65)) "-- ^ The (base 10) logarithm of an integral value. Note that the" Nothing,DComment (DP (0,-64),DP (0,6)) "-- result must be able to fit in an ordinary Int value. This means the" Nothing,DComment (DP (1,1),DP (1,49)) "-- maximum input value is 10 ^ (maxBound \8759 Int)." Nothing,DComment (DP (0,-48),DP (0,22)) "-- result must be able to fit in an ordinary Int value. This means the" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "intLog" Nothing,DComment (DP (0,-6),DP (0,42)) "-- maximum input value is 10 ^ (maxBound \8759 Int)." Nothing,DComment (DP (0,-41),DP (0,-40)) "\8759" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,8)) "Integral" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "\8658" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing,DComment (DP (0,1),DP (0,2)) "\8594" Nothing,DComment (DP (0,1),DP (0,2)) "\945" Nothing] [((AnnComment DComment (DP (0,-6),DP (0,9)) "-- GHC >= 7.2.x" Nothing),DP (0,-6)),((AnnUnicode AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((AnnUnicode AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:11-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:11-20 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:25-29 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((AnnUnicode AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,16)) "-- GHC >= 7.2.x" Nothing,DComment (DP (0,-15),DP (0,14)) "#if __GLASGOW_HASKELL__ >= 702" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "intLog" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,13)) "fromIntegral" Nothing,DComment (DP (0,1),DP (0,2)) "$" Nothing,DComment (DP (0,1),DP (0,3)) "I#" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,15)) "integerLogBase#" Nothing,DComment (DP (0,1),DP (0,3)) "10" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "toInteger" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:8 CN "VarPat" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 8) DP (0,1) [DComment (DP (0,-6),DP (0,-2)) "#else" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:10-63 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:12-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:12-63 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:27-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:27-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:30-63 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:31-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:31-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:31-62 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:47-48 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:50-62 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:51-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:51-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 51) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:61 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 61) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-33,0)) (ColDelta 0) DP (-33,0) [] []))]
==============
([((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:1:1,
    AnnModule),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:9:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:1:1,
    AnnWhere),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:9:26-30]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:1-39,
    AnnImport),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:1-39,
    AnnPackageName),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:8-13]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:1-39,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:23-39,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:39]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:23-39,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:23]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:25-32,
    AnnComma),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:33]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:37]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:35-37,
    AnnVal),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:15:36]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1-35,
    AnnImport),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1-35,
    AnnPackageName),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:8-13]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:1-35,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:29-35,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:35]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:29-35,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:29]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:33]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:31-33,
    AnnVal),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:17:32]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1-39,
    AnnImport),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1-39,
    AnnPackageName),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:8-13]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:1-39,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:29-39,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:39]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:29-39,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:29]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:31-37,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:37]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:31-37,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:18:34]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1-55,
    AnnImport),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1-55,
    AnnPackageName),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:8-13]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:1-55,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:29-55,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:55]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:29-55,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:29]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:31-42,
    AnnComma),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:19:43]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1-63,
    AnnImport),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1-63,
    AnnPackageName),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:8-20]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:1-63,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:45-63,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:63]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:45-63,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:20:45]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1-26,
    AnnDcolon),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:5]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:1-26,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:18]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18,
    AnnDarrow),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:20]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7-18,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:7]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:22-26,
    AnnRarrow),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:32:24]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12,
    AnnEqual),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:5]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12,
    AnnFunId),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-3]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:1-12,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:7-12,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:12]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:7-12,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:33:7]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1-29,
    AnnDcolon),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:8]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:1-29,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:21]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21,
    AnnDarrow),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:23]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10-21,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:10]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:25-29,
    AnnRarrow),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:38:27]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63,
    AnnEqual),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:10]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63,
    AnnFunId),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-6]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:1-63,
    AnnSemi),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:43:1]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:12-63,
    AnnVal),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:25]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:30-63,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:63]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:30-63,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:30]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:50-62,
    AnnCloseP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:62]),
  ((../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:50-62,
    AnnOpenP),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:41:50]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/numerals-0.4/src/Text/Numeral/Misc.hs:43:1])],
 [(<no location info>,
   [AnnLineComment "-- GHC >= 7.2.x",
    AnnLineComment "-- maximum input value is 10 ^ (maxBound \8759 Int).",
    AnnLineComment "-- result must be able to fit in an ordinary Int value. This means the",
    AnnLineComment "-- ^ The (base 10) logarithm of an integral value. Note that the",
    AnnLineComment "-- ^ Raise 10 to some power.",
    AnnLineComment "--------------------------------------------------------------------------------",
    AnnLineComment "-- Misc",
    AnnLineComment "--------------------------------------------------------------------------------",
    AnnLineComment "--------------------------------------------------------------------------------",
    AnnLineComment "-- Imports",
    AnnLineComment "--------------------------------------------------------------------------------",
    AnnBlockComment "{-# LANGUAGE CPP\n           , MagicHash\n           , NoImplicitPrelude\n           , PackageImports\n           , UnicodeSyntax\n  #-}"])])