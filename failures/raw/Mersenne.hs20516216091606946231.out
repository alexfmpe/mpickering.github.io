{-# LANGUAGE CPP, ForeignFunctionInterface, BangPatterns #-}
--------------------------------------------------------------------
-- |
-- Module     : System.Random.Mersenne
-- Copyright  : Copyright (c) 2008, Don Stewart <dons@galois.com>
-- License    : BSD3
-- Maintainer : Don Stewart <dons@galois.com>
-- Stability  : experimental
-- Portability: CPP, FFI
-- Tested with: GHC 6.8.2
--
-- Generate pseudo-random numbers using the SIMD-oriented Fast Mersenne Twister(SFMT)
-- pseudorandom number generator. This is a /much/ faster generator than
-- the default 'System.Random' generator for Haskell (~50x faster
-- generation for Doubles, on a core 2 duo), however, it is not
-- nearly as flexible.
--
-- This library may be compiled with the '-f use_sse2' or '-f
-- use_altivec' flags to configure, on intel and powerpc machines
-- respectively, to enable high performance vector instructions to be used.
-- This typically results in a 2-3x speedup in generation time.
--
-- This will work for newer intel chips such as Pentium 4s, and Core, Core2* chips.
--
module System.Random.Mersenne (

    -- * The random number generator
    MTGen

    -- ** Initialising the generator
    , newMTGen

    -- * Random values of various types

    -- $notes
    , MTRandom(..)

    -- $globalrng
    , getStdRandom
    , getStdGen
    , setStdGen

    -- * Miscellaneous
    , version

    -- $example

    ) where

#if defined(__GLASGOW_HASKELL__) && !defined(__HADDOCK__)
#include "MachDeps.h"
#endif

import Foreign.C.Types
import Foreign.C.String

import System.CPUTime   ( getCPUTime )
import System.Time
import System.IO.Unsafe
-- import Control.Monad

import Data.Word
import Data.Int
import Data.Bits
-- import Data.Char
import Data.IORef

------------------------------------------------------------------------
-- $example
--
-- An example, calculation of pi via a monte carlo method:
--
-- > import System.Random.Mersenne
-- > import System.Environment
--
-- We'll roll the dice 'lim' times,
--
-- > main = do
-- >    [lim] <- mapM readIO =<< getArgs
--
-- Now, define a loop that runs this many times, plotting a 'x' and 'y'
-- position, then working out if its in and outside the circle.
-- The ratio of inside\/total points at then gives us an approximation
-- of pi.
--
-- > let go :: Int -> Int -> IO Double
-- >     go throws ins
-- >         | throws >= lim  = return ((4 * fromIntegral ins) / (fromIntegral throws))
-- >         | otherwise = do
-- >             x <- random g :: IO Double
-- >             y <- random g :: IO Double
-- >             if x * x + y * y < 1
-- >                 then go (throws+1) $! ins + 1
-- >                 else go (throws+1) ins
--
-- Compiling this, '-fexcess-precision', for accurate Doubles,
--
-- > $ ghc -fexcess-precision -fvia-C pi.hs -o pi
-- > $ ./pi 10000000
-- > 3.1417304
--

------------------------------------------------------------------------

-- | A single, global SIMD fast mersenne twister random number generator
-- This generator is evidence that you have initialised the generator,
--
data MTGen = MTGen

-- | Return an initialised SIMD Fast Mersenne Twister.
-- The generator is initialised based on the clock time, if Nothing
-- is passed as a seed. For deterministic behaviour, pass an explicit seed.
--
-- Due to the current SFMT library being vastly impure, currently only a single
-- generator is allowed per-program. Attempts to reinitialise it will fail.
--
newMTGen :: Maybe Word32 -> IO MTGen
newMTGen (Just n) = do
    dup <- c_get_initialized
    if dup == 0
       then do c_init_gen_rand (fromIntegral n)
               return MTGen

       else error $ "System.Random.Mersenne: " ++
                    "Only one mersenne twister generator can be created per process"

newMTGen Nothing = do
    ct             <- getCPUTime
    (TOD sec psec) <- getClockTime
    newMTGen (Just (fromIntegral $ sec * 1013904242 + psec + ct) )

------------------------------------------------------------------------

-- $notes
--
-- Instances MTRandom for Word, Word64, Word32, Word16, Word8
-- all return, quickly, a random inhabintant of that type, in its full
-- range. Similarly for Int types.
--
-- Int and Word will be 32 bits on a 32 bit machine, and 64 on a 64 bit
-- machine. The double precision will be 32 bits on a 32 bit machine,
-- and 53 on a 64 bit machine.
--
-- The MTRandom instance for Double returns a Double in the interval [0,1).
-- The Bool instance takes the lower bit off a random word.

-- | Given an initialised SFMT generator, the MTRandom
-- allows the programmer to extract values of a variety of
-- types.
--
-- Minimal complete definition: 'random'.
--
class MTRandom a where

  -- | The same as 'randomR', but using a default range determined by the type:
  --
  -- * For bounded types (instances of 'Bounded', such as 'Char'),
  --   the range is normally the whole type.
  --
  -- * For fractional types, the range is normally the semi-closed interval
  -- @[0,1)@.
  --
  -- * For 'Integer', the range is (arbitrarily) the range of 'Int'.
  random :: MTGen -> IO a

  -- | Plural variant of 'random', producing an infinite list of
  -- random values instead of returning a new generator.
  randoms  :: MTGen -> IO [a]
  randoms !g = unsafeInterleaveIO $ do
                x  <- random g
                xs <- randoms g
                return (x : xs)
  -- There are real overheads here. Consider eagerly filling chunks
  -- and extracting elements piecewise.

{-
  -- | Takes a range /(lo,hi)/ and a random number generator
  -- /g/, and returns a random value uniformly distributed in the closed
  -- interval /[lo,hi]/, together with a new generator. It is unspecified
  -- what happens if /lo>hi/. For continuous types there is no requirement
  -- that the values /lo/ and /hi/ are ever produced, but they may be,
  -- depending on the implementation and the interval.
  randomR :: (a,a) -> MTGen -> IO a
-}

{-
  -- | Plural variant of 'random', producing an infinite list of
  -- random values instead of returning a new generator.
  randomRs  :: (a,a) -> MTGen -> IO [a]
  randomRs p !g = unsafeInterleaveIO $ do
                x  <- randomR p g
                xs <- randomRs p g
                return (x : xs)
-}

  -- | A variant of 'random' that uses the global random number generator
  -- (see "System.Random#globalrng").
  -- Essentially a convenience function if you're already in IO.
  --
  -- Note that there are performance penalties calling randomIO in an
  -- inner loop, rather than 'random' applied to a global generator. The
  -- cost comes in retrieving the random gen from an IORef, which is
  -- non-trivial. Expect a 3x slow down in speed of random generation.
  randomIO :: IO a
  randomIO = getStdRandom random
  {-# INLINE randomIO #-}

------------------------------------------------------------------------
-- Efficient basic instances

instance MTRandom Word    where
    random !_          = randomWord
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Word64  where
    random !_ = fmap fromIntegral randomWord64
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Word32  where
    random !_ = fmap fromIntegral randomWord
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Word16  where
    random !_ = fmap fromIntegral randomWord
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Word8   where
    random !_          = fmap fromIntegral randomWord
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)

------------------------------------------------------------------------

instance MTRandom Double where
    random !_ = randomDouble
    {-# INLINE random #-}
--    randomR (lo,hi) g = randomIvalDouble g lo hi id

------------------------------------------------------------------------

instance MTRandom Int     where
    random !_          = randomInt
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalInt g lo hi

instance MTRandom Int64   where
    random !_ = fmap fromIntegral randomInt64
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Int32   where
    random !_ = fmap fromIntegral randomInt
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Int16   where
    random !_ = fmap fromIntegral randomInt
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Int8    where
    random !_ = fmap fromIntegral randomInt
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)

instance MTRandom Integer where
    random !_ = fmap fromIntegral randomInt
    {-# INLINE random #-}
--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)

------------------------------------------------------------------------

instance MTRandom Bool    where
    random !_ = do x <- randomWord; return $! x .&. 1 /= 0
    {-# INLINE random #-}

{-
    randomR (a,b) !g = int2Bool `fmap` randomIvalInt g (bool2Int a) (bool2Int b)

        where
            bool2Int :: Bool -> Int
            bool2Int False = 0
            bool2Int True  = 1

            int2Bool :: Int -> Bool
            int2Bool 0 = False
            int2Bool _ = True
-}

------------------------------------------------------------------------

{-
randomIvalInt :: (MTRandom a, Num a) => MTGen -> Int -> Int -> IO a
randomIvalInt g l h
  | l > h     = randomIvalInt g h l
  | otherwise = do
        v <- f n 1
        return $ (fromIntegral (l + v `mod` k))
     where
       k = h - l + 1
       b = maxBound :: Int
       n = iLogBase b k

       f 0 acc = return acc
       f i acc = do
           x <- random g :: IO Int
           f (i-1) (fromIntegral x + acc * b)
{-# INLINE randomIvalInt #-}

iLogBase :: Int -> Int -> Int
iLogBase b i = if i < b then 1 else 1 + iLogBase b (i `div` b)
-}

------------------------------------------------------------------------

{-
randomIvalWord :: (MTRandom a, Num a) => MTGen -> Word -> Word -> IO a
randomIvalWord g l h
  | l > h     = randomIvalWord g h l
  | otherwise = do
        v <- f n 1
        return $ (fromIntegral (l + v `mod` k))
     where
       k = h - l + 1
       b = maxBound :: Word
       n = iLogBaseWord b k

       f 0 acc = return acc
       f i acc = do
           x <- random g :: IO Word
           f (i-1) (fromIntegral x + acc * b)
{-# INLINE randomIvalWord #-}

iLogBaseWord :: Word -> Word -> Word
iLogBaseWord b i = if i < b then 1 else 1 + iLogBaseWord b (i `div` b)
-}

------------------------------------------------------------------------

{-
--
-- Too slow:
--
randomIvalDouble :: (MTRandom a, Fractional a) => MTGen -> Double -> Double -> (Double -> a) -> IO a
randomIvalDouble g l h fromDouble
  | l > h     = randomIvalDouble g h l fromDouble
  | otherwise = do
       x <- random g :: IO Int
       return $ fromDouble ((l+h)/2) +
                fromDouble ((h-l) / realToFrac intRange) *
                fromIntegral x
{-# INLINE randomIvalDouble #-}

intRange :: Integer
intRange = toInteger (maxBound::Int) - toInteger (minBound::Int)
-}
------------------------------------------------------------------------
--
-- Using a single global random number generator
--

{- $globalrng #globalrng#

There is a single, implicit, global random number generator of type
'StdGen', held in some global variable maintained by the 'IO' monad. It is
initialised automatically in some system-dependent fashion. To get
deterministic behaviour, use 'setStdGen'.
-}

theStdGen :: IORef MTGen
theStdGen  = unsafePerformIO $ do
   rng <- newMTGen Nothing
   newIORef rng
{-# NOINLINE theStdGen #-}

-- |Sets the global random number generator.
setStdGen :: MTGen -> IO ()
setStdGen = writeIORef theStdGen

-- |Gets the global random number generator.
getStdGen :: IO MTGen
getStdGen  = readIORef theStdGen

-- | Uses the supplied function to get a value from the current global
-- random generator, and updates the global generator with the new
-- generator returned by the function. For example, @rollDice@ gets a
-- random integer between 1 and 6:
--
-- >  rollDice :: IO Int
-- >  rollDice = getMTRandom (randomR (1,6))
--
getStdRandom :: (MTGen -> IO a) -> IO a
getStdRandom f = do
    st <- readIORef theStdGen
    f st
{-# INLINE getStdRandom #-}

------------------------------------------------------------------------

-- | Returns the identification string for the SMFT version.
-- The string shows the word size, the Mersenne exponent, and all parameters of this generator.
version :: String
version = unsafePerformIO (peekCString =<< c_get_idstring)

------------------------------------------------------------------------
-- Safe primitives: depend on the word size. It's generally not a
-- good idea to mix generation of different types, unless you commit
-- to either 32 or 64 bits only.
--
-- So you should only use these functions for getting at randoms.

randomInt :: IO Int
randomInt = fmap fromIntegral
#if WORD_SIZE_IN_BITS < 64
    c_gen_rand32
#else
    c_gen_rand64
#endif

-- TODO randomWord64, for 32 bit machines

randomWord :: IO Word
randomWord = fmap fromIntegral
#if WORD_SIZE_IN_BITS < 64
    c_gen_rand32
#else
    c_gen_rand64
#endif

randomWord64 :: IO Word64
randomWord64 = fmap fromIntegral
#if WORD_SIZE_IN_BITS < 64
    c_gen_rand64_mix
#else
    c_gen_rand64
#endif

randomInt64 :: IO Int64
randomInt64 = fmap fromIntegral
#if WORD_SIZE_IN_BITS < 64
    c_gen_rand64_mix
#else
    c_gen_rand64
#endif

randomDouble :: IO Double
randomDouble = fmap realToFrac
#if WORD_SIZE_IN_BITS < 64
    c_genrand_real2
#else
    c_genrand_res53
#endif

------------------------------------------------------------------------
-- Generating chunks at a time.
--

{-
min_array_size :: Int
min_array_size = fromIntegral . unsafePerformIO $ -- constant



    c_get_min_array_size64


-- | Fill an array with 'n' random Ints
fill_array :: Ptr Int -> Int -> IO ()
fill_array p n =



    c_fill_array64 (castPtr p) (fromIntegral n)

-}

#else

#endif




#if WORD_SIZE_IN_BITS < 64

#else

#endif


------------------------------------------------------------------------
-- We can have only one mersenne supply in a program.

-- You have to commit at initialisation time to call either
-- rand_gen32 or rand_gen64, and correspondingly, real2 or res53
-- for doubles.
--

type UInt32 = CUInt
type UInt64 = CULLong


-- | This function initializes the internal state array with a 32-bit integer seed.
foreign import ccall unsafe "SFMT.h init_gen_rand"
    c_init_gen_rand         :: UInt32 -> IO ()

-- Getting a random int

-- This function generates and returns 64-bit pseudorandom number.
-- init_gen_rand or init_by_array must be called before this function.
-- The function gen_rand64 should not be called after gen_rand32,
-- unless an initialization is again executed.

#if WORD_SIZE_IN_BITS < 64

foreign import ccall unsafe "SFMT.h gen_rand32"
    c_gen_rand32            :: IO UInt32

foreign import ccall unsafe "SFMT_wrap.h gen_rand64_mix_wrap"
    c_gen_rand64_mix        :: IO UInt64

#else

foreign import ccall unsafe "SFMT.h gen_rand64"
    c_gen_rand64            :: IO UInt64

#endif

-- Getting a random double

-- | Generates a random number on [0,1)-real-interval
-- calls gen_rand32
-- | Generates a random number on [0,1) with 53-bit resolution. Fast on 64 bit machines.
-- calls gen_rand64

-- | generates a random number on [0,1) with 53-bit resolution using
-- 32bit integer

#if WORD_SIZE_IN_BITS < 64
foreign import ccall unsafe "SFMT_wrap.h genrand_real2_wrap"
    c_genrand_real2         :: IO CDouble

-- foreign import ccall unsafe "SFMT.h genrand_res53_mix"
--     c_genrand_res53_mix     :: IO CDouble
#else
foreign import ccall unsafe "SFMT_wrap.h genrand_res53_wrap"
    c_genrand_res53         :: IO CDouble
#endif

------------------------------------------------------------------------

{-
-- Generates a random number on [0,1]-real-interval
-- calls gen_rand32
foreign import ccall unsafe "SFMT.h genrand_real1"
    c_genrand_real1         :: IO CDouble

-- | Generates a random number on (0,1)-real-interval
-- calls gen_rand32
foreign import ccall unsafe "SFMT.h genrand_real3"
    c_genrand_real3         :: IO CDouble
-}

------------------------------------------------------------------------

{-
foreign import ccall unsafe "SFMT.h get_min_array_size32"
    c_get_min_array_size32  :: IO CInt

foreign import ccall unsafe "SFMT.h get_min_array_size64"
    c_get_min_array_size64  :: IO CInt

foreign import ccall unsafe "SFMT.h fill_array32"
    c_fill_array32          :: Ptr UInt32 -> CInt -> IO ()

foreign import ccall unsafe "SFMT.h fill_array64"
    c_fill_array64          :: Ptr UInt64 -> CInt -> IO ()
-}


==============
../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs
==============
lengths:(17131,17609)

==============

({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,60)) "{-# LANGUAGE CPP, ForeignFunctionInterface, BangPatterns #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,69)) "--------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,39)) "-- Module     : System.Random.Mersenne" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- Copyright  : Copyright (c) 2008, Don Stewart <dons@galois.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,21)) "-- License    : BSD3" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,46)) "-- Maintainer : Don Stewart <dons@galois.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,29)) "-- Stability  : experimental" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,25)) "-- Portability: CPP, FFI" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,26)) "-- Tested with: GHC 6.8.2" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,86)) "-- Generate pseudo-random numbers using the SIMD-oriented Fast Mersenne Twister(SFMT)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,73)) "-- pseudorandom number generator. This is a /much/ faster generator than" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- the default 'System.Random' generator for Haskell (~50x faster" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,64)) "-- generation for Doubles, on a core 2 duo), however, it is not" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,23)) "-- nearly as flexible." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,62)) "-- This library may be compiled with the '-f use_sse2' or '-f" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- use_altivec' flags to configure, on intel and powerpc machines" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,76)) "-- respectively, to enable high performance vector instructions to be used." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,64)) "-- This typically results in a 2-3x speedup in generation time." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,84)) "-- This will work for newer intel chips such as Pentium 4s, and Core, Core2* chips." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((G AnnModule),DP (24,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,3)) "--" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,64)) "-- Invariant: we can never call rand32 if we're in 64 bit land," Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- and never call rand64 if in 32 bit land." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,15)) "-- audit this!" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((G AnnEofPos),DP (9,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:25:8-29
     }
    Nothing{ModuleName: System.Random.Mersenne})) 
  (Just 
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(25,31)-(48,5)
     }
    Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,16)) "-- $example" Nothing),DP (2,5)),((G AnnCloseP),DP (4,5))])
    [
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:28:5-9
       }
      Just (Ann (DP (1,5)) (ColDelta 5) DP (3,5) [DComment (DP (2,5),DP (2,37)) "-- * The random number generator" Nothing] [])
      (IEThingAbs 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:28:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,37)) "-- ** Initialising the generator" Nothing),DP (2,5)),((G AnnComma),DP (3,5))])
        (Unqual {OccName: MTGen})))),
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:31:7-14
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:31:7-14
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,40)) "-- * Random values of various types" Nothing),DP (2,5)),((AnnComment DComment (DP (2,5),DP (2,14)) "-- $notes" Nothing),DP (2,5)),((G AnnComma),DP (5,5))])
        (Unqual {OccName: newMTGen})))),
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-18
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,18)) "-- $globalrng" Nothing),DP (2,5)),((G AnnComma),DP (3,5))])
      (IEThingAll 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-14
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: MTRandom})))),
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:39:7-18
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:39:7-18
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,5))])
        (Unqual {OccName: getStdRandom})))),
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:40:7-15
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:40:7-15
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,5))])
        (Unqual {OccName: getStdGen})))),
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:41:7-15
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:41:7-15
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,23)) "-- * Miscellaneous" Nothing),DP (2,5)),((G AnnComma),DP (3,5))])
        (Unqual {OccName: setStdGen})))),
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:44:7-13
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:44:7-13
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: version}))))])) 
  [
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:54:1-22
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,57)) "#if defined(__GLASGOW_HASKELL__) && !defined(__HADDOCK__)" Nothing,DComment (DP (1,1),DP (1,21)) "#include \"MachDeps.h\"" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:54:8-22
       }
      Nothing{ModuleName: Foreign.C.Types}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:8-23
       }
      Nothing{ModuleName: Foreign.C.String}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:1-38
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:8-21
       }
      Nothing{ModuleName: System.CPUTime}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:25-38
         }
        Just (Ann (DP (0,3)) (ColDelta 25) DP (0,3) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:27-36
           }
          Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:27-36
             }
            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: getCPUTime}))))]))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:1-18
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:8-18
       }
      Nothing{ModuleName: System.Time}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:8-23
       }
      Nothing{ModuleName: System.IO.Unsafe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:1-16
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,24)) "-- import Control.Monad" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:8-16
       }
      Nothing{ModuleName: Data.Word}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:1-15
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:8-15
       }
      Nothing{ModuleName: Data.Int}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:1-16
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:8-16
       }
      Nothing{ModuleName: Data.Bits}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:1-17
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,20)) "-- import Data.Char" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:8-17
       }
      Nothing{ModuleName: Data.IORef}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1-18
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (42,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,12)) "-- $example" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,59)) "-- An example, calculation of pi via a monte carlo method:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,35)) "-- > import System.Random.Mersenne" Nothing,DComment (DP (1,1),DP (1,31)) "-- > import System.Environment" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,36)) "-- We'll roll the dice 'lim' times," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,15)) "-- > main = do" Nothing,DComment (DP (1,1),DP (1,41)) "-- >    [lim] <- mapM readIO =<< getArgs" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,72)) "-- Now, define a loop that runs this many times, plotting a 'x' and 'y'" Nothing,DComment (DP (1,1),DP (1,64)) "-- position, then working out if its in and outside the circle." Nothing,DComment (DP (1,1),DP (1,71)) "-- The ratio of inside\\/total points at then gives us an approximation" Nothing,DComment (DP (1,1),DP (1,10)) "-- of pi." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,39)) "-- > let go :: Int -> Int -> IO Double" Nothing,DComment (DP (1,1),DP (1,23)) "-- >     go throws ins" Nothing,DComment (DP (1,1),DP (1,88)) "-- >         | throws >= lim  = return ((4 * fromIntegral ins) / (fromIntegral throws))" Nothing,DComment (DP (1,1),DP (1,30)) "-- >         | otherwise = do" Nothing,DComment (DP (1,1),DP (1,44)) "-- >             x <- random g :: IO Double" Nothing,DComment (DP (1,1),DP (1,44)) "-- >             y <- random g :: IO Double" Nothing,DComment (DP (1,1),DP (1,38)) "-- >             if x * x + y * y < 1" Nothing,DComment (DP (1,1),DP (1,51)) "-- >                 then go (throws+1) $! ins + 1" Nothing,DComment (DP (1,1),DP (1,44)) "-- >                 else go (throws+1) ins" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,63)) "-- Compiling this, '-fexcess-precision', for accurate Doubles," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,50)) "-- > $ ghc -fexcess-precision -fvia-C pi.hs -o pi" Nothing,DComment (DP (1,1),DP (1,21)) "-- > $ ./pi 10000000" Nothing,DComment (DP (1,1),DP (1,15)) "-- > 3.1417304" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,73)) "-- | A single, global SIMD fast mersenne twister random number generator" Nothing,DComment (DP (1,1),DP (1,71)) "-- This generator is evidence that you have initialised the generator," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:6-10
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: MTGen})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:14-18
          }
         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:14-18
             }
            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: MTGen}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1-36
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,55)) "-- | Return an initialised SIMD Fast Mersenne Twister." Nothing,DComment (DP (1,1),DP (1,68)) "-- The generator is initialised based on the clock time, if Nothing" Nothing,DComment (DP (1,1),DP (1,76)) "-- is passed as a seed. For deterministic behaviour, pass an explicit seed." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,80)) "-- Due to the current SFMT library being vastly impure, currently only a single" Nothing,DComment (DP (1,1),DP (1,76)) "-- generator is allowed per-program. Attempts to reinitialise it will fail." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1-8
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: newMTGen}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-36
        }
       Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-36
          }
         Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-24
            }
           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-17
              }
             Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Maybe}))) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:19-24
              }
             Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Word32}))))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:29-36
            }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:29-30
              }
             Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:32-36
              }
             Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MTGen}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(130,66)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:1-8
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: newMTGen})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(125,84)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:1-8
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: newMTGen})) 
            (False))) 
          [
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:10-17
             }
            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:11-16
               }
              Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
              (ConPatIn 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:11-14
                 }
                Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: Just})) 
               (PrefixCon 
                [
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:16
                   }
                  Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: n})))])))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,19)-(125,84)
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,21)-(125,84)
                }
               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(119,5)-(125,84) Ref "delta-1"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:5-28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:5-7
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: dup}))) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:12-28
                     }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: c_get_initialized}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (1,3)),((G AnnElse),DP (2,3))])
                    (HsIf 
                     (Just 
                      (HsLit 
                       (HsString "" {FastString: "noSyntaxExpr"}))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:8-15
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:8-10
                         }
                        Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: dup}))) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:12-13
                         }
                        Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: ==}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:15
                         }
                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsOverLit {HsOverLit:0})))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(121,13)-(122,27)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(121,16)-(122,27) Ref "delta-2"),DP (0,0))])
                      (HsDo 
                       (DoExpr) 
                       [
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-47
                          }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-47
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-30
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: c_init_gen_rand}))) 
                            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:32-47
                              }
                             Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                             (HsPar 
                              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:33-46
                                }
                               Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:33-44
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: fromIntegral}))) 
                                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:46
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: n}))))))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder))),
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16-27
                          }
                         Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                         (BodyStmt 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16-27
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16-21
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: return}))) 
                            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:23-27
                              }
                             Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: MTGen}))))) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (HsLit 
                           (HsString "" {FastString: "noSyntaxExpr"})) 
                          (PlaceHolder)))] 
                       (PlaceHolder))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(124,13)-(125,84)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:13-46
                         }
                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:13-17
                           }
                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: error}))) 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:19
                           }
                          Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: $}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:21-46
                           }
                          Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsLit 
                           (HsString "\"System.Random.Mersenne: \"" {FastString: "System.Random.Mersenne: "}))))) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:48-49
                         }
                        Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: ++}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:125:21-84
                         }
                        Just (Ann (DP (1,16)) (ColDelta 16) DP (1,16) [] [((G AnnVal),DP (0,0))])
                        (HsLit 
                         (HsString "\"Only one mersenne twister generator can be created per process\"" {FastString: "Only one mersenne twister generator can be created per process"}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,1)-(130,66)
          }
         Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:1-8
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: newMTGen})) 
            (False))) 
          [
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:10-16
             }
            Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:10-16
               }
              Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: Nothing})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,18)-(130,66)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,20)-(130,66)
                }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(128,5)-(130,66) Ref "delta-3"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:5-32
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,13))])
                  (BindStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:5-6
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: ct}))) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:23-32
                     }
                    Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: getCPUTime}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-34
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-18
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                    (ParPat 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:6-17
                       }
                      Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:6-8
                         }
                        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: TOD})) 
                       (PrefixCon 
                        [
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:10-12
                           }
                          Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (VarPat 
                           (Unqual {OccName: sec}))),
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:14-17
                           }
                          Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (VarPat 
                           (Unqual {OccName: psec})))]))))) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:23-34
                     }
                    Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: getClockTime}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5-66
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5-66
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5-12
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: newMTGen}))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:14-66
                       }
                      Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
                      (HsPar 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:15-64
                         }
                        Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:15-18
                           }
                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: Just}))) 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:20-64
                           }
                          Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (HsPar 
                           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-63
                             }
                            Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-58
                               }
                              Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                              (OpApp 
                               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-51
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-38
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                                  (OpApp 
                                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-32
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: fromIntegral}))) 
                                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:34
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: $}))) 
                                   (PlaceHolder) 
                                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:36-38
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: sec}))))) 
                                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:40
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: *}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:42-51
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsOverLit {HsOverLit:1013904242})))) 
                               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:53
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: +}))) 
                               (PlaceHolder) 
                               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:55-58
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: psec}))))) 
                             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:60
                               }
                              Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: +}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:62-63
                               }
                              Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: ct}))))))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(153,1)-(206,25)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (23,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,10)) "-- $notes" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,62)) "-- Instances MTRandom for Word, Word64, Word32, Word16, Word8" Nothing,DComment (DP (1,1),DP (1,71)) "-- all return, quickly, a random inhabintant of that type, in its full" Nothing,DComment (DP (1,1),DP (1,35)) "-- range. Similarly for Int types." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,72)) "-- Int and Word will be 32 bits on a 32 bit machine, and 64 on a 64 bit" Nothing,DComment (DP (1,1),DP (1,70)) "-- machine. The double precision will be 32 bits on a 32 bit machine," Nothing,DComment (DP (1,1),DP (1,31)) "-- and 53 on a 64 bit machine." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,76)) "-- The MTRandom instance for Double returns a Double in the interval [0,1)." Nothing,DComment (DP (1,1),DP (1,60)) "-- The Bool instance takes the lower bit off a random word." Nothing,DComment (DP (2,1),DP (2,55)) "-- | Given an initialised SFMT generator, the MTRandom" Nothing,DComment (DP (1,1),DP (1,59)) "-- allows the programmer to extract values of a variety of" Nothing,DComment (DP (1,1),DP (1,10)) "-- types." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,42)) "-- Minimal complete definition: 'random'." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnClass),DP (0,0)),((G AnnWhere),DP (0,1))])
    (TyClD 
     (ClassDecl 
      ({ <no location info> }
       Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
       []) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:7-14
        }
       Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: MTRandom})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:16
          }
         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (UserTyVar 
          (Unqual {OccName: a})))]) 
      [] 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:3-25
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (11,3) [DComment (DP (2,3),DP (2,80)) "-- | The same as 'randomR', but using a default range determined by the type:" Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,67)) "-- * For bounded types (instances of 'Bounded', such as 'Char')," Nothing,DComment (DP (1,3),DP (1,45)) "--   the range is normally the whole type." Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,76)) "-- * For fractional types, the range is normally the semi-closed interval" Nothing,DComment (DP (1,3),DP (1,14)) "-- @[0,1)@." Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,69)) "-- * For 'Integer', the range is (arbitrarily) the range of 'Int'." Nothing] [((G AnnDcolon),DP (0,1))])
        (TypeSig 
         [
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:3-8
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random}))] 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-25
           }
          Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
          (HsForAllTy 
           (Implicit) 
           (Nothing) 
           (HsQTvs 
            [] 
            []) 
           ({ <no location info> }
            Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
            []) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-25
             }
            Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
            (HsFunTy 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-17
               }
              Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: MTGen}))) 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:22-25
               }
              Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:22-23
                 }
                Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: IO}))) 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:25
                 }
                Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: a}))))))))) 
         (PlaceHolder))),
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3-29
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (4,3) [DComment (DP (2,3),DP (2,65)) "-- | Plural variant of 'random', producing an infinite list of" Nothing,DComment (DP (1,3),DP (1,57)) "-- random values instead of returning a new generator." Nothing] [((G AnnDcolon),DP (0,2))])
        (TypeSig 
         [
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3-9
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: randoms}))] 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-29
           }
          Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
          (HsForAllTy 
           (Implicit) 
           (Nothing) 
           (HsQTvs 
            [] 
            []) 
           ({ <no location info> }
            Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
            []) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-29
             }
            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
            (HsFunTy 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-19
               }
              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: MTGen}))) 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:24-29
               }
              Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
              (HsAppTy 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:24-25
                 }
                Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: IO}))) 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:27-29
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                (HsListTy 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:28
                   }
                  Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: a}))))))))))) 
         (PlaceHolder))),
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3-18
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (32,3) [DComment (DP (1,3),DP (1,68)) "-- There are real overheads here. Consider eagerly filling chunks" Nothing,DComment (DP (1,3),DP (1,40)) "-- and extracting elements piecewise." Nothing,DComment (DP (2,1),DP (10,3)) "{-\n  -- | Takes a range /(lo,hi)/ and a random number generator\n  -- /g/, and returns a random value uniformly distributed in the closed\n  -- interval /[lo,hi]/, together with a new generator. It is unspecified\n  -- what happens if /lo>hi/. For continuous types there is no requirement\n  -- that the values /lo/ and /hi/ are ever produced, but they may be,\n  -- depending on the implementation and the interval.\n  randomR :: (a,a) -> MTGen -> IO a\n-}" Nothing,DComment (DP (2,1),DP (10,3)) "{-\n  -- | Plural variant of 'random', producing an infinite list of\n  -- random values instead of returning a new generator.\n  randomRs  :: (a,a) -> MTGen -> IO [a]\n  randomRs p !g = unsafeInterleaveIO $ do\n                x  <- randomR p g\n                xs <- randomRs p g\n                return (x : xs)\n-}" Nothing,DComment (DP (2,3),DP (2,74)) "-- | A variant of 'random' that uses the global random number generator" Nothing,DComment (DP (1,3),DP (1,38)) "-- (see \"System.Random#globalrng\")." Nothing,DComment (DP (1,3),DP (1,65)) "-- Essentially a convenience function if you're already in IO." Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,70)) "-- Note that there are performance penalties calling randomIO in an" Nothing,DComment (DP (1,3),DP (1,73)) "-- inner loop, rather than 'random' applied to a global generator. The" Nothing,DComment (DP (1,3),DP (1,69)) "-- cost comes in retrieving the random gen from an IORef, which is" Nothing,DComment (DP (1,3),DP (1,71)) "-- non-trivial. Expect a 3x slow down in speed of random generation." Nothing] [((G AnnDcolon),DP (0,1))])
        (TypeSig 
         [
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3-10
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: randomIO}))] 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:15-18
           }
          Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
          (HsForAllTy 
           (Implicit) 
           (Nothing) 
           (HsQTvs 
            [] 
            []) 
           ({ <no location info> }
            Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
            []) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:15-18
             }
            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
            (HsAppTy 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:15-16
               }
              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: IO}))) 
             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:18
               }
              Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: a}))))))) 
         (PlaceHolder))),
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:3-25
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
        (InlineSig 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:14-21
           }
          Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
          (Unqual {OccName: randomIO})) 
         (InlinePragma "{-# INLINE" 
          (Inline) 
          (Nothing) 
          (AlwaysActive) 
          (FunLike))))] {Bag(Located (HsBind RdrName)): 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31)
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
        (FunBind 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-9
           }
          Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
          (Unqual {OccName: randoms})) 
         (False) 
         (MG 
          [
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31)
             }
            Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
            (Match 
             (Just 
              ((,) 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-9
                 }
                Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: randoms})) 
               (False))) 
             [
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-12
                }
               Just (Ann (DP (0,-7)) (ColDelta 3) DP (0,-7) [] [((G AnnBang),DP (0,1))])
               (BangPat 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (VarPat 
                  (Unqual {OccName: g})))))] 
             (Nothing) 
             (GRHSs 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,14)-(172,31)
                 }
                Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                (GRHS 
                 [] 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,16)-(172,31)
                   }
                  Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                  (OpApp 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:16-33
                     }
                    Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: unsafeInterleaveIO}))) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:35
                     }
                    Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: $}))) 
                   (PlaceHolder) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,37)-(172,31)
                     }
                    Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(170,17)-(172,31) Ref "delta-4"),DP (0,0))])
                    (HsDo 
                     (DoExpr) 
                     [
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:17-30
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,2))])
                       (BindStmt 
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:17
                          }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (VarPat 
                          (Unqual {OccName: x}))) 
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:23-30
                          }
                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:23-28
                            }
                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: random}))) 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:30
                            }
                           Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: g}))))) 
                        (HsLit 
                         (HsString "" {FastString: "noSyntaxExpr"})) 
                        (HsLit 
                         (HsString "" {FastString: "noSyntaxExpr"})))),
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17-31
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                       (BindStmt 
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17-18
                          }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (VarPat 
                          (Unqual {OccName: xs}))) 
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:23-31
                          }
                         Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:23-29
                            }
                           Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: randoms}))) 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:31
                            }
                           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: g}))))) 
                        (HsLit 
                         (HsString "" {FastString: "noSyntaxExpr"})) 
                        (HsLit 
                         (HsString "" {FastString: "noSyntaxExpr"})))),
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17-31
                        }
                       Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                       (BodyStmt 
                        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17-31
                          }
                         Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17-22
                            }
                           Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: return}))) 
                          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:24-31
                            }
                           Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:25-30
                              }
                             Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:25
                                }
                               Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: x}))) 
                              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:27
                                }
                               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Exact {Name: :}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:29-30
                                }
                               Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: xs}))))))))) 
                        (HsLit 
                         (HsString "" {FastString: "noSyntaxExpr"})) 
                        (HsLit 
                         (HsString "" {FastString: "noSyntaxExpr"})) 
                        (PlaceHolder)))] 
                     (PlaceHolder)))))))] 
              (EmptyLocalBinds))))] 
          [] 
          (PlaceHolder) 
          (FromSource)) 
         (WpHole) 
         (PlaceHolder) 
         [])),
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32
         }
        Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
        (FunBind 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-10
           }
          Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
          (Unqual {OccName: randomIO})) 
         (False) 
         (MG 
          [
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32
             }
            Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
            (Match 
             (Just 
              ((,) 
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-10
                 }
                Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: randomIO})) 
               (False))) 
             [] 
             (Nothing) 
             (GRHSs 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:12-32
                 }
                Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
                (GRHS 
                 [] 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:14-32
                   }
                  Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                  (HsApp 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:14-25
                     }
                    Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: getStdRandom}))) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:27-32
                     }
                    Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: random})))))))] 
              (EmptyLocalBinds))))] 
          [] 
          (PlaceHolder) 
          (FromSource)) 
         (WpHole) 
         (PlaceHolder) 
         []))]} 
      [] 
      [] 
      [] 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(211,1)-(213,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,29)) "-- Efficient basic instances" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,4))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:10-22
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:10-22
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:19-22
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Word}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,10))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:24-35
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:26-35
                    }
                   Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: randomWord})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(216,1)-(218,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,2))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:10-24
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:10-24
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:19-24
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Word64}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:15-46
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:17-46
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:35-46
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomWord64})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(221,1)-(223,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,2))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:10-24
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:10-24
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:19-24
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Word32}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:15-44
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:17-44
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:35-44
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomWord})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(226,1)-(228,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,2))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:10-24
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:10-24
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:19-24
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Word16}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:15-44
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:17-44
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:35-44
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomWord})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(231,1)-(233,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:10-23
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:10-23
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:19-23
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Word8}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,10))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:24-53
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:26-53
                    }
                   Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:26-42
                      }
                     Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:26-29
                        }
                       Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:31-42
                        }
                       Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:44-53
                      }
                     Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomWord})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(238,1)-(240,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:10-24
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:10-24
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:19-24
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Double}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:15-28
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:17-28
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: randomDouble})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(245,1)-(247,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,54)) "--    randomR (lo,hi) g = randomIvalDouble g lo hi id" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,5))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:10-21
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:10-21
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:19-21
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Int}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,10))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:24-34
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:26-34
                    }
                   Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: randomInt})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(250,1)-(252,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,49)) "--    randomR (lo,hi) !g = randomIvalInt g lo hi" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:10-23
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:10-23
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:19-23
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Int64}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:15-45
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:17-45
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:35-45
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomInt64})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(255,1)-(257,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:10-23
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:10-23
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:19-23
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Int32}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:15-43
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:17-43
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:35-43
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomInt})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(260,1)-(262,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:10-23
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:10-23
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:19-23
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Int16}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:15-43
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:17-43
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:35-43
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomInt})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(265,1)-(267,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,4))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:10-22
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:10-22
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:19-22
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Int8}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:15-43
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:17-43
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:35-43
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomInt})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(270,1)-(272,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:10-25
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:10-25
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:19-25
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Integer}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:15-43
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:17-43
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:17-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:17-20
                        }
                       Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fmap}))) 
                      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:22-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: fromIntegral}))))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:35-43
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: randomInt})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(277,1)-(279,25)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,4))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:10-22
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
          []) 
         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:10-22
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:10-17
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: MTRandom}))) 
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:19-22
             }
            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Bool}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: random})) 
                (False))) 
              [
               ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-13
                 }
                Just (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])
                (BangPat 
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:13
                   }
                  Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:15-58
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:17-58
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-58 Ref "delta-5"),DP (0,0))])
                   (HsDo 
                    (DoExpr) 
                    [
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-34
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1)),(AnnSemiSep,DP (0,0))])
                      (BindStmt 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: x}))) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:25-34
                         }
                        Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: randomWord}))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-58
                       }
                      Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
                      (BodyStmt 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-58
                         }
                        Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-53
                           }
                          Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-47
                             }
                            Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
                            (OpApp 
                             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-42
                               }
                              Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: return}))) 
                             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:44-45
                               }
                              Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: $!}))) 
                             (PlaceHolder) 
                             ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:47
                               }
                              Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: x}))))) 
                           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:49-51
                             }
                            Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: .&.}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:53
                             }
                            Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsOverLit {HsOverLit:1})))) 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:55-56
                           }
                          Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: /=}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:58
                           }
                          Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsOverLit {HsOverLit:0})))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (PlaceHolder)))] 
                    (PlaceHolder)))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:5-25
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
         (InlineSig 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:16-21
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: random})) 
          (InlinePragma "{-# INLINE" 
           (Inline) 
           (Nothing) 
           (AlwaysActive) 
           (FunLike))))] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1-24
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (95,1) [DComment (DP (2,1),DP (13,3)) "{-\n    randomR (a,b) !g = int2Bool `fmap` randomIvalInt g (bool2Int a) (bool2Int b)\n\n        where\n            bool2Int :: Bool -> Int\n            bool2Int False = 0\n            bool2Int True  = 1\n\n            int2Bool :: Int -> Bool\n            int2Bool 0 = False\n            int2Bool _ = True\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (22,3)) "{-\nrandomIvalInt :: (MTRandom a, Num a) => MTGen -> Int -> Int -> IO a\nrandomIvalInt g l h\n  | l > h     = randomIvalInt g h l\n  | otherwise = do\n        v <- f n 1\n        return $ (fromIntegral (l + v `mod` k))\n     where\n       k = h - l + 1\n       b = maxBound :: Int\n       n = iLogBase b k\n\n       f 0 acc = return acc\n       f i acc = do\n           x <- random g :: IO Int\n           f (i-1) (fromIntegral x + acc * b)\n{-# INLINE randomIvalInt #-}\n\niLogBase :: Int -> Int -> Int\niLogBase b i = if i < b then 1 else 1 + iLogBase b (i `div` b)\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (22,3)) "{-\nrandomIvalWord :: (MTRandom a, Num a) => MTGen -> Word -> Word -> IO a\nrandomIvalWord g l h\n  | l > h     = randomIvalWord g h l\n  | otherwise = do\n        v <- f n 1\n        return $ (fromIntegral (l + v `mod` k))\n     where\n       k = h - l + 1\n       b = maxBound :: Word\n       n = iLogBaseWord b k\n\n       f 0 acc = return acc\n       f i acc = do\n           x <- random g :: IO Word\n           f (i-1) (fromIntegral x + acc * b)\n{-# INLINE randomIvalWord #-}\n\niLogBaseWord :: Word -> Word -> Word\niLogBaseWord b i = if i < b then 1 else 1 + iLogBaseWord b (i `div` b)\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (18,3)) "{-\n--\n-- Too slow:\n--\nrandomIvalDouble :: (MTRandom a, Fractional a) => MTGen -> Double -> Double -> (Double -> a) -> IO a\nrandomIvalDouble g l h fromDouble\n  | l > h     = randomIvalDouble g h l fromDouble\n  | otherwise = do\n       x <- random g :: IO Int\n       return $ fromDouble ((l+h)/2) +\n                fromDouble ((h-l) / realToFrac intRange) *\n                fromIntegral x\n{-# INLINE randomIvalDouble #-}\n\nintRange :: Integer\nintRange = toInteger (maxBound::Int) - toInteger (minBound::Int)\n-}" Nothing,DComment (DP (1,1),DP (1,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,49)) "-- Using a single global random number generator" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (8,3)) "{- $globalrng #globalrng#\n\nThere is a single, implicit, global random number generator of type\n'StdGen', held in some global variable maintained by the 'IO' monad. It is\ninitialised automatically in some system-dependent fashion. To get\ndeterministic behaviour, use 'setStdGen'.\n-}" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: theStdGen}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:14-24
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:14-24
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:14-18
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IORef}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:20-24
            }
           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: MTGen}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: theStdGen})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: theStdGen})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,12)-(377,15)
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,14)-(377,15)
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:14-28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: unsafePerformIO}))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:30
                  }
                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,32)-(377,15)
                  }
                 Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(376,4)-(377,15) Ref "delta-6"),DP (0,0))])
                 (HsDo 
                  (DoExpr) 
                  [
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:4-26
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                    (BindStmt 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:4-6
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: rng}))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:11-26
                       }
                      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:11-18
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: newMTGen}))) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:20-26
                         }
                        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: Nothing}))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})))),
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4-15
                     }
                    Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                    (BodyStmt 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4-15
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4-11
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: newIORef}))) 
                       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:13-15
                         }
                        Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: rng}))))) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"})) 
                     (PlaceHolder)))] 
                  (PlaceHolder)))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1-26
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:14-22
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: theStdGen})) 
      (InlinePragma "{-# NOINLINE" 
       (NoInline) 
       (Nothing) 
       (NeverActive) 
       (FunLike))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,45)) "-- |Sets the global random number generator." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: setStdGen}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-27
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-27
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-18
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: MTGen}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:23-27
            }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:23-24
              }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:26-27
              }
             Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: setStdGen})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: setStdGen})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:11-32
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:13-32
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:13-22
                  }
                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: writeIORef}))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:24-32
                  }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: theStdGen})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1-21
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,45)) "-- |Gets the global random number generator." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: getStdGen}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:14-21
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:14-21
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:14-15
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:17-21
            }
           Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: MTGen}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: getStdGen})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: getStdGen})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:12-32
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:14-32
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:14-22
                  }
                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: readIORef}))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:24-32
                  }
                 Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: theStdGen})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1-39
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (10,1) [DComment (DP (2,1),DP (2,71)) "-- | Uses the supplied function to get a value from the current global" Nothing,DComment (DP (1,1),DP (1,67)) "-- random generator, and updates the global generator with the new" Nothing,DComment (DP (1,1),DP (1,70)) "-- generator returned by the function. For example, @rollDice@ gets a" Nothing,DComment (DP (1,1),DP (1,35)) "-- random integer between 1 and 6:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,25)) "-- >  rollDice :: IO Int" Nothing,DComment (DP (1,1),DP (1,45)) "-- >  rollDice = getMTRandom (randomR (1,6))" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: getStdRandom}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-39
        }
       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-39
          }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-31
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
           (HsParTy 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:18-30
              }
             Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
             (HsFunTy 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:18-22
                }
               Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: MTGen}))) 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:27-30
                }
               Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
               (HsAppTy 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:27-28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: IO}))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:30
                  }
                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsTyVar 
                  (Unqual {OccName: a}))))))))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:36-39
            }
           Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:36-37
              }
             Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:39
              }
             Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: a}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: getStdRandom})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: getStdRandom})) 
            (False))) 
          [
           ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:14
             }
            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: f})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,16)-(399,8)
              }
             Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,18)-(399,8)
                }
               Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(398,5)-(399,8) Ref "delta-7"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:5-29
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:5-6
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: st}))) 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:11-29
                     }
                    Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:11-19
                       }
                      Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: readIORef}))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:21-29
                       }
                      Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: theStdGen}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5-8
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5-8
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: f}))) 
                     ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:7-8
                       }
                      Just (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: st}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:12-23
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: getStdRandom})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1-17
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,61)) "-- | Returns the identification string for the SMFT version." Nothing,DComment (DP (1,1),DP (1,96)) "-- The string shows the word size, the Mersenne exponent, and all parameters of this generator." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1-7
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: version}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:12-17
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:12-17
          }
         Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: String}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-7
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: version})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-7
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: version})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:9-58
              }
             Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:11-58
                }
               Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:11-25
                  }
                 Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: unsafePerformIO}))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:27-58
                  }
                 Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsPar 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:28-57
                    }
                   Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:28-38
                      }
                     Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: peekCString}))) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:40-42
                      }
                     Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: =<<}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:44-57
                      }
                     Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: c_get_idstring})))))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1-19
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,66)) "-- Safe primitives: depend on the word size. It's generally not a" Nothing,DComment (DP (1,1),DP (1,69)) "-- good idea to mix generation of different types, unless you commit" Nothing,DComment (DP (1,1),DP (1,33)) "-- to either 32 or 64 bits only." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,66)) "-- So you should only use these functions for getting at randoms." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: randomInt}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:14-19
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:14-19
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:14-15
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:17-19
            }
           Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: randomInt})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: randomInt})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,11)-(421,16)
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,13)-(421,16)
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:13-29
                  }
                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:13-16
                    }
                   Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fmap}))) 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:18-29
                    }
                   Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fromIntegral}))))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:421:5-16
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,17)) "c_gen_rand32" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: c_gen_rand64})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1-21
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,42)) "-- TODO randomWord64, for 32 bit machines" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1-10
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: randomWord}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:15-21
        }
       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:15-21
          }
         Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:15-16
            }
           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:18-21
            }
           Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Word}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:1-10
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: randomWord})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:1-10
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: randomWord})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,12)-(431,16)
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,14)-(431,16)
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:14-30
                  }
                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:14-17
                    }
                   Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fmap}))) 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:19-30
                    }
                   Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fromIntegral}))))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:431:5-16
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,17)) "c_gen_rand32" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: c_gen_rand64})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1-25
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: randomWord64}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:17-25
        }
       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:17-25
          }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:17-18
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:20-25
            }
           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Word64}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: randomWord64})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: randomWord64})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,14)-(439,16)
              }
             Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,16)-(439,16)
                }
               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:16-32
                  }
                 Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:16-19
                    }
                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fmap}))) 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:21-32
                    }
                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fromIntegral}))))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:439:5-16
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,21)) "c_gen_rand64_mix" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: c_gen_rand64})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1-23
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: randomInt64}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:16-23
        }
       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:16-23
          }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:16-17
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:19-23
            }
           Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Int64}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: randomInt64})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: randomInt64})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,13)-(447,16)
              }
             Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,15)-(447,16)
                }
               Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:15-31
                  }
                 Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:15-18
                    }
                   Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fmap}))) 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:20-31
                    }
                   Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fromIntegral}))))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:447:5-16
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,21)) "c_gen_rand64_mix" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: c_gen_rand64})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1-25
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: randomDouble}))] 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:17-25
        }
       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:17-25
          }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:17-18
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:20-25
            }
           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Double}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: randomDouble})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: randomDouble})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,14)-(455,19)
              }
             Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,16)-(455,19)
                }
               Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:16-30
                  }
                 Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:16-19
                    }
                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: fmap}))) 
                  ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:21-30
                    }
                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: realToFrac}))))) 
                ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:455:5-19
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,20)) "c_genrand_real2" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: c_genrand_res53})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1-19
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (34,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,32)) "-- Generating chunks at a time." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (19,3)) "{-\nmin_array_size :: Int\nmin_array_size = fromIntegral . unsafePerformIO $ -- constant\n\n\n\n    c_get_min_array_size64\n\n\n-- | Fill an array with 'n' random Ints\nfill_array :: Ptr Int -> Int -> IO ()\nfill_array p n =\n\n\n\n    c_fill_array64 (castPtr p) (fromIntegral n)\n\n-}" Nothing,DComment (DP (-14,1),DP (-14,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing,DComment (DP (2,1),DP (2,6)) "#endif" Nothing,DComment (DP (5,1),DP (5,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing,DComment (DP (2,1),DP (2,6)) "#endif" Nothing,DComment (DP (3,1),DP (3,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,54)) "-- We can have only one mersenne supply in a program." Nothing,DComment (DP (2,1),DP (2,60)) "-- You have to commit at initialisation time to call either" Nothing,DComment (DP (1,1),DP (1,65)) "-- rand_gen32 or rand_gen64, and correspondingly, real2 or res53" Nothing,DComment (DP (1,1),DP (1,16)) "-- for doubles." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (SynDecl 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:6-11
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: UInt32})) 
      (HsQTvs 
       [] 
       []) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:15-19
        }
       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (HsTyVar 
        (Unqual {OccName: CUInt}))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1-21
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (SynDecl 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:6-11
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: UInt64})) 
      (HsQTvs 
       [] 
       []) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:15-21
        }
       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (HsTyVar 
        (Unqual {OccName: CULLong}))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(494,1)-(495,46)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (3,1),DP (3,84)) "-- | This function initializes the internal state array with a 32-bit integer seed." Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,9))])
    (ForD 
     (ForeignImport 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:5-19
        }
       Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: c_init_gen_rand})) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-46
        }
       Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-46
          }
         Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-37
            }
           Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: UInt32}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:42-46
            }
           Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:42-43
              }
             Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:45-46
              }
             Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder) 
      (CImport 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:16-20
         }
        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (CCallConv)) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:22-27
         }
        Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (PlayRisky)) 
       (Just 
        (Header {FastString: "SFMT.h"})) 
       (CFunction 
        (StaticTarget {FastString: "init_gen_rand"} 
         (Nothing) 
         (True))) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:29-50
         }
        Nothing"SFMT.h init_gen_rand"))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(514,1)-(515,40)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (19,1) [DComment (DP (2,1),DP (2,24)) "-- Getting a random int" Nothing,DComment (DP (2,1),DP (2,67)) "-- This function generates and returns 64-bit pseudorandom number." Nothing,DComment (DP (1,1),DP (1,71)) "-- init_gen_rand or init_by_array must be called before this function." Nothing,DComment (DP (1,1),DP (1,66)) "-- The function gen_rand64 should not be called after gen_rand32," Nothing,DComment (DP (1,1),DP (1,47)) "-- unless an initialization is again executed." Nothing,DComment (DP (2,1),DP (2,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "foreign" Nothing,DComment (DP (0,1),DP (0,7)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "ccall" Nothing,DComment (DP (0,1),DP (0,7)) "unsafe" Nothing,DComment (DP (0,1),DP (0,20)) "\"SFMT.h gen_rand32\"" Nothing,DComment (DP (1,5),DP (1,17)) "c_gen_rand32" Nothing,DComment (DP (0,12),DP (0,14)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "UInt32" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "foreign" Nothing,DComment (DP (0,1),DP (0,7)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "ccall" Nothing,DComment (DP (0,1),DP (0,7)) "unsafe" Nothing,DComment (DP (0,1),DP (0,34)) "\"SFMT_wrap.h gen_rand64_mix_wrap\"" Nothing,DComment (DP (1,5),DP (1,21)) "c_gen_rand64_mix" Nothing,DComment (DP (0,8),DP (0,10)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "UInt64" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,12))])
    (ForD 
     (ForeignImport 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:5-16
        }
       Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: c_gen_rand64})) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:32-40
        }
       Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:32-40
          }
         Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:32-33
            }
           Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:35-40
            }
           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: UInt64}))))))) 
      (PlaceHolder) 
      (CImport 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:16-20
         }
        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (CCallConv)) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:22-27
         }
        Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (PlayRisky)) 
       (Just 
        (Header {FastString: "SFMT.h"})) 
       (CFunction 
        (StaticTarget {FastString: "gen_rand64"} 
         (Nothing) 
         (True))) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:29-47
         }
        Nothing"SFMT.h gen_rand64"))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(536,1)-(537,41)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (21,1) [DComment (DP (2,1),DP (2,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,27)) "-- Getting a random double" Nothing,DComment (DP (2,1),DP (2,54)) "-- | Generates a random number on [0,1)-real-interval" Nothing,DComment (DP (1,1),DP (1,20)) "-- calls gen_rand32" Nothing,DComment (DP (1,1),DP (1,89)) "-- | Generates a random number on [0,1) with 53-bit resolution. Fast on 64 bit machines." Nothing,DComment (DP (1,1),DP (1,20)) "-- calls gen_rand64" Nothing,DComment (DP (2,1),DP (2,69)) "-- | generates a random number on [0,1) with 53-bit resolution using" Nothing,DComment (DP (1,1),DP (1,17)) "-- 32bit integer" Nothing,DComment (DP (2,1),DP (2,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "foreign" Nothing,DComment (DP (0,1),DP (0,7)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "ccall" Nothing,DComment (DP (0,1),DP (0,7)) "unsafe" Nothing,DComment (DP (0,1),DP (0,33)) "\"SFMT_wrap.h genrand_real2_wrap\"" Nothing,DComment (DP (1,5),DP (1,20)) "c_genrand_real2" Nothing,DComment (DP (0,9),DP (0,11)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,8)) "CDouble" Nothing,DComment (DP (2,1),DP (2,58)) "-- foreign import ccall unsafe \"SFMT.h genrand_res53_mix\"" Nothing,DComment (DP (1,1),DP (1,45)) "--     c_genrand_res53_mix     :: IO CDouble" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,9))])
    (ForD 
     (ForeignImport 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:5-19
        }
       Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: c_genrand_res53})) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:32-41
        }
       Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:32-41
          }
         Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:32-33
            }
           Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:35-41
            }
           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: CDouble}))))))) 
      (PlaceHolder) 
      (CImport 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:16-20
         }
        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (CCallConv)) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:22-27
         }
        Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (PlayRisky)) 
       (Just 
        (Header {FastString: "SFMT_wrap.h"})) 
       (CFunction 
        (StaticTarget {FastString: "genrand_res53_wrap"} 
         (Nothing) 
         (True))) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:29-60
         }
        Nothing"SFMT_wrap.h genrand_res53_wrap"))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(572,1)-(573,41)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (35,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (12,3)) "{-\n-- Generates a random number on [0,1]-real-interval\n-- calls gen_rand32\nforeign import ccall unsafe \"SFMT.h genrand_real1\"\n    c_genrand_real1         :: IO CDouble\n\n-- | Generates a random number on (0,1)-real-interval\n-- calls gen_rand32\nforeign import ccall unsafe \"SFMT.h genrand_real3\"\n    c_genrand_real3         :: IO CDouble\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (14,3)) "{-\nforeign import ccall unsafe \"SFMT.h get_min_array_size32\"\n    c_get_min_array_size32  :: IO CInt\n\nforeign import ccall unsafe \"SFMT.h get_min_array_size64\"\n    c_get_min_array_size64  :: IO CInt\n\nforeign import ccall unsafe \"SFMT.h fill_array32\"\n    c_fill_array32          :: Ptr UInt32 -> CInt -> IO ()\n\nforeign import ccall unsafe \"SFMT.h fill_array64\"\n    c_fill_array64          :: Ptr UInt64 -> CInt -> IO ()\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,10))])
    (ForD 
     (ForeignImport 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:5-18
        }
       Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: c_get_idstring})) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:32-41
        }
       Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:32-41
          }
         Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:32-33
            }
           Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:35-41
            }
           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: CString}))))))) 
      (PlaceHolder) 
      (CImport 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:16-20
         }
        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (CCallConv)) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:22-27
         }
        Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (PlayRisky)) 
       (Just 
        (Header {FastString: "SFMT.h"})) 
       (CFunction 
        (StaticTarget {FastString: "get_idstring"} 
         (Nothing) 
         (True))) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:29-49
         }
        Nothing"SFMT.h get_idstring"))))),
   ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(575,1)-(576,39)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,8))])
    (ForD 
     (ForeignImport 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:5-21
        }
       Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: c_get_initialized})) 
      ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:33-39
        }
       Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] [])
         []) 
        ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:33-39
          }
         Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:33-34
            }
           Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:36-39
            }
           Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: CInt}))))))) 
      (PlaceHolder) 
      (CImport 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:16-20
         }
        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (CCallConv)) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:22-27
         }
        Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
        (PlayRisky)) 
       (Just 
        (Header {FastString: "SFMT.h"})) 
       (CFunction 
        (StaticTarget {FastString: "get_initialized"} 
         (Nothing) 
         (True))) 
       ({ ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:29-52
         }
        Nothing"SFMT.h get_initialized")))))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,60)) "{-# LANGUAGE CPP, ForeignFunctionInterface, BangPatterns #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,69)) "--------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,39)) "-- Module     : System.Random.Mersenne" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- Copyright  : Copyright (c) 2008, Don Stewart <dons@galois.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,21)) "-- License    : BSD3" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,46)) "-- Maintainer : Don Stewart <dons@galois.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,29)) "-- Stability  : experimental" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,25)) "-- Portability: CPP, FFI" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,26)) "-- Tested with: GHC 6.8.2" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,86)) "-- Generate pseudo-random numbers using the SIMD-oriented Fast Mersenne Twister(SFMT)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,73)) "-- pseudorandom number generator. This is a /much/ faster generator than" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- the default 'System.Random' generator for Haskell (~50x faster" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,64)) "-- generation for Doubles, on a core 2 duo), however, it is not" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,23)) "-- nearly as flexible." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,62)) "-- This library may be compiled with the '-f use_sse2' or '-f" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- use_altivec' flags to configure, on intel and powerpc machines" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,76)) "-- respectively, to enable high performance vector instructions to be used." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,64)) "-- This typically results in a 2-3x speedup in generation time." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,84)) "-- This will work for newer intel chips such as Pentium 4s, and Core, Core2* chips." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((G AnnModule),DP (24,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (2,1),DP (2,3)) "--" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,64)) "-- Invariant: we can never call rand32 if we're in 64 bit land," Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- and never call rand64 if in 32 bit land." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,15)) "-- audit this!" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((G AnnEofPos),DP (9,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(25,31)-(48,5) CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,16)) "-- $example" Nothing),DP (2,5)),((G AnnCloseP),DP (4,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:28:5-9 CN "IEThingAbs" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (3,5) [DComment (DP (2,5),DP (2,37)) "-- * The random number generator" Nothing] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:28:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,37)) "-- ** Initialising the generator" Nothing),DP (2,5)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:31:7-14 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:31:7-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,40)) "-- * Random values of various types" Nothing),DP (2,5)),((AnnComment DComment (DP (2,5),DP (2,14)) "-- $notes" Nothing),DP (2,5)),((G AnnComma),DP (5,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-18 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,18)) "-- $globalrng" Nothing),DP (2,5)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:39:7-18 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:39:7-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:40:7-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:40:7-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:41:7-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:41:7-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (2,5),DP (2,23)) "-- * Miscellaneous" Nothing),DP (2,5)),((G AnnComma),DP (3,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:44:7-13 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:44:7-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:54:1-22 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,57)) "#if defined(__GLASGOW_HASKELL__) && !defined(__HADDOCK__)" Nothing,DComment (DP (1,1),DP (1,21)) "#include \"MachDeps.h\"" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:1-38 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:25-38 CN "(:)" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 25) DP (0,3) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:27-36 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:27-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:1-18 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:1-16 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,24)) "-- import Control.Monad" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:1-15 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:1-16 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:1-17 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,20)) "-- import Data.Char" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1-18 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (42,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,12)) "-- $example" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,59)) "-- An example, calculation of pi via a monte carlo method:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,35)) "-- > import System.Random.Mersenne" Nothing,DComment (DP (1,1),DP (1,31)) "-- > import System.Environment" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,36)) "-- We'll roll the dice 'lim' times," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,15)) "-- > main = do" Nothing,DComment (DP (1,1),DP (1,41)) "-- >    [lim] <- mapM readIO =<< getArgs" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,72)) "-- Now, define a loop that runs this many times, plotting a 'x' and 'y'" Nothing,DComment (DP (1,1),DP (1,64)) "-- position, then working out if its in and outside the circle." Nothing,DComment (DP (1,1),DP (1,71)) "-- The ratio of inside\\/total points at then gives us an approximation" Nothing,DComment (DP (1,1),DP (1,10)) "-- of pi." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,39)) "-- > let go :: Int -> Int -> IO Double" Nothing,DComment (DP (1,1),DP (1,23)) "-- >     go throws ins" Nothing,DComment (DP (1,1),DP (1,88)) "-- >         | throws >= lim  = return ((4 * fromIntegral ins) / (fromIntegral throws))" Nothing,DComment (DP (1,1),DP (1,30)) "-- >         | otherwise = do" Nothing,DComment (DP (1,1),DP (1,44)) "-- >             x <- random g :: IO Double" Nothing,DComment (DP (1,1),DP (1,44)) "-- >             y <- random g :: IO Double" Nothing,DComment (DP (1,1),DP (1,38)) "-- >             if x * x + y * y < 1" Nothing,DComment (DP (1,1),DP (1,51)) "-- >                 then go (throws+1) $! ins + 1" Nothing,DComment (DP (1,1),DP (1,44)) "-- >                 else go (throws+1) ins" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,63)) "-- Compiling this, '-fexcess-precision', for accurate Doubles," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,50)) "-- > $ ghc -fexcess-precision -fvia-C pi.hs -o pi" Nothing,DComment (DP (1,1),DP (1,21)) "-- > $ ./pi 10000000" Nothing,DComment (DP (1,1),DP (1,15)) "-- > 3.1417304" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,73)) "-- | A single, global SIMD fast mersenne twister random number generator" Nothing,DComment (DP (1,1),DP (1,71)) "-- This generator is evidence that you have initialised the generator," Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:6-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:14-18 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:14-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1-36 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,55)) "-- | Return an initialised SIMD Fast Mersenne Twister." Nothing,DComment (DP (1,1),DP (1,68)) "-- The generator is initialised based on the clock time, if Nothing" Nothing,DComment (DP (1,1),DP (1,76)) "-- is passed as a seed. For deterministic behaviour, pass an explicit seed." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,80)) "-- Due to the current SFMT library being vastly impure, currently only a single" Nothing,DComment (DP (1,1),DP (1,76)) "-- generator is allowed per-program. Attempts to reinitialise it will fail." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-36 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-36 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:29-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:29-36 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:32-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(125,84) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(130,66) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:10-17 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:11-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:11-16 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,19)-(125,84) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,21)-(125,84) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(119,5)-(125,84) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:5-7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:5-28 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(119,5)-(125,84) CN "(:)" Ref "delta-1",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:12-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84) CN "HsIf" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnIf),DP (0,0)),((G AnnThen),DP (1,3)),((G AnnElse),DP (2,3))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:8-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:8-15 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:12-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:15 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(121,13)-(122,27) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(121,16)-(122,27) Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-47 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(121,16)-(122,27) CN "(:)" Ref "delta-2",
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:32-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:33-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:33-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16-27 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:23-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:13-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:13-46 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(124,13)-(125,84) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:21-46 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:48-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:125:21-84 CN "HsLit" NotNeeded,
  (Ann (DP (1,16)) (ColDelta 16) DP (1,16) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:1-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,1)-(130,66) CN "Match" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:10-16 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:10-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,18)-(130,66) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,20)-(130,66) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(128,5)-(130,66) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:5-32 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,13))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(128,5)-(130,66) CN "(:)" Ref "delta-3",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-18 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-34 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:6-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:6-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:10-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:14-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:23-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5-66 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:14-66 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:15-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:15-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:20-64 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-38 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-51 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-63 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:36-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:42-51 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:55-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:62-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(153,1)-(206,25) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (23,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,10)) "-- $notes" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,62)) "-- Instances MTRandom for Word, Word64, Word32, Word16, Word8" Nothing,DComment (DP (1,1),DP (1,71)) "-- all return, quickly, a random inhabintant of that type, in its full" Nothing,DComment (DP (1,1),DP (1,35)) "-- range. Similarly for Int types." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,72)) "-- Int and Word will be 32 bits on a 32 bit machine, and 64 on a 64 bit" Nothing,DComment (DP (1,1),DP (1,70)) "-- machine. The double precision will be 32 bits on a 32 bit machine," Nothing,DComment (DP (1,1),DP (1,31)) "-- and 53 on a 64 bit machine." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,76)) "-- The MTRandom instance for Double returns a Double in the interval [0,1)." Nothing,DComment (DP (1,1),DP (1,60)) "-- The Bool instance takes the lower bit off a random word." Nothing,DComment (DP (2,1),DP (2,55)) "-- | Given an initialised SFMT generator, the MTRandom" Nothing,DComment (DP (1,1),DP (1,59)) "-- allows the programmer to extract values of a variety of" Nothing,DComment (DP (1,1),DP (1,10)) "-- types." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,42)) "-- Minimal complete definition: 'random'." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnClass),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:7-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:16 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:3-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:3-25 CN "TypeSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (11,3) [DComment (DP (2,3),DP (2,80)) "-- | The same as 'randomR', but using a default range determined by the type:" Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,67)) "-- * For bounded types (instances of 'Bounded', such as 'Char')," Nothing,DComment (DP (1,3),DP (1,45)) "--   the range is normally the whole type." Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,76)) "-- * For fractional types, the range is normally the semi-closed interval" Nothing,DComment (DP (1,3),DP (1,14)) "-- @[0,1)@." Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,69)) "-- * For 'Integer', the range is (arbitrarily) the range of 'Int'." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-25 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:22-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:22-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3-29 CN "TypeSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (4,3) [DComment (DP (2,3),DP (2,65)) "-- | Plural variant of 'random', producing an infinite list of" Nothing,DComment (DP (1,3),DP (1,57)) "-- random values instead of returning a new generator." Nothing] [((G AnnDcolon),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-29 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:24-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:24-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:27-29 CN "HsListTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-12 CN "BangPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 3) DP (0,-7) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31) CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,14)-(172,31) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:16-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,16)-(172,31) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,37)-(172,31) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(170,17)-(172,31) Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:17-30 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(170,17)-(172,31) CN "(:)" Ref "delta-4",
  (Ann (DP (1,0)) (ColDelta 17) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:23-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:23-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17-18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17-31 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:23-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:23-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17-31 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:24-31 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:25-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3-18 CN "TypeSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (32,3) [DComment (DP (1,3),DP (1,68)) "-- There are real overheads here. Consider eagerly filling chunks" Nothing,DComment (DP (1,3),DP (1,40)) "-- and extracting elements piecewise." Nothing,DComment (DP (2,1),DP (10,3)) "{-\n  -- | Takes a range /(lo,hi)/ and a random number generator\n  -- /g/, and returns a random value uniformly distributed in the closed\n  -- interval /[lo,hi]/, together with a new generator. It is unspecified\n  -- what happens if /lo>hi/. For continuous types there is no requirement\n  -- that the values /lo/ and /hi/ are ever produced, but they may be,\n  -- depending on the implementation and the interval.\n  randomR :: (a,a) -> MTGen -> IO a\n-}" Nothing,DComment (DP (2,1),DP (10,3)) "{-\n  -- | Plural variant of 'random', producing an infinite list of\n  -- random values instead of returning a new generator.\n  randomRs  :: (a,a) -> MTGen -> IO [a]\n  randomRs p !g = unsafeInterleaveIO $ do\n                x  <- randomR p g\n                xs <- randomRs p g\n                return (x : xs)\n-}" Nothing,DComment (DP (2,3),DP (2,74)) "-- | A variant of 'random' that uses the global random number generator" Nothing,DComment (DP (1,3),DP (1,38)) "-- (see \"System.Random#globalrng\")." Nothing,DComment (DP (1,3),DP (1,65)) "-- Essentially a convenience function if you're already in IO." Nothing,DComment (DP (1,3),DP (1,5)) "--" Nothing,DComment (DP (1,3),DP (1,70)) "-- Note that there are performance penalties calling randomIO in an" Nothing,DComment (DP (1,3),DP (1,73)) "-- inner loop, rather than 'random' applied to a global generator. The" Nothing,DComment (DP (1,3),DP (1,69)) "-- cost comes in retrieving the random gen from an IORef, which is" Nothing,DComment (DP (1,3),DP (1,71)) "-- non-trivial. Expect a 3x slow down in speed of random generation." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:15-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:15-18 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:15-18 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:12-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:14-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:14-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:27-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:3-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:14-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(211,1)-(213,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,29)) "-- Efficient basic instances" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,4))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:10-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:10-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:19-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,10))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:24-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:26-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(216,1)-(218,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:10-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:10-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:15-46 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:17-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:35-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(221,1)-(223,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:10-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:10-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:15-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:17-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:35-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(226,1)-(228,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:10-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:10-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:15-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:17-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:35-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(231,1)-(233,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:19-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,10))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:24-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:26-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:26-42 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:26-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:31-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:44-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(238,1)-(240,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,80)) "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:10-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:10-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:15-28 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:17-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(245,1)-(247,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,54)) "--    randomR (lo,hi) g = randomIvalDouble g lo hi id" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,5))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:10-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:10-21 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:19-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,10))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:24-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:26-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(250,1)-(252,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,49)) "--    randomR (lo,hi) !g = randomIvalInt g lo hi" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:19-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:15-45 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:17-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:35-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(255,1)-(257,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:19-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:15-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:17-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:35-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(260,1)-(262,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,3))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:19-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:15-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:17-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:35-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(265,1)-(267,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,4))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:10-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:10-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:19-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:15-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:17-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:35-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(270,1)-(272,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:10-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:10-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:19-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:15-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:17-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:17-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:22-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:35-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(277,1)-(279,25) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,79)) "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,4))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:10-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:10-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:10-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:19-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-13 CN "BangPat" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 5) DP (0,-6) [] [((G AnnBang),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:15-58 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:17-58 CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-58 Ref "delta-5"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-34 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1)),(AnnSemiSep,DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-58 CN "(:)" Ref "delta-5",
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:25-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-58 CN "BodyStmt" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-58 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:44-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:49-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:53 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:55-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:58 CN "HsOverLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:5-25 CN "InlineSig" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:16-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1-24 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (95,1) [DComment (DP (2,1),DP (13,3)) "{-\n    randomR (a,b) !g = int2Bool `fmap` randomIvalInt g (bool2Int a) (bool2Int b)\n\n        where\n            bool2Int :: Bool -> Int\n            bool2Int False = 0\n            bool2Int True  = 1\n\n            int2Bool :: Int -> Bool\n            int2Bool 0 = False\n            int2Bool _ = True\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (22,3)) "{-\nrandomIvalInt :: (MTRandom a, Num a) => MTGen -> Int -> Int -> IO a\nrandomIvalInt g l h\n  | l > h     = randomIvalInt g h l\n  | otherwise = do\n        v <- f n 1\n        return $ (fromIntegral (l + v `mod` k))\n     where\n       k = h - l + 1\n       b = maxBound :: Int\n       n = iLogBase b k\n\n       f 0 acc = return acc\n       f i acc = do\n           x <- random g :: IO Int\n           f (i-1) (fromIntegral x + acc * b)\n{-# INLINE randomIvalInt #-}\n\niLogBase :: Int -> Int -> Int\niLogBase b i = if i < b then 1 else 1 + iLogBase b (i `div` b)\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (22,3)) "{-\nrandomIvalWord :: (MTRandom a, Num a) => MTGen -> Word -> Word -> IO a\nrandomIvalWord g l h\n  | l > h     = randomIvalWord g h l\n  | otherwise = do\n        v <- f n 1\n        return $ (fromIntegral (l + v `mod` k))\n     where\n       k = h - l + 1\n       b = maxBound :: Word\n       n = iLogBaseWord b k\n\n       f 0 acc = return acc\n       f i acc = do\n           x <- random g :: IO Word\n           f (i-1) (fromIntegral x + acc * b)\n{-# INLINE randomIvalWord #-}\n\niLogBaseWord :: Word -> Word -> Word\niLogBaseWord b i = if i < b then 1 else 1 + iLogBaseWord b (i `div` b)\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (18,3)) "{-\n--\n-- Too slow:\n--\nrandomIvalDouble :: (MTRandom a, Fractional a) => MTGen -> Double -> Double -> (Double -> a) -> IO a\nrandomIvalDouble g l h fromDouble\n  | l > h     = randomIvalDouble g h l fromDouble\n  | otherwise = do\n       x <- random g :: IO Int\n       return $ fromDouble ((l+h)/2) +\n                fromDouble ((h-l) / realToFrac intRange) *\n                fromIntegral x\n{-# INLINE randomIvalDouble #-}\n\nintRange :: Integer\nintRange = toInteger (maxBound::Int) - toInteger (minBound::Int)\n-}" Nothing,DComment (DP (1,1),DP (1,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,49)) "-- Using a single global random number generator" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (8,3)) "{- $globalrng #globalrng#\n\nThere is a single, implicit, global random number generator of type\n'StdGen', held in some global variable maintained by the 'IO' monad. It is\ninitialised automatically in some system-dependent fashion. To get\ndeterministic behaviour, use 'setStdGen'.\n-}" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:14-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:14-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:14-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:20-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,12)-(377,15) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:14-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,14)-(377,15) CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,32)-(377,15) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(376,4)-(377,15) Ref "delta-6"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:4-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:4-26 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(376,4)-(377,15) CN "(:)" Ref "delta-6",
  (Ann (DP (1,0)) (ColDelta 4) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:11-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:11-26 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:20-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4-15 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4-15 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:13-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1-26 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:14-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,45)) "-- |Sets the global random number generator." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-27 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-27 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:23-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:23-27 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:26-27 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:11-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:13-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:13-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:24-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1-21 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,45)) "-- |Gets the global random number generator." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:14-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:14-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:14-21 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:17-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,2))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:12-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:14-22 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:14-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:24-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1-39 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (10,1) [DComment (DP (2,1),DP (2,71)) "-- | Uses the supplied function to get a value from the current global" Nothing,DComment (DP (1,1),DP (1,67)) "-- random generator, and updates the global generator with the new" Nothing,DComment (DP (1,1),DP (1,70)) "-- generator returned by the function. For example, @rollDice@ gets a" Nothing,DComment (DP (1,1),DP (1,35)) "-- random integer between 1 and 6:" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,25)) "-- >  rollDice :: IO Int" Nothing,DComment (DP (1,1),DP (1,45)) "-- >  rollDice = getMTRandom (randomR (1,6))" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-31 CN "HsParTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-39 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-39 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:18-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:18-30 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:27-30 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:36-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:36-39 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:14 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,16)-(399,8) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,18)-(399,8) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(398,5)-(399,8) Ref "delta-7"),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:5-29 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(398,5)-(399,8) CN "(:)" Ref "delta-7",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:11-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:11-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:21-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5-8 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5-8 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:7-8 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 2) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1-27 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:12-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1-17 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,61)) "-- | Returns the identification string for the SMFT version." Nothing,DComment (DP (1,1),DP (1,96)) "-- The string shows the word size, the Mersenne exponent, and all parameters of this generator." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:12-17 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:12-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:9-58 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:11-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:11-58 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:27-58 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:28-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:28-57 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:40-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:44-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1-19 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (9,1) [DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,66)) "-- Safe primitives: depend on the word size. It's generally not a" Nothing,DComment (DP (1,1),DP (1,69)) "-- good idea to mix generation of different types, unless you commit" Nothing,DComment (DP (1,1),DP (1,33)) "-- to either 32 or 64 bits only." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,66)) "-- So you should only use these functions for getting at randoms." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:14-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:14-19 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:14-19 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:17-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,11)-(421,16) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:13-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:13-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,13)-(421,16) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:18-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:421:5-16 CN "HsVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,17)) "c_gen_rand32" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1-21 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (5,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,42)) "-- TODO randomWord64, for 32 bit machines" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:15-16 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:15-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:15-21 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:18-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,12)-(431,16) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:14-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:14-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,14)-(431,16) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:19-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:431:5-16 CN "HsVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,17)) "c_gen_rand32" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1-25 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:17-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:17-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:17-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:20-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,14)-(439,16) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:16-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,16)-(439,16) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:21-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:439:5-16 CN "HsVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,21)) "c_gen_rand64_mix" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1-23 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:16-17 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:16-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:16-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:19-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,13)-(447,16) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:15-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:15-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,15)-(447,16) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:20-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:447:5-16 CN "HsVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,21)) "c_gen_rand64_mix" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1-25 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:17-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:17-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:17-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:20-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,14)-(455,19) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:16-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:16-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,16)-(455,19) CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:21-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:455:5-19 CN "HsVar" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (4,5) [DComment (DP (1,1),DP (1,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,5),DP (1,20)) "c_genrand_real2" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1-19 CN "TyClD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (34,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,32)) "-- Generating chunks at a time." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (2,1),DP (19,3)) "{-\nmin_array_size :: Int\nmin_array_size = fromIntegral . unsafePerformIO $ -- constant\n\n\n\n    c_get_min_array_size64\n\n\n-- | Fill an array with 'n' random Ints\nfill_array :: Ptr Int -> Int -> IO ()\nfill_array p n =\n\n\n\n    c_fill_array64 (castPtr p) (fromIntegral n)\n\n-}" Nothing,DComment (DP (-14,1),DP (-14,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing,DComment (DP (2,1),DP (2,6)) "#endif" Nothing,DComment (DP (5,1),DP (5,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing,DComment (DP (2,1),DP (2,6)) "#endif" Nothing,DComment (DP (3,1),DP (3,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,54)) "-- We can have only one mersenne supply in a program." Nothing,DComment (DP (2,1),DP (2,60)) "-- You have to commit at initialisation time to call either" Nothing,DComment (DP (1,1),DP (1,65)) "-- rand_gen32 or rand_gen64, and correspondingly, real2 or res53" Nothing,DComment (DP (1,1),DP (1,16)) "-- for doubles." Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:6-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:15-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1-21 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:6-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:15-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(494,1)-(495,46) CN "ForD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (3,1),DP (3,84)) "-- | This function initializes the internal state array with a 32-bit integer seed." Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,9))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:16-20 CN "CCallConv" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:22-27 CN "PlayRisky" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:5-19 CN "Unqual" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:42-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:42-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:45-46 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(514,1)-(515,40) CN "ForD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (19,1) [DComment (DP (2,1),DP (2,24)) "-- Getting a random int" Nothing,DComment (DP (2,1),DP (2,67)) "-- This function generates and returns 64-bit pseudorandom number." Nothing,DComment (DP (1,1),DP (1,71)) "-- init_gen_rand or init_by_array must be called before this function." Nothing,DComment (DP (1,1),DP (1,66)) "-- The function gen_rand64 should not be called after gen_rand32," Nothing,DComment (DP (1,1),DP (1,47)) "-- unless an initialization is again executed." Nothing,DComment (DP (2,1),DP (2,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "foreign" Nothing,DComment (DP (0,1),DP (0,7)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "ccall" Nothing,DComment (DP (0,1),DP (0,7)) "unsafe" Nothing,DComment (DP (0,1),DP (0,20)) "\"SFMT.h gen_rand32\"" Nothing,DComment (DP (1,5),DP (1,17)) "c_gen_rand32" Nothing,DComment (DP (0,12),DP (0,14)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "UInt32" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "foreign" Nothing,DComment (DP (0,1),DP (0,7)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "ccall" Nothing,DComment (DP (0,1),DP (0,7)) "unsafe" Nothing,DComment (DP (0,1),DP (0,34)) "\"SFMT_wrap.h gen_rand64_mix_wrap\"" Nothing,DComment (DP (1,5),DP (1,21)) "c_gen_rand64_mix" Nothing,DComment (DP (0,8),DP (0,10)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,7)) "UInt64" Nothing,DComment (DP (2,1),DP (2,5)) "#else" Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,12))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:16-20 CN "CCallConv" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:22-27 CN "PlayRisky" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:32-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:32-40 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:32-40 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:35-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(536,1)-(537,41) CN "ForD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (21,1) [DComment (DP (2,1),DP (2,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,27)) "-- Getting a random double" Nothing,DComment (DP (2,1),DP (2,54)) "-- | Generates a random number on [0,1)-real-interval" Nothing,DComment (DP (1,1),DP (1,20)) "-- calls gen_rand32" Nothing,DComment (DP (1,1),DP (1,89)) "-- | Generates a random number on [0,1) with 53-bit resolution. Fast on 64 bit machines." Nothing,DComment (DP (1,1),DP (1,20)) "-- calls gen_rand64" Nothing,DComment (DP (2,1),DP (2,69)) "-- | generates a random number on [0,1) with 53-bit resolution using" Nothing,DComment (DP (1,1),DP (1,17)) "-- 32bit integer" Nothing,DComment (DP (2,1),DP (2,26)) "#if WORD_SIZE_IN_BITS < 64" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "foreign" Nothing,DComment (DP (0,1),DP (0,7)) "import" Nothing,DComment (DP (0,1),DP (0,6)) "ccall" Nothing,DComment (DP (0,1),DP (0,7)) "unsafe" Nothing,DComment (DP (0,1),DP (0,33)) "\"SFMT_wrap.h genrand_real2_wrap\"" Nothing,DComment (DP (1,5),DP (1,20)) "c_genrand_real2" Nothing,DComment (DP (0,9),DP (0,11)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,8)) "CDouble" Nothing,DComment (DP (2,1),DP (2,58)) "-- foreign import ccall unsafe \"SFMT.h genrand_res53_mix\"" Nothing,DComment (DP (1,1),DP (1,45)) "--     c_genrand_res53_mix     :: IO CDouble" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,9))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:16-20 CN "CCallConv" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:22-27 CN "PlayRisky" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:5-19 CN "Unqual" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:32-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:32-41 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:32-41 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:35-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(572,1)-(573,41) CN "ForD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (35,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (12,3)) "{-\n-- Generates a random number on [0,1]-real-interval\n-- calls gen_rand32\nforeign import ccall unsafe \"SFMT.h genrand_real1\"\n    c_genrand_real1         :: IO CDouble\n\n-- | Generates a random number on (0,1)-real-interval\n-- calls gen_rand32\nforeign import ccall unsafe \"SFMT.h genrand_real3\"\n    c_genrand_real3         :: IO CDouble\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (14,3)) "{-\nforeign import ccall unsafe \"SFMT.h get_min_array_size32\"\n    c_get_min_array_size32  :: IO CInt\n\nforeign import ccall unsafe \"SFMT.h get_min_array_size64\"\n    c_get_min_array_size64  :: IO CInt\n\nforeign import ccall unsafe \"SFMT.h fill_array32\"\n    c_fill_array32          :: Ptr UInt32 -> CInt -> IO ()\n\nforeign import ccall unsafe \"SFMT.h fill_array64\"\n    c_fill_array64          :: Ptr UInt64 -> CInt -> IO ()\n-}" Nothing,DComment (DP (2,1),DP (2,73)) "------------------------------------------------------------------------" Nothing] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,10))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:16-20 CN "CCallConv" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:22-27 CN "PlayRisky" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:5-18 CN "Unqual" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:32-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:32-41 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:32-41 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:35-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(575,1)-(576,39) CN "ForD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnForeign),DP (0,0)),((G AnnImport),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnDcolon),DP (0,8))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:16-20 CN "CCallConv" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:22-27 CN "PlayRisky" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:5-21 CN "Unqual" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:33-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:33-39 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:33-39 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:36-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-125,0)) (ColDelta 0) DP (-125,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-108,0)) (ColDelta 0) DP (-108,0) [] []))]
==============
([((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:1:1,
    AnnModule),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:25:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:1:1,
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:48:7-11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(25,31)-(48,5),
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:48:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(25,31)-(48,5),
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:25:31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:28:5-9,
    AnnComma),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:31:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:31:7-14,
    AnnComma),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-18,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:18]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-18,
    AnnComma),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:39:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-18,
    AnnDotdot),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:16-17]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:7-18,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:36:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:39:7-18,
    AnnComma),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:40:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:40:7-15,
    AnnComma),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:41:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:41:7-15,
    AnnComma),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:44:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:54:1-22,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:54:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:54:1-22,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:1-23,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:55:1-23,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:1-38,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:1-38,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:25-38,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:38]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:25-38,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:57:25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:1-18,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:58:1-18,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:1-23,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:59:1-23,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:1-16,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:62:1-16,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:1-15,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:63:1-15,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:1-16,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:64:1-16,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:1-17,
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:1-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:66:1-17,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1-18,
    AnnData),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1-4]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1-18,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:108:1-18,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1-36,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:10-11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:1-36,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:13-36,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:117:26-27]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(125,84),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:19]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(125,84),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,1)-(125,84),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:10-17,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:17]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:10-17,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(118,21)-(125,84),
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:118:21-22]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:5-28,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:9-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:119:5-28,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84),
    AnnElse),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:8-11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84),
    AnnIf),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:5-6]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(120,5)-(125,84),
    AnnThen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:8-11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:8-15,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:120:12-13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(121,13)-(122,27),
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:13-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:16-47,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:122:16]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:32-47,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:47]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:32-47,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:121:32]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:13-46,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:19]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(124,13)-(125,84),
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:124:48-49]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,1)-(130,66),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:18]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,1)-(130,66),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,1)-(130,66),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(127,20)-(130,66),
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:127:20-21]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:5-32,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:20-21]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:128:5-32,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-18,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:18]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-18,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-34,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:20-21]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:129:5-34,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:14-66,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:66]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:14-66,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:20-64,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:64]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:20-64,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:20]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-38,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:34]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-51,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:40]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-58,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:53]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:21-63,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:130:60]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(153,1)-(206,25),
    AnnClass),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:1-5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(153,1)-(206,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(153,1)-(206,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:153:18-22]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:3-25,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:10-11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:3-25,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:13-25,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:164:19-20]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3-29,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:12-13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:3-29,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:15-29,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:21-22]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:27-29,
    AnnCloseS),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:29]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:27-29,
    AnnOpenS),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:168:27]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-12,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:3-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,3)-(172,31),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:11,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,16)-(172,31),
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:35]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(169,37)-(172,31),
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:169:37-38]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:17-30,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:20-21]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:170:17-30,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17-31,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:20-21]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:171:17-31,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:17]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:24-31,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:24-31,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:24]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:25-30,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:172:27]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3-18,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:12-13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:204:3-18,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:205:3-32,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:3]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:3-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:3-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:206:3-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(211,1)-(213,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(211,1)-(213,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(211,1)-(213,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:211:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:24]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:5-35,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:212:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:213:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(216,1)-(218,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(216,1)-(218,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(216,1)-(218,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:216:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:5-46,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:217:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:218:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(221,1)-(223,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(221,1)-(223,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(221,1)-(223,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:221:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:5-44,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:222:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:223:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(226,1)-(228,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(226,1)-(228,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(226,1)-(228,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:226:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:5-44,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:227:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:228:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(231,1)-(233,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(231,1)-(233,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(231,1)-(233,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:231:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:24]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:5-53,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:232:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:233:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(238,1)-(240,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(238,1)-(240,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(238,1)-(240,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:238:26-30]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:5-28,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:239:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:240:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(245,1)-(247,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(245,1)-(247,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(245,1)-(247,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:245:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:24]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:5-34,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:246:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:247:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(250,1)-(252,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(250,1)-(252,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(250,1)-(252,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:250:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:5-45,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:251:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:252:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(255,1)-(257,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(255,1)-(257,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(255,1)-(257,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:255:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:5-43,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:256:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:257:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(260,1)-(262,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(260,1)-(262,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(260,1)-(262,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:260:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:5-43,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:261:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:262:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(265,1)-(267,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(265,1)-(267,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(265,1)-(267,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:265:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:5-43,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:266:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:267:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(270,1)-(272,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(270,1)-(272,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(270,1)-(272,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:270:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:5-43,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:271:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:272:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(277,1)-(279,25),
    AnnInstance),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:1-8]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(277,1)-(279,25),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(277,1)-(279,25),
    AnnWhere),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:277:27-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-13,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-13,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:5-58,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:12,
    AnnBang),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:17-58,
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:17-18]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-34,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:22-23]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:20-34,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:35]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-47,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:44-45]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-53,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:49-51]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:37-58,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:278:55-56]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:5-25,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:23-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:5-25,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:279:5-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1-24,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:11-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:374:1-24,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:1-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,1)-(377,15),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,14)-(377,15),
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:30]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(375,32)-(377,15),
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:375:32-33]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:4-26,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:8-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:376:4-26,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:377:4]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1-26,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:24-26]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1-26,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:378:1-26,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1-27,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:11-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:1-27,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:14-27,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:20-21]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:26-27,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:27]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:26-27,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:381:26]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:382:1-32,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1-21,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:11-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:385:1-21,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:386:1-32,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1-39,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:14-15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:1-39,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-31,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-31,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:17-39,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:33-34]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:18-22,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:24-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:18-30,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:396:24-25]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:16]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:1-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,1)-(399,8),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(397,18)-(399,8),
    AnnDo),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:397:18-19]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:5-29,
    AnnLarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:8-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:398:5-29,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:399:5]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1-27,
    AnnClose),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:25-27]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1-27,
    AnnOpen),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:400:1-27,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1-17,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:9-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:406:1-17,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58,
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-7]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:1-58,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:27-58,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:58]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:27-58,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:27]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:28-57,
    AnnVal),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:407:40-42]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1-19,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:11-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:416:1-19,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:417:1-9]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(417,1)-(421,16),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1-21,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:12-13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:426:1-21,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:427:1-10]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(427,1)-(431,16),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1-25,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:14-15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:434:1-25,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:435:1-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(435,1)-(439,16),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1-23,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:13-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:442:1-23,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:443:1-11]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(443,1)-(447,16),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1-25,
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:14-15]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:450:1-25,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19),
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19),
    AnnFunId),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:451:1-12]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(451,1)-(455,19),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1-19,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1-19,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1-19,
    AnnType),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:489:1-4]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1-21,
    AnnEqual),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:13]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1-21,
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1-21,
    AnnType),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:490:1-4]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(494,1)-(495,46),
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:29-30]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(494,1)-(495,46),
    AnnForeign),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:1-7]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(494,1)-(495,46),
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:494:9-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(494,1)-(495,46),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:32-46,
    AnnRarrow),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:39-40]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:45-46,
    AnnCloseP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:46]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:45-46,
    AnnOpenP),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:495:45]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(514,1)-(515,40),
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:515:29-30]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(514,1)-(515,40),
    AnnForeign),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:1-7]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(514,1)-(515,40),
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:514:9-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(514,1)-(515,40),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(536,1)-(537,41),
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:537:29-30]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(536,1)-(537,41),
    AnnForeign),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:1-7]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(536,1)-(537,41),
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:536:9-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(536,1)-(537,41),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(572,1)-(573,41),
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:573:29-30]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(572,1)-(573,41),
    AnnForeign),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:1-7]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(572,1)-(573,41),
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:572:9-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(572,1)-(573,41),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:1]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(575,1)-(576,39),
    AnnDcolon),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:576:30-31]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(575,1)-(576,39),
    AnnForeign),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:1-7]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(575,1)-(576,39),
    AnnImport),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:575:9-14]),
  ((../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(575,1)-(576,39),
    AnnSemi),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:585:1]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:585:1])],
 [(../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(25,31)-(48,5),
   [AnnLineComment "-- $example", AnnLineComment "-- * Miscellaneous",
    AnnLineComment "-- $globalrng", AnnLineComment "-- $notes",
    AnnLineComment "-- * Random values of various types",
    AnnLineComment "-- ** Initialising the generator",
    AnnLineComment "-- * The random number generator"]),
  (../../hackage-packages/mersenne-random-1.0.0.1/System/Random/Mersenne.hs:(153,1)-(206,25),
   [AnnLineComment "-- non-trivial. Expect a 3x slow down in speed of random generation.",
    AnnLineComment "-- cost comes in retrieving the random gen from an IORef, which is",
    AnnLineComment "-- inner loop, rather than 'random' applied to a global generator. The",
    AnnLineComment "-- Note that there are performance penalties calling randomIO in an",
    AnnLineComment "--",
    AnnLineComment "-- Essentially a convenience function if you're already in IO.",
    AnnLineComment "-- (see \"System.Random#globalrng\").",
    AnnLineComment "-- | A variant of 'random' that uses the global random number generator",
    AnnBlockComment "{-\n  -- | Plural variant of 'random', producing an infinite list of\n  -- random values instead of returning a new generator.\n  randomRs  :: (a,a) -> MTGen -> IO [a]\n  randomRs p !g = unsafeInterleaveIO $ do\n                x  <- randomR p g\n                xs <- randomRs p g\n                return (x : xs)\n-}",
    AnnBlockComment "{-\n  -- | Takes a range /(lo,hi)/ and a random number generator\n  -- /g/, and returns a random value uniformly distributed in the closed\n  -- interval /[lo,hi]/, together with a new generator. It is unspecified\n  -- what happens if /lo>hi/. For continuous types there is no requirement\n  -- that the values /lo/ and /hi/ are ever produced, but they may be,\n  -- depending on the implementation and the interval.\n  randomR :: (a,a) -> MTGen -> IO a\n-}",
    AnnLineComment "-- and extracting elements piecewise.",
    AnnLineComment "-- There are real overheads here. Consider eagerly filling chunks",
    AnnLineComment "-- random values instead of returning a new generator.",
    AnnLineComment "-- | Plural variant of 'random', producing an infinite list of",
    AnnLineComment "-- * For 'Integer', the range is (arbitrarily) the range of 'Int'.",
    AnnLineComment "--", AnnLineComment "-- @[0,1)@.",
    AnnLineComment "-- * For fractional types, the range is normally the semi-closed interval",
    AnnLineComment "--",
    AnnLineComment "--   the range is normally the whole type.",
    AnnLineComment "-- * For bounded types (instances of 'Bounded', such as 'Char'),",
    AnnLineComment "--",
    AnnLineComment "-- | The same as 'randomR', but using a default range determined by the type:"]),
  (<no location info>,
   [AnnLineComment "--", AnnLineComment "-- audit this!",
    AnnLineComment "--",
    AnnLineComment "-- and never call rand64 if in 32 bit land.",
    AnnLineComment "-- Invariant: we can never call rand32 if we're in 64 bit land,",
    AnnLineComment "--",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\nforeign import ccall unsafe \"SFMT.h get_min_array_size32\"\n    c_get_min_array_size32  :: IO CInt\n\nforeign import ccall unsafe \"SFMT.h get_min_array_size64\"\n    c_get_min_array_size64  :: IO CInt\n\nforeign import ccall unsafe \"SFMT.h fill_array32\"\n    c_fill_array32          :: Ptr UInt32 -> CInt -> IO ()\n\nforeign import ccall unsafe \"SFMT.h fill_array64\"\n    c_fill_array64          :: Ptr UInt64 -> CInt -> IO ()\n-}",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\n-- Generates a random number on [0,1]-real-interval\n-- calls gen_rand32\nforeign import ccall unsafe \"SFMT.h genrand_real1\"\n    c_genrand_real1         :: IO CDouble\n\n-- | Generates a random number on (0,1)-real-interval\n-- calls gen_rand32\nforeign import ccall unsafe \"SFMT.h genrand_real3\"\n    c_genrand_real3         :: IO CDouble\n-}",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "-- 32bit integer",
    AnnLineComment "-- | generates a random number on [0,1) with 53-bit resolution using",
    AnnLineComment "-- calls gen_rand64",
    AnnLineComment "-- | Generates a random number on [0,1) with 53-bit resolution. Fast on 64 bit machines.",
    AnnLineComment "-- calls gen_rand32",
    AnnLineComment "-- | Generates a random number on [0,1)-real-interval",
    AnnLineComment "-- Getting a random double",
    AnnLineComment "-- unless an initialization is again executed.",
    AnnLineComment "-- The function gen_rand64 should not be called after gen_rand32,",
    AnnLineComment "-- init_gen_rand or init_by_array must be called before this function.",
    AnnLineComment "-- This function generates and returns 64-bit pseudorandom number.",
    AnnLineComment "-- Getting a random int",
    AnnLineComment "-- | This function initializes the internal state array with a 32-bit integer seed.",
    AnnLineComment "--", AnnLineComment "-- for doubles.",
    AnnLineComment "-- rand_gen32 or rand_gen64, and correspondingly, real2 or res53",
    AnnLineComment "-- You have to commit at initialisation time to call either",
    AnnLineComment "-- We can have only one mersenne supply in a program.",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\nmin_array_size :: Int\nmin_array_size = fromIntegral . unsafePerformIO $ -- constant\n\n\n\n    c_get_min_array_size64\n\n\n-- | Fill an array with 'n' random Ints\nfill_array :: Ptr Int -> Int -> IO ()\nfill_array p n =\n\n\n\n    c_fill_array64 (castPtr p) (fromIntegral n)\n\n-}",
    AnnLineComment "--",
    AnnLineComment "-- Generating chunks at a time.",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "-- TODO randomWord64, for 32 bit machines",
    AnnLineComment "-- So you should only use these functions for getting at randoms.",
    AnnLineComment "--",
    AnnLineComment "-- to either 32 or 64 bits only.",
    AnnLineComment "-- good idea to mix generation of different types, unless you commit",
    AnnLineComment "-- Safe primitives: depend on the word size. It's generally not a",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "-- The string shows the word size, the Mersenne exponent, and all parameters of this generator.",
    AnnLineComment "-- | Returns the identification string for the SMFT version.",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- >  rollDice = getMTRandom (randomR (1,6))",
    AnnLineComment "-- >  rollDice :: IO Int", AnnLineComment "--",
    AnnLineComment "-- random integer between 1 and 6:",
    AnnLineComment "-- generator returned by the function. For example, @rollDice@ gets a",
    AnnLineComment "-- random generator, and updates the global generator with the new",
    AnnLineComment "-- | Uses the supplied function to get a value from the current global",
    AnnLineComment "-- |Gets the global random number generator.",
    AnnLineComment "-- |Sets the global random number generator.",
    AnnBlockComment "{- $globalrng #globalrng#\n\nThere is a single, implicit, global random number generator of type\n'StdGen', held in some global variable maintained by the 'IO' monad. It is\ninitialised automatically in some system-dependent fashion. To get\ndeterministic behaviour, use 'setStdGen'.\n-}",
    AnnLineComment "--",
    AnnLineComment "-- Using a single global random number generator",
    AnnLineComment "--",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\n--\n-- Too slow:\n--\nrandomIvalDouble :: (MTRandom a, Fractional a) => MTGen -> Double -> Double -> (Double -> a) -> IO a\nrandomIvalDouble g l h fromDouble\n  | l > h     = randomIvalDouble g h l fromDouble\n  | otherwise = do\n       x <- random g :: IO Int\n       return $ fromDouble ((l+h)/2) +\n                fromDouble ((h-l) / realToFrac intRange) *\n                fromIntegral x\n{-# INLINE randomIvalDouble #-}\n\nintRange :: Integer\nintRange = toInteger (maxBound::Int) - toInteger (minBound::Int)\n-}",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\nrandomIvalWord :: (MTRandom a, Num a) => MTGen -> Word -> Word -> IO a\nrandomIvalWord g l h\n  | l > h     = randomIvalWord g h l\n  | otherwise = do\n        v <- f n 1\n        return $ (fromIntegral (l + v `mod` k))\n     where\n       k = h - l + 1\n       b = maxBound :: Word\n       n = iLogBaseWord b k\n\n       f 0 acc = return acc\n       f i acc = do\n           x <- random g :: IO Word\n           f (i-1) (fromIntegral x + acc * b)\n{-# INLINE randomIvalWord #-}\n\niLogBaseWord :: Word -> Word -> Word\niLogBaseWord b i = if i < b then 1 else 1 + iLogBaseWord b (i `div` b)\n-}",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\nrandomIvalInt :: (MTRandom a, Num a) => MTGen -> Int -> Int -> IO a\nrandomIvalInt g l h\n  | l > h     = randomIvalInt g h l\n  | otherwise = do\n        v <- f n 1\n        return $ (fromIntegral (l + v `mod` k))\n     where\n       k = h - l + 1\n       b = maxBound :: Int\n       n = iLogBase b k\n\n       f 0 acc = return acc\n       f i acc = do\n           x <- random g :: IO Int\n           f (i-1) (fromIntegral x + acc * b)\n{-# INLINE randomIvalInt #-}\n\niLogBase :: Int -> Int -> Int\niLogBase b i = if i < b then 1 else 1 + iLogBase b (i `div` b)\n-}",
    AnnLineComment "------------------------------------------------------------------------",
    AnnBlockComment "{-\n    randomR (a,b) !g = int2Bool `fmap` randomIvalInt g (bool2Int a) (bool2Int b)\n\n        where\n            bool2Int :: Bool -> Int\n            bool2Int False = 0\n            bool2Int True  = 1\n\n            int2Bool :: Int -> Bool\n            int2Bool 0 = False\n            int2Bool _ = True\n-}",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalInt g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalInt g lo hi",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--    randomR (lo,hi) g = randomIvalDouble g lo hi id",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "--    randomR (lo,hi) !g = randomIvalWord g (fromIntegral lo) (fromIntegral hi)",
    AnnLineComment "-- Efficient basic instances",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- Minimal complete definition: 'random'.",
    AnnLineComment "--", AnnLineComment "-- types.",
    AnnLineComment "-- allows the programmer to extract values of a variety of",
    AnnLineComment "-- | Given an initialised SFMT generator, the MTRandom",
    AnnLineComment "-- The Bool instance takes the lower bit off a random word.",
    AnnLineComment "-- The MTRandom instance for Double returns a Double in the interval [0,1).",
    AnnLineComment "--",
    AnnLineComment "-- and 53 on a 64 bit machine.",
    AnnLineComment "-- machine. The double precision will be 32 bits on a 32 bit machine,",
    AnnLineComment "-- Int and Word will be 32 bits on a 32 bit machine, and 64 on a 64 bit",
    AnnLineComment "--",
    AnnLineComment "-- range. Similarly for Int types.",
    AnnLineComment "-- all return, quickly, a random inhabintant of that type, in its full",
    AnnLineComment "-- Instances MTRandom for Word, Word64, Word32, Word16, Word8",
    AnnLineComment "--", AnnLineComment "-- $notes",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--",
    AnnLineComment "-- generator is allowed per-program. Attempts to reinitialise it will fail.",
    AnnLineComment "-- Due to the current SFMT library being vastly impure, currently only a single",
    AnnLineComment "--",
    AnnLineComment "-- is passed as a seed. For deterministic behaviour, pass an explicit seed.",
    AnnLineComment "-- The generator is initialised based on the clock time, if Nothing",
    AnnLineComment "-- | Return an initialised SIMD Fast Mersenne Twister.",
    AnnLineComment "--",
    AnnLineComment "-- This generator is evidence that you have initialised the generator,",
    AnnLineComment "-- | A single, global SIMD fast mersenne twister random number generator",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "--", AnnLineComment "-- > 3.1417304",
    AnnLineComment "-- > $ ./pi 10000000",
    AnnLineComment "-- > $ ghc -fexcess-precision -fvia-C pi.hs -o pi",
    AnnLineComment "--",
    AnnLineComment "-- Compiling this, '-fexcess-precision', for accurate Doubles,",
    AnnLineComment "--",
    AnnLineComment "-- >                 else go (throws+1) ins",
    AnnLineComment "-- >                 then go (throws+1) $! ins + 1",
    AnnLineComment "-- >             if x * x + y * y < 1",
    AnnLineComment "-- >             y <- random g :: IO Double",
    AnnLineComment "-- >             x <- random g :: IO Double",
    AnnLineComment "-- >         | otherwise = do",
    AnnLineComment "-- >         | throws >= lim  = return ((4 * fromIntegral ins) / (fromIntegral throws))",
    AnnLineComment "-- >     go throws ins",
    AnnLineComment "-- > let go :: Int -> Int -> IO Double",
    AnnLineComment "--", AnnLineComment "-- of pi.",
    AnnLineComment "-- The ratio of inside\\/total points at then gives us an approximation",
    AnnLineComment "-- position, then working out if its in and outside the circle.",
    AnnLineComment "-- Now, define a loop that runs this many times, plotting a 'x' and 'y'",
    AnnLineComment "--",
    AnnLineComment "-- >    [lim] <- mapM readIO =<< getArgs",
    AnnLineComment "-- > main = do", AnnLineComment "--",
    AnnLineComment "-- We'll roll the dice 'lim' times,",
    AnnLineComment "--",
    AnnLineComment "-- > import System.Environment",
    AnnLineComment "-- > import System.Random.Mersenne",
    AnnLineComment "--",
    AnnLineComment "-- An example, calculation of pi via a monte carlo method:",
    AnnLineComment "--", AnnLineComment "-- $example",
    AnnLineComment "------------------------------------------------------------------------",
    AnnLineComment "-- import Data.Char",
    AnnLineComment "-- import Control.Monad", AnnLineComment "--",
    AnnLineComment "-- This will work for newer intel chips such as Pentium 4s, and Core, Core2* chips.",
    AnnLineComment "--",
    AnnLineComment "-- This typically results in a 2-3x speedup in generation time.",
    AnnLineComment "-- respectively, to enable high performance vector instructions to be used.",
    AnnLineComment "-- use_altivec' flags to configure, on intel and powerpc machines",
    AnnLineComment "-- This library may be compiled with the '-f use_sse2' or '-f",
    AnnLineComment "--", AnnLineComment "-- nearly as flexible.",
    AnnLineComment "-- generation for Doubles, on a core 2 duo), however, it is not",
    AnnLineComment "-- the default 'System.Random' generator for Haskell (~50x faster",
    AnnLineComment "-- pseudorandom number generator. This is a /much/ faster generator than",
    AnnLineComment "-- Generate pseudo-random numbers using the SIMD-oriented Fast Mersenne Twister(SFMT)",
    AnnLineComment "--", AnnLineComment "-- Tested with: GHC 6.8.2",
    AnnLineComment "-- Portability: CPP, FFI",
    AnnLineComment "-- Stability  : experimental",
    AnnLineComment "-- Maintainer : Don Stewart <dons@galois.com>",
    AnnLineComment "-- License    : BSD3",
    AnnLineComment "-- Copyright  : Copyright (c) 2008, Don Stewart <dons@galois.com>",
    AnnLineComment "-- Module     : System.Random.Mersenne",
    AnnLineComment "-- |",
    AnnLineComment "--------------------------------------------------------------------",
    AnnBlockComment "{-# LANGUAGE CPP, ForeignFunctionInterface, BangPatterns #-}"])])