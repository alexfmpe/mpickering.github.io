{-# LANGUAGE CPP               #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE QuasiQuotes       #-}
{-# LANGUAGE Rank2Types        #-}
{-# LANGUAGE TemplateHaskell   #-}
{-# LANGUAGE TypeFamilies      #-}

{-# OPTIONS_GHC -fno-warn-orphans #-}

{- |
Module      :  Types.hs
Description :  Central data type and Yesod typeclass instances.
Copyright   :  (c) 2011 Cedric Staub
License     :  GPL-3

Maintainer  :  Simon Meier <iridcode@gmail.com>
Stability   :  experimental
Portability :  non-portable
-}


module Web.Types
  ( WebUI(..)
  , Route (..)
  , resourcesWebUI
  , TheoryInfo(..)
  , TheoryPath(..)
  , TheoryOrigin(..)
  , JsonResponse(..)
  , TheoryIdx
  , TheoryMap
  , ThreadMap
  -- , GenericHandler
  , Handler
  -- , URL rendering function
  , RenderUrl
  -- , GenericWidget
  , Widget
  -- Image rendering
  , ImageFormat(..)
  , imageFormatMIME
  )
where


import           Control.Applicative
import           Control.Concurrent
import           Data.Label
import qualified Data.Map            as M
import           Data.Maybe          (listToMaybe)
import           Data.Monoid         (mconcat)
import           Data.Ord            (comparing)
import qualified Data.Text           as T
import           Data.Time.LocalTime

import           Text.Hamlet
import           Yesod.Core
import           Yesod.Static

import           Theory

------------------------------------------------------------------------------
-- Types
------------------------------------------------------------------------------

-- | Type synonym for a generic handler inside our site.
-- type GenericHandler m = Handler WebUI WebUI m
-- type Handler a = Handler WebUI WebUI a

-- | Type synonym for a generic widget inside our site.
-- type GenericWidget m = Widget WebUI (GenericHandler m)
-- type Widget a = Widget WebUI WebUI a

-- | Type synonym representing a numeric index for a theory.
type TheoryIdx = Int

-- | Type synonym representing a map of theories.
type TheoryMap = M.Map TheoryIdx TheoryInfo

-- | Type synonym representing a map of threads.
type ThreadMap = M.Map T.Text ThreadId

-- | The image format used for rendering graphs.
data ImageFormat = PNG | SVG

instance Show ImageFormat where
    show PNG = "png"
    show SVG = "svg"

-- | convert image format to MIME type.
imageFormatMIME :: ImageFormat -> String
imageFormatMIME PNG = "image/png"
imageFormatMIME SVG = "image/svg+xml"

-- | The so-called site argument for our application, which can hold various
-- information that can use to keep info that needs to be available to the
-- handler functions.
data WebUI = WebUI
  { getStatic          :: Static
    -- ^ Settings for static file serving.
  , cacheDir           :: FilePath
    -- ^ The caching directory (for storing rendered graphs).
  , workDir            :: FilePath
    -- ^ The working directory (for storing/loading theories).
  -- , parseThy    :: MonadIO m => String -> GenericHandler m ClosedTheory
  , parseThy           :: String -> IO (Either String ClosedTheory)
    -- ^ Close an open theory according to command-line arguments.
  , theoryVar          :: MVar TheoryMap
    -- ^ MVar that holds the theory map
  , threadVar          :: MVar ThreadMap
    -- ^ MVar that holds the thread map
  , autosaveProofstate :: Bool
    -- ^ Automatically store theory map
  , dotCmd             :: FilePath
    -- ^ The dot command
  , imageFormat        :: ImageFormat
    -- ^ The image-format used for rendering graphs
  , defaultAutoProver  :: AutoProver
    -- ^ The default prover to use for automatic proving.
  , debug              :: Bool
    -- ^ Output debug messages
  }

-- | Simple data type for generating JSON responses.
data JsonResponse
  = JsonHtml T.Text Content   -- ^ Title and HTML content
  | JsonAlert T.Text          -- ^ Alert/dialog box with message
  | JsonRedirect T.Text       -- ^ Redirect to given URL

-- | Data type representing origin of theory.
-- Command line with file path, upload with filename (not path),
-- or created by interactive mode (e.g. through editing).
data TheoryOrigin = Local FilePath | Upload String | Interactive
     deriving (Show, Eq, Ord)

-- | Data type containg both the theory and it's index, making it easier to
-- pass the two around (since they are always tied to each other). We also
-- keep some extra bookkeeping information.
data TheoryInfo = TheoryInfo
  { tiIndex      :: TheoryIdx       -- ^ Index of theory.
  , tiTheory     :: ClosedTheory    -- ^ The closed theory.
  , tiTime       :: ZonedTime       -- ^ Time theory was loaded.
  , tiParent     :: Maybe TheoryIdx -- ^ Prev theory in history
  , tiPrimary    :: Bool            -- ^ This is the orginally loaded theory.
  , tiOrigin     :: TheoryOrigin    -- ^ Origin of theory.
  , tiAutoProver :: AutoProver      -- ^ The automatic prover to use.
  }

-- | We use the ordering in order to display loaded theories to the user.
-- We first compare by name, then by time loaded, and then by source: Theories
-- that were loaded from the command-line are displayed earlier then
-- interactively loaded ones.
compareTI :: TheoryInfo -> TheoryInfo -> Ordering
compareTI (TheoryInfo _ i1 t1 p1 a1 o1 _) (TheoryInfo _ i2 t2 p2 a2 o2 _) =
  mconcat
    [ comparing (get thyName) i1 i2
    , comparing zonedTimeToUTC t1 t2
    , compare a1 a2
    , compare p1 p2
    , compare o1 o2
    ]

instance Eq TheoryInfo where
  (==) t1 t2 = compareTI t1 t2 == EQ

instance Ord TheoryInfo where
  compare = compareTI

-- | Simple data type for specifying a path to a specific
-- item within a theory.
data TheoryPath
  = TheoryHelp                          -- ^ The help view (help and info about theory)
  | TheoryLemma String                  -- ^ Theory lemma with given name
  | TheoryCaseDist CaseDistKind Int Int -- ^ Required cases (i'th source, j'th case)
  | TheoryProof String ProofPath        -- ^ Proof path within proof for given lemma
  | TheoryMethod String ProofPath Int   -- ^ Apply the proof method to proof path
  | TheoryRules                         -- ^ Theory rules
  | TheoryMessage                       -- ^ Theory message deduction
  deriving (Eq, Show, Read)

-- | Render a theory path to a list of strings. Note that we prefix an
-- underscore to the empty string and strings starting with an underscore.
-- This avoids empty path segments, which seem to trip up certain versions of
-- Yesod.
renderTheoryPath :: TheoryPath -> [String]
renderTheoryPath =
    map prefixWithUnderscore . go
  where
    go TheoryHelp = ["help"]
    go TheoryRules = ["rules"]
    go TheoryMessage = ["message"]
    go (TheoryLemma name) = ["lemma", name]
    go (TheoryCaseDist k i j) = ["cases", show k, show i, show j]
    go (TheoryProof lemma path) = "proof" : lemma : path
    go (TheoryMethod lemma path idx) = "method" : lemma : show idx : path

-- | Prefix an underscore to the empty string and strings starting with an
-- underscore.
prefixWithUnderscore :: String -> String
prefixWithUnderscore ""         = "_"
prefixWithUnderscore cs@('_':_) = '_' : cs
prefixWithUnderscore cs         = cs

-- | Remove an underscore prefix. It holds that
--
-- > unprefixUnderscore . prefixWithUnderscore = id
--
-- The inverted composition holds for all strings except the empty string and
-- strings starting with an underscore.
unprefixUnderscore :: String -> String
unprefixUnderscore "_"              = ""
unprefixUnderscore ('_':cs@('_':_)) = cs
unprefixUnderscore cs               = cs

-- | Parse a list of strings into a theory path.
parseTheoryPath :: [String] -> Maybe TheoryPath
parseTheoryPath =
    parse . map unprefixUnderscore
  where
    parse []     = Nothing
    parse (x:xs) = case x of
      "help"    -> Just TheoryHelp
      "rules"   -> Just TheoryRules
      "message" -> Just TheoryMessage
      "lemma"   -> parseLemma xs
      "cases"   -> parseCases xs
      "proof"   -> parseProof xs
      "method"  -> parseMethod xs
      _         -> Nothing

    safeRead = listToMaybe . map fst . reads

    parseLemma ys = TheoryLemma <$> listToMaybe ys

    parseProof (y:ys) = Just (TheoryProof y ys)
    parseProof _      = Nothing

    parseMethod (y:z:zs) = safeRead z >>= Just . TheoryMethod y zs
    parseMethod _        = Nothing

    parseCases (kind:y:z:_) = do
      k <- case kind of "typed"   -> return TypedCaseDist
                        "untyped" -> return UntypedCaseDist
                        _         -> Nothing
      m <- safeRead y
      n <- safeRead z
      return (TheoryCaseDist k m n)
    parseCases _       = Nothing


type RenderUrl = Route WebUI -> T.Text

------------------------------------------------------------------------------
-- Routing
------------------------------------------------------------------------------

-- This is a hack we need to work around a bug (?) in the
-- C pre-processor. In order to define multi-pieces we need
-- the asterisk symbol, but the C pre-processor always chokes
-- on them thinking that they are somehow comments. This can
-- be removed once the CPP language ext is disabled, but it's
-- currently needed for GHC < 7 support.
#define MP(x) *x

-- | Static routing for our application.
-- Note that handlers ending in R are general handlers,
-- whereas handlers ending in MR are for the main view
-- and the ones ending in DR are for the debug view.
mkYesodData "WebUI" [parseRoutes|
/                                          RootR                   GET POST
/thy/#Int/overview/ *TheoryPath          OverviewR               GET
/thy/#Int/source                           TheorySourceR           GET
/thy/#Int/message                          TheoryMessageDeductionR GET
/thy/#Int/main/ *TheoryPath              TheoryPathMR            GET
-- /thy/#Int/debug/ *TheoryPath             TheoryPathDR            GET
/thy/#Int/graph/ *TheoryPath             TheoryGraphR            GET
/thy/#Int/autoprove/#SolutionExtractor/#Int/ *TheoryPath AutoProverR             GET
/thy/#Int/next/#String/ *TheoryPath      NextTheoryPathR         GET
/thy/#Int/prev/#String/ *TheoryPath      PrevTheoryPathR         GET
-- /thy/#Int/save                             SaveTheoryR             GET
/thy/#Int/download/#String                 DownloadTheoryR         GET
-- /thy/#Int/edit/source                      EditTheoryR             GET POST
-- /thy/#Int/edit/path/ *TheoryPath         EditPathR               GET POST
/thy/#Int/del/path/ *TheoryPath          DeleteStepR             GET
/thy/#Int/unload                           UnloadTheoryR           GET
/kill                                      KillThreadR             GET
-- /threads                                   ThreadsR                GET
/robots.txt                                RobotsR                 GET
/favicon.ico                               FaviconR                GET
/static                                    StaticR                 Static getStatic
|]

instance PathPiece SolutionExtractor where
  toPathPiece CutNothing = "characterize"
  toPathPiece CutDFS     = "idfs"
  toPathPiece CutBFS     = "bfs"

  fromPathPiece "characterize" = Just CutNothing
  fromPathPiece "idfs"         = Just CutDFS
  fromPathPiece "bfs"          = Just CutBFS
  fromPathPiece _              = Nothing

-- | MultiPiece instance for TheoryPath.
instance PathMultiPiece TheoryPath where
  toPathMultiPiece   = map T.pack . renderTheoryPath
  fromPathMultiPiece = parseTheoryPath . map T.unpack

-- Instance of the Yesod typeclass.
instance Yesod WebUI where
  -- | The approot. We can leave this empty because the
  -- application is always served from the root of the server.
  approot = ApprootStatic T.empty

  -- | The default layout for rendering.
  defaultLayout = defaultLayout'

  -- | The path cleaning function. We make sure empty strings
  -- are not scrubbed from the end of the list. The default
  -- cleanPath function forces canonical URLs.
  cleanPath _ = Right

------------------------------------------------------------------------------
-- Default layout
------------------------------------------------------------------------------

-- | Our application's default layout template.
-- Note: We define the default layout here even tough it doesn't really
-- belong in the "types" module in order to avoid mutually recursive modules.
-- defaultLayout' :: (Yesod master, Route master ~ WebUIRoute)
--                => Widget master ()      -- ^ Widget to embed in layout
--                -> Handler master Html
defaultLayout' :: Widget -> Handler Html
defaultLayout' w = do
  page <- widgetToPageContent w
  message <- getMessage
  giveUrlRenderer [hamlet|
    $newline never
    !!!
    <html>
      <head>
        <title>#{pageTitle page}
        <link rel=stylesheet href=/static/css/tamarin-prover-ui.css>
        <link rel=stylesheet href=/static/css/jquery-contextmenu.css>
        <link rel=stylesheet href=/static/css/smoothness/jquery-ui.css>
        <script src=/static/js/jquery.js></script>
        <script src=/static/js/jquery-ui.js></script>
        <script src=/static/js/jquery-layout.js></script>
        <script src=/static/js/jquery-cookie.js></script>
        <script src=/static/js/jquery-superfish.js></script>
        <script src=/static/js/jquery-contextmenu.js></script>
        <script src=/static/js/tamarin-prover-ui.js></script>
        ^{pageHead page}
      <body>
        $maybe msg <- message
          <p.message>#{msg}
        <p.loading>
          Loading, please wait...
          \  <a id=cancel href='#'>Cancel</a>
        ^{pageBody page}
        <div#dialog>
        <ul#contextMenu>
          <li.autoprove>
            <a href="#autoprove">Autoprove</a>
  |]
          -- <li.delstep>
            -- <a href="#del/path">Remove step</a>

==============
../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs
==============
lengths:(13714,13732)

==============

({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,34)) "{-# LANGUAGE CPP               #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE OverloadedStrings #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE QuasiQuotes       #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE Rank2Types        #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE TemplateHaskell   #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE TypeFamilies      #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,38)) "{-# OPTIONS_GHC -fno-warn-orphans #-}" Nothing),DP (2,1)),((AnnComment DComment (DP (2,1),DP (11,3)) "{- |\nModule      :  Types.hs\nDescription :  Central data type and Yesod typeclass instances.\nCopyright   :  (c) 2011 Cedric Staub\nLicense     :  GPL-3\n\nMaintainer  :  Simon Meier <iridcode@gmail.com>\nStability   :  experimental\nPortability :  non-portable\n-}" Nothing),DP (2,1)),((G AnnModule),DP (21,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (1,1)),((AnnComment DComment (DP (1,11),DP (1,26)) "-- <li.delstep>" Nothing),DP (1,11)),((AnnComment DComment (DP (1,13),DP (1,51)) "-- <a href=\"#del/path\">Remove step</a>" Nothing),DP (1,13)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((G AnnEofPos),DP (4,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:22:8-16
     }
    Nothing{ModuleName: Web.Types})) 
  (Just 
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(23,3)-(42,3)
     }
    Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: WebUI})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-14
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,1)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: Route})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:25:5-18
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:25:5-18
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: resourcesWebUI})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-18
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-14
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: TheoryInfo})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-18
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-14
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: TheoryPath})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-20
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-16
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: TheoryOrigin})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-20
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-16
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: JsonResponse})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:30:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:30:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: TheoryIdx})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:31:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:31:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: TheoryMap})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:32:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:32:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,22)) "-- , GenericHandler" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: ThreadMap})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:34:5-11
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:34:5-11
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,30)) "-- , URL rendering function" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: Handler})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:36:5-13
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:36:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,21)) "-- , GenericWidget" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: RenderUrl})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:38:5-10
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:38:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,21)) "-- Image rendering" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])
        (Unqual {OccName: Widget})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-19
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-15
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: ImageFormat})))),
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:41:5-19
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:41:5-19
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: imageFormatMIME}))))])) 
  [
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:46:1-36
     }
    Just (Ann (DP (3,1)) (ColDelta 1) DP (3,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:46:18-36
       }
      Nothing{ModuleName: Control.Applicative}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:1-35
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:18-35
       }
      Nothing{ModuleName: Control.Concurrent}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:18-27
       }
      Nothing{ModuleName: Data.Label}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,12)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:18-25
       }
      Nothing{ModuleName: Data.Map}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: M}) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:1-50
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:18-27
       }
      Nothing{ModuleName: Data.Maybe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:38-50
         }
        Just (Ann (DP (0,10)) (ColDelta 38) DP (0,10) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:39-49
           }
          Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:39-49
             }
            Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: listToMaybe}))))]))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:18-28
       }
      Nothing{ModuleName: Data.Monoid}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:38-46
         }
        Just (Ann (DP (0,9)) (ColDelta 38) DP (0,9) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:39-45
           }
          Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:39-45
             }
            Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: mconcat}))))]))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:1-48
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:18-25
       }
      Nothing{ModuleName: Data.Ord}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:38-48
         }
        Just (Ann (DP (0,12)) (ColDelta 38) DP (0,12) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:39-47
           }
          Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:39-47
             }
            Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: comparing}))))]))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,11)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:18-26
       }
      Nothing{ModuleName: Data.Text}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: T}) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:1-36
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:18-36
       }
      Nothing{ModuleName: Data.Time.LocalTime}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:1-28
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:18-28
       }
      Nothing{ModuleName: Text.Hamlet}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:1-27
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:18-27
       }
      Nothing{ModuleName: Yesod.Core}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:1-29
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:18-29
       }
      Nothing{ModuleName: Yesod.Static}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:1-23
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:18-23
       }
      Nothing{ModuleName: Theory}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1-20
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (15,1) [DComment (DP (2,1),DP (2,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,9)) "-- Types" Nothing,DComment (DP (1,1),DP (1,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,57)) "-- | Type synonym for a generic handler inside our site." Nothing,DComment (DP (1,1),DP (1,49)) "-- type GenericHandler m = Handler WebUI WebUI m" Nothing,DComment (DP (1,1),DP (1,42)) "-- type Handler a = Handler WebUI WebUI a" Nothing,DComment (DP (2,1),DP (2,56)) "-- | Type synonym for a generic widget inside our site." Nothing,DComment (DP (1,1),DP (1,58)) "-- type GenericWidget m = Widget WebUI (GenericHandler m)" Nothing,DComment (DP (1,1),DP (1,40)) "-- type Widget a = Widget WebUI WebUI a" Nothing,DComment (DP (2,1),DP (2,61)) "-- | Type synonym representing a numeric index for a theory." Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (SynDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:6-14
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: TheoryIdx})) 
      (HsQTvs 
       [] 
       []) 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:18-20
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (HsTyVar 
        (Unqual {OccName: Int}))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,50)) "-- | Type synonym representing a map of theories." Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (SynDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:6-14
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: TheoryMap})) 
      (HsQTvs 
       [] 
       []) 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:18-43
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
       (HsAppTy 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:18-32
          }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:18-22
            }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Qual {ModuleName: M} {OccName: Map}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:24-32
            }
           Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: TheoryIdx}))))) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:34-43
          }
         Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: TheoryInfo}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,49)) "-- | Type synonym representing a map of threads." Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (SynDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:6-14
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: ThreadMap})) 
      (HsQTvs 
       [] 
       []) 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:18-38
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
       (HsAppTy 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:18-29
          }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:18-22
            }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Qual {ModuleName: M} {OccName: Map}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:24-29
            }
           Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Qual {ModuleName: T} {OccName: Text}))))) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:31-38
          }
         Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Unqual {OccName: ThreadId}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1-28
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,49)) "-- | The image format used for rendering graphs." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:6-16
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: ImageFormat})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:20-22
          }
         Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVbar),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:20-22
             }
            Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: PNG}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:26-28
          }
         Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:26-28
             }
            Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: SVG}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(86,1)-(88,20)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:10-25
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
          []) 
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:10-25
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:10-13
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Show}))) 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:15-25
             }
            Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: ImageFormat}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(87,5)-(88,20)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-8
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: show})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-20
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-8
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: show})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:10-12
                 }
                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:10-12
                   }
                  Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: PNG})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:14-20
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:16-20
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsLit 
                    (HsString "\"png\"" {FastString: "png"})))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-20
              }
             Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-8
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: show})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:10-12
                 }
                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:10-12
                   }
                  Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: SVG})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:14-20
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:16-20
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsLit 
                    (HsString "\"svg\"" {FastString: "svg"})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1-40
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,40)) "-- | convert image format to MIME type." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1-15
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: imageFormatMIME}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-40
        }
       Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-40
          }
         Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-30
            }
           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: ImageFormat}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:35-40
            }
           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: String}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(92,1)-(93,37)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-15
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: imageFormatMIME})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-33
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-15
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: imageFormatMIME})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:17-19
             }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:17-19
               }
              Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: PNG})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:21-33
              }
             Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:23-33
                }
               Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsLit 
                (HsString "\"image/png\"" {FastString: "image/png"})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-37
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-15
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: imageFormatMIME})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:17-19
             }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
            (ConPatIn 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:17-19
               }
              Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: SVG})) 
             (PrefixCon 
              [])))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:21-37
              }
             Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:23-37
                }
               Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsLit 
                (HsString "\"image/svg+xml\"" {FastString: "image/svg+xml"})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,1)-(122,3)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,77)) "-- | The so-called site argument for our application, which can hold various" Nothing,DComment (DP (1,1),DP (1,75)) "-- information that can use to keep info that needs to be available to the" Nothing,DComment (DP (1,1),DP (1,22)) "-- handler functions." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:6-10
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: WebUI})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,14)-(122,3)
          }
         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:14-18
             }
            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: WebUI}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(99,3)-(122,3)
             }
            Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,31)) "-- ^ Output debug messages" Nothing),DP (1,5)),((G AnnCloseC),DP (2,3))])
            [
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:5-32
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,10)),((AnnComment DComment (DP (1,5),DP (1,43)) "-- ^ Settings for static file serving." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:5-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: getStatic}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:27-32
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Static}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:5-34
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,11)),((AnnComment DComment (DP (1,5),DP (1,62)) "-- ^ The caching directory (for storing rendered graphs)." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: cacheDir}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:27-34
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: FilePath}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:5-34
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,12)),((AnnComment DComment (DP (1,5),DP (1,63)) "-- ^ The working directory (for storing/loading theories)." Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,75)) "-- , parseThy    :: MonadIO m => String -> GenericHandler m ClosedTheory" Nothing),DP (1,3)),((G AnnComma),DP (3,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:5-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: workDir}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:27-34
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: FilePath}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:5-67
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,11)),((AnnComment DComment (DP (1,5),DP (1,67)) "-- ^ Close an open theory according to command-line arguments." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: parseThy}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:27-67
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
                (HsFunTy 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:27-32
                   }
                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: String}))) 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:37-67
                   }
                  Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])
                  (HsAppTy 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:37-38
                     }
                    Just (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (HsTyVar 
                     (Unqual {OccName: IO}))) 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:40-67
                     }
                    Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                    (HsParTy 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:41-66
                       }
                      Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
                      (HsAppTy 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:41-53
                         }
                        Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])
                        (HsAppTy 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:41-46
                           }
                          Just (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: Either}))) 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:48-53
                           }
                          Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsTyVar 
                           (Unqual {OccName: String}))))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:55-66
                         }
                        Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsTyVar 
                         (Unqual {OccName: ClosedTheory}))))))))))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:5-40
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,10)),((AnnComment DComment (DP (1,5),DP (1,40)) "-- ^ MVar that holds the theory map" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:5-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: theoryVar}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:27-40
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:27-30
                   }
                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: MVar}))) 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:32-40
                   }
                  Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: TheoryMap}))))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:5-40
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,10)),((AnnComment DComment (DP (1,5),DP (1,40)) "-- ^ MVar that holds the thread map" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:5-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: threadVar}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:27-40
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:27-30
                   }
                  Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: MVar}))) 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:32-40
                   }
                  Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: ThreadMap}))))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:5-30
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,40)) "-- ^ Automatically store theory map" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:5-22
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: autosaveProofstate}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:27-30
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Bool}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:5-34
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,13)),((AnnComment DComment (DP (1,5),DP (1,25)) "-- ^ The dot command" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: dotCmd}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:27-34
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: FilePath}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:5-37
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,8)),((AnnComment DComment (DP (1,5),DP (1,52)) "-- ^ The image-format used for rendering graphs" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:5-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: imageFormat}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:27-37
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ImageFormat}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:5-36
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,2)),((AnnComment DComment (DP (1,5),DP (1,58)) "-- ^ The default prover to use for automatic proving." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:5-21
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: defaultAutoProver}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:27-36
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: AutoProver}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:5-30
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,14))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:5-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: debug}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:27-30
                 }
                Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Bool}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(125,1)-(128,23)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,53)) "-- | Simple data type for generating JSON responses." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:125:6-17
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: JsonResponse})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:5-27
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,3),DP (0,30)) "-- ^ Title and HTML content" Nothing),DP (0,3)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:5-12
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: JsonHtml}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:14-19
              }
             Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Qual {ModuleName: T} {OccName: Text}))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:21-27
              }
             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Content})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:5-20
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,10),DP (0,44)) "-- ^ Alert/dialog box with message" Nothing),DP (0,10)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:5-13
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: JsonAlert}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:15-20
              }
             Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Qual {ModuleName: T} {OccName: Text})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:5-23
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:5-16
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: JsonRedirect}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:18-23
              }
             Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Qual {ModuleName: T} {OccName: Text})))]) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(133,1)-(134,29)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (0,7),DP (0,33)) "-- ^ Redirect to given URL" Nothing,DComment (DP (2,1),DP (2,46)) "-- | Data type representing origin of theory." Nothing,DComment (DP (1,1),DP (1,65)) "-- Command line with file path, upload with filename (not path)," Nothing,DComment (DP (1,1),DP (1,58)) "-- or created by interactive mode (e.g. through editing)." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:6-17
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: TheoryOrigin})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:21-34
          }
         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVbar),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:21-25
             }
            Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Local}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:27-34
              }
             Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FilePath})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:38-50
          }
         Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVbar),DP (0,1))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:38-43
             }
            Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Upload}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:45-50
              }
             Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:54-64
          }
         Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:54-64
             }
            Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Interactive}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:6-29
          }
         Just (Ann (DP (1,6)) (ColDelta 6) DP (1,6) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:16-19
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
             []) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:16-19
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Show}))))),
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:22-23
            }
           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
             []) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:22-23
              }
             Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Eq}))))),
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:26-28
            }
           Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
             []) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:26-28
              }
             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Ord})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,1)-(147,3)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,76)) "-- | Data type containg both the theory and it's index, making it easier to" Nothing,DComment (DP (1,1),DP (1,75)) "-- pass the two around (since they are always tied to each other). We also" Nothing,DComment (DP (1,1),DP (1,44)) "-- keep some extra bookkeeping information." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:6-15
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: TheoryInfo})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,19)-(147,3)
          }
         Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:19-28
             }
            Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryInfo}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(140,3)-(147,3)
             }
            Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,6),DP (0,39)) "-- ^ The automatic prover to use." Nothing),DP (0,6)),((G AnnCloseC),DP (1,3))])
            [
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:5-29
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,6)),((AnnComment DComment (DP (0,7),DP (0,28)) "-- ^ Index of theory." Nothing),DP (0,7)),((G AnnComma),DP (1,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:5-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiIndex}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:21-29
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: TheoryIdx}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:5-32
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,5)),((AnnComment DComment (DP (0,4),DP (0,27)) "-- ^ The closed theory." Nothing),DP (0,4)),((G AnnComma),DP (1,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiTheory}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:21-32
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ClosedTheory}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:5-29
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,7)),((AnnComment DComment (DP (0,7),DP (0,35)) "-- ^ Time theory was loaded." Nothing),DP (0,7)),((G AnnComma),DP (1,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiTime}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:21-29
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: ZonedTime}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:5-35
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,5)),((AnnComment DComment (DP (0,1),DP (0,28)) "-- ^ Prev theory in history" Nothing),DP (0,1)),((G AnnComma),DP (1,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiParent}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:21-35
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:21-25
                   }
                  Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Maybe}))) 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:27-35
                   }
                  Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: TheoryIdx}))))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:5-24
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,4)),((AnnComment DComment (DP (0,12),DP (0,53)) "-- ^ This is the orginally loaded theory." Nothing),DP (0,12)),((G AnnComma),DP (1,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:5-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiPrimary}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:21-24
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: Bool}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:5-32
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,5)),((AnnComment DComment (DP (0,4),DP (0,26)) "-- ^ Origin of theory." Nothing),DP (0,4)),((G AnnComma),DP (1,3))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiOrigin}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:21-32
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: TheoryOrigin}))) 
               (Nothing))),
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:5-30
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:5-16
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: tiAutoProver}))] 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:21-30
                 }
                Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: AutoProver}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1-49
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,74)) "-- | We use the ordering in order to display loaded theories to the user." Nothing,DComment (DP (1,1),DP (1,79)) "-- We first compare by name, then by time loaded, and then by source: Theories" Nothing,DComment (DP (1,1),DP (1,69)) "-- that were loaded from the command-line are displayed earlier then" Nothing,DComment (DP (1,1),DP (1,30)) "-- interactively loaded ones." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1-9
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: compareTI}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-49
        }
       Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-49
          }
         Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-23
            }
           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: TheoryInfo}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:28-49
            }
           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:28-37
              }
             Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: TheoryInfo}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:42-49
              }
             Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Ordering}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:1-9
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: compareTI})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:1-9
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: compareTI})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:11-41
             }
            Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:12-40
               }
              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
              (ConPatIn 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:12-21
                 }
                Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: TheoryInfo})) 
               (PrefixCon 
                [
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:23
                   }
                  Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:25-26
                   }
                  Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: i1}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:28-29
                   }
                  Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: t1}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:31-32
                   }
                  Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: p1}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:34-35
                   }
                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: a1}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:37-38
                   }
                  Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: o1}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:40
                   }
                  Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))]))))),
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:43-73
             }
            Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:44-72
               }
              Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])
              (ConPatIn 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:44-53
                 }
                Just (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: TheoryInfo})) 
               (PrefixCon 
                [
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:55
                   }
                  Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:57-58
                   }
                  Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: i2}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:60-61
                   }
                  Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: t2}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:63-64
                   }
                  Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: p2}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:66-67
                   }
                  Just (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: a2}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:69-70
                   }
                  Just (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (VarPat 
                   (Unqual {OccName: o2}))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:72
                   }
                  Just (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (WildPat 
                   (PlaceHolder)))])))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,75)-(161,5)
              }
             Just (Ann (DP (0,-1)) (ColDelta 75) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(155,3)-(161,5)
                }
               Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
               (HsApp 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:155:3-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: mconcat}))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(156,5)-(161,5)
                  }
                 Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (1,5))])
                 (ExplicitList 
                  (PlaceHolder) 
                  (Nothing) 
                  [
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-35
                     }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-32
                       }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-29
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-15
                           }
                          Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: comparing}))) 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:17-29
                           }
                          Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (HsPar 
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:18-28
                             }
                            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:18-20
                               }
                              Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: get}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:22-28
                               }
                              Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: thyName}))))))))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:31-32
                         }
                        Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: i1}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:34-35
                       }
                      Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: i2}))))),
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-36
                     }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-33
                       }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-30
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-15
                           }
                          Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: comparing}))) 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:17-30
                           }
                          Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: zonedTimeToUTC}))))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:32-33
                         }
                        Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: t1}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:35-36
                       }
                      Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: t2}))))),
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-19
                     }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-16
                       }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-13
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: compare}))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:15-16
                         }
                        Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: a1}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:18-19
                       }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: a2}))))),
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-19
                     }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-16
                       }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-13
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: compare}))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:15-16
                         }
                        Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: p1}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:18-19
                       }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: p2}))))),
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:7-19
                     }
                    Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:7-16
                       }
                      Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:7-13
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: compare}))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:15-16
                         }
                        Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: o1}))))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:18-19
                       }
                      Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: o2})))))]))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(163,1)-(164,36)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:10-22
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
          []) 
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:10-22
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:10-11
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Eq}))) 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:13-22
             }
            Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: TheoryInfo}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-36
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
           (Unqual {OccName: ==})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-36
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (Unqual {OccName: ==})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:8-9
                 }
                Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: t1}))),
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:11-12
                 }
                Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: t2})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:14-36
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-36
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-30
                      }
                     Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-27
                        }
                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-24
                          }
                         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: compareTI}))) 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:26-27
                          }
                         Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: t1}))))) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:29-30
                        }
                       Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: t2}))))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:32-33
                      }
                     Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: ==}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:35-36
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: EQ})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(166,1)-(167,21)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:10-23
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
          []) 
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:10-23
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:10-12
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Ord}))) 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:14-23
             }
            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: TheoryInfo}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-21
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-9
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: compare})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-21
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: compare})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:11-21
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:13-21
                    }
                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: compareTI})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(171,1)-(179,27)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,58)) "-- | Simple data type for specifying a path to a specific" Nothing,DComment (DP (1,1),DP (1,25)) "-- item within a theory." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:171:6-15
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: TheoryPath})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:172:5-14
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,26),DP (0,73)) "-- ^ The help view (help and info about theory)" Nothing),DP (0,26)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:172:5-14
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryHelp}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:5-22
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,18),DP (0,51)) "-- ^ Theory lemma with given name" Nothing),DP (0,18)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:5-15
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryLemma}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:17-22
              }
             Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:5-39
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,1),DP (0,45)) "-- ^ Required cases (i'th source, j'th case)" Nothing),DP (0,1)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:5-18
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryCaseDist}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:20-31
              }
             Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: CaseDistKind}))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:33-35
              }
             Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int}))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:37-39
              }
             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:5-32
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,8),DP (0,52)) "-- ^ Proof path within proof for given lemma" Nothing),DP (0,8)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:5-15
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryProof}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:17-22
              }
             Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String}))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:24-32
              }
             Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: ProofPath})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:5-37
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,3),DP (0,44)) "-- ^ Apply the proof method to proof path" Nothing),DP (0,3)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:5-16
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryMethod}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:18-23
              }
             Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String}))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:25-33
              }
             Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: ProofPath}))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:35-37
              }
             Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Int})))]) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:177:5-15
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,25),DP (0,42)) "-- ^ Theory rules" Nothing),DP (0,25)),((G AnnVbar),DP (1,3))])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:177:5-15
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryRules}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:178:5-17
          }
         Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:178:5-17
             }
            Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: TheoryMessage}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
           []) 
          (PrefixCon 
           []) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:3-27
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,23),DP (0,52)) "-- ^ Theory message deduction" Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:13-14
            }
           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
             []) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:13-14
              }
             Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Eq}))))),
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:17-20
            }
           Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
             []) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:17-20
              }
             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Show}))))),
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:23-26
            }
           Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
             []) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:23-26
              }
             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Read})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,71)) "-- | Render a theory path to a list of strings. Note that we prefix an" Nothing,DComment (DP (1,1),DP (1,75)) "-- underscore to the empty string and strings starting with an underscore." Nothing,DComment (DP (1,1),DP (1,78)) "-- This avoids empty path segments, which seem to trip up certain versions of" Nothing,DComment (DP (1,1),DP (1,10)) "-- Yesod." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1-16
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: renderTheoryPath}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-42
        }
       Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-42
          }
         Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-30
            }
           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: TheoryPath}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:35-42
            }
           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
           (HsListTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:36-41
              }
             Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:186:1-16
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: renderTheoryPath})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:186:1-16
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: renderTheoryPath})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,18)-(195,73)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-33
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
               (OpApp 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-7
                    }
                   Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: map}))) 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:9-28
                    }
                   Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: prefixWithUnderscore}))))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:30
                  }
                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: .}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:32-33
                  }
                 Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: go})))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(189,5)-(195,73)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-6
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: go})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-28
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:8-17
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:8-17
                         }
                        Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: TheoryHelp})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:19-28
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:21-28
                          }
                         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (ExplicitList 
                          (PlaceHolder) 
                          (Nothing) 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:22-27
                             }
                            Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsLit 
                             (HsString "\"help\"" {FastString: "help"})))]))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-30
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:8-18
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:8-18
                         }
                        Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: TheoryRules})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:20-30
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:22-30
                          }
                         Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (ExplicitList 
                          (PlaceHolder) 
                          (Nothing) 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:23-29
                             }
                            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsLit 
                             (HsString "\"rules\"" {FastString: "rules"})))]))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-34
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:8-20
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:8-20
                         }
                        Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (Unqual {OccName: TheoryMessage})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:22-34
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:24-34
                          }
                         Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (ExplicitList 
                          (PlaceHolder) 
                          (Nothing) 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:25-33
                             }
                            Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsLit 
                             (HsString "\"message\"" {FastString: "message"})))]))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-43
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:8-25
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:9-24
                         }
                        Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:9-19
                           }
                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: TheoryLemma})) 
                         (PrefixCon 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:21-24
                             }
                            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: name})))])))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:27-43
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:29-43
                          }
                         Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (ExplicitList 
                          (PlaceHolder) 
                          (Nothing) 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:30-36
                             }
                            Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                            (HsLit 
                             (HsString "\"lemma\"" {FastString: "lemma"}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:39-42
                             }
                            Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: name})))]))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-65
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:8-29
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:9-28
                         }
                        Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:9-22
                           }
                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: TheoryCaseDist})) 
                         (PrefixCon 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:24
                             }
                            Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: k}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:26
                             }
                            Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: i}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:28
                             }
                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: j})))])))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:31-65
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:33-65
                          }
                         Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                         (ExplicitList 
                          (PlaceHolder) 
                          (Nothing) 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:34-40
                             }
                            Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
                            (HsLit 
                             (HsString "\"cases\"" {FastString: "cases"}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:43-48
                             }
                            Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnComma),DP (0,0))])
                            (HsApp 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:43-46
                               }
                              Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: show}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:48
                               }
                              Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: k}))))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:51-56
                             }
                            Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnComma),DP (0,0))])
                            (HsApp 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:51-54
                               }
                              Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: show}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:56
                               }
                              Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: i}))))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:59-64
                             }
                            Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:59-62
                               }
                              Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: show}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:64
                               }
                              Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: j})))))]))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-56
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:8-31
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:9-30
                         }
                        Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:9-19
                           }
                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: TheoryProof})) 
                         (PrefixCon 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:21-25
                             }
                            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: lemma}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:27-30
                             }
                            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: path})))])))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:33-56
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-56
                          }
                         Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-49
                            }
                           Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-41
                              }
                             Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsLit 
                              (HsString "\"proof\"" {FastString: "proof"}))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:43
                              }
                             Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Exact {Name: :}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:45-49
                              }
                             Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: lemma}))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:51
                            }
                           Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Exact {Name: :}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:53-56
                            }
                           Just (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: path})))))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-73
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-6
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: go})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:8-36
                       }
                      Just (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:9-35
                         }
                        Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:9-20
                           }
                          Just (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Unqual {OccName: TheoryMethod})) 
                         (PrefixCon 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:22-26
                             }
                            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: lemma}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:28-31
                             }
                            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: path}))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:33-35
                             }
                            Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: idx})))])))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:38-73
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-73
                          }
                         Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-66
                            }
                           Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-55
                              }
                             Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])
                             (OpApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-47
                                }
                               Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsLit 
                                (HsString "\"method\"" {FastString: "method"}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:49
                                }
                               Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Exact {Name: :}))) 
                              (PlaceHolder) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:51-55
                                }
                               Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: lemma}))))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:57
                              }
                             Just (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Exact {Name: :}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:59-66
                              }
                             Just (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:59-62
                                }
                               Just (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: show}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:64-66
                                }
                               Just (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: idx}))))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:68
                            }
                           Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Exact {Name: :}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:70-73
                            }
                           Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: path})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1-40
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,75)) "-- | Prefix an underscore to the empty string and strings starting with an" Nothing,DComment (DP (1,1),DP (1,15)) "-- underscore." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1-20
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: prefixWithUnderscore}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-40
        }
       Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-40
          }
         Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-30
            }
           Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: String}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:35-40
            }
           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: String}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(200,1)-(202,36)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-20
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: prefixWithUnderscore})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-37
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,9))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: prefixWithUnderscore})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:22-23
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (LitPat 
             (HsString "\"\"" {FastString: ""})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:33-37
              }
             Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:35-37
                }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsLit 
                (HsString "\"_\"" {FastString: "_"})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-42
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: prefixWithUnderscore})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:22-31
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnAt),DP (0,0))])
            (AsPat 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:22-23
               }
              Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
              (Unqual {OccName: cs})) 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:25-31
               }
              Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
              (ParPat 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:26-30
                 }
                Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:29
                   }
                  Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Exact {Name: :})) 
                 (InfixCon 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:26-28
                    }
                   Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (LitPat 
                    (HsChar "'_'" 
                     ('_')))) 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:30
                    }
                   Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (WildPat 
                    (PlaceHolder))))))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:33-42
              }
             Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:35-42
                }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:35-37
                  }
                 Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsLit 
                  (HsChar "'_'" 
                   ('_')))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:39
                  }
                 Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Exact {Name: :}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:41-42
                  }
                 Just (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: cs})))))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-36
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,9))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-20
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: prefixWithUnderscore})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:22-23
             }
            Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: cs})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:33-36
              }
             Just (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:35-36
                }
               Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: cs})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,48)) "-- | Remove an underscore prefix. It holds that" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,52)) "-- > unprefixUnderscore . prefixWithUnderscore = id" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,78)) "-- The inverted composition holds for all strings except the empty string and" Nothing,DComment (DP (1,1),DP (1,40)) "-- strings starting with an underscore." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1-18
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: unprefixUnderscore}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-38
        }
       Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-38
          }
         Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-28
            }
           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: String}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:33-38
            }
           Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: String}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(211,1)-(213,40)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-18
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: unprefixUnderscore})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-40
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,14))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-18
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: unprefixUnderscore})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:20-22
             }
            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (LitPat 
             (HsString "\"_\"" {FastString: "_"})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:37-40
              }
             Just (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:39-40
                }
               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsLit 
                (HsString "\"\"" {FastString: ""})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-40
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-18
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: unprefixUnderscore})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:20-35
             }
            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (ParPat 
             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:21-34
               }
              Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
              (ConPatIn 
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:24
                 }
                Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Exact {Name: :})) 
               (InfixCon 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:21-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (LitPat 
                  (HsChar "'_'" 
                   ('_')))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:25-34
                  }
                 Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnAt),DP (0,0))])
                 (AsPat 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:25-26
                    }
                   Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (Unqual {OccName: cs})) 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:28-34
                    }
                   Just (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (ParPat 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:29-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])
                     (ConPatIn 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:32
                        }
                       Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Exact {Name: :})) 
                      (InfixCon 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:29-31
                         }
                        Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (LitPat 
                         (HsChar "'_'" 
                          ('_')))) 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:33
                         }
                        Just (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (WildPat 
                         (PlaceHolder)))))))))))))))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:37-40
              }
             Just (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:39-40
                }
               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: cs})))))] 
           (EmptyLocalBinds)))),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-40
          }
         Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,15))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-18
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: unprefixUnderscore})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:20-21
             }
            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: cs})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:37-40
              }
             Just (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:39-40
                }
               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Unqual {OccName: cs})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1-47
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,49)) "-- | Parse a list of strings into a theory path." Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1-15
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: parseTheoryPath}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-47
        }
       Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-47
          }
         Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-27
            }
           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
           (HsListTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:21-26
              }
             Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: String}))))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:32-47
            }
           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:32-36
              }
             Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Maybe}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:38-47
              }
             Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: TheoryPath}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:217:1-15
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: parseTheoryPath})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:217:1-15
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: parseTheoryPath})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,17)-(248,32)
              }
             Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:5-34
                }
               Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
               (OpApp 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:5-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: parse}))) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:11
                  }
                 Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: .}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:13-34
                  }
                 Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:13-15
                    }
                   Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: map}))) 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:17-34
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: unprefixUnderscore})))))))))] 
           (HsValBinds 
            (ValBindsIn {Bag(Located (HsBind RdrName)): 
             [
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(220,5)-(229,26)
                }
               Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: parse})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-26
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,5))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-9
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parse})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11-12
                       }
                      Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])
                      (ConPatIn 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11-12
                         }
                        Just (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])
                        (Exact {Name: []})) 
                       (PrefixCon 
                        [])))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:18-26
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:20-26
                          }
                         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Nothing})))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,5)-(229,26)
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:5-9
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parse})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:11-16
                       }
                      Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:12-15
                         }
                        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:13
                           }
                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Exact {Name: :})) 
                         (InfixCon 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:12
                            }
                           Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: x}))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:14-15
                            }
                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: xs}))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,18)-(229,26)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,20)-(229,26)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(222,7)-(229,26) Ref "delta-1"),DP (0,0))])
                         (HsCase 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:25
                            }
                           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: x}))) 
                          (MG 
                           [
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:7-34
                              }
                             Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:7-12
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"help\"" {FastString: "help"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:17-34
                                  }
                                 Just (Ann (DP (0,4)) (ColDelta 10) DP (0,4) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:20-34
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:20-23
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: Just}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:25-34
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: TheoryHelp})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:7-35
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:7-13
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"rules\"" {FastString: "rules"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:17-35
                                  }
                                 Just (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:20-35
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:20-23
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: Just}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:25-35
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: TheoryRules})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:7-37
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:7-15
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"message\"" {FastString: "message"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:17-37
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:20-37
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:20-23
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: Just}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:25-37
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: TheoryMessage})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:7-32
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:7-13
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"lemma\"" {FastString: "lemma"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:17-32
                                  }
                                 Just (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:20-32
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:20-29
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: parseLemma}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:31-32
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: xs})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:7-32
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:7-13
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"cases\"" {FastString: "cases"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:17-32
                                  }
                                 Just (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:20-32
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:20-29
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: parseCases}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:31-32
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: xs})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:7-32
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:7-13
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"proof\"" {FastString: "proof"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:17-32
                                  }
                                 Just (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:20-32
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:20-29
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: parseProof}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:31-32
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: xs})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:7-33
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:7-14
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (LitPat 
                                 (HsString "\"method\"" {FastString: "method"})))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:17-33
                                  }
                                 Just (Ann (DP (0,2)) (ColDelta 10) DP (0,2) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:20-33
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                   (HsApp 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:20-30
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: parseMethod}))) 
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:32-33
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: xs})))))))] 
                               (EmptyLocalBinds)))),
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:7-26
                              }
                             Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                             (Match 
                              (Nothing) 
                              [
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:7
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (WildPat 
                                 (PlaceHolder)))] 
                              (Nothing) 
                              (GRHSs 
                               [
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:17-26
                                  }
                                 Just (Ann (DP (0,9)) (ColDelta 10) DP (0,9) [] [((G AnnRarrow),DP (0,0))])
                                 (GRHS 
                                  [] 
                                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:20-26
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: Nothing})))))] 
                               (EmptyLocalBinds))))] 
                           [] 
                           (PlaceHolder) 
                           (FromSource))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: safeRead})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-12
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: safeRead})) 
                      (False))) 
                    [] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:14-44
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-44
                          }
                         Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-36
                            }
                           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-26
                              }
                             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: listToMaybe}))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:28
                              }
                             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: .}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:30-36
                              }
                             Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:30-32
                                }
                               Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: map}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:34-36
                                }
                               Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: fst}))))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:38
                            }
                           Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: .}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:40-44
                            }
                           Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: reads})))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: parseLemma})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseLemma})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:16-17
                       }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (VarPat 
                       (Unqual {OccName: ys})))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:19-50
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:21-50
                          }
                         Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:21-31
                            }
                           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: TheoryLemma}))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:33-35
                            }
                           Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: <$>}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:37-50
                            }
                           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:37-47
                              }
                             Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: listToMaybe}))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:49-50
                              }
                             Just (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: ys})))))))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(235,5)-(236,31)
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: parseProof})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-47
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseProof})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:16-21
                       }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:17-20
                         }
                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:18
                           }
                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Exact {Name: :})) 
                         (InfixCon 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:17
                            }
                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: y}))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:19-20
                            }
                           Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: ys}))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:23-47
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:25-47
                          }
                         Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:25-28
                            }
                           Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: Just}))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:30-47
                            }
                           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                           (HsPar 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:31-46
                              }
                             Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:31-43
                                }
                               Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                               (HsApp 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:31-41
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: TheoryProof}))) 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:43
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: y}))))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:45-46
                                }
                               Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: ys})))))))))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-31
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,6))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseProof})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:16
                       }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:23-31
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:25-31
                          }
                         Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Nothing})))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(238,5)-(239,34)
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: parseMethod})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-66
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-15
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseMethod})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:17-24
                       }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18-23
                         }
                        Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:21
                           }
                          Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Exact {Name: :})) 
                         (InfixCon 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18-20
                            }
                           Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:19
                              }
                             Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Exact {Name: :})) 
                            (InfixCon 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18
                               }
                              Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: y}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:20
                               }
                              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: z})))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:22-23
                            }
                           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (VarPat 
                            (Unqual {OccName: zs}))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:26-66
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-66
                          }
                         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
                         (OpApp 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-46
                            }
                           Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                           (OpApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-37
                              }
                             Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-35
                                }
                               Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: safeRead}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:37
                                }
                               Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: z}))))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:39-41
                              }
                             Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: >>=}))) 
                            (PlaceHolder) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:43-46
                              }
                             Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: Just}))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:48
                            }
                           Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: .}))) 
                          (PlaceHolder) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:50-66
                            }
                           Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:50-63
                              }
                             Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])
                             (HsApp 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:50-61
                                }
                               Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: TheoryMethod}))) 
                              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:63
                                }
                               Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])
                               (HsVar 
                                (Unqual {OccName: y}))))) 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:65-66
                              }
                             Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: zs})))))))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-34
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,8))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-15
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseMethod})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:17
                       }
                      Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:26-34
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:28-34
                          }
                         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Nothing})))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                [])),
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(248,32)
                }
               Just (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])
               (FunBind 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:5-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: parseCases})) 
                (False) 
                (MG 
                 [
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(247,35)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:5-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseCases})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:16-27
                       }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (ParPat 
                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-26
                         }
                        Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                        (ConPatIn 
                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:25
                           }
                          Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (Exact {Name: :})) 
                         (InfixCon 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-24
                            }
                           Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                           (ConPatIn 
                            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:23
                              }
                             Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (Exact {Name: :})) 
                            (InfixCon 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-22
                               }
                              Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])
                              (ConPatIn 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:21
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (Exact {Name: :})) 
                               (InfixCon 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-20
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: kind}))) 
                                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:22
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                 (VarPat 
                                  (Unqual {OccName: y})))))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:24
                               }
                              Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: z})))))) 
                          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:26
                            }
                           Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (WildPat 
                            (PlaceHolder))))))))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,29)-(247,35)
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,31)-(247,35)
                          }
                         Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(247,35) Ref "delta-2"),DP (0,0))])
                         (HsDo 
                          (DoExpr) 
                          [
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(244,44)
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:7
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: k}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,12)-(244,44)
                               }
                              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,25)-(244,44) Ref "delta-3"),DP (0,0))])
                              (HsCase 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:17-20
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: kind}))) 
                               (MG 
                                [
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:25-57
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:25-31
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (LitPat 
                                      (HsString "\"typed\"" {FastString: "typed"})))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:35-57
                                       }
                                      Just (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:38-57
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                        (HsApp 
                                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:38-43
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: return}))) 
                                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:45-57
                                           }
                                          Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: TypedCaseDist})))))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:25-59
                                   }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:25-33
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (LitPat 
                                      (HsString "\"untyped\"" {FastString: "untyped"})))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:35-59
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:38-59
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                                        (HsApp 
                                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:38-43
                                           }
                                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: return}))) 
                                         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:45-59
                                           }
                                          Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                          (HsVar 
                                           (Unqual {OccName: UntypedCaseDist})))))))] 
                                    (EmptyLocalBinds)))),
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:25-44
                                   }
                                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                                  (Match 
                                   (Nothing) 
                                   [
                                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:25
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (WildPat 
                                      (PlaceHolder)))] 
                                   (Nothing) 
                                   (GRHSs 
                                    [
                                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:35-44
                                       }
                                      Just (Ann (DP (0,9)) (ColDelta 10) DP (0,9) [] [((G AnnRarrow),DP (0,0))])
                                      (GRHS 
                                       [] 
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:38-44
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: Nothing})))))] 
                                    (EmptyLocalBinds))))] 
                                [] 
                                (PlaceHolder) 
                                (FromSource)))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7-21
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: m}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:12-21
                               }
                              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:12-19
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: safeRead}))) 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:21
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: y}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7-21
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                            (BindStmt 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (VarPat 
                               (Unqual {OccName: n}))) 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:12-21
                               }
                              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:12-19
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: safeRead}))) 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:21
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: z}))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})))),
                           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7-35
                             }
                            Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                            (BodyStmt 
                             ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7-35
                               }
                              Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7-12
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: return}))) 
                               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:14-35
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                (HsPar 
                                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-34
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                  (HsApp 
                                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-32
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                    (HsApp 
                                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-30
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])
                                      (HsApp 
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-28
                                         }
                                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: TheoryCaseDist}))) 
                                       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:30
                                         }
                                        Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                        (HsVar 
                                         (Unqual {OccName: k}))))) 
                                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:32
                                       }
                                      Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: m}))))) 
                                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:34
                                     }
                                    Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                    (HsVar 
                                     (Unqual {OccName: n}))))))))) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (HsLit 
                              (HsString "" {FastString: "noSyntaxExpr"})) 
                             (PlaceHolder)))] 
                          (PlaceHolder)))))] 
                     (EmptyLocalBinds)))),
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-32
                    }
                   Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,7))])
                   (Match 
                    (Just 
                     ((,) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-14
                        }
                       Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (Unqual {OccName: parseCases})) 
                      (False))) 
                    [
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:16
                       }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (WildPat 
                       (PlaceHolder)))] 
                    (Nothing) 
                    (GRHSs 
                     [
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:24-32
                        }
                       Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
                       (GRHS 
                        [] 
                        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:26-32
                          }
                         Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: Nothing})))))] 
                     (EmptyLocalBinds))))] 
                 [] 
                 (PlaceHolder) 
                 (FromSource)) 
                (WpHole) 
                (PlaceHolder) 
                []))]} 
             [])))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1-38
     }
    Just (Ann (DP (3,1)) (ColDelta 1) DP (3,1) [] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (SynDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:6-14
        }
       Just (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: RenderUrl})) 
      (HsQTvs 
       [] 
       []) 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-38
        }
       Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
       (HsFunTy 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-28
          }
         Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-22
            }
           Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Route}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:24-28
            }
           Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: WebUI}))))) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:33-38
          }
         Just (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])
         (HsTyVar 
          (Qual {ModuleName: T} {OccName: Text}))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (18,1) [DComment (DP (2,1),DP (2,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Routing" Nothing,DComment (DP (1,1),DP (1,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,58)) "-- This is a hack we need to work around a bug (?) in the" Nothing,DComment (DP (1,1),DP (1,60)) "-- C pre-processor. In order to define multi-pieces we need" Nothing,DComment (DP (1,1),DP (1,62)) "-- the asterisk symbol, but the C pre-processor always chokes" Nothing,DComment (DP (1,1),DP (1,61)) "-- on them thinking that they are somehow comments. This can" Nothing,DComment (DP (1,1),DP (1,62)) "-- be removed once the CPP language ext is disabled, but it's" Nothing,DComment (DP (1,1),DP (1,41)) "-- currently needed for GHC < 7 support." Nothing,DComment (DP (1,1),DP (1,16)) "#define MP(x) *x" Nothing,DComment (DP (2,1),DP (2,41)) "-- | Static routing for our application." Nothing,DComment (DP (1,1),DP (1,56)) "-- Note that handlers ending in R are general handlers," Nothing,DComment (DP (1,1),DP (1,55)) "-- whereas handlers ending in MR are for the main view" Nothing,DComment (DP (1,1),DP (1,53)) "-- and the ones ending in DR are for the debug view." Nothing] [])
    (SpliceD 
     (SpliceDecl 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2)
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
       (HsUntypedSplice 
        (Unqual {OccName: splice}) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
         (HsApp 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:1-19
            }
           Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])
           (HsApp 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsVar 
              (Unqual {OccName: mkYesodData}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:13-19
              }
             Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsLit 
              (HsString "\"WebUI\"" {FastString: "WebUI"}))))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,21)-(291,2)
            }
           Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsSpliceE 
            (HsQuasiQuote 
             (Unqual {OccName: splice}) 
             (Unqual {OccName: parseRoutes}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,34)-(291,2)
               } {FastString: "\n/                                          RootR                   GET POST\n/thy/#Int/overview/ *TheoryPath          OverviewR               GET\n/thy/#Int/source                           TheorySourceR           GET\n/thy/#Int/message                          TheoryMessageDeductionR GET\n/thy/#Int/main/ *TheoryPath              TheoryPathMR            GET\n-- /thy/#Int/debug/ *TheoryPath             TheoryPathDR            GET\n/thy/#Int/graph/ *TheoryPath             TheoryGraphR            GET\n/thy/#Int/autoprove/#SolutionExtractor/#Int/ *TheoryPath AutoProverR             GET\n/thy/#Int/next/#String/ *TheoryPath      NextTheoryPathR         GET\n/thy/#Int/prev/#String/ *TheoryPath      PrevTheoryPathR         GET\n-- /thy/#Int/save                             SaveTheoryR             GET\n/thy/#Int/download/#String                 DownloadTheoryR         GET\n-- /thy/#Int/edit/source                      EditTheoryR             GET POST\n-- /thy/#Int/edit/path/ *TheoryPath         EditPathR               GET POST\n/thy/#Int/del/path/ *TheoryPath          DeleteStepR             GET\n/thy/#Int/unload                           UnloadTheoryR           GET\n/kill                                      KillThreadR             GET\n-- /threads                                   ThreadsR                GET\n/robots.txt                                RobotsR                 GET\n/favicon.ico                               FaviconR                GET\n/static                                    StaticR                 Static getStatic\n"}))))))) 
      (ImplicitSplice)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(293,1)-(301,40)
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:10-36
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
          []) 
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:10-36
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:10-18
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: PathPiece}))) 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:20-36
             }
            Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: SolutionExtractor}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(294,3)-(296,32)
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-13
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: toPathPiece})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-41
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: toPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:15-24
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:15-24
                   }
                  Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: CutNothing})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:26-41
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:28-41
                    }
                   Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsLit 
                    (HsString "\"characterize\"" {FastString: "characterize"})))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-33
              }
             Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,5))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: toPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:15-20
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:15-20
                   }
                  Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: CutDFS})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:26-33
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:28-33
                    }
                   Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsLit 
                    (HsString "\"idfs\"" {FastString: "idfs"})))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-32
              }
             Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,5))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-13
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: toPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:15-20
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                (ConPatIn 
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:15-20
                   }
                  Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (Unqual {OccName: CutBFS})) 
                 (PrefixCon 
                  [])))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:26-32
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:28-32
                    }
                   Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsLit 
                    (HsString "\"bfs\"" {FastString: "bfs"})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(298,3)-(301,40)
          }
         Just (Ann (DP (2,3)) (ColDelta 3) DP (2,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-15
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: fromPathPiece})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-48
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: fromPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:17-30
                 }
                Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (LitPat 
                 (HsString "\"characterize\"" {FastString: "characterize"})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:32-48
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:34-48
                    }
                   Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:34-37
                      }
                     Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: Just}))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:39-48
                      }
                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: CutNothing})))))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-44
              }
             Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,9))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: fromPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:17-22
                 }
                Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (LitPat 
                 (HsString "\"idfs\"" {FastString: "idfs"})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:32-44
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:34-44
                    }
                   Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:34-37
                      }
                     Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: Just}))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:39-44
                      }
                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: CutDFS})))))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-44
              }
             Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,10))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: fromPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:17-21
                 }
                Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (LitPat 
                 (HsString "\"bfs\"" {FastString: "bfs"})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:32-44
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:34-44
                    }
                   Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:34-37
                      }
                     Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: Just}))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:39-44
                      }
                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: CutBFS})))))))] 
               (EmptyLocalBinds)))),
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-40
              }
             Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,14))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: fromPathPiece})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:17
                 }
                Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder)))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:32-40
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:34-40
                    }
                   Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: Nothing})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(304,1)-(306,53)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,41)) "-- | MultiPiece instance for TheoryPath." Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:10-34
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
          []) 
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:10-34
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:10-23
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: PathMultiPiece}))) 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:25-34
             }
            Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: TheoryPath}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-18
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: toPathMultiPiece})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,3))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-18
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: toPathMultiPiece})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:22-52
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-52
                    }
                   Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-33
                      }
                     Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-26
                        }
                       Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: map}))) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:28-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Qual {ModuleName: T} {OccName: pack}))))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:35
                      }
                     Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:37-52
                      }
                     Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: renderTheoryPath})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-53
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-20
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: fromPathMultiPiece})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-53
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-20
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: fromPathMultiPiece})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:22-53
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:24-53
                    }
                   Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:24-38
                      }
                     Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: parseTheoryPath}))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:40
                      }
                     Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:42-53
                      }
                     Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:42-44
                        }
                       Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: map}))) 
                      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:46-53
                        }
                       Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Qual {ModuleName: T} {OccName: unpack})))))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(309,1)-(320,21)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,36)) "-- Instance of the Yesod typeclass." Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:10-20
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
          []) 
         ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:10-20
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:10-14
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: Yesod}))) 
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:16-20
             }
            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: WebUI}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (3,3) [DComment (DP (1,3),DP (1,56)) "-- | The approot. We can leave this empty because the" Nothing,DComment (DP (1,3),DP (1,63)) "-- application is always served from the root of the server." Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-9
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: approot})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-9
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: approot})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:11-33
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:13-33
                    }
                   Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:13-25
                      }
                     Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: ApprootStatic}))) 
                    ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:27-33
                      }
                     Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Qual {ModuleName: T} {OccName: empty})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (3,3) [DComment (DP (2,3),DP (2,41)) "-- | The default layout for rendering." Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-15
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: defaultLayout})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-15
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: defaultLayout})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:17-32
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:19-32
                    }
                   Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: defaultLayout'})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-21
          }
         Just (Ann (DP (1,3)) (ColDelta 3) DP (5,3) [DComment (DP (2,3),DP (2,62)) "-- | The path cleaning function. We make sure empty strings" Nothing,DComment (DP (1,3),DP (1,60)) "-- are not scrubbed from the end of the list. The default" Nothing,DComment (DP (1,3),DP (1,47)) "-- cleanPath function forces canonical URLs." Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-11
            }
           Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: cleanPath})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-21
              }
             Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: cleanPath})) 
                (False))) 
              [
               ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:13
                 }
                Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (WildPat 
                 (PlaceHolder)))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:15-21
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:17-21
                    }
                   Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: Right})))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1-40
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,18)) "-- Default layout" Nothing,DComment (DP (1,1),DP (1,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,48)) "-- | Our application's default layout template." Nothing,DComment (DP (1,1),DP (1,72)) "-- Note: We define the default layout here even tough it doesn't really" Nothing,DComment (DP (1,1),DP (1,78)) "-- belong in the \"types\" module in order to avoid mutually recursive modules." Nothing,DComment (DP (1,1),DP (1,63)) "-- defaultLayout' :: (Yesod master, Route master ~ WebUIRoute)" Nothing,DComment (DP (1,1),DP (1,74)) "--                => Widget master ()      -- ^ Widget to embed in layout" Nothing,DComment (DP (1,1),DP (1,41)) "--                -> Handler master Html" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1-14
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: defaultLayout'}))] 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-40
        }
       Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] [])
         []) 
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-40
          }
         Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-24
            }
           Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Widget}))) 
          ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:29-40
            }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:29-35
              }
             Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Handler}))) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:37-40
              }
             Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Html}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:1-14
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: defaultLayout'})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:1-14
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: defaultLayout'})) 
            (False))) 
          [
           ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:16
             }
            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: w})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,18)-(364,4)
              }
             Just (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,20)-(364,4)
                }
               Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(334,3)-(364,4) Ref "delta-4"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:3-31
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:3-6
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: page}))) 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:11-31
                     }
                    Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:11-29
                       }
                      Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: widgetToPageContent}))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:31
                       }
                      Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: w}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3-23
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3-9
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: message}))) 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:14-23
                     }
                    Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                    (HsVar 
                     (Unqual {OccName: getMessage}))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,3)-(364,4)
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,3)-(364,4)
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:336:3-17
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: giveUrlRenderer}))) 
                     ({ ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,19)-(364,4)
                       }
                      Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsSpliceE 
                       (HsQuasiQuote 
                        (Unqual {OccName: splice}) 
                        (Unqual {OccName: hamlet}) { ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,27)-(364,4)
                          } {FastString: "\n    $newline never\n    !!!\n    <html>\n      <head>\n        <title>#{pageTitle page}\n        <link rel=stylesheet href=/static/css/tamarin-prover-ui.css>\n        <link rel=stylesheet href=/static/css/jquery-contextmenu.css>\n        <link rel=stylesheet href=/static/css/smoothness/jquery-ui.css>\n        <script src=/static/js/jquery.js></script>\n        <script src=/static/js/jquery-ui.js></script>\n        <script src=/static/js/jquery-layout.js></script>\n        <script src=/static/js/jquery-cookie.js></script>\n        <script src=/static/js/jquery-superfish.js></script>\n        <script src=/static/js/jquery-contextmenu.js></script>\n        <script src=/static/js/tamarin-prover-ui.js></script>\n        ^{pageHead page}\n      <body>\n        $maybe msg <- message\n          <p.message>#{msg}\n        <p.loading>\n          Loading, please wait...\n          \\  <a id=cancel href='#'>Cancel</a>\n        ^{pageBody page}\n        <div#dialog>\n        <ul#contextMenu>\n          <li.autoprove>\n            <a href=\"#autoprove\">Autoprove</a>\n  "}))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (0,34)) "{-# LANGUAGE CPP               #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE OverloadedStrings #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE QuasiQuotes       #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE Rank2Types        #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE TemplateHaskell   #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,35)) "{-# LANGUAGE TypeFamilies      #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,38)) "{-# OPTIONS_GHC -fno-warn-orphans #-}" Nothing),DP (2,1)),((AnnComment DComment (DP (2,1),DP (11,3)) "{- |\nModule      :  Types.hs\nDescription :  Central data type and Yesod typeclass instances.\nCopyright   :  (c) 2011 Cedric Staub\nLicense     :  GPL-3\n\nMaintainer  :  Simon Meier <iridcode@gmail.com>\nStability   :  experimental\nPortability :  non-portable\n-}" Nothing),DP (2,1)),((G AnnModule),DP (21,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (1,1)),((AnnComment DComment (DP (1,11),DP (1,26)) "-- <li.delstep>" Nothing),DP (1,11)),((AnnComment DComment (DP (1,13),DP (1,51)) "-- <a href=\"#del/path\">Remove step</a>" Nothing),DP (1,13)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((AnnComment DComment (DP (0,0),DP (0,0)) "" Nothing),DP (0,0)),((G AnnEofPos),DP (4,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(23,3)-(42,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-13 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-14 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,1)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:25:5-18 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:25:5-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-18 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-18 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-20 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-20 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:30:5-13 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:30:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:31:5-13 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:31:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:32:5-13 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:32:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,22)) "-- , GenericHandler" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:34:5-11 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:34:5-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,30)) "-- , URL rendering function" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:36:5-13 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:36:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,21)) "-- , GenericWidget" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:38:5-10 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:38:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,3),DP (1,21)) "-- Image rendering" Nothing),DP (1,3)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-19 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:41:5-19 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:41:5-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:46:1-36 CN "ImportDecl" NotNeeded,
  (Ann (DP (3,1)) (ColDelta 1) DP (3,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:1-35 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:1-27 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,12)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:1-50 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:38-50 CN "(:)" NotNeeded,
  (Ann (DP (0,10)) (ColDelta 38) DP (0,10) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:39-49 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:39-49 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:1-46 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:38-46 CN "(:)" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 38) DP (0,9) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:39-45 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:39-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:1-48 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:38-48 CN "(:)" NotNeeded,
  (Ann (DP (0,12)) (ColDelta 38) DP (0,12) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:39-47 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:39-47 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,11)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:1-36 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:1-28 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:1-27 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:1-29 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1-20 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (15,1) [DComment (DP (2,1),DP (2,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,9)) "-- Types" Nothing,DComment (DP (1,1),DP (1,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,57)) "-- | Type synonym for a generic handler inside our site." Nothing,DComment (DP (1,1),DP (1,49)) "-- type GenericHandler m = Handler WebUI WebUI m" Nothing,DComment (DP (1,1),DP (1,42)) "-- type Handler a = Handler WebUI WebUI a" Nothing,DComment (DP (2,1),DP (2,56)) "-- | Type synonym for a generic widget inside our site." Nothing,DComment (DP (1,1),DP (1,58)) "-- type GenericWidget m = Widget WebUI (GenericHandler m)" Nothing,DComment (DP (1,1),DP (1,40)) "-- type Widget a = Widget WebUI WebUI a" Nothing,DComment (DP (2,1),DP (2,61)) "-- | Type synonym representing a numeric index for a theory." Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:6-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:18-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1-43 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,50)) "-- | Type synonym representing a map of theories." Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:6-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:18-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:18-32 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:18-43 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:24-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:34-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1-38 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,49)) "-- | Type synonym representing a map of threads." Nothing] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:6-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:18-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:18-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:18-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:24-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:31-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1-28 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,49)) "-- | The image format used for rendering graphs." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:6-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:20-22 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVbar),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:20-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:26-28 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:26-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(86,1)-(88,20) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:10-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:10-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:10-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:15-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-20 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(87,5)-(88,20) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:10-12 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:10-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:14-20 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:16-20 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-20 CN "Match" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:10-12 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:10-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:14-20 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:16-20 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1-40 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,40)) "-- | convert image format to MIME type." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-40 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-40 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:35-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-33 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(92,1)-(93,37) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:17-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:17-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:21-33 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:23-33 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-37 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:17-19 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:17-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:21-37 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:23-37 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,1)-(122,3) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,77)) "-- | The so-called site argument for our application, which can hold various" Nothing,DComment (DP (1,1),DP (1,75)) "-- information that can use to keep info that needs to be available to the" Nothing,DComment (DP (1,1),DP (1,22)) "-- handler functions." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:6-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:14-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,14)-(122,3) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(99,3)-(122,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,31)) "-- ^ Output debug messages" Nothing),DP (1,5)),((G AnnCloseC),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:5-32 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,10)),((AnnComment DComment (DP (1,5),DP (1,43)) "-- ^ Settings for static file serving." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:27-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:5-34 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,11)),((AnnComment DComment (DP (1,5),DP (1,62)) "-- ^ The caching directory (for storing rendered graphs)." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:27-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:5-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:5-34 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,12)),((AnnComment DComment (DP (1,5),DP (1,63)) "-- ^ The working directory (for storing/loading theories)." Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,75)) "-- , parseThy    :: MonadIO m => String -> GenericHandler m ClosedTheory" Nothing),DP (1,3)),((G AnnComma),DP (3,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:27-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:5-67 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,11)),((AnnComment DComment (DP (1,5),DP (1,67)) "-- ^ Close an open theory according to command-line arguments." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:27-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:27-67 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:37-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 37) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:37-67 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:40-67 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:41-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:41-53 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:41-66 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 41) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:48-53 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:55-66 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:5-40 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,10)),((AnnComment DComment (DP (1,5),DP (1,40)) "-- ^ MVar that holds the theory map" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:27-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:27-40 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:32-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:5-40 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,10)),((AnnComment DComment (DP (1,5),DP (1,40)) "-- ^ MVar that holds the thread map" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:27-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:27-40 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:32-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:5-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:5-30 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,1)),((AnnComment DComment (DP (1,5),DP (1,40)) "-- ^ Automatically store theory map" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:27-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:5-34 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,13)),((AnnComment DComment (DP (1,5),DP (1,25)) "-- ^ The dot command" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:27-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:5-37 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,8)),((AnnComment DComment (DP (1,5),DP (1,52)) "-- ^ The image-format used for rendering graphs" Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:27-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:5-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:5-36 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,2)),((AnnComment DComment (DP (1,5),DP (1,58)) "-- ^ The default prover to use for automatic proving." Nothing),DP (1,5)),((G AnnComma),DP (2,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:27-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:5-30 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,14))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:27-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(125,1)-(128,23) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,53)) "-- | Simple data type for generating JSON responses." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:125:6-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:5-27 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,3),DP (0,30)) "-- ^ Title and HTML content" Nothing),DP (0,3)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:14-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:21-27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:5-20 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,10),DP (0,44)) "-- ^ Alert/dialog box with message" Nothing),DP (0,10)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:15-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:5-23 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:18-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(133,1)-(134,29) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (0,7),DP (0,33)) "-- ^ Redirect to given URL" Nothing,DComment (DP (2,1),DP (2,46)) "-- | Data type representing origin of theory." Nothing,DComment (DP (1,1),DP (1,65)) "-- Command line with file path, upload with filename (not path)," Nothing,DComment (DP (1,1),DP (1,58)) "-- or created by interactive mode (e.g. through editing)." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:6-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:21-25 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:21-34 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVbar),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:27-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:38-43 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:38-50 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVbar),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:45-50 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:54-64 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:54-64 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:6-29 CN "(:)" NotNeeded,
  (Ann (DP (1,6)) (ColDelta 6) DP (1,6) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:16-19 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:16-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:22-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:22-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:26-28 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:26-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,1)-(147,3) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (5,1) [DComment (DP (2,1),DP (2,76)) "-- | Data type containg both the theory and it's index, making it easier to" Nothing,DComment (DP (1,1),DP (1,75)) "-- pass the two around (since they are always tied to each other). We also" Nothing,DComment (DP (1,1),DP (1,44)) "-- keep some extra bookkeeping information." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:6-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:19-28 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,19)-(147,3) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(140,3)-(147,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenC),DP (0,0)),((AnnComment DComment (DP (0,6),DP (0,39)) "-- ^ The automatic prover to use." Nothing),DP (0,6)),((G AnnCloseC),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:5-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:5-29 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,6)),((AnnComment DComment (DP (0,7),DP (0,28)) "-- ^ Index of theory." Nothing),DP (0,7)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:21-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:5-32 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,5)),((AnnComment DComment (DP (0,4),DP (0,27)) "-- ^ The closed theory." Nothing),DP (0,4)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:21-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:5-29 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,7)),((AnnComment DComment (DP (0,7),DP (0,35)) "-- ^ Time theory was loaded." Nothing),DP (0,7)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:21-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:5-35 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,5)),((AnnComment DComment (DP (0,1),DP (0,28)) "-- ^ Prev theory in history" Nothing),DP (0,1)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:21-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:21-35 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:27-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:5-24 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,4)),((AnnComment DComment (DP (0,12),DP (0,53)) "-- ^ This is the orginally loaded theory." Nothing),DP (0,12)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:21-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:5-32 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,5)),((AnnComment DComment (DP (0,4),DP (0,26)) "-- ^ Origin of theory." Nothing),DP (0,4)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:21-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:5-30 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:21-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1-49 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,74)) "-- | We use the ordering in order to display loaded theories to the user." Nothing,DComment (DP (1,1),DP (1,79)) "-- We first compare by name, then by time loaded, and then by source: Theories" Nothing,DComment (DP (1,1),DP (1,69)) "-- that were loaded from the command-line are displayed earlier then" Nothing,DComment (DP (1,1),DP (1,30)) "-- interactively loaded ones." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-49 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-49 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:28-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:28-49 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:42-49 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:1-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:11-41 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:12-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:12-40 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:23 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:25-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:28-29 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:31-32 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:34-35 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:37-38 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:40 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:43-73 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:44-53 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:44-72 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 44) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:55 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:57-58 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:60-61 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:63-64 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:66-67 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 66) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:69-70 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 69) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:72 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 72) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,75)-(161,5) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 75) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:155:3-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(155,3)-(161,5) CN "HsApp" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(156,5)-(161,5) CN "ExplicitList" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (1,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:17-29 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:18-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:18-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:22-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:31-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:34-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:17-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-16 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:18-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-16 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:18-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:7-13 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:7-16 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:7-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:15-16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:18-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(163,1)-(164,36) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:10-11 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:10-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:10-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:13-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-36 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-36 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:8-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:11-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:14-36 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-27 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:26-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:29-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(166,1)-(167,21) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:10-12 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:10-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:14-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-21 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-21 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:11-21 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:13-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(171,1)-(179,27) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,58)) "-- | Simple data type for specifying a path to a specific" Nothing,DComment (DP (1,1),DP (1,25)) "-- item within a theory." Nothing] [((G AnnData),DP (0,0)),((G AnnEqual),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:171:6-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:172:5-14 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,26),DP (0,73)) "-- ^ The help view (help and info about theory)" Nothing),DP (0,26)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:172:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:5-22 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,18),DP (0,51)) "-- ^ Theory lemma with given name" Nothing),DP (0,18)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:5-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:5-39 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,1),DP (0,45)) "-- ^ Required cases (i'th source, j'th case)" Nothing),DP (0,1)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:20-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:33-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:37-39 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:5-32 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,8),DP (0,52)) "-- ^ Proof path within proof for given lemma" Nothing),DP (0,8)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:24-32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:5-37 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,3),DP (0,44)) "-- ^ Apply the proof method to proof path" Nothing),DP (0,3)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:18-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:25-33 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:35-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:177:5-15 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,25),DP (0,42)) "-- ^ Theory rules" Nothing),DP (0,25)),((G AnnVbar),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:177:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:178:5-17 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:178:5-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:3-27 CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,23),DP (0,52)) "-- ^ Theory message deduction" Nothing] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:13-14 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:13-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:17-20 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:17-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:23-26 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:23-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (2,1),DP (2,71)) "-- | Render a theory path to a list of strings. Note that we prefix an" Nothing,DComment (DP (1,1),DP (1,75)) "-- underscore to the empty string and strings starting with an underscore." Nothing,DComment (DP (1,1),DP (1,78)) "-- This avoids empty path segments, which seem to trip up certain versions of" Nothing,DComment (DP (1,1),DP (1,10)) "-- Yesod." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:35-42 CN "HsListTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:36-41 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:186:1-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,18)-(195,73) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-7 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-28 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-33 CN "OpApp" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:9-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-28 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(189,5)-(195,73) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(189,5)-(195,73) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:8-17 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:8-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:19-28 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:21-28 CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:22-27 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-30 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:8-18 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:8-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:20-30 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:22-30 CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:23-29 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-34 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:8-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:8-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:22-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:24-34 CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:25-33 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-43 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:8-25 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:9-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:9-24 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:21-24 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:27-43 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:29-43 CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:30-36 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:39-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-65 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:8-29 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:9-22 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:9-28 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:24 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:28 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:31-65 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:33-65 CN "ExplicitList" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:34-40 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:43-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:43-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:51-54 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:51-56 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:59-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:59-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-56 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:8-31 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:9-19 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:9-30 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:21-25 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:27-30 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:33-56 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-41 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-56 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:45-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:53-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 48) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-73 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:8-36 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 3) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:9-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:9-35 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 4) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:22-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:28-31 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:33-35 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:38-73 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-47 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-55 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-73 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:51-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 52) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:59-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 54) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:59-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 54) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:64-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 59) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:70-73 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1-40 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (2,1),DP (2,75)) "-- | Prefix an underscore to the empty string and strings starting with an" Nothing,DComment (DP (1,1),DP (1,15)) "-- underscore." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-30 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-40 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-40 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:35-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-37 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(200,1)-(202,36) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:22-23 CN "LitPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:33-37 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:35-37 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-42 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:22-23 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:22-31 CN "AsPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:25-31 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:26-28 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:26-30 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:29 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:30 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:33-42 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:35-37 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:35-42 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:41-42 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 41) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-36 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:22-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:33-36 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 33) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:35-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1-38 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,48)) "-- | Remove an underscore prefix. It holds that" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,52)) "-- > unprefixUnderscore . prefixWithUnderscore = id" Nothing,DComment (DP (1,1),DP (1,3)) "--" Nothing,DComment (DP (1,1),DP (1,78)) "-- The inverted composition holds for all strings except the empty string and" Nothing,DComment (DP (1,1),DP (1,40)) "-- strings starting with an underscore." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-38 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-38 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:33-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-40 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,14))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(211,1)-(213,40) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:20-22 CN "LitPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:37-40 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:39-40 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-40 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:20-35 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:21-23 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:21-34 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:24 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:25-26 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:25-34 CN "AsPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnAt),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:28-34 CN "ParPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 28) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:29-31 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:29-33 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:32 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:33 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 33) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:37-40 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:39-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-40 CN "Match" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnEqual),DP (0,15))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:20-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:37-40 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 37) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:39-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1-47 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,49)) "-- | Parse a list of strings into a theory path." Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-27 CN "HsListTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-47 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-47 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:21-26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:32-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:32-47 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:38-47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:217:1-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1)),((G AnnWhere),DP (1,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,17)-(248,32) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:5-9 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:5-34 CN "OpApp" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:11 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:13-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:13-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:17-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-26 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(220,5)-(229,26) CN "FunBind" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(220,5)-(248,32) CN "HsValBinds" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11-12 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11-12 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 6) DP (0,0) [] [((G AnnOpenS),DP (0,0)),((G AnnCloseS),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:18-26 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:20-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,5)-(229,26) CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:11-16 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:12-15 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:13 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:14-15 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,18)-(229,26) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,20)-(229,26) CN "HsCase" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(222,7)-(229,26) Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:7-12 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:7-34 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(222,7)-(229,26) CN "(:)" Ref "delta-1",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:17-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,4)) (ColDelta 10) DP (0,4) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:20-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:25-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:7-13 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:7-35 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:17-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:20-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:25-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:7-15 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:7-37 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:17-37 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:20-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:20-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:25-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:7-13 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:7-32 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:17-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:20-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:20-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:31-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:7-13 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:7-32 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:17-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:20-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:20-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:31-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:7-13 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:7-32 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:17-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:20-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:20-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:31-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:7-14 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:7-33 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:17-33 CN "GRHS" NotNeeded,
  (Ann (DP (0,2)) (ColDelta 10) DP (0,2) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:20-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:20-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:7 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:7-26 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:17-26 CN "GRHS" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 10) DP (0,9) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:20-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44 CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:14-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 9) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-44 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:30-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:34-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:40-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50 CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:16-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:19-50 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:21-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:21-50 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:33-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:37-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:37-50 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:49-50 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 44) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-47 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(235,5)-(236,31) CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:16-21 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:17-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:18 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:19-20 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:23-47 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:25-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:25-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:30-47 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:31-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:31-43 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:31-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:45-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-31 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,6))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:16 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:23-31 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:25-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-66 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(238,5)-(239,34) CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:17-24 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18-23 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:19 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:20 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:21 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:22-23 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:26-66 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-37 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-46 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:39-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:43-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:50-61 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:50-63 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:50-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:63 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:65-66 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-34 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,8))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:17 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:26-34 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:28-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(247,35) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(248,32) CN "FunBind" NotNeeded,
  (Ann (DP (2,0)) (ColDelta 0) DP (2,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:16-27 CN "ParPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-20 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-22 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-24 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-26 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 12) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:21 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:22 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:23 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:24 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:25 CN "Exact" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:26 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,29)-(247,35) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,31)-(247,35) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(247,35) Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(244,44) CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(247,35) CN "(:)" Ref "delta-2",
  (Ann (DP (1,0)) (ColDelta 2) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,12)-(244,44) CN "HsCase" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnCase),DP (0,0)),((G AnnOf),DP (0,1)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,25)-(244,44) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:25-31 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:25-57 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,25)-(244,44) CN "(:)" Ref "delta-3",
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:35-57 CN "GRHS" NotNeeded,
  (Ann (DP (0,3)) (ColDelta 10) DP (0,3) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:38-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:38-57 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:45-57 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:25-33 CN "LitPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:25-59 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:35-59 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:38-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:38-59 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:45-59 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:25 CN "WildPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:25-44 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:35-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,9)) (ColDelta 10) DP (0,9) [] [((G AnnRarrow),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:38-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7-21 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:12-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:12-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7-21 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:12-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:12-21 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7-35 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7-35 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:14-35 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-30 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:15-34 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:30 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-32 CN "Match" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnEqual),DP (0,7))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:16 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:24-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:26-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1-38 CN "TyClD" NotNeeded,
  (Ann (DP (3,1)) (ColDelta 1) DP (3,1) [] [((G AnnType),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:6-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 6) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-38 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:24-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:33-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 33) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:1-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:1-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2) CN "HsUntypedSplice" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2) CN "SpliceD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (18,1) [DComment (DP (2,1),DP (2,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Routing" Nothing,DComment (DP (1,1),DP (1,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,58)) "-- This is a hack we need to work around a bug (?) in the" Nothing,DComment (DP (1,1),DP (1,60)) "-- C pre-processor. In order to define multi-pieces we need" Nothing,DComment (DP (1,1),DP (1,62)) "-- the asterisk symbol, but the C pre-processor always chokes" Nothing,DComment (DP (1,1),DP (1,61)) "-- on them thinking that they are somehow comments. This can" Nothing,DComment (DP (1,1),DP (1,62)) "-- be removed once the CPP language ext is disabled, but it's" Nothing,DComment (DP (1,1),DP (1,41)) "-- currently needed for GHC < 7 support." Nothing,DComment (DP (1,1),DP (1,16)) "#define MP(x) *x" Nothing,DComment (DP (2,1),DP (2,41)) "-- | Static routing for our application." Nothing,DComment (DP (1,1),DP (1,56)) "-- Note that handlers ending in R are general handlers," Nothing,DComment (DP (1,1),DP (1,55)) "-- whereas handlers ending in MR are for the main view" Nothing,DComment (DP (1,1),DP (1,53)) "-- and the ones ending in DR are for the debug view." Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:13-19 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,21)-(291,2) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(293,1)-(301,40) CN "InstD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:10-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:10-36 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:10-36 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:20-36 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-41 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(294,3)-(296,32) CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:15-24 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:15-24 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:26-41 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:28-41 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-33 CN "Match" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:15-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:15-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:26-33 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:28-33 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-32 CN "Match" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,5))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:15-20 CN "ConPatIn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:15-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:26-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:28-32 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-48 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(298,3)-(301,40) CN "FunBind" NotNeeded,
  (Ann (DP (2,3)) (ColDelta 3) DP (2,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:17-30 CN "LitPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:32-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:34-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:39-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-44 CN "Match" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,9))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:17-22 CN "LitPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:32-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:34-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:39-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-44 CN "Match" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,10))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:17-21 CN "LitPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:32-44 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:34-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:34-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:39-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-40 CN "Match" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnEqual),DP (0,14))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:17 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:32-40 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 32) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:34-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(304,1)-(306,53) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,41)) "-- | MultiPiece instance for TheoryPath." Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:10-23 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:10-34 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:10-34 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:25-34 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-18 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,3))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:22-52 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:28-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:37-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-53 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-53 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:22-53 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 22) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:24-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:24-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:40 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:42-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:42-53 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:46-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(309,1)-(320,21) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (2,1),DP (2,36)) "-- Instance of the Yesod typeclass." Nothing] [((G AnnInstance),DP (0,0)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:10-20 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:10-20 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:16-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (3,3) [DComment (DP (1,3),DP (1,56)) "-- | The approot. We can leave this empty because the" Nothing,DComment (DP (1,3),DP (1,63)) "-- application is always served from the root of the server." Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:11-33 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:13-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:13-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:27-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (3,3) [DComment (DP (2,3),DP (2,41)) "-- | The default layout for rendering." Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:17-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:19-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-21 CN "FunBind" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (5,3) [DComment (DP (2,3),DP (2,62)) "-- | The path cleaning function. We make sure empty strings" Nothing,DComment (DP (1,3),DP (1,60)) "-- are not scrubbed from the end of the list. The default" Nothing,DComment (DP (1,3),DP (1,47)) "-- cleanPath function forces canonical URLs." Nothing] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-21 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 3) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:13 CN "WildPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:15-21 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:17-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1-40 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,18)) "-- Default layout" Nothing,DComment (DP (1,1),DP (1,79)) "------------------------------------------------------------------------------" Nothing,DComment (DP (2,1),DP (2,48)) "-- | Our application's default layout template." Nothing,DComment (DP (1,1),DP (1,72)) "-- Note: We define the default layout here even tough it doesn't really" Nothing,DComment (DP (1,1),DP (1,78)) "-- belong in the \"types\" module in order to avoid mutually recursive modules." Nothing,DComment (DP (1,1),DP (1,63)) "-- defaultLayout' :: (Yesod master, Route master ~ WebUIRoute)" Nothing,DComment (DP (1,1),DP (1,74)) "--                => Widget master ()      -- ^ Widget to embed in layout" Nothing,DComment (DP (1,1),DP (1,41)) "--                -> Handler master Html" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-40 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-40 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:29-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:29-40 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:37-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:1-14 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:16 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,18)-(364,4) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 18) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,20)-(364,4) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(334,3)-(364,4) Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:3-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:3-31 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(334,3)-(364,4) CN "(:)" Ref "delta-4",
  (Ann (DP (1,0)) (ColDelta 3) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:11-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:11-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3-23 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:14-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:336:3-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,3)-(364,4) CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,3)-(364,4) CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(336,19)-(364,4) CN "HsSpliceE" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-87,0)) (ColDelta 0) DP (-87,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-84,0)) (ColDelta 0) DP (-84,0) [] []))]
==============
([((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:1:1,
    AnnModule),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:22:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:1:1,
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:43:1-5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(23,3)-(42,3),
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:42:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(23,3)-(42,3),
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-13,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-13,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-13,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:11-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:5-13,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:23:10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-14,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-14,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:25:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-14,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:12-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:5-14,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:24:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:25:5-18,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-18,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-18,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-18,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:16-17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:5-18,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:26:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-18,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-18,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-18,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:16-17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:5-18,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:27:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-20,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-20,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-20,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:5-20,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:28:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-20,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-20,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:30:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-20,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:5-20,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:29:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:30:5-13,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:31:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:31:5-13,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:32:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:32:5-13,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:34:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:34:5-11,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:36:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:36:5-13,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:38:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:38:5-10,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-19,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-19,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:41:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-19,
    AnnDotdot),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:5-19,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:40:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:46:1-36,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:46:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:46:1-36,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:1-35,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:47:1-35,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:1-27,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:48:1-27,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41,
    AnnAs),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:38-39]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41,
    AnnQualified),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:8-16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:1-41,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:49:41]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:1-50,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:1-50,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:38-50,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:50]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:38-50,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:50:38]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:1-46,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:1-46,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:38-46,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:46]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:38-46,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:51:38]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:1-48,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:1-48,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:38-48,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:48]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:38-48,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:52:38]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41,
    AnnAs),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:38-39]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41,
    AnnQualified),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:8-16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:1-41,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:53:41]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:1-36,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:54:1-36,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:1-28,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:56:1-28,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:1-27,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:57:1-27,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:1-29,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:58:1-29,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:1-23,
    AnnImport),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:1-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:60:1-23,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1-20,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1-20,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1-20,
    AnnType),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:75:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1-43,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1-43,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1-43,
    AnnType),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:78:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1-38,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1-38,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1-38,
    AnnType),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:81:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1-28,
    AnnData),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1-28,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:1-28,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:20-22,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:84:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(86,1)-(88,20),
    AnnInstance),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(86,1)-(88,20),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(86,1)-(88,20),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:86:27-31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-20,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-20,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:87:5-20,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-20,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-20,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:88:5-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1-40,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:1-40,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:20-40,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:91:32-33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-33,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-33,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:92:1-33,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-37,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-37,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:93:1-37,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,1)-(122,3),
    AnnData),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,1)-(122,3),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:98:12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(98,1)-(122,3),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:125:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(99,3)-(122,3),
    AnnCloseC),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:122:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(99,3)-(122,3),
    AnnOpenC),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:5-32,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:5-32,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:99:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:5-34,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:5-34,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:101:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:5-34,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:5-34,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:103:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:5-67,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:5-67,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:27-32,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:34-35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:27-67,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:34-35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:40-67,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:67]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:40-67,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:106:40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:5-40,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:5-40,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:108:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:5-40,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:5-40,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:110:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:5-30,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:5-30,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:112:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:5-34,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:5-34,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:114:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:5-37,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:5-37,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:116:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:5-36,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:5-36,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:118:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:5-30,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:120:24-25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(125,1)-(128,23),
    AnnData),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:125:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(125,1)-(128,23),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(125,1)-(128,23),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:126:5-27,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:127:5-20,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:128:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(133,1)-(134,29),
    AnnData),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(133,1)-(134,29),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(133,1)-(134,29),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:21-34,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:38-50,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:133:52]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:6-29,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:6-29,
    AnnDeriving),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:6-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:6-29,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:16-19,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:22-23,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:134:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,1)-(147,3),
    AnnData),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,1)-(147,3),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:139:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(139,1)-(147,3),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(140,3)-(147,3),
    AnnCloseC),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:147:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(140,3)-(147,3),
    AnnOpenC),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:5-29,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:5-29,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:140:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:5-32,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:5-32,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:141:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:5-29,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:5-29,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:142:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:5-35,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:5-35,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:143:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:5-24,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:5-24,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:144:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:5-32,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:5-32,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:145:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:5-30,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:146:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1-49,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:11-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:1-49,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:14-49,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:25-26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:28-49,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:153:39-40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:75]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:1-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(154,1)-(161,5),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:11-41,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:41]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:11-41,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:43-73,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:73]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:43-73,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:154:43]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(156,5)-(161,5),
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:161:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(156,5)-(161,5),
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:7-35,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:17-29,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:17-29,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:156:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:157:7-36,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:158:7-19,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:159:7-19,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:160:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(163,1)-(164,36),
    AnnInstance),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(163,1)-(164,36),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(163,1)-(164,36),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:163:24-28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:4-5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-36,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-36,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:3-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:16-36,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:164:32-33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(166,1)-(167,21),
    AnnInstance),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(166,1)-(167,21),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:171:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(166,1)-(167,21),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:166:25-29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-21,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-21,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:167:3-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(171,1)-(179,27),
    AnnData),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:171:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(171,1)-(179,27),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:172:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(171,1)-(179,27),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:172:5-14,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:173:5-22,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:174:5-39,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:175:5-32,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:176:5-37,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:177:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:177:5-15,
    AnnVbar),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:178:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:3-27,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:3-27,
    AnnDeriving),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:3-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:3-27,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:13-14,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:17-20,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:179:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1-42,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:18-19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:1-42,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:186:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:21-42,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:32-33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:35-42,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:42]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:35-42,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:185:35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:186:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:186:1-16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(186,1)-(195,73),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:188:3-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:5-33,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:187:30]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-28,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-28,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:5-28,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:21-28,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:21-28,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:189:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-30,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-30,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:5-30,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:22-30,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:30]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:22-30,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:190:22]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-34,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:22]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-34,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:5-34,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:24-34,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:34]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:24-34,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:191:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-43,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-43,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:5-43,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:8-25,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:8-25,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:29-43,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:43]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:29-43,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:30-36,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:192:37]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-65,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-65,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:5-65,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:8-29,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:8-29,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:33-65,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:65]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:33-65,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:34-40,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:41]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:43-48,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:49]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:51-56,
    AnnComma),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:193:57]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-56,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-56,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:5-56,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:8-31,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:8-31,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-49,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:43]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:35-56,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:194:51]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-73,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:38]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-73,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:5-6]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:8-36,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:8-36,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-55,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:49]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-66,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:57]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:40-73,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:195:68]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1-40,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:22-23]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:1-40,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:25-40,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:199:32-33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-37,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-37,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:200:1-37,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-42,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-42,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:1-42,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:22-31,
    AnnAt),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:25-31,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:25-31,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:26-30,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:35-42,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:201:39]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-36,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:33]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-36,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:202:1-36,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1-38,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:20-21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:1-38,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:23-38,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:210:30-31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-40,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:37]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-40,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:211:1-40,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-40,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:37]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-40,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:1-40,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:20-35,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:20-35,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:21-34,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:25-34,
    AnnAt),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:28-34,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:34]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:28-34,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:29-33,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:212:32]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-40,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:37]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-40,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:213:1-40,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1-47,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:1-47,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:217:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-27,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-27,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:20-47,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:216:29-30]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:217:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:217:1-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(217,1)-(248,32),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:219:3-7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:5-34,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:218:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-26,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-26,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:5-26,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11-12,
    AnnCloseS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11-12,
    AnnOpenS),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:220:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,5)-(229,26),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,5)-(229,26),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:5-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,5)-(229,26),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:11-16,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:11-16,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:12-15,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,20)-(229,26),
    AnnCase),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:20-23]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(221,20)-(229,26),
    AnnOf),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:221:27-28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:7-34,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:17-34,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:222:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:7-35,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:17-35,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:223:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:7-37,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:17-37,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:224:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:7-32,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:17-32,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:225:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:7-32,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:17-32,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:226:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:7-32,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:17-32,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:227:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:7-33,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:17-33,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:228:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:17-26,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:229:17-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:5-44,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-36,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:28]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:16-44,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:231:38]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:5-50,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:21-50,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:233:33-35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-47,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:23]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-47,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:5-47,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:16-21,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:16-21,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:17-20,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:30-47,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:47]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:30-47,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:235:30]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-31,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:23]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-31,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:236:5-31,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-66,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-66,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:5-66,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:17-24,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:17-24,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18-20,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:19]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:18-23,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-46,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:39-41]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:28-66,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:238:48]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-34,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-34,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:239:5-34,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(247,35),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:29]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(247,35),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:5-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,5)-(247,35),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:16-27,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:16-27,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-22,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-24,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:23]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:17-26,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(241,31)-(247,35),
    AnnDo),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:241:31-32]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(244,44),
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,7)-(244,44),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,12)-(244,44),
    AnnCase),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:12-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(242,12)-(244,44),
    AnnOf),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:22-23]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:25-57,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:35-57,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:242:35-36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:25-59,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:25]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:35-59,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:243:35-36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:35-44,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:244:35-36]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7-21,
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:245:7-21,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7-21,
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:9-10]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:246:7-21,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:7]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:14-35,
    AnnCloseP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:14-35,
    AnnOpenP),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:247:14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-32,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:24]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-32,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:248:5-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1-38,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:16]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1-38,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:269:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1-38,
    AnnType),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:1-4]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:18-38,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:251:30-31]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(269,1)-(291,2),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(293,1)-(301,40),
    AnnInstance),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(293,1)-(301,40),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(293,1)-(301,40),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:293:38-42]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-41,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-41,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:294:3-41,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-33,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-33,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:295:3-33,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-32,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-32,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-13]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:296:3-32,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-48,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:32]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-48,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:298:3-48,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-44,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:32]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-44,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:299:3-44,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-44,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:32]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-44,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:300:3-44,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-40,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:32]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-40,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:301:3-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(304,1)-(306,53),
    AnnInstance),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(304,1)-(306,53),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(304,1)-(306,53),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:304:36-40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:22]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:3-52,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:24-52,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:305:35]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-53,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:22]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-53,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:3-20]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:24-53,
    AnnVal),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:306:40]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(309,1)-(320,21),
    AnnInstance),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:1-8]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(309,1)-(320,21),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(309,1)-(320,21),
    AnnWhere),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:309:22-26]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:312:3-33,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:315:3-32,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-21,
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:15]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-21,
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:320:3-11]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1-40,
    AnnDcolon),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:16-17]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:1-40,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:19-40,
    AnnRarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:332:26-27]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4),
    AnnEqual),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:18]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4),
    AnnFunId),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:1-14]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,1)-(364,4),
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:368:1]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(333,20)-(364,4),
    AnnDo),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:333:20-21]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:3-31,
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:8-9]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:334:3-31,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3-23,
    AnnLarrow),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:11-12]),
  ((../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:335:3-23,
    AnnSemi),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:336:3]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:368:1])],
 [(../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(23,3)-(42,3),
   [AnnLineComment "-- Image rendering",
    AnnLineComment "-- , GenericWidget",
    AnnLineComment "-- , URL rendering function",
    AnnLineComment "-- , GenericHandler"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(99,3)-(122,3),
   [AnnLineComment "-- ^ Output debug messages",
    AnnLineComment "-- ^ The default prover to use for automatic proving.",
    AnnLineComment "-- ^ The image-format used for rendering graphs",
    AnnLineComment "-- ^ The dot command",
    AnnLineComment "-- ^ Automatically store theory map",
    AnnLineComment "-- ^ MVar that holds the thread map",
    AnnLineComment "-- ^ MVar that holds the theory map",
    AnnLineComment "-- ^ Close an open theory according to command-line arguments.",
    AnnLineComment "-- , parseThy    :: MonadIO m => String -> GenericHandler m ClosedTheory",
    AnnLineComment "-- ^ The working directory (for storing/loading theories).",
    AnnLineComment "-- ^ The caching directory (for storing rendered graphs).",
    AnnLineComment "-- ^ Settings for static file serving."]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(125,1)-(128,23),
   [AnnLineComment "-- ^ Alert/dialog box with message",
    AnnLineComment "-- ^ Title and HTML content"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(140,3)-(147,3),
   [AnnLineComment "-- ^ The automatic prover to use.",
    AnnLineComment "-- ^ Origin of theory.",
    AnnLineComment "-- ^ This is the orginally loaded theory.",
    AnnLineComment "-- ^ Prev theory in history",
    AnnLineComment "-- ^ Time theory was loaded.",
    AnnLineComment "-- ^ The closed theory.",
    AnnLineComment "-- ^ Index of theory."]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(171,1)-(179,27),
   [AnnLineComment "-- ^ Theory message deduction",
    AnnLineComment "-- ^ Theory rules",
    AnnLineComment "-- ^ Apply the proof method to proof path",
    AnnLineComment "-- ^ Proof path within proof for given lemma",
    AnnLineComment "-- ^ Required cases (i'th source, j'th case)",
    AnnLineComment "-- ^ Theory lemma with given name",
    AnnLineComment "-- ^ The help view (help and info about theory)"]),
  (../../hackage-packages/tamarin-prover-0.8.6.1/src/Web/Types.hs:(309,1)-(320,21),
   [AnnLineComment "-- cleanPath function forces canonical URLs.",
    AnnLineComment "-- are not scrubbed from the end of the list. The default",
    AnnLineComment "-- | The path cleaning function. We make sure empty strings",
    AnnLineComment "-- | The default layout for rendering.",
    AnnLineComment "-- application is always served from the root of the server.",
    AnnLineComment "-- | The approot. We can leave this empty because the"]),
  (<no location info>,
   [AnnLineComment "-- <a href=\"#del/path\">Remove step</a>",
    AnnLineComment "-- <li.delstep>",
    AnnLineComment "--                -> Handler master Html",
    AnnLineComment "--                => Widget master ()      -- ^ Widget to embed in layout",
    AnnLineComment "-- defaultLayout' :: (Yesod master, Route master ~ WebUIRoute)",
    AnnLineComment "-- belong in the \"types\" module in order to avoid mutually recursive modules.",
    AnnLineComment "-- Note: We define the default layout here even tough it doesn't really",
    AnnLineComment "-- | Our application's default layout template.",
    AnnLineComment "------------------------------------------------------------------------------",
    AnnLineComment "-- Default layout",
    AnnLineComment "------------------------------------------------------------------------------",
    AnnLineComment "-- Instance of the Yesod typeclass.",
    AnnLineComment "-- | MultiPiece instance for TheoryPath.",
    AnnLineComment "-- and the ones ending in DR are for the debug view.",
    AnnLineComment "-- whereas handlers ending in MR are for the main view",
    AnnLineComment "-- Note that handlers ending in R are general handlers,",
    AnnLineComment "-- | Static routing for our application.",
    AnnLineComment "-- currently needed for GHC < 7 support.",
    AnnLineComment "-- be removed once the CPP language ext is disabled, but it's",
    AnnLineComment "-- on them thinking that they are somehow comments. This can",
    AnnLineComment "-- the asterisk symbol, but the C pre-processor always chokes",
    AnnLineComment "-- C pre-processor. In order to define multi-pieces we need",
    AnnLineComment "-- This is a hack we need to work around a bug (?) in the",
    AnnLineComment "------------------------------------------------------------------------------",
    AnnLineComment "-- Routing",
    AnnLineComment "------------------------------------------------------------------------------",
    AnnLineComment "-- | Parse a list of strings into a theory path.",
    AnnLineComment "-- strings starting with an underscore.",
    AnnLineComment "-- The inverted composition holds for all strings except the empty string and",
    AnnLineComment "--",
    AnnLineComment "-- > unprefixUnderscore . prefixWithUnderscore = id",
    AnnLineComment "--",
    AnnLineComment "-- | Remove an underscore prefix. It holds that",
    AnnLineComment "-- underscore.",
    AnnLineComment "-- | Prefix an underscore to the empty string and strings starting with an",
    AnnLineComment "-- Yesod.",
    AnnLineComment "-- This avoids empty path segments, which seem to trip up certain versions of",
    AnnLineComment "-- underscore to the empty string and strings starting with an underscore.",
    AnnLineComment "-- | Render a theory path to a list of strings. Note that we prefix an",
    AnnLineComment "-- item within a theory.",
    AnnLineComment "-- | Simple data type for specifying a path to a specific",
    AnnLineComment "-- interactively loaded ones.",
    AnnLineComment "-- that were loaded from the command-line are displayed earlier then",
    AnnLineComment "-- We first compare by name, then by time loaded, and then by source: Theories",
    AnnLineComment "-- | We use the ordering in order to display loaded theories to the user.",
    AnnLineComment "-- keep some extra bookkeeping information.",
    AnnLineComment "-- pass the two around (since they are always tied to each other). We also",
    AnnLineComment "-- | Data type containg both the theory and it's index, making it easier to",
    AnnLineComment "-- or created by interactive mode (e.g. through editing).",
    AnnLineComment "-- Command line with file path, upload with filename (not path),",
    AnnLineComment "-- | Data type representing origin of theory.",
    AnnLineComment "-- ^ Redirect to given URL",
    AnnLineComment "-- | Simple data type for generating JSON responses.",
    AnnLineComment "-- handler functions.",
    AnnLineComment "-- information that can use to keep info that needs to be available to the",
    AnnLineComment "-- | The so-called site argument for our application, which can hold various",
    AnnLineComment "-- | convert image format to MIME type.",
    AnnLineComment "-- | The image format used for rendering graphs.",
    AnnLineComment "-- | Type synonym representing a map of threads.",
    AnnLineComment "-- | Type synonym representing a map of theories.",
    AnnLineComment "-- | Type synonym representing a numeric index for a theory.",
    AnnLineComment "-- type Widget a = Widget WebUI WebUI a",
    AnnLineComment "-- type GenericWidget m = Widget WebUI (GenericHandler m)",
    AnnLineComment "-- | Type synonym for a generic widget inside our site.",
    AnnLineComment "-- type Handler a = Handler WebUI WebUI a",
    AnnLineComment "-- type GenericHandler m = Handler WebUI WebUI m",
    AnnLineComment "-- | Type synonym for a generic handler inside our site.",
    AnnLineComment "------------------------------------------------------------------------------",
    AnnLineComment "-- Types",
    AnnLineComment "------------------------------------------------------------------------------",
    AnnBlockComment "{- |\nModule      :  Types.hs\nDescription :  Central data type and Yesod typeclass instances.\nCopyright   :  (c) 2011 Cedric Staub\nLicense     :  GPL-3\n\nMaintainer  :  Simon Meier <iridcode@gmail.com>\nStability   :  experimental\nPortability :  non-portable\n-}",
    AnnBlockComment "{-# OPTIONS_GHC -fno-warn-orphans #-}",
    AnnBlockComment "{-# LANGUAGE TypeFamilies      #-}",
    AnnBlockComment "{-# LANGUAGE TemplateHaskell   #-}",
    AnnBlockComment "{-# LANGUAGE Rank2Types        #-}",
    AnnBlockComment "{-# LANGUAGE QuasiQuotes       #-}",
    AnnBlockComment "{-# LANGUAGE OverloadedStrings #-}",
    AnnBlockComment "{-# LANGUAGE CPP               #-}"])])