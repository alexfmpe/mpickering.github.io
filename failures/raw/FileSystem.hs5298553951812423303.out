{-# LANGUAGE GeneralizedNewtypeDeriving
           , OverloadedStrings
           , TypeFamilies
           , MultiParamTypeClasses
           , CPP
           #-}
module Network.FTP.Backend.FileSystem
module( FSConfNetwork.FTP.Backend.FileSystem(..)
  ( FSConfFSBackend(..)..)
  , FSBackendrunFSBackend(..)
  , runFSBackendwhere
  ) where
{-|
 - Simple file system backend.
 -}
import qualified Prelude
import qualifiedBasicPreludePrelude
import BasicPreludeSystem.Directory
import System.DirectoryFilesystem.Path.CurrentOS
import Filesystem.Path.CurrentOS
import Control.Monad.Trans.Reader
import Control.Monad.Trans.ReaderControl.Monad.Trans.Control
import Control.Monad.Trans.ControlControl.Monad.Base
import Control.Monad.Base
import qualified Data.ByteString.Char8 as S
import qualifiedData.ConduitData.ByteString.Char8 as S
import Data.Conduitqualified Data.Conduit.List as C
import qualified Data.Conduit.ListData.Conduit.BinaryasasC C
import qualified Data.Conduit.BinaryData.Conduit.ProcessasasCC
import qualified Data.Conduit.Process as C
import Network.FTP.Utils (dropHeadingPathSeparator)
import Network.FTP.UtilsNetwork.FTP.BackenddropHeadingPathSeparator(FTPBackend(..))       )
import Network.FTP.Backend (FTPBackend(..))
data FSConf = FSConf
data{ fsBase::= FSConfFilePath
  { fsBase :: FilePath
  }
newtype FSBackend a = FSBackend { unFSBackend :: ReaderT FSConf (ResourceT IO) a }
newtypederiving( Functor = FSBackend, Applicative unFSBackend, Monad, MonadIO:: ReaderT FSConf (ResourceT IO) a }
    deriving ( FunctorMonadUnsafeIO, Applicative, MonadThrow, Monad, ,MonadResource
             , MonadUnsafeIO, MonadThrow, MonadResource
             )
instance MonadBase IO FSBackend where
instanceliftBase= FSBackend FSBackend. liftBasewhere
    liftBase = FSBackend . liftBase
instance MonadBaseControl IO FSBackend where
instancenewtypeStM FSBackend IOa =FSBackendFSBackendStMwhere{ unFSBackendStM :: StM (ReaderT FSConf (ResourceT IO)) a }
    newtypeliftBaseWith FSBackendf = FSBackend = FSBackendStM. liftBaseWith unFSBackendStM$ \runInBase ->::fStM$ liftMReaderTFSBackendStM (ResourceT. runInBase)) aunFSBackend}
    liftBaseWithrestoreM = FSBackend = FSBackend. restoreM liftBaseWith. unFSBackendStM \runInBase -> f $ liftM FSBackendStM . runInBase . unFSBackend
    restoreM = FSBackend . restoreM . unFSBackendStM
runFSBackend :: FSConf -> FSBackend a -> IO a
runFSBackend :: FSConfm = runResourceT-> FSBackend$ runReaderT -> IO a (unFSBackend m) st
runFSBackend st m = runResourceT $ runReaderT (unFSBackend m) st
makeAbsolute :: FilePath -> FSBackend FilePath
makeAbsolute ::path= do   -> FSBackend FilePath
makeAbsoluteb <- FSBackend =(doasks fsBase)
    breturn<- FSBackend$ b </> (dropHeadingPathSeparatorasks fsBase)            path
    return $ b </> dropHeadingPathSeparator path
instance FTPBackend FSBackend where
instancetype FTPBackendUserId FSBackend= ByteStringwhere
    type UserId FSBackend = ByteString
    ftplog = liftIO . S.putStrLn
    ftplog = liftIO . S.putStrLn
    authenticate user pass =
    authenticateif user==user pass =
        ifthen==returnpass (Just user)
          then return (NothingJust user)
          else return Nothing
    list dir = do
    listdir' =<-dolift (makeAbsolute dir)
        dir'C.sourceCmd<- lift$(makeAbsolute"ls -l " ++ encodeString)        dir'
        C.sourceCmd $ "ls -l " ++ encodeString dir'
    nlst dir = do
    nlstdir' =<-lift (makeAbsolute dir)
        dir'paths <- liftliftIOmakeAbsolute$ getDirectoryContents)       (encodeString dir')
        pathsC.sourceList<- liftIO$ map getDirectoryContents(S.pack . (++"\n")) (pathsencodeString dir')
        C.sourceList $ map (S.pack . (++"\n")) paths
    mkd dir =
    mkd dirmakeAbsolute=        dir >>= liftIO . createDirectory . encodeString
        makeAbsolute dir >>= liftIO . createDirectory . encodeString
    dele name =
    delemakeAbsolute =      name >>= liftIO . removeFile . encodeString
        makeAbsolute name >>= liftIO . removeFile . encodeString
    rename fname tname = do
    renamefname'<-tnamemakeAbsolute= do    fname
        fname' <- makeAbsolute fname
        tname' <-$ renameFile(encodeString      fname') (encodeString tname')
        liftIO $ renameFile (encodeString fname') (encodeString tname')
    rmd dir = do
    rmd dirdir'=<-makeAbsolute dir
        dir'liftIO<-$makeAbsoluteremoveDirectory (encodeString dir')
        liftIO $ removeDirectory (encodeString dir')
    download name =
    downloadlift name(makeAbsolute=        name) >>= C.sourceFile . encodeString
        lift (makeAbsolute name) >>= C.sourceFile . encodeString
    upload   name =
    uploadlift name(makeAbsolute=        name) >>= C.sinkFile . encodeString
        lift (makeAbsolute name) >>= C.sinkFile . encodeString

==============
../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs
==============
lengths:(4772,2829)

==============

({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (5,15)) "{-# LANGUAGE GeneralizedNewtypeDeriving\n           , OverloadedStrings\n           , TypeFamilies\n           , MultiParamTypeClasses\n           , CPP\n           #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,31)) "Network.FTP.Backend.FileSystem" Nothing),DP (0,1)),((G AnnModule),DP (7,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,7)) "FSConf" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:8:8-37
     }
    Nothing{ModuleName: Network.FTP.Backend.FileSystem})) 
  (Just 
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(9,3)-(12,3)
     }
    Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-27),DP (0,-26)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-12),DP (0,-7)) "where" Nothing),DP (0,-12)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-14
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-6),DP (0,3)) "FSBackend" Nothing),DP (0,-6)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: FSConf})))),
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-17
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-9),DP (0,3)) "runFSBackend" Nothing),DP (0,-9)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])
      (IEThingAll 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-13
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: FSBackend})))),
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:11:5-16
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:11:5-16
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: runFSBackend}))))])) 
  [
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:1-24
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (3,4)) "{-|\n - Simple file system backend.\n -}" Nothing,DComment (DP (-1,1),DP (1,4)) "{-|\n - Simple file system backend.\n -}" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,10)) "qualified" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,3)) "BasicPrelude" Nothing),DP (0,-9)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:18-24
       }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:1-19
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:8-19
       }
      Nothing{ModuleName: BasicPrelude}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,4)) "System.Directory" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:8-23
       }
      Nothing{ModuleName: System.Directory}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:1-32
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-16),DP (0,9)) "Filesystem.Path.CurrentOS" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:8-32
       }
      Nothing{ModuleName: Filesystem.Path.CurrentOS}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:1-33
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,27)) "Control.Monad.Trans.Reader" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:8-33
       }
      Nothing{ModuleName: Control.Monad.Trans.Reader}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:1-34
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-26),DP (0,1)) "Control.Monad.Trans.Control" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:8-34
       }
      Nothing{ModuleName: Control.Monad.Trans.Control}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:1-25
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-27),DP (0,-9)) "Control.Monad.Base" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:8-25
       }
      Nothing{ModuleName: Control.Monad.Base}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,10)) "qualified" Nothing,DComment (DP (0,1),DP (0,22)) "Data.ByteString.Char8" Nothing,DComment (DP (0,1),DP (0,3)) "as" Nothing,DComment (DP (0,1),DP (0,2)) "S" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,3)) "Data.Conduit" Nothing),DP (0,-9)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:18-38
       }
      Nothing{ModuleName: Data.ByteString.Char8}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: S}) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:1-19
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:8-19
       }
      Nothing{ModuleName: Data.Conduit}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,-3)) "qualified" Nothing,DComment (DP (0,1),DP (0,18)) "Data.Conduit.List" Nothing,DComment (DP (0,1),DP (0,3)) "as" Nothing,DComment (DP (0,1),DP (0,2)) "C" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-17),DP (0,2)) "Data.Conduit.Binary" Nothing),DP (0,-17)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,2)) "as" Nothing),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:18-34
       }
      Nothing{ModuleName: Data.Conduit.List}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: C}) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "C" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-19),DP (0,1)) "Data.Conduit.Process" Nothing),DP (0,-19)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,-1),DP (0,1)) "as" Nothing),DP (0,-1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:18-36
       }
      Nothing{ModuleName: Data.Conduit.Binary}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: C}) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "C" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:18-37
       }
      Nothing{ModuleName: Data.Conduit.Process}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: C}) 
     (Nothing))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:1-51
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,18)) "Network.FTP.Utils" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,24)) "dropHeadingPathSeparator" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:8-24
       }
      Nothing{ModuleName: Network.FTP.Utils}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:26-51
         }
        Just (Ann (DP (0,-1)) (ColDelta 26) DP (0,1) [DComment (DP (0,-17),DP (0,2)) "Network.FTP.Backend" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-23),DP (0,-22)) "(" Nothing),DP (0,-23)),((AnnComment DComment (DP (0,0),DP (0,10)) "FTPBackend" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:27-50
           }
          Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:27-50
             }
            Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: dropHeadingPathSeparator}))))]))))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:8-26
       }
      Nothing{ModuleName: Network.FTP.Backend}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:28-43
         }
        Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-42
           }
          Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingAll 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-38
             }
            Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: FTPBackend}))))])))))] 
  [
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,1)-(38,3)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) "::" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:6-11
        }
       Just (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "{" Nothing,DComment (DP (0,1),DP (0,7)) "fsBase" Nothing] [((G AnnVal),DP (0,-5))])
       (Unqual {OccName: FSConf})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (DataType) 
       ({ <no location info> }
        Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,15)-(38,3)
          }
         Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:15-20
             }
            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: FSConf}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(37,3)-(38,3)
             }
            Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-6),DP (0,2)) "FilePath" Nothing] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (1,3))])
            [
             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:5-22
               }
              Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: fsBase}))] 
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:15-22
                 }
                Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (HsTyVar 
                 (Unqual {OccName: FilePath}))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Nothing)) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(40,1)-(43,14)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,12)) "unFSBackend" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,8)) "ReaderT" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "ResourceT" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnNewtype),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:9-17
        }
       Just (Ann (DP (0,-4)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,5)) "deriving" Nothing] [((G AnnVal),DP (0,-4))])
       (Unqual {OccName: FSBackend})) 
      (HsQTvs 
       [] 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:19
          }
         Just (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,1),DP (0,8)) "Functor" Nothing] [((G AnnVal),DP (0,-4))])
         (UserTyVar 
          (Unqual {OccName: a})))]) 
      (HsDataDefn 
       (NewType) 
       ({ <no location info> }
        Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:23-82
          }
         Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:23-31
             }
            Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: FSBackend}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:33-82
             }
            Just (Ann (DP (0,-3)) (ColDelta 33) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "," Nothing,DComment (DP (0,1),DP (0,12)) "Applicative" Nothing] [((G AnnOpenC),DP (0,-3)),((G AnnCloseC),DP (0,1))])
            [
             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:35-80
               }
              Just (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-9)) "," Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,6)) "Monad" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "MonadIO" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:35-45
                  }
                 Just (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: unFSBackend}))] 
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-80
                 }
                Just (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-78
                   }
                  Just (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [])
                  (HsAppTy 
                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-63
                     }
                    Just (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-56
                       }
                      Just (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: ReaderT}))) 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:58-63
                       }
                      Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: FSConf}))))) 
                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:65-78
                     }
                    Just (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                    (HsParTy 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:66-77
                       }
                      Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])
                      (HsAppTy 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:66-74
                         }
                        Just (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsTyVar 
                         (Unqual {OccName: ResourceT}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:76-77
                         }
                        Just (Ann (DP (0,1)) (ColDelta 76) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsTyVar 
                         (Unqual {OccName: IO}))))))))) 
                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:80
                   }
                  Just (Ann (DP (0,1)) (ColDelta 80) DP (0,1) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: a}))))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(41,5)-(43,14)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (1,14))])
         [
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:16-22
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:16-22
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,6)) "MonadUnsafeIO" Nothing),DP (0,-7)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Functor}))))),
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:25-35
            }
           Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:25-35
              }
             Just (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "," Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,11)) "MonadThrow" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Applicative}))))),
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:38-42
            }
           Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:38-42
              }
             Just (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Monad}))))),
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:45-51
            }
           Just (Ann (DP (0,-11)) (ColDelta 45) DP (0,1) [DComment (DP (0,-1),DP (0,12)) "MonadResource" Nothing] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:45-51
              }
             Just (Ann (DP (0,-11)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,-11)),((G AnnComma),DP (1,14))])
             (HsTyVar 
              (Unqual {OccName: MonadIO}))))),
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:16-28
            }
           Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:16-28
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MonadUnsafeIO}))))),
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:31-40
            }
           Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:31-40
              }
             Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MonadThrow}))))),
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:43-55
            }
           Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
             []) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:43-55
              }
             Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: MonadResource})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(45,1)-(46,35)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,10)) "MonadBase" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-5)) "." Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,9)) "liftBase" Nothing),DP (0,1)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-31
         }
        Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,8)) "liftBase" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
          []) 
         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-31
           }
          Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-21
             }
            Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])
            (HsAppTy 
             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-18
               }
              Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-3))])
              (HsTyVar 
               (Unqual {OccName: MonadBase}))) 
             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:20-21
               }
              Just (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-5))])
              (HsTyVar 
               (Unqual {OccName: IO}))))) 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:23-31
             }
            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: FSBackend}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-35
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-12
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: liftBase})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-35
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: liftBase})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:14-35
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:16-35
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:16-24
                      }
                     Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: FSBackend}))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:26
                      }
                     Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:28-35
                      }
                     Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: liftBase})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [] 
       (Nothing))))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(48,1)-(51,52)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,17)) "MonadBaseControl" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,4)) "FSBackendStM" Nothing),DP (0,-8)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-38
         }
        Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
          []) 
         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-38
           }
          Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-28
             }
            Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])
            (HsAppTy 
             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-25
               }
              Just (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])
              (HsTyVar 
               (Unqual {OccName: MonadBaseControl}))) 
             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:27-28
               }
              Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [DComment (DP (0,-13),DP (0,-10)) "StM" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,0))])
              (HsTyVar 
               (Unqual {OccName: IO}))))) 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:30-38
             }
            Just (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: FSBackend}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-16
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: liftBaseWith})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-16
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: liftBaseWith})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:18
                 }
                Just (Ann (DP (0,-7)) (ColDelta 18) DP (0,1) [DComment (DP (0,-12),DP (0,-4)) "restoreM" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-7))])
                (VarPat 
                 (Unqual {OccName: f})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:20-110
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-110
                    }
                   Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-45
                      }
                     Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-30
                        }
                       Just (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: FSBackend}))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:32
                        }
                       Just (Ann (DP (0,-4)) (ColDelta 32) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "." Nothing,DComment (DP (0,1),DP (0,9)) "restoreM" Nothing] [((G AnnVal),DP (0,-4))])
                       (HsVar 
                        (Unqual {OccName: .}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:34-45
                        }
                       Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: liftBaseWith}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:47
                      }
                     Just (Ann (DP (0,-6)) (ColDelta 47) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "." Nothing,DComment (DP (0,1),DP (0,15)) "unFSBackendStM" Nothing] [((G AnnVal),DP (0,-6))])
                     (HsVar 
                      (Unqual {OccName: $}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110
                      }
                     Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110 Ref "delta-1"),DP (0,0))])
                     (HsLam 
                      (MG 
                       [
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110
                          }
                         Just (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])
                         (Match 
                          (Nothing) 
                          [
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:50-58
                             }
                            Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (VarPat 
                             (Unqual {OccName: runInBase})))] 
                          (Nothing) 
                          (GRHSs 
                           [
                            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-110
                              }
                             Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                             (GRHS 
                              [] 
                              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-110
                                }
                               Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                               (OpApp 
                                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-96
                                  }
                                 Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                 (OpApp 
                                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-84
                                    }
                                   Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                                   (OpApp 
                                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63
                                      }
                                     Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: f}))) 
                                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:65
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                     (HsVar 
                                      (Unqual {OccName: $}))) 
                                    (PlaceHolder) 
                                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:67-84
                                      }
                                     Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                                     (HsApp 
                                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:67-71
                                        }
                                       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: liftM}))) 
                                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:73-84
                                        }
                                       Just (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                       (HsVar 
                                        (Unqual {OccName: FSBackendStM}))))))) 
                                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:86
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: .}))) 
                                  (PlaceHolder) 
                                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:88-96
                                    }
                                   Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                   (HsVar 
                                    (Unqual {OccName: runInBase}))))) 
                                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:98
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: .}))) 
                                (PlaceHolder) 
                                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:100-110
                                  }
                                 Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                 (HsVar 
                                  (Unqual {OccName: unFSBackend})))))))] 
                           (EmptyLocalBinds))))] 
                       [] 
                       (PlaceHolder) 
                       (FromSource))))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-52
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-12
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: restoreM})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-52
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: restoreM})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:14-52
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-52
                    }
                   Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-35
                      }
                     Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-24
                        }
                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: FSBackend}))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:26
                        }
                       Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: .}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:28-35
                        }
                       Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: restoreM}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:37
                      }
                     Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:39-52
                      }
                     Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: unFSBackendStM})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [] 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:5-102
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-1),DP (0,0)) "{" Nothing,DComment (DP (0,1),DP (0,15)) "unFSBackendStM" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "StM" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "ReaderT" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "ResourceT" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnNewtype),DP (0,0)),((G AnnEqual),DP (0,1))])
         (DataFamInstDecl 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:13-15
            }
           Just (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,5)) "liftBaseWith" Nothing] [((G AnnVal),DP (0,-4))])
           (Unqual {OccName: StM})) 
          (HsWB 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:17-25
              }
             Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FSBackend}))),
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:27
              }
             Just (Ann (DP (0,-4)) (ColDelta 27) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-4))])
             (HsTyVar 
              (Unqual {OccName: a})))] 
           (PlaceHolder) 
           (PlaceHolder) 
           (PlaceHolder)) 
          (HsDataDefn 
           (NewType) 
           ({ <no location info> }
            Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
            []) 
           (Nothing) 
           (Nothing) 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:31-102
              }
             Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])
             (ConDecl 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:31-42
                 }
                Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                (Unqual {OccName: FSBackendStM}))] 
              (Explicit) 
              (HsQTvs 
               [] 
               []) 
              ({ <no location info> }
               Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
               []) 
              (RecCon 
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:44-102
                 }
                Just (Ann (DP (0,-2)) (ColDelta 44) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "." Nothing,DComment (DP (0,1),DP (0,13)) "liftBaseWith" Nothing] [((G AnnOpenC),DP (0,-2)),((AnnComment DComment (DP (0,-1),DP (0,10)) "unFSBackend" Nothing),DP (0,-1)),((G AnnCloseC),DP (0,1))])
                [
                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:46-100
                   }
                  Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,-12)) "$" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "runInBase" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])
                  (ConDeclField 
                   [
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:46-59
                      }
                     Just (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (Unqual {OccName: unFSBackendStM}))] 
                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:64-100
                     }
                    Just (Ann (DP (0,0)) (ColDelta 64) DP (0,1) [DComment (DP (0,0),DP (0,1)) "f" Nothing] [])
                    (HsAppTy 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:64-98
                       }
                      Just (Ann (DP (0,0)) (ColDelta 64) DP (0,1) [] [])
                      (HsAppTy 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:64-66
                         }
                        Just (Ann (DP (0,0)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsTyVar 
                         (Unqual {OccName: StM}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:68-98
                         }
                        Just (Ann (DP (0,-4)) (ColDelta 68) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "liftM" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])
                        (HsParTy 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:69-97
                           }
                          Just (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [])
                          (HsAppTy 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:69-82
                             }
                            Just (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [])
                            (HsAppTy 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:69-75
                               }
                              Just (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsTyVar 
                               (Unqual {OccName: ReaderT}))) 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:77-82
                               }
                              Just (Ann (DP (0,-8)) (ColDelta 77) DP (0,1) [DComment (DP (0,-3),DP (0,9)) "FSBackendStM" Nothing] [((G AnnVal),DP (0,-8))])
                              (HsTyVar 
                               (Unqual {OccName: FSConf}))))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:84-97
                             }
                            Just (Ann (DP (0,1)) (ColDelta 84) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsParTy 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:85-96
                               }
                              Just (Ann (DP (0,0)) (ColDelta 85) DP (0,0) [] [])
                              (HsAppTy 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:85-93
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 85) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsTyVar 
                                 (Unqual {OccName: ResourceT}))) 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:95-96
                                 }
                                Just (Ann (DP (0,-2)) (ColDelta 95) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "." Nothing,DComment (DP (0,1),DP (0,10)) "runInBase" Nothing] [((G AnnVal),DP (0,-2))])
                                (HsTyVar 
                                 (Unqual {OccName: IO}))))))))))))) 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:100
                       }
                      Just (Ann (DP (0,1)) (ColDelta 100) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsTyVar 
                       (Unqual {OccName: a}))))) 
                   (Nothing)))])) 
              (ResTyH98) 
              (Nothing) 
              (False)))] 
           (Nothing)) 
          (PlaceHolder)))] 
       (Nothing))))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1-45
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "runFSBackend" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: runFSBackend}))] 
      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-45
        }
       Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
         []) 
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-45
          }
         Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-6),DP (0,-5)) "m" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "runResourceT" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-22
            }
           Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: FSConf}))) 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-45
            }
           Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-37
              }
             Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-35
                }
               Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FSBackend}))) 
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:37
                }
               Just (Ann (DP (0,-9)) (ColDelta 37) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "runReaderT" Nothing] [((G AnnVal),DP (0,-9))])
               (HsTyVar 
                (Unqual {OccName: a}))))) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:42-45
              }
             Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:42-43
                }
               Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:45
                }
               Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "unFSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: runFSBackend})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: runFSBackend})) 
            (False))) 
          [
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:14-15
             }
            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: st}))),
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:17
             }
            Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: m})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:19-64
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:21-64
                }
               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:21-32
                  }
                 Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: runResourceT}))) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:34
                  }
                 Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: $}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:36-64
                  }
                 Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:36-61
                    }
                   Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:36-45
                      }
                     Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: runReaderT}))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:47-61
                      }
                     Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:48-60
                        }
                       Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:48-58
                          }
                         Just (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: unFSBackend}))) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:60
                          }
                         Just (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: m}))))))))) 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:63-64
                    }
                   Just (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: st})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FilePath" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,9)) "FilePath" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1-12
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: makeAbsolute}))] 
      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-46
        }
       Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "path" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
         []) 
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-46
          }
         Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-6),DP (0,-5)) "=" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-24
            }
           Just (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-1))])
           (HsTyVar 
            (Unqual {OccName: FilePath}))) 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:29-46
            }
           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:29-37
              }
             Just (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FSBackend}))) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:39-46
              }
             Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: FilePath}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:1-12
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: makeAbsolute})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48)
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:1-12
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: makeAbsolute})) 
            (False))) 
          [
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:14-17
             }
            Just (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-8),DP (0,-8)) "" Nothing,DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-5))])
            (VarPat 
             (Unqual {OccName: path})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,19)-(59,48)
              }
             Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,21)-(59,48)
                }
               Just (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(58,5)-(59,48) Ref "delta-2"),DP (0,0))])
               (HsDo 
                (DoExpr) 
                [
                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:5-32
                   }
                  Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])
                  (BindStmt 
                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:5
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                    (VarPat 
                     (Unqual {OccName: b}))) 
                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:10-32
                     }
                    Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
                    (HsApp 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:10-18
                       }
                      Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: FSBackend}))) 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:20-32
                       }
                      Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) "</>" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                      (HsPar 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:21-31
                         }
                        Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:21-24
                           }
                          Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,23)) "dropHeadingPathSeparator" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: asks}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:26-31
                           }
                          Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: fsBase}))))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})))),
                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-48
                   }
                  Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,12),DP (0,16)) "path" Nothing] [])
                  (BodyStmt 
                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-48
                     }
                    Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                    (OpApp 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-14
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                      (OpApp 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-10
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: return}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:12
                         }
                        Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: $}))) 
                       (PlaceHolder) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:14
                         }
                        Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: b}))))) 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:16-18
                       }
                      Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
                      (HsVar 
                       (Unqual {OccName: </>}))) 
                     (PlaceHolder) 
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:20-48
                       }
                      Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                      (HsApp 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:20-43
                         }
                        Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: dropHeadingPathSeparator}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:45-48
                         }
                        Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                        (HsVar 
                         (Unqual {OccName: path}))))))) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (HsLit 
                    (HsString "" {FastString: "noSyntaxExpr"})) 
                   (PlaceHolder)))] 
                (PlaceHolder)))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(61,1)-(99,62)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,11)) "FTPBackend" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,11)) "ByteString" Nothing),DP (0,1)),((G AnnWhere),DP (0,1))])
    (InstD 
     (ClsInstD 
      (ClsInstDecl 
       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:10-29
         }
        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,4)) "type" Nothing] [])
        (HsForAllTy 
         (Implicit) 
         (Nothing) 
         (HsQTvs 
          [] 
          []) 
         ({ <no location info> }
          Just (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] [])
          []) 
         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:10-29
           }
          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
          (HsAppTy 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:10-19
             }
            Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (HsTyVar 
             (Unqual {OccName: FTPBackend}))) 
           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:21-29
             }
            Just (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [DComment (DP (0,-10),DP (0,-4)) "UserId" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-5))])
            (HsTyVar 
             (Unqual {OccName: FSBackend}))))))) {Bag(Located (HsBind RdrName)): 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,6)) "ftplog" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftIO" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "S.putStrLn" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: ftplog})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: ftplog})) 
                (False))) 
              [] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:12-32
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:14-32
                    }
                   Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:14-19
                      }
                     Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: liftIO}))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:21
                      }
                     Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:23-32
                      }
                     Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Qual {ModuleName: S} {OccName: putStrLn})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,12)) "authenticate" Nothing,DComment (DP (0,1),DP (0,5)) "user" Nothing,DComment (DP (0,1),DP (0,5)) "pass" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:5-16
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: authenticate})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:5-16
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: authenticate})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:18-21
                 }
                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "if" Nothing,DComment (DP (0,1),DP (0,5)) "user" Nothing,DComment (DP (0,0),DP (0,2)) "==" Nothing] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: user}))),
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:23-26
                 }
                Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: pass})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,28)-(69,29)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 28) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(67,9)-(69,29)
                    }
                   Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "user" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,11)),((G AnnElse),DP (1,11))])
                   (HsIf 
                    (Just 
                     (HsLit 
                      (HsString "" {FastString: "noSyntaxExpr"}))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:12-21
                      }
                     Just (Ann (DP (0,-3)) (ColDelta 12) DP (0,1) [DComment (DP (0,0),DP (0,4)) "then" Nothing] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:12-15
                        }
                       Just (Ann (DP (0,-3)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-3))])
                       (HsVar 
                        (Unqual {OccName: user}))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:16-17
                        }
                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: ==}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:18-21
                        }
                       Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,4)) "return" Nothing),DP (0,-2)),((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: pass}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:16-33
                      }
                     Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:16-21
                        }
                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: return}))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:23-33
                        }
                       Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                       (HsPar 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:24-32
                          }
                         Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:24-27
                            }
                           Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: Just}))) 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:29-32
                            }
                           Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: user}))))))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:16-29
                      }
                     Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:16-21
                        }
                       Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: return}))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:23-29
                        }
                       Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: Nothing})))))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,4)) "list" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:5-8
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: list})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:5-8
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: list})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:10-12
                 }
                Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "dir'" Nothing] [((G AnnVal),DP (0,-3))])
                (VarPat 
                 (Unqual {OccName: dir})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,14)-(73,51)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,16)-(73,51)
                    }
                   Just (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(72,9)-(73,51) Ref "delta-3"),DP (0,0))])
                   (HsDo 
                    (DoExpr) 
                    [
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:9-39
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,7)) "C.sourceCmd" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])
                      (BindStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:9-12
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: dir'}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:17-39
                         }
                        Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:17-20
                           }
                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: lift}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:22-39
                           }
                          Just (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                          (HsPar 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:23-38
                             }
                            Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:23-34
                               }
                              Just (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: makeAbsolute}))) 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:36-38
                               }
                              Just (Ann (DP (0,-11)) (ColDelta 27) DP (0,1) [DComment (DP (0,-12),DP (0,-4)) "\"ls -l \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [((G AnnVal),DP (0,-11))])
                              (HsVar 
                               (Unqual {OccName: dir}))))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-51
                       }
                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,8),DP (0,12)) "dir'" Nothing] [])
                      (BodyStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-51
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-30
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                          (OpApp 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-19
                             }
                            Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Qual {ModuleName: C} {OccName: sourceCmd}))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:21
                             }
                            Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: $}))) 
                           (PlaceHolder) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:23-30
                             }
                            Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsLit 
                             (HsString "\"ls -l \"" {FastString: "ls -l "}))))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:32-33
                           }
                          Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: ++}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:35-51
                           }
                          Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:35-46
                             }
                            Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: encodeString}))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:48-51
                             }
                            Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: dir'}))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (PlaceHolder)))] 
                    (PlaceHolder)))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "nlst" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:5-8
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: nlst})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:5-8
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: nlst})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:10-12
                 }
                Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "dir'" Nothing] [((G AnnVal),DP (0,-3))])
                (VarPat 
                 (Unqual {OccName: dir})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,14)-(78,52)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,16)-(78,52)
                    }
                   Just (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(76,9)-(78,52) Ref "delta-4"),DP (0,0))])
                   (HsDo 
                    (DoExpr) 
                    [
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:9-40
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,1)) "paths" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,2))])
                      (BindStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:9-12
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: dir'}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:18-40
                         }
                        Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:18-21
                           }
                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: lift}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:23-40
                           }
                          Just (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,2)) "liftIO" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])
                          (HsPar 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:24-39
                             }
                            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:24-35
                               }
                              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: makeAbsolute}))) 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:37-39
                               }
                              Just (Ann (DP (0,-10)) (ColDelta 28) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "$" Nothing,DComment (DP (0,1),DP (0,21)) "getDirectoryContents" Nothing] [((G AnnVal),DP (0,-10))])
                              (HsVar 
                               (Unqual {OccName: dir}))))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9-66
                       }
                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,7),DP (0,8)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing,DComment (DP (0,1),DP (0,5)) "dir'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,7)) "C.sourceList" Nothing),DP (0,-5)),((G AnnLarrow),DP (0,1))])
                      (BindStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9-13
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: paths}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:18-66
                         }
                        Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:18-23
                           }
                          Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: liftIO}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:25
                           }
                          Just (Ann (DP (0,-2)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,4)) "map" Nothing] [((G AnnVal),DP (0,-2))])
                          (HsVar 
                           (Unqual {OccName: $}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:27-66
                           }
                          Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:27-46
                             }
                            Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: getDirectoryContents}))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:48-66
                             }
                            Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [DComment (DP (0,-19),DP (0,-18)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "S.pack" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "++" Nothing,DComment (DP (0,0),DP (0,4)) "\"\\n\"" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:49-65
                               }
                              Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:49-60
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,4)) "paths" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: encodeString}))) 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:62-65
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: dir'}))))))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-52
                       }
                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])
                      (BodyStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-52
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-20
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Qual {ModuleName: C} {OccName: sourceList}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:22
                           }
                          Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: $}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:24-52
                           }
                          Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:24-46
                             }
                            Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:24-26
                               }
                              Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: map}))) 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:28-46
                               }
                              Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                              (HsPar 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:29-45
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])
                                (OpApp 
                                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:29-34
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Qual {ModuleName: S} {OccName: pack}))) 
                                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:36
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: .}))) 
                                 (PlaceHolder) 
                                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:38-45
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                                  (HsPar 
                                   ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:39-44
                                     }
                                    Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])
                                    (SectionR 
                                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:39-40
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsVar 
                                       (Unqual {OccName: ++}))) 
                                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:41-44
                                       }
                                      Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                      (HsLit 
                                       (HsString "\"\\n\"" {FastString: "\n"}))))))))))))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:48-52
                             }
                            Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: paths}))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (PlaceHolder)))] 
                    (PlaceHolder)))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mkd" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:5-7
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: mkd})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,9)) "makeAbsolute" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:5-7
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: mkd})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:9-11
                 }
                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: dir})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,13)-(81,68)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-68
                    }
                   Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,8),DP (0,11)) "dir" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftIO" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "createDirectory" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-53
                      }
                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-35
                        }
                       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-24
                          }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-20
                            }
                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: makeAbsolute}))) 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:22-24
                            }
                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: dir}))))) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:26-28
                          }
                         Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: >>=}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:30-35
                          }
                         Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: liftIO}))))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:37
                        }
                       Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: .}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:39-53
                        }
                       Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: createDirectory}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:55
                      }
                     Just (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:57-68
                      }
                     Just (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: encodeString})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,4)) "dele" Nothing,DComment (DP (0,1),DP (0,5)) "name" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:5-8
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: dele})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:5-8
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: dele})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:10-13
                 }
                Just (Ann (DP (0,-11)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing] [((G AnnVal),DP (0,-11))])
                (VarPat 
                 (Unqual {OccName: name})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,15)-(84,64)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-64
                    }
                   Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,6),DP (0,10)) "name" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftIO" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "removeFile" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-49
                      }
                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-36
                        }
                       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                       (OpApp 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-25
                          }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                         (HsApp 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-20
                            }
                           Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: makeAbsolute}))) 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:22-25
                            }
                           Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])
                           (HsVar 
                            (Unqual {OccName: name}))))) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:27-29
                          }
                         Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: >>=}))) 
                        (PlaceHolder) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:31-36
                          }
                         Just (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: liftIO}))))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:38
                        }
                       Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: .}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:40-49
                        }
                       Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: removeFile}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:51
                      }
                     Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:53-64
                      }
                     Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: encodeString})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,6)) "rename" Nothing,DComment (DP (0,1),DP (0,6)) "fname" Nothing,DComment (DP (0,1),DP (0,6)) "tname" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: rename})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,8)) "makeAbsolute" Nothing),DP (0,-4)),((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: rename})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:12-16
                 }
                Just (Ann (DP (0,-3)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,6)) "fname'" Nothing] [((G AnnVal),DP (0,-3))])
                (VarPat 
                 (Unqual {OccName: fname}))),
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:18-22
                 }
                Just (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: tname})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,24)-(89,71)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,26)-(89,71)
                    }
                   Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(87,9)-(89,71) Ref "delta-5"),DP (0,0))])
                   (HsDo 
                    (DoExpr) 
                    [
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:9-36
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])
                      (BindStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:9-14
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: fname'}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:19-36
                         }
                        Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
                        (HsApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:19-30
                           }
                          Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: makeAbsolute}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:32-36
                           }
                          Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: fname}))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9-36
                       }
                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])
                      (BindStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9-14
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: tname'}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:19-36
                         }
                        Just (Ann (DP (0,-9)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "renameFile" Nothing] [])
                        (HsApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:19-30
                           }
                          Just (Ann (DP (0,-9)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-9))])
                          (HsVar 
                           (Unqual {OccName: makeAbsolute}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:32-36
                           }
                          Just (Ann (DP (0,-10)) (ColDelta 23) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing] [((G AnnVal),DP (0,-10))])
                          (HsVar 
                           (Unqual {OccName: tname}))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-71
                       }
                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,6),DP (0,12)) "fname'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing,DComment (DP (0,1),DP (0,7)) "tname'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                      (BodyStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-71
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-14
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: liftIO}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:16
                           }
                          Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: $}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:18-71
                           }
                          Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:18-49
                             }
                            Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                            (HsApp 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:18-27
                               }
                              Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                              (HsVar 
                               (Unqual {OccName: renameFile}))) 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:29-49
                               }
                              Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                              (HsPar 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:30-48
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])
                                (HsApp 
                                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:30-41
                                   }
                                  Just (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: encodeString}))) 
                                 ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:43-48
                                   }
                                  Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                  (HsVar 
                                   (Unqual {OccName: fname'}))))))))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:51-71
                             }
                            Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:52-70
                               }
                              Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:52-63
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: encodeString}))) 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:65-70
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: tname'}))))))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (PlaceHolder)))] 
                    (PlaceHolder)))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "rmd" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:5-7
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: rmd})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,4)) "dir'" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:5-7
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: rmd})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:9-11
                 }
                Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: dir})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,13)-(93,52)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,15)-(93,52)
                    }
                   Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(92,9)-(93,52) Ref "delta-6"),DP (0,0))])
                   (HsDo 
                    (DoExpr) 
                    [
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:9-32
                       }
                      Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,2)) "liftIO" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])
                      (BindStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:9-12
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                        (VarPat 
                         (Unqual {OccName: dir'}))) 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:17-32
                         }
                        Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [])
                        (HsApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:17-28
                           }
                          Just (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: makeAbsolute}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:30-32
                           }
                          Just (Ann (DP (0,-3)) (ColDelta 21) DP (0,1) [DComment (DP (0,-11),DP (0,4)) "removeDirectory" Nothing] [((G AnnVal),DP (0,-3))])
                          (HsVar 
                           (Unqual {OccName: dir}))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})))),
                     ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-52
                       }
                      Just (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing,DComment (DP (0,1),DP (0,5)) "dir'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
                      (BodyStmt 
                       ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-52
                         }
                        Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])
                        (OpApp 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-14
                           }
                          Just (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: liftIO}))) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:16
                           }
                          Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])
                          (HsVar 
                           (Unqual {OccName: $}))) 
                         (PlaceHolder) 
                         ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:18-52
                           }
                          Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
                          (HsApp 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:18-32
                             }
                            Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                            (HsVar 
                             (Unqual {OccName: removeDirectory}))) 
                           ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:34-52
                             }
                            Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                            (HsPar 
                             ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:35-51
                               }
                              Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])
                              (HsApp 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:35-46
                                 }
                                Just (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: encodeString}))) 
                               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:48-51
                                 }
                                Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
                                (HsVar 
                                 (Unqual {OccName: dir'}))))))))))) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (HsLit 
                        (HsString "" {FastString: "noSyntaxExpr"})) 
                       (PlaceHolder)))] 
                    (PlaceHolder)))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "download" Nothing,DComment (DP (0,1),DP (0,5)) "name" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:5-12
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: download})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:5-12
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: download})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:14-17
                 }
                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,0)) "lift" Nothing] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: name})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,19)-(96,64)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-64
                    }
                   Just (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,8),DP (0,12)) "name" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,13)) "C.sourceFile" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-49
                      }
                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-32
                        }
                       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-12
                          }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: lift}))) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:14-32
                          }
                         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                         (HsPar 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:15-31
                            }
                           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:15-26
                              }
                             Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: makeAbsolute}))) 
                            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:28-31
                              }
                             Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: name}))))))))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:34-36
                        }
                       Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: >>=}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:38-49
                        }
                       Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Qual {ModuleName: C} {OccName: sourceFile}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:51
                      }
                     Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:53-64
                      }
                     Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: encodeString})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          [])),
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,5)-(99,62)
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,6)) "upload" Nothing,DComment (DP (0,3),DP (0,7)) "name" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])
         (FunBind 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:5-10
            }
           Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (Unqual {OccName: upload})) 
          (False) 
          (MG 
           [
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,5)-(99,62)
              }
             Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])
             (Match 
              (Just 
               ((,) 
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:5-10
                  }
                 Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: upload})) 
                (False))) 
              [
               ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:14-17
                 }
                Just (Ann (DP (0,1)) (ColDelta 14) DP (0,3) [DComment (DP (0,-2),DP (0,2)) "lift" Nothing] [((G AnnVal),DP (0,0))])
                (VarPat 
                 (Unqual {OccName: name})))] 
              (Nothing) 
              (GRHSs 
               [
                ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,19)-(99,62)
                  }
                 Just (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])
                 (GRHS 
                  [] 
                  ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-62
                    }
                   Just (Ann (DP (0,8)) (ColDelta 9) DP (1,9) [DComment (DP (0,8),DP (0,12)) "name" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,11)) "C.sinkFile" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing] [])
                   (OpApp 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-47
                      }
                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                     (OpApp 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-32
                        }
                       Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-12
                          }
                         Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: lift}))) 
                        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:14-32
                          }
                         Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                         (HsPar 
                          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:15-31
                            }
                           Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])
                           (HsApp 
                            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:15-26
                              }
                             Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: makeAbsolute}))) 
                            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:28-31
                              }
                             Just (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])
                             (HsVar 
                              (Unqual {OccName: name}))))))))) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:34-36
                        }
                       Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: >>=}))) 
                      (PlaceHolder) 
                      ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:38-47
                        }
                       Just (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Qual {ModuleName: C} {OccName: sinkFile}))))) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:49
                      }
                     Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: .}))) 
                    (PlaceHolder) 
                    ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:51-62
                      }
                     Just (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: encodeString})))))))] 
               (EmptyLocalBinds))))] 
           [] 
           (PlaceHolder) 
           (FromSource)) 
          (WpHole) 
          (PlaceHolder) 
          []))]} 
       [] 
       [
        ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:5-38
          }
         Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnType),DP (0,0))])
         (TyFamInstDecl 
          ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:10-38
            }
           Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnEqual),DP (0,1))])
           (TyFamEqn 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:10-15
              }
             Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: UserId})) 
            (HsWB 
             [
              ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:17-25
                }
               Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: FSBackend})))] 
             (PlaceHolder) 
             (PlaceHolder) 
             (PlaceHolder)) 
            ({ ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:29-38
              }
             Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: ByteString}))))) 
          (PlaceHolder)))] 
       [] 
       (Nothing)))))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (5,15)) "{-# LANGUAGE GeneralizedNewtypeDeriving\n           , OverloadedStrings\n           , TypeFamilies\n           , MultiParamTypeClasses\n           , CPP\n           #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,31)) "Network.FTP.Backend.FileSystem" Nothing),DP (0,1)),((G AnnModule),DP (7,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,7)) "FSConf" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(9,3)-(12,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-27),DP (0,-26)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-12),DP (0,-7)) "where" Nothing),DP (0,-12)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-14 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-6),DP (0,3)) "FSBackend" Nothing),DP (0,-6)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-17 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((AnnComment DComment (DP (0,-9),DP (0,3)) "runFSBackend" Nothing),DP (0,-9)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:11:5-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:11:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:1-24 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (3,4)) "{-|\n - Simple file system backend.\n -}" Nothing,DComment (DP (-1,1),DP (1,4)) "{-|\n - Simple file system backend.\n -}" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,10)) "qualified" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,3)) "BasicPrelude" Nothing),DP (0,-9)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:1-19 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:1-23 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,4)) "System.Directory" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:1-32 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-16),DP (0,9)) "Filesystem.Path.CurrentOS" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:1-33 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,27)) "Control.Monad.Trans.Reader" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:1-34 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-26),DP (0,1)) "Control.Monad.Trans.Control" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:1-25 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-27),DP (0,-9)) "Control.Monad.Base" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,10)) "qualified" Nothing,DComment (DP (0,1),DP (0,22)) "Data.ByteString.Char8" Nothing,DComment (DP (0,1),DP (0,3)) "as" Nothing,DComment (DP (0,1),DP (0,2)) "S" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((AnnComment DComment (DP (0,-9),DP (0,3)) "Data.Conduit" Nothing),DP (0,-9)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:1-19 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-12),DP (0,-3)) "qualified" Nothing,DComment (DP (0,1),DP (0,18)) "Data.Conduit.List" Nothing,DComment (DP (0,1),DP (0,3)) "as" Nothing,DComment (DP (0,1),DP (0,2)) "C" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-17),DP (0,2)) "Data.Conduit.Binary" Nothing),DP (0,-17)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,2)) "as" Nothing),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "C" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-19),DP (0,1)) "Data.Conduit.Process" Nothing),DP (0,-19)),((G AnnAs),DP (0,1)),((AnnComment DComment (DP (0,-1),DP (0,1)) "as" Nothing),DP (0,-1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) "C" Nothing] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:1-51 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,18)) "Network.FTP.Utils" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,24)) "dropHeadingPathSeparator" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:26-51 CN "(:)" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 26) DP (0,1) [DComment (DP (0,-17),DP (0,2)) "Network.FTP.Backend" Nothing] [((G AnnOpenP),DP (0,-1)),((AnnComment DComment (DP (0,-23),DP (0,-22)) "(" Nothing),DP (0,-23)),((AnnComment DComment (DP (0,0),DP (0,10)) "FTPBackend" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) "(" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) ".." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:27-50 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:27-50 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:28-43 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-38 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-42 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,1)-(38,3) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,4)) "data" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing] [((G AnnData),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,2)) "::" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:6-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 6) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "{" Nothing,DComment (DP (0,1),DP (0,7)) "fsBase" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:15-20 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,15)-(38,3) CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(37,3)-(38,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [DComment (DP (0,-6),DP (0,2)) "FilePath" Nothing] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (1,3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:5-22 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:15-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(40,1)-(43,14) CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,1),DP (0,12)) "unFSBackend" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,8)) "ReaderT" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "ResourceT" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnNewtype),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:9-17 CN "Unqual" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 9) DP (0,1) [DComment (DP (0,-3),DP (0,5)) "deriving" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:19 CN "UserTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 19) DP (0,1) [DComment (DP (0,-4),DP (0,-3)) "(" Nothing,DComment (DP (0,1),DP (0,8)) "Functor" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:23-31 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:23-82 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:33-82 CN "(:)" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 33) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "," Nothing,DComment (DP (0,1),DP (0,12)) "Applicative" Nothing] [((G AnnOpenC),DP (0,-3)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:35-45 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 35) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:35-80 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 35) DP (0,1) [] [((AnnComment DComment (DP (0,-10),DP (0,-9)) "," Nothing),DP (0,-10)),((AnnComment DComment (DP (0,1),DP (0,6)) "Monad" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,8)) "MonadIO" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-56 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-63 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-78 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 50) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:50-80 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 50) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:58-63 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:65-78 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 65) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:66-74 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:66-77 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 66) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:76-77 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 76) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:80 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 80) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(41,5)-(43,14) CN "(:)" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (1,14))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:16-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:16-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,6)) "MonadUnsafeIO" Nothing),DP (0,-7)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:25-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:25-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 25) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-6)) "," Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,11)) "MonadThrow" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:38-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:38-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 38) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "," Nothing),DP (0,-2)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:45-51 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 45) DP (0,1) [DComment (DP (0,-1),DP (0,12)) "MonadResource" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:45-51 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,-11)),((G AnnComma),DP (1,14))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:16-28 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:16-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:31-40 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:31-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:43-55 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:43-55 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(45,1)-(46,35) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,10)) "MonadBase" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-5)) "." Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,9)) "liftBase" Nothing),DP (0,1)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-31 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:10-31 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,8)) "liftBase" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:20-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 20) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:23-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-35 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-35 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:14-35 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:16-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:16-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:28-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(48,1)-(51,52) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,17)) "MonadBaseControl" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,4)) "FSBackendStM" Nothing),DP (0,-8)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-28 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-38 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:10-38 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:27-28 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [DComment (DP (0,-13),DP (0,-10)) "StM" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:30-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:5-102 CN "DataFamInstDecl" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [DComment (DP (0,-1),DP (0,0)) "{" Nothing,DComment (DP (0,1),DP (0,15)) "unFSBackendStM" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,4)) "StM" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,7)) "ReaderT" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,9)) "ResourceT" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,2)) "}" Nothing] [((G AnnNewtype),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:13-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 13) DP (0,1) [DComment (DP (0,-7),DP (0,5)) "liftBaseWith" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:17-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 27) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "f" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:31-42 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:31-102 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:44-102 CN "(:)" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 44) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "." Nothing,DComment (DP (0,1),DP (0,13)) "liftBaseWith" Nothing] [((G AnnOpenC),DP (0,-2)),((AnnComment DComment (DP (0,-1),DP (0,10)) "unFSBackend" Nothing),DP (0,-1)),((G AnnCloseC),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:46-59 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 46) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:46-100 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((AnnComment DComment (DP (0,-13),DP (0,-12)) "$" Nothing),DP (0,-13)),((AnnComment DComment (DP (0,1),DP (0,2)) "\\" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,9)) "runInBase" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,3)) "->" Nothing),DP (0,1)),((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:64-66 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 64) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:64-98 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 64) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:64-100 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 64) DP (0,1) [DComment (DP (0,0),DP (0,1)) "f" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:68-98 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 68) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,6)) "liftM" Nothing] [((G AnnOpenP),DP (0,-4)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:69-75 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:69-82 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:69-97 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 69) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:77-82 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-8)) (ColDelta 77) DP (0,1) [DComment (DP (0,-3),DP (0,9)) "FSBackendStM" Nothing] [((G AnnVal),DP (0,-8))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:84-97 CN "HsParTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 84) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:85-93 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 85) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:85-96 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 85) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:95-96 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 95) DP (0,1) [DComment (DP (0,-8),DP (0,-7)) "." Nothing,DComment (DP (0,1),DP (0,10)) "runInBase" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:100 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 100) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:18 CN "VarPat" NotNeeded,
  (Ann (DP (0,-7)) (ColDelta 18) DP (0,1) [DComment (DP (0,-12),DP (0,-4)) "restoreM" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-7))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:20-110 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 20) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-110 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 32) DP (0,1) [DComment (DP (0,-5),DP (0,-4)) "." Nothing,DComment (DP (0,1),DP (0,9)) "restoreM" Nothing] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:34-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:47 CN "HsVar" NotNeeded,
  (Ann (DP (0,-6)) (ColDelta 47) DP (0,1) [DComment (DP (0,-9),DP (0,-8)) "." Nothing,DComment (DP (0,1),DP (0,15)) "unFSBackendStM" Nothing] [((G AnnVal),DP (0,-6))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110 CN "(:)" Ref "delta-1",
  (Ann (DP (0,-1)) (ColDelta 49) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110 CN "HsLam" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnLam),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110 Ref "delta-1"),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110 CN "Match" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 0) DP (0,-1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:50-58 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-84 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-96 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-110 CN "GRHS" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-110 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:65 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:67-71 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:67-84 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:73-84 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 24) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:86 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:88-96 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:98 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:100-110 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-52 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-52 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:14-52 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:26 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:28-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:39-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1-45 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,12)) "runFSBackend" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,7)) "FSConf" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-22 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-45 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-45 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((AnnComment DComment (DP (0,-6),DP (0,-5)) "m" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((AnnComment DComment (DP (0,1),DP (0,13)) "runResourceT" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-37 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-45 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 37) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "runReaderT" Nothing] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:42-43 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:42-45 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:45 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "unFSBackend" Nothing,DComment (DP (0,1),DP (0,2)) "m" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "st" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:14-15 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:19-64 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:21-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:21-64 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:34 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:36-45 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:36-61 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:36-64 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:47-61 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:48-58 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:48-60 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 48) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:60 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 60) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:63-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 63) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1-46 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,9)) "FilePath" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,9)) "FilePath" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,-1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-46 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [DComment (DP (0,-2),DP (0,2)) "path" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-46 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 17) DP (0,1) [] [((AnnComment DComment (DP (0,-6),DP (0,-5)) "=" Nothing),DP (0,-6)),((AnnComment DComment (DP (0,1),DP (0,3)) "do" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:29-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 29) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:29-46 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:39-46 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:1-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48) CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:14-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 14) DP (0,1) [DComment (DP (0,-8),DP (0,-8)) "" Nothing,DComment (DP (0,0),DP (0,1)) "b" Nothing,DComment (DP (0,1),DP (0,3)) "<-" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,19)-(59,48) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,21)-(59,48) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,1) [DComment (DP (0,0),DP (0,1)) "(" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(58,5)-(59,48) Ref "delta-2"),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:5 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:5-32 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "return" Nothing),DP (0,-1)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(58,5)-(59,48) CN "(:)" Ref "delta-2",
  (Ann (DP (1,0)) (ColDelta 5) DP (1,0) [DComment (DP (0,-2),DP (0,2)) "asks" Nothing,DComment (DP (0,1),DP (0,7)) "fsBase" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:10-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:10-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:20-32 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [DComment (DP (0,-7),DP (0,-6)) "$" Nothing,DComment (DP (0,1),DP (0,2)) "b" Nothing,DComment (DP (0,1),DP (0,4)) "</>" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:21-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,23)) "dropHeadingPathSeparator" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:21-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:26-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-10 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-14 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-48 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,12),DP (0,16)) "path" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-48 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:12 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:14 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:20-43 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:20-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:45-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(61,1)-(99,62) CN "InstD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (2,1) [DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "instance" Nothing,DComment (DP (0,1),DP (0,11)) "FTPBackend" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing,DComment (DP (0,1),DP (0,6)) "where" Nothing] [((G AnnInstance),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) "=" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,1),DP (0,11)) "ByteString" Nothing),DP (0,1)),((G AnnWhere),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:10-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:10-29 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:10-29 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [DComment (DP (0,-4),DP (0,-4)) "" Nothing,DComment (DP (0,0),DP (0,4)) "type" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:21-29 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-5)) (ColDelta 21) DP (0,1) [DComment (DP (0,-10),DP (0,-4)) "UserId" Nothing,DComment (DP (0,1),DP (0,10)) "FSBackend" Nothing] [((G AnnVal),DP (0,-5))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:5-38 CN "TyFamInstDecl" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnType),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:10-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:10-38 CN "TyFamEqn" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:17-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:29-38 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32 CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,6)) "ftplog" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,7)) "liftIO" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "S.putStrLn" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:12-32 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:14-32 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:23-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:5-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,12)) "authenticate" Nothing,DComment (DP (0,1),DP (0,5)) "user" Nothing,DComment (DP (0,1),DP (0,5)) "pass" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:18-21 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-8),DP (0,-6)) "if" Nothing,DComment (DP (0,1),DP (0,5)) "user" Nothing,DComment (DP (0,0),DP (0,2)) "==" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:23-26 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,28)-(69,29) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 28) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(67,9)-(69,29) CN "HsIf" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [] [((G AnnIf),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,2)) "(" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,4)) "Just" Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,5)) "user" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnThen),DP (1,11)),((G AnnElse),DP (1,11))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:12-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:12-21 CN "OpApp" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 12) DP (0,1) [DComment (DP (0,0),DP (0,4)) "then" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:16-17 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:18-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((AnnComment DComment (DP (0,-2),DP (0,4)) "return" Nothing),DP (0,-2)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:16-33 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:23-33 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:24-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,6)) "Nothing" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:24-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:29-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:16-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:16-29 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:23-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,4)) "list" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:10-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "dir'" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,14)-(73,51) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,16)-(73,51) CN "HsDo" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(72,9)-(73,51) Ref "delta-3"),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:9-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:9-39 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,7)) "C.sourceCmd" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(72,9)-(73,51) CN "(:)" Ref "delta-3",
  (Ann (DP (1,0)) (ColDelta 9) DP (1,0) [DComment (DP (0,-1),DP (0,3)) "lift" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:17-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:17-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:22-39 CN "HsPar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:23-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:23-38 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 14) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:36-38 CN "HsVar" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 27) DP (0,1) [DComment (DP (0,-12),DP (0,-4)) "\"ls -l \"" Nothing,DComment (DP (0,1),DP (0,3)) "++" Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [((G AnnVal),DP (0,-11))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-30 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-51 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,8),DP (0,12)) "dir'" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-51 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:23-30 CN "HsLit" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:32-33 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:35-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:35-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:48-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "nlst" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:10-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,4)) "dir'" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,14)-(78,52) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,16)-(78,52) CN "HsDo" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 16) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(76,9)-(78,52) Ref "delta-4"),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:9-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:9-40 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,1)) "paths" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,2))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(76,9)-(78,52) CN "(:)" Ref "delta-4",
  (Ann (DP (1,0)) (ColDelta 9) DP (1,0) [DComment (DP (0,0),DP (0,4)) "lift" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:18-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:18-40 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:23-40 CN "HsPar" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,2)) "liftIO" Nothing] [((G AnnOpenP),DP (0,-1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:24-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:24-39 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:37-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 28) DP (0,1) [DComment (DP (0,-11),DP (0,-10)) "$" Nothing,DComment (DP (0,1),DP (0,21)) "getDirectoryContents" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9-66 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,7),DP (0,8)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing,DComment (DP (0,1),DP (0,5)) "dir'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((AnnComment DComment (DP (0,-5),DP (0,7)) "C.sourceList" Nothing),DP (0,-5)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:18-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:18-66 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,-2)) (ColDelta 16) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,4)) "map" Nothing] [((G AnnVal),DP (0,-2))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:27-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:27-66 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:48-66 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [DComment (DP (0,-19),DP (0,-18)) "(" Nothing,DComment (DP (0,0),DP (0,6)) "S.pack" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "++" Nothing,DComment (DP (0,0),DP (0,4)) "\"\\n\"" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:49-60 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((AnnComment DComment (DP (0,-1),DP (0,4)) "paths" Nothing),DP (0,-1)),((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:49-65 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:62-65 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-52 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:22 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:24-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:24-46 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:24-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:28-46 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:29-34 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:29-45 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:38-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:39-40 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:39-44 CN "SectionR" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 30) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:41-44 CN "HsLit" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:48-52 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "mkd" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,9)) "makeAbsolute" Nothing),DP (0,-3)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:9-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,13)-(81,68) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-24 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-35 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-53 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-68 CN "OpApp" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,8),DP (0,11)) "dir" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftIO" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,16)) "createDirectory" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:22-24 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:26-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:30-35 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:39-53 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 55) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:57-68 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 57) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,4)) "dele" Nothing,DComment (DP (0,1),DP (0,5)) "name" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:10-13 CN "VarPat" NotNeeded,
  (Ann (DP (0,-11)) (ColDelta 10) DP (0,1) [DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing] [((G AnnVal),DP (0,-11))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,15)-(84,64) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-20 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-25 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-36 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-64 CN "OpApp" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,6),DP (0,10)) "name" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,7)) "liftIO" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,11)) "removeFile" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:22-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:27-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:31-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 31) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:38 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:40-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:53-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,6)) "rename" Nothing,DComment (DP (0,1),DP (0,6)) "fname" Nothing,DComment (DP (0,1),DP (0,6)) "tname" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,8)) "makeAbsolute" Nothing),DP (0,-4)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:12-16 CN "VarPat" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 12) DP (0,1) [DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,6)) "fname'" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:18-22 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "<-" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,24)-(89,71) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 24) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,26)-(89,71) CN "HsDo" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnDo),DP (0,0)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(87,9)-(89,71) Ref "delta-5"),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:9-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:9-36 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(87,9)-(89,71) CN "(:)" Ref "delta-5",
  (Ann (DP (1,0)) (ColDelta 9) DP (1,0) [DComment (DP (0,4),DP (0,9)) "fname" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:19-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:19-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:32-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9-36 CN "BindStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [] [((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:19-30 CN "HsVar" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-9))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:19-36 CN "HsApp" NotNeeded,
  (Ann (DP (0,-9)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "$" Nothing,DComment (DP (0,1),DP (0,11)) "renameFile" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:32-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,-10)) (ColDelta 23) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing] [((G AnnVal),DP (0,-10))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-71 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,6),DP (0,12)) "fname'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing,DComment (DP (0,1),DP (0,7)) "tname'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-71 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:18-27 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:18-49 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:18-71 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:29-49 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:30-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:30-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 21) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:43-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:51-71 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:52-63 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:52-70 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 43) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:65-70 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 56) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,3)) "rmd" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,3)) "do" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-3),DP (0,-3)) "" Nothing),DP (0,-3)),((AnnComment DComment (DP (0,0),DP (0,4)) "dir'" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:9-11 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,13)-(93,52) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 13) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,15)-(93,52) CN "HsDo" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,1) [DComment (DP (0,0),DP (0,2)) "<-" Nothing] [((G AnnDo),DP (0,-1)),((AnnList ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(92,9)-(93,52) Ref "delta-6"),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:9-12 CN "VarPat" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:9-32 CN "BindStmt" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,2)) "liftIO" Nothing),DP (0,-4)),((G AnnLarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(92,9)-(93,52) CN "(:)" Ref "delta-6",
  (Ann (DP (1,0)) (ColDelta 9) DP (1,0) [DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing,DComment (DP (0,1),DP (0,4)) "dir" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:17-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:17-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,1) [DComment (DP (0,0),DP (0,1)) "$" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 21) DP (0,1) [DComment (DP (0,-11),DP (0,4)) "removeDirectory" Nothing] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-52 CN "BodyStmt" NotNeeded,
  (Ann (DP (1,0)) (ColDelta 0) DP (1,0) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,12)) "encodeString" Nothing,DComment (DP (0,1),DP (0,5)) "dir'" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-52 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 0) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:16 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:18-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:18-52 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:34-52 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:35-46 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:35-51 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 26) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:48-51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:5-12 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing,DComment (DP (0,0),DP (0,8)) "download" Nothing,DComment (DP (0,1),DP (0,5)) "name" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:14-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [DComment (DP (0,-4),DP (0,0)) "lift" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,19)-(96,64) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-49 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-64 CN "OpApp" NotNeeded,
  (Ann (DP (1,9)) (ColDelta 9) DP (1,9) [DComment (DP (0,8),DP (0,12)) "name" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,13)) "C.sourceFile" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:14-32 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:15-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:15-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:28-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:34-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:38-49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:51 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:53-64 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,5)-(99,62) CN "FunBind" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (2,5) [DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,6)) "upload" Nothing,DComment (DP (0,3),DP (0,7)) "name" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,5)-(99,62) CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,0),DP (0,12)) "makeAbsolute" Nothing),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:14-17 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,3) [DComment (DP (0,-2),DP (0,2)) "lift" Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,19)-(99,62) CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 19) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-32 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-62 CN "OpApp" NotNeeded,
  (Ann (DP (0,8)) (ColDelta 9) DP (1,9) [DComment (DP (0,8),DP (0,12)) "name" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,4)) ">>=" Nothing,DComment (DP (0,1),DP (0,11)) "C.sinkFile" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,13)) "encodeString" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,0)) "" Nothing] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:14-32 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:15-26 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:15-31 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:28-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 28) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:34-36 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:38-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 38) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:49 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:51-62 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 51) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-46,0)) (ColDelta 0) DP (-46,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-36,0)) (ColDelta 0) DP (-36,0) [] []))]
==============
([((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:1:1,
    AnnModule),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:8:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:1:1,
    AnnWhere),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:12:5-9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(9,3)-(12,3),
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:12:3]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(9,3)-(12,3),
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:3]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-14,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-14,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:3]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-14,
    AnnDotdot),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:12-13]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:5-14,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:9:11]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-17,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:17]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-17,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:11:3]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-17,
    AnnDotdot),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:15-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:5-17,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:10:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:1-24,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:1-24,
    AnnQualified),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:8-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:18:1-24,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:1-19,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:19:1-19,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:1-23,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:20:1-23,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:1-32,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:21:1-32,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:1-33,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:23:1-33,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:1-34,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:24:1-34,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:1-25,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:25:1-25,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43,
    AnnAs),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:40-41]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43,
    AnnQualified),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:8-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:1-43,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:27:43]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:1-19,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:28:1-19,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39,
    AnnAs),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:36-37]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39,
    AnnQualified),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:8-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:1-39,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:29:39]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41,
    AnnAs),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:38-39]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41,
    AnnQualified),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:8-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:1-41,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:30:41]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42,
    AnnAs),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:39-40]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42,
    AnnQualified),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:8-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:1-42,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:31:42]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:1-51,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:1-51,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:26-51,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:51]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:26-51,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:33:26]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:1-43,
    AnnImport),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:1-6]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:1-43,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:28-43,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:43]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:28-43,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:28]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-42,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:42]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-42,
    AnnDotdot),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:40-41]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:29-42,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:34:39]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,1)-(38,3),
    AnnData),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:1-4]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,1)-(38,3),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:36:13]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(36,1)-(38,3),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(37,3)-(38,3),
    AnnCloseC),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:38:3]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(37,3)-(38,3),
    AnnOpenC),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:3]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:5-22,
    AnnDcolon),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:37:12-13]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(40,1)-(43,14),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:21]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(40,1)-(43,14),
    AnnNewtype),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:1-7]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(40,1)-(43,14),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:33-82,
    AnnCloseC),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:82]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:33-82,
    AnnOpenC),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:33]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:35-80,
    AnnDcolon),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:47-48]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:65-78,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:78]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:65-78,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:40:65]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(41,5)-(43,14),
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:43:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(41,5)-(43,14),
    AnnDeriving),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:5-12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(41,5)-(43,14),
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:16-22,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:23]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:25-35,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:36]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:38-42,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:43]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:41:45-51,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:16-28,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:29]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:31-40,
    AnnComma),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:42:41]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(45,1)-(46,35),
    AnnInstance),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:1-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(45,1)-(46,35),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(45,1)-(46,35),
    AnnWhere),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:45:33-37]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-35,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-35,
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:5-12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:16-35,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:46:26]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(48,1)-(51,52),
    AnnInstance),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:1-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(48,1)-(51,52),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(48,1)-(51,52),
    AnnWhere),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:48:40-44]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:5-102,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:29]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:5-102,
    AnnNewtype),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:5-11]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:5-102,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:44-102,
    AnnCloseC),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:102]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:44-102,
    AnnOpenC),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:44]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:46-100,
    AnnDcolon),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:61-62]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:68-98,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:98]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:68-98,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:68]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:84-97,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:97]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:84-97,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:49:84]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:20]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110,
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:5-110,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-45,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:32]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:22-110,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:47]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110,
    AnnLam),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:49-110,
    AnnRarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:60-61]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-84,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:65]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-96,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:86]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:63-110,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:50:98]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-52,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-52,
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:5-12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-35,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:26]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:16-52,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:51:37]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1-45,
    AnnDcolon),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:14-15]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:1-45,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:17-45,
    AnnRarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:24-25]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:27-45,
    AnnRarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:53:39-40]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:19]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64,
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:1-64,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:21-64,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:34]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:47-61,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:61]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:47-61,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:54:47]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1-46,
    AnnDcolon),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:14-15]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:1-46,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:17-46,
    AnnRarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:56:26-27]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:19]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:1-12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,1)-(59,48),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(57,21)-(59,48),
    AnnDo),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:57:21-22]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:5-32,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:7-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:5-32,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:20-32,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:32]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:20-32,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:58:20]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-14,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:5-48,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:59:16-18]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(61,1)-(99,62),
    AnnInstance),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:1-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(61,1)-(99,62),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:101:1]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(61,1)-(99,62),
    AnnWhere),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:61:31-35]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:5-38,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:27]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:5-38,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:5-38,
    AnnType),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:5-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:10-38,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:62:27]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32,
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32,
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-10]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:5-32,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:14-32,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:64:21]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:28]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:66:5-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(66,5)-(69,29),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(67,9)-(69,29),
    AnnElse),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:69:11-14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(67,9)-(69,29),
    AnnIf),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:9-10]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(67,9)-(69,29),
    AnnThen),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:11-14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:12-21,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:67:16-17]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:23-33,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:33]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:23-33,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:68:23]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:5-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,5)-(73,51),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(71,16)-(73,51),
    AnnDo),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:71:16-17]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:9-39,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:14-15]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:9-39,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:22-39,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:39]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:22-39,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:72:22]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-30,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:21]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:9-51,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:73:32-33]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:5-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,5)-(78,52),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(75,16)-(78,52),
    AnnDo),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:75:16-17]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:9-40,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:15-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:9-40,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:23-40,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:40]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:23-40,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:76:23]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9-66,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:15-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:9-66,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:18-66,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:25]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:48-66,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:66]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:48-66,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:77:48]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:9-52,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:22]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:28-46,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:46]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:28-46,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:28]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:29-45,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:36]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:38-45,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:45]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:38-45,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:78:38]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:13]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:80:5-7]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(80,5)-(81,68),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-35,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:26-28]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-53,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:37]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:9-68,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:81:55]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:15]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:83:5-8]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(83,5)-(84,64),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-36,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:27-29]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-49,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:38]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:9-64,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:84:51]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:24]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:5-10]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,5)-(89,71),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(86,26)-(89,71),
    AnnDo),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:86:26-27]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:9-36,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:16-17]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:87:9-36,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9-36,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:16-17]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:88:9-36,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:9-71,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:29-49,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:49]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:29-49,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:29]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:51-71,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:71]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:51-71,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:89:51]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:13]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:5-7]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,5)-(93,52),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(91,15)-(93,52),
    AnnDo),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:91:15-16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:9-32,
    AnnLarrow),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:14-15]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:92:9-32,
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:9-52,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:16]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:34-52,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:52]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:34-52,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:93:34]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:19]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:95:5-12]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(95,5)-(96,64),
    AnnSemi),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:5]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-49,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:34-36]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:9-64,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:51]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:14-32,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:32]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:14-32,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:96:14]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,5)-(99,62),
    AnnEqual),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:19]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:(98,5)-(99,62),
    AnnFunId),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:98:5-10]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-47,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:34-36]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:9-62,
    AnnVal),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:49]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:14-32,
    AnnCloseP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:32]),
  ((../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:14-32,
    AnnOpenP),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:99:14]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/haskell-ftp-0.1.0.1/Network/FTP/Backend/FileSystem.hs:101:1])],
 [(<no location info>,
   [AnnBlockComment "{-|\n - Simple file system backend.\n -}",
    AnnBlockComment "{-# LANGUAGE GeneralizedNewtypeDeriving\n           , OverloadedStrings\n           , TypeFamilies\n           , MultiParamTypeClasses\n           , CPP\n           #-}"])])