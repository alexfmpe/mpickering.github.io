
{-# LANGUAGE CPP #-}

{-# OPTIONS_GHC -Wall -fwarn-tabs #-}

#if defined(__HUGS__) && (__HUGS__ <= 200609)
#define REALFLOAT_VERSION corrected Hugs version.
#elif defined(__GLASGOW_HASKELL__) || defined(__NHC__)
#define REALFLOAT_VERSION normal Prelude version. This should be correct.
#else
#define REALFLOAT_VERSION normal Prelude version. This could be buggy.
#endif
----------------------------------------------------------------
--                                                  ~ 2013.05.11
-- |
-- Module      :  Hugs.RealFloat
-- Copyright   :  Copyright (c) 2007--2015 wren gayle romano
-- License     :  BSD3
-- Maintainer  :  wren@community.haskell.org
-- Stability   :  stable
-- Portability :  portable (with CPP)
--
-- Hugs (September 2006) has buggy definitions for 'Prelude.isNaN'
-- and 'Prelude.isInfinite' on Float and Double. If this module is
-- run through CPP with the macro @__HUGS__@ set to a value no
-- larger than 200609, then correct definitions are used. Otherwise
-- the Prelude definitions are used (which should be correct for
-- other compilers). For example, run Hugs with
--
-- @hugs -F'cpp -P -D__HUGS__=200609' Hugs/RealFloat.hs@
--
-- N.B. The corrected definitions have only been tested to work for
-- 'Float' and 'Double'. These definitions should probably not be
-- used for other 'RealFloat' types.
--
-- /This installation was compiled with the REALFLOAT_VERSION/-- /This installation was compiled with the normal Prelude version. This should be correct./
----------------------------------------------------------------
module Hugs.RealFloat
    ( isInfinite
    , isNaN
    ) where

import Prelude hiding (isInfinite, isNaN)
import qualified Prelude
----------------------------------------------------------------

isInfinite :: (RealFloat a) => a -> Bool
{-# INLINE isInfinite #-}
#if defined(__HUGS__) && (__HUGS__ <= 200609)
isInfinite x = (1/0) == abs x
#else
isInfinite = Prelude.isInfinite
#endif


isNaN :: (RealFloat a) => a -> Bool
{-# INLINE isNaN #-}
#if defined(__HUGS__) && (__HUGS__ <= 200609)
isNaN x = compareEQ x 0 && compareEQ x 1

-- | In Hugs (September 2006), 'compare' always returns @EQ@ if one
-- of the arguments is not a number. Thus, if a number is @compareEQ@
-- against multiple different numbers, then it must be @isNaN@.
compareEQ :: (Ord a) => a -> a -> Bool
compareEQ x y =
    case compare x y of
    EQ -> True
    _  -> False
#else
isNaN = Prelude.isNaN
#endif
----------------------------------------------------------------
----------------------------------------------------------- fin.

==============
../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs
==============
lengths:(2578,2486)

==============

({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:1:1 }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (1,1),DP (1,21)) "{-# LANGUAGE CPP #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,38)) "{-# OPTIONS_GHC -Wall -fwarn-tabs #-}" Nothing),DP (2,1)),((AnnComment DComment (DP (2,1),DP (2,45)) "#if defined(__HUGS__) && (__HUGS__ <= 200609)" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,49)) "#define REALFLOAT_VERSION corrected Hugs version." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,54)) "#elif defined(__GLASGOW_HASKELL__) || defined(__NHC__)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,73)) "#define REALFLOAT_VERSION normal Prelude version. This should be correct." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "#else" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,70)) "#define REALFLOAT_VERSION normal Prelude version. This could be buggy." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "--                                                  ~ 2013.05.11" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,33)) "-- Module      :  Hugs.RealFloat" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,61)) "-- Copyright   :  Copyright (c) 2007--2015 wren gayle romano" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,23)) "-- License     :  BSD3" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- Maintainer  :  wren@community.haskell.org" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,25)) "-- Stability   :  stable" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Portability :  portable (with CPP)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,67)) "-- Hugs (September 2006) has buggy definitions for 'Prelude.isNaN'" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,67)) "-- and 'Prelude.isInfinite' on Float and Double. If this module is" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,63)) "-- run through CPP with the macro @__HUGS__@ set to a value no" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- larger than 200609, then correct definitions are used. Otherwise" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "-- the Prelude definitions are used (which should be correct for" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- other compilers). For example, run Hugs with" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,57)) "-- @hugs -F'cpp -P -D__HUGS__=200609' Hugs/RealFloat.hs@" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- N.B. The corrected definitions have only been tested to work for" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- 'Float' and 'Double'. These definitions should probably not be" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,37)) "-- used for other 'RealFloat' types." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,63)) "-- /This installation was compiled with the REALFLOAT_VERSION/" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-62),DP (0,30)) "-- /This installation was compiled with the normal Prelude version. This should be correct./" Nothing),DP (0,-62)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing),DP (1,1)),((G AnnModule),DP (37,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------- fin." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((G AnnEofPos),DP (5,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:38:8-21
     }
    Nothing{ModuleName: Hugs.RealFloat})) 
  (Just 
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:(39,5)-(41,5)
     }
    Just (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,5))])
    [
     ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:39:7-16
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:39:7-16
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,5))])
        (Unqual {OccName: isInfinite})))),
     ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:40:7-11
       }
      Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:40:7-11
         }
        Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isNaN}))))])) 
  [
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:1-41
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:8-14
       }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (True) 
       ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:16-41
         }
        Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnHiding),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
        [
         ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:24-33
           }
          Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])
          (IEVar 
           ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:24-33
             }
            Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: isInfinite})))),
         ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:36-40
           }
          Just (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:36-40
             }
            Just (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: isNaN}))))]))))),
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1-24
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:18-24
       }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Nothing) 
     (Nothing)))] 
  [
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1-40
     }
    Just (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1-10
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isInfinite}))] 
      ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-40
        }
       Just (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27
          }
         Just (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27
            }
           Just (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((G AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:16-26
              }
             Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:16-24
                }
               Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: RealFloat}))) 
              ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:26
                }
               Just (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a})))))))]) 
        ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:32-40
          }
         Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:32
            }
           Just (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:37-40
            }
           Just (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Bool}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1-25
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:12-21
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isInfinite})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,45)) "#if defined(__HUGS__) && (__HUGS__ <= 200609)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,10)) "isInfinite" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "/" Nothing,DComment (DP (0,0),DP (0,1)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,4)) "abs" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-10
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isInfinite})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-10
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isInfinite})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:12-31
              }
             Just (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:14-31
                }
               Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Qual {ModuleName: Prelude} {OccName: isInfinite})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1-35
     }
    Just (Ann (DP (3,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isNaN}))] 
      ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-35
        }
       Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22
          }
         Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])
         [
          ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22
            }
           Just (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((G AnnDarrow),DP (0,1))])
           (HsParTy 
            ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:11-21
              }
             Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])
             (HsAppTy 
              ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:11-19
                }
               Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: RealFloat}))) 
              ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:21
                }
               Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: a})))))))]) 
        ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:27-35
          }
         Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:27
            }
           Just (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: a}))) 
          ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:32-35
            }
           Just (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Bool}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1-20
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])
    (SigD 
     (InlineSig 
      ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:12-16
        }
       Just (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isNaN})) 
      (InlinePragma "{-# INLINE" 
       (Inline) 
       (Nothing) 
       (AlwaysActive) 
       (FunLike))))),
   ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (13,1) [DComment (DP (1,1),DP (1,45)) "#if defined(__HUGS__) && (__HUGS__ <= 200609)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "isNaN" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,10)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (2,1),DP (2,68)) "-- | In Hugs (September 2006), 'compare' always returns @EQ@ if one" Nothing,DComment (DP (1,1),DP (1,70)) "-- of the arguments is not a number. Thus, if a number is @compareEQ@" Nothing,DComment (DP (1,1),DP (1,64)) "-- against multiple different numbers, then it must be @isNaN@." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Ord" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "y" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (1,5),DP (1,9)) "case" Nothing,DComment (DP (0,1),DP (0,8)) "compare" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "y" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing,DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,2)) "EQ" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing,DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,2),DP (0,4)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isNaN})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isNaN})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:7-21
              }
             Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:9-21
                }
               Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsVar 
                (Qual {ModuleName: Prelude} {OccName: isNaN})))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (1,1),DP (1,21)) "{-# LANGUAGE CPP #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (2,1),DP (2,38)) "{-# OPTIONS_GHC -Wall -fwarn-tabs #-}" Nothing),DP (2,1)),((AnnComment DComment (DP (2,1),DP (2,45)) "#if defined(__HUGS__) && (__HUGS__ <= 200609)" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,49)) "#define REALFLOAT_VERSION corrected Hugs version." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,54)) "#elif defined(__GLASGOW_HASKELL__) || defined(__NHC__)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,73)) "#define REALFLOAT_VERSION normal Prelude version. This should be correct." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "#else" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,70)) "#define REALFLOAT_VERSION normal Prelude version. This could be buggy." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "--                                                  ~ 2013.05.11" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,33)) "-- Module      :  Hugs.RealFloat" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,61)) "-- Copyright   :  Copyright (c) 2007--2015 wren gayle romano" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,23)) "-- License     :  BSD3" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,45)) "-- Maintainer  :  wren@community.haskell.org" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,25)) "-- Stability   :  stable" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,38)) "-- Portability :  portable (with CPP)" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,67)) "-- Hugs (September 2006) has buggy definitions for 'Prelude.isNaN'" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,67)) "-- and 'Prelude.isInfinite' on Float and Double. If this module is" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,63)) "-- run through CPP with the macro @__HUGS__@ set to a value no" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- larger than 200609, then correct definitions are used. Otherwise" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "-- the Prelude definitions are used (which should be correct for" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,48)) "-- other compilers). For example, run Hugs with" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,57)) "-- @hugs -F'cpp -P -D__HUGS__=200609' Hugs/RealFloat.hs@" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,68)) "-- N.B. The corrected definitions have only been tested to work for" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,66)) "-- 'Float' and 'Double'. These definitions should probably not be" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,37)) "-- used for other 'RealFloat' types." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,63)) "-- /This installation was compiled with the REALFLOAT_VERSION/" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-62),DP (0,30)) "-- /This installation was compiled with the normal Prelude version. This should be correct./" Nothing),DP (0,-62)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing),DP (1,1)),((G AnnModule),DP (37,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------- fin." Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,1)) "" Nothing),DP (1,1)),((G AnnEofPos),DP (5,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:(39,5)-(41,5) CN "(:)" NotNeeded,
  (Ann (DP (1,5)) (ColDelta 5) DP (1,5) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,5))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:39:7-16 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:39:7-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (1,5))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:40:7-11 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:40:7-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:1-41 CN "ImportDecl" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (2,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:16-41 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnHiding),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:24-33 CN "IEVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:24-33 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:36-40 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 36) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:36-40 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 36) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1-24 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1-40 CN "SigD" NotNeeded,
  (Ann (DP (2,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,65)) "----------------------------------------------------------------" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 15) DP (0,0) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 15) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-40 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 15) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:16-24 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:16-26 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:26 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 26) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:32 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 32) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:32-40 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:37-40 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 37) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:12-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,45)) "#if defined(__HUGS__) && (__HUGS__ <= 200609)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,10)) "isInfinite" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) "1" Nothing,DComment (DP (0,0),DP (0,1)) "/" Nothing,DComment (DP (0,0),DP (0,1)) "0" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "==" Nothing,DComment (DP (0,1),DP (0,4)) "abs" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:12-31 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 12) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:14-31 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1-35 CN "SigD" NotNeeded,
  (Ann (DP (3,1)) (ColDelta 1) DP (4,1) [DComment (DP (1,1),DP (1,6)) "#endif" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22 CN "(:)" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnOpenP),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22 CN "HsParTy" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 10) DP (0,-1) [] [((G AnnCloseP),DP (0,0)),((G AnnDarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-35 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:11-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:11-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:27 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 27) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:27-35 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:32-35 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 32) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1-20 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnOpen),DP (0,0)),((G AnnClose),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:12-16 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 12) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (13,1) [DComment (DP (1,1),DP (1,45)) "#if defined(__HUGS__) && (__HUGS__ <= 200609)" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,5)) "isNaN" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,10)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "0" Nothing,DComment (DP (0,1),DP (0,3)) "&&" Nothing,DComment (DP (0,1),DP (0,10)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "1" Nothing,DComment (DP (2,1),DP (2,68)) "-- | In Hugs (September 2006), 'compare' always returns @EQ@ if one" Nothing,DComment (DP (1,1),DP (1,70)) "-- of the arguments is not a number. Thus, if a number is @compareEQ@" Nothing,DComment (DP (1,1),DP (1,64)) "-- against multiple different numbers, then it must be @isNaN@." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "Ord" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,3)) "=>" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,2)) "a" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,9)) "compareEQ" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "y" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (1,5),DP (1,9)) "case" Nothing,DComment (DP (0,1),DP (0,8)) "compare" Nothing,DComment (DP (0,1),DP (0,2)) "x" Nothing,DComment (DP (0,1),DP (0,2)) "y" Nothing,DComment (DP (0,1),DP (0,3)) "of" Nothing,DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,2)) "EQ" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,5)) "True" Nothing,DComment (DP (1,5),DP (1,5)) "" Nothing,DComment (DP (0,0),DP (0,1)) "_" Nothing,DComment (DP (0,2),DP (0,4)) "->" Nothing,DComment (DP (0,1),DP (0,6)) "False" Nothing,DComment (DP (1,1),DP (1,5)) "#else" Nothing] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:7-21 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:9-21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-52,0)) (ColDelta 0) DP (-52,0) [] []))]
==============
([((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:1:1,
    AnnModule),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:38:1-6]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:1:1,
    AnnWhere),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:41:7-11]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:(39,5)-(41,5),
    AnnCloseP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:41:5]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:(39,5)-(41,5),
    AnnOpenP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:39:5]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:39:7-16,
    AnnComma),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:40:5]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:1-41,
    AnnImport),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:1-6]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:1-41,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:16-41,
    AnnCloseP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:41]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:16-41,
    AnnHiding),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:16-21]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:16-41,
    AnnOpenP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:23]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:24-33,
    AnnComma),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:43:34]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1-24,
    AnnImport),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1-6]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1-24,
    AnnQualified),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:8-16]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:44:1-24,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1-40,
    AnnDcolon),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:12-13]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:1-40,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27,
    AnnCloseP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:27]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27,
    AnnDarrow),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:29-30]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15-27,
    AnnOpenP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:15]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:32-40,
    AnnRarrow),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:47:34-35]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1-25,
    AnnClose),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:23-25]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1-25,
    AnnOpen),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1-10]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:48:1-25,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31,
    AnnEqual),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:12]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31,
    AnnFunId),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-10]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:52:1-31,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1-35,
    AnnDcolon),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:7-8]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:1-35,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22,
    AnnCloseP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:22]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22,
    AnnDarrow),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:24-25]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10-22,
    AnnOpenP),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:10]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:27-35,
    AnnRarrow),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:56:29-30]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1-20,
    AnnClose),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:18-20]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1-20,
    AnnOpen),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1-10]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:57:1-20,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21,
    AnnEqual),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:7]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21,
    AnnFunId),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-5]),
  ((../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:70:1-21,
    AnnSemi),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:75:1]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/logfloat-0.13.0.1/src/Hugs/RealFloat.hs:75:1])],
 [(<no location info>,
   [AnnLineComment "----------------------------------------------------------- fin.",
    AnnLineComment "----------------------------------------------------------------",
    AnnLineComment "----------------------------------------------------------------",
    AnnLineComment "----------------------------------------------------------------",
    AnnLineComment "-- /This installation was compiled with the normal Prelude version. This should be correct./",
    AnnLineComment "--",
    AnnLineComment "-- used for other 'RealFloat' types.",
    AnnLineComment "-- 'Float' and 'Double'. These definitions should probably not be",
    AnnLineComment "-- N.B. The corrected definitions have only been tested to work for",
    AnnLineComment "--",
    AnnLineComment "-- @hugs -F'cpp -P -D__HUGS__=200609' Hugs/RealFloat.hs@",
    AnnLineComment "--",
    AnnLineComment "-- other compilers). For example, run Hugs with",
    AnnLineComment "-- the Prelude definitions are used (which should be correct for",
    AnnLineComment "-- larger than 200609, then correct definitions are used. Otherwise",
    AnnLineComment "-- run through CPP with the macro @__HUGS__@ set to a value no",
    AnnLineComment "-- and 'Prelude.isInfinite' on Float and Double. If this module is",
    AnnLineComment "-- Hugs (September 2006) has buggy definitions for 'Prelude.isNaN'",
    AnnLineComment "--",
    AnnLineComment "-- Portability :  portable (with CPP)",
    AnnLineComment "-- Stability   :  stable",
    AnnLineComment "-- Maintainer  :  wren@community.haskell.org",
    AnnLineComment "-- License     :  BSD3",
    AnnLineComment "-- Copyright   :  Copyright (c) 2007--2015 wren gayle romano",
    AnnLineComment "-- Module      :  Hugs.RealFloat",
    AnnLineComment "-- |",
    AnnLineComment "--                                                  ~ 2013.05.11",
    AnnLineComment "----------------------------------------------------------------",
    AnnBlockComment "{-# OPTIONS_GHC -Wall -fwarn-tabs #-}",
    AnnBlockComment "{-# LANGUAGE CPP #-}"])])