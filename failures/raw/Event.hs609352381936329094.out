{-# LANGUAGE CPP
           , DeriveDataTypeable
           , NoImplicitPrelude
  #-}

#if __GLASGOW_HASKELL__ >= 704
{-# LANGUAGE Safe #-}
#endif{-# LANGUAGE Safe #-}

-------------------------------------------------------------------------------
-- |-------------------------------------------------------------------------------
-- |-- Module     : Control.Concurrent.Event
-- Module     : Control.Concurrent.Event-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk
-- License    : BSD3 (see the file LICENSE)-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk
-- License    : BSD3 (see the file LICENSE)-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>
-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>--            , Roel van Dijk <vandijk.roel@gmail.com>
----            , Roel van Dijk <vandijk.roel@gmail.com>
---- An Event is a simple mechanism for communication between threads: one thread
-- signals an event and other threads wait for it.-- An Event is a simple mechanism for communication between threads: one thread
---- signals an event and other threads wait for it.
---- An event has a state which is either \"set\" or \"cleared\". This state can
-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'-- An event has a state which is either \"set\" or \"cleared\". This state can
-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'-- function blocks until the state is \"set\". An important property of setting
-- an event is that /all/ threads waiting for it are woken.-- function blocks until the state is \"set\". An important property of setting
---- an event is that /all/ threads waiting for it are woken.
---- It was inspired by the Python @Event@ object. See:
---- It was inspired by the Python @Event@ object. See:
---- <http://docs.python.org/3.1/library/threading.html#event-objects>
---- <http://docs.python.org/3.1/library/threading.html#event-objects>
---- This module is designed to be imported qualified. We suggest importing it
-- like:-- This module is designed to be imported qualified. We suggest importing it
---- like:
---- @
-- @-- import           Control.Concurrent.Event          ( Event )
-- import qualified Control.Concurrent.Event as Event ( ... )-- import           Control.Concurrent.Event          ( Event )
-- @-- import qualified Control.Concurrent.Event as Event ( ... )
---- @
---------------------------------------------------------------------------------
-------------------------------------------------------------------------------
module Control.Concurrent.Event
module( EventControl.Concurrent.Event
  ( Event
    -- * Creating events
  , new-- * Creating events
  , newnewSet
  , newSet
    -- * Waiting for events
  , wait-- * Waiting for events
  , waitwaitTimeout
  , waitTimeoutisSet
  , isSet
    -- * Setting events
  , set-- * Setting events
  , setsignal
  , signalclear
  , clear
  ) where

-------------------------------------------------------------------------------
-- Imports-------------------------------------------------------------------------------
-- Imports-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- from base:
import-- from base:Data.Bool               ( Bool(..) )
import Data.BoolData.Eq                 ( BoolEq )(..) )
import Data.EqData.Function           ( Eq(.)))
import Data.FunctionData.Functor            ( (fmap.) ) (<$>) )
import Data.FunctorData.Maybe              ( fmapisJust, (<$>)  ) )
import Data.MaybeData.Typeable           ( isJustTypeable) )
import Data.Typeable           ( Typeable )
#ifdef __HADDOCK__
import Control.Exception       ( mask )
#endif

import Prelude                 ( Integer )
import PreludeSystem.IO               ( IntegerIO )    )
import System.IO               ( IO )
-- from concurrent-extra (this package):
import-- from concurrent-extra (this package):Control.Concurrent.Broadcast ( Broadcast )
import qualified Control.Concurrent.Broadcast (asBroadcastBroadcast)
import qualified Control.Concurrent.Broadcast( new, newBroadcastingas Broadcast
                               ( newlisten, newBroadcasting, tryListen, listenTimeout
                               , listenbroadcast, tryListen, signal, listenTimeoutsilence
                               , broadcast, signal, silence
                               )

-------------------------------------------------------------------------------
-- Events-------------------------------------------------------------------------------
-- Events-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- | An event is in one of two possible states: \"set\" or \"cleared\".
newtype-- | An event is in one of two possible states: \"set\" or \"cleared\".Event = Event {evBroadcast :: Broadcast ()} deriving (Eq, Typeable)
newtype Event = Event {evBroadcast :: Broadcast ()} deriving (Eq, Typeable)

-------------------------------------------------------------------------------
-- Creating events-------------------------------------------------------------------------------
-- Creating events-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- | Create an event in the \"cleared\" state.
new-- | Create an event in the \"cleared\" state.:: IO Event
new ::= Event Event<$> Broadcast.new
new = Event <$> Broadcast.new
-- | Create an event in the \"set\" state.
newSet-- | Create an event in the \"set\" state.:: IO Event
newSet ::= Event Event<$> Broadcast.newBroadcasting ()
newSet = Event <$> Broadcast.newBroadcasting ()

-------------------------------------------------------------------------------
-- Waiting for events-------------------------------------------------------------------------------
-- Waiting for events-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
{-|
Block until the event is 'set'.

If the state of the event is already \"set\" this function will return
immediately. Otherwise it will block until another thread calls 'set'.

(You can also resume a thread that is waiting for an event by throwing an
asynchronous exception.)
-}wait :: Event -> IO ()
wait ::= Broadcast.listen -> IO ()  . evBroadcast
wait = Broadcast.listen . evBroadcast
{-|
Block until the event is 'set' or until a timer expires.

Like 'wait', but with a timeout. A return value of 'False' indicates a timeout
occurred.

The timeout is specified in microseconds.

If the event is \"cleared\" and a timeout of 0 &#x3bc;s is specified the
function returns 'False' without blocking.

Negative timeouts are treated the same as a timeout of 0 &#x3bc;s.
-}waitTimeout :: Event -> Integer -> IO Bool
waitTimeout :: Eventtime =->isJust<$>->Broadcast.listenTimeout Bool               (evBroadcast ev) time
waitTimeout ev time = isJust <$> Broadcast.listenTimeout (evBroadcast ev) time
{-|
Returns 'True' if the state of the event is \"set\" and 'False' if the state
is \"cleared\".

Notice that this is only a snapshot of the state. By the time a program reacts
on its result it may already be out of date.
-}isSet :: Event -> IO Bool
isSet ::= fmapisJust-> IO.BoolBroadcast.tryListen . evBroadcast
isSet = fmap isJust . Broadcast.tryListen . evBroadcast

-------------------------------------------------------------------------------
-- Setting events-------------------------------------------------------------------------------
-- Setting events-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
{-|
Changes the state of the event to \"set\". All threads that where waiting
for this event are woken. Threads that 'wait' after the state is changed to
\"set\" will not block at all.
-}set :: Event -> IO ()
set :: Event= Broadcast.broadcast-> IO ()        (evBroadcast ev) ()
set ev = Broadcast.broadcast (evBroadcast ev) ()
{-|
Changes the state to \"cleared\" after all threads that where waiting for this
event are woken. Threads that 'wait' after a @signal@ will block until the event
is 'set' again.

The semantics of signal are equivalent to the following definition:

@
  signal e = 'mask' $ 'set' e >> 'clear' e
@-}signal :: Event -> IO ()
signal :: Event= Broadcast.signal-> IO ()     (evBroadcast ev) ()
signal ev = Broadcast.signal (evBroadcast ev) ()
{-|
Changes the state of the event to \"cleared\". Threads that 'wait' after the
state is changed to \"cleared\" will block until the state is changed to \"set\".
-}clear :: Event -> IO ()
clear ::= Broadcast.silence -> IO ()   . evBroadcast
clear = Broadcast.silence . evBroadcast


==============
../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs
==============
lengths:(8941,5631)

==============

({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:1:1
  }
 Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (3,6)) "{-# LANGUAGE CPP\n           , DeriveDataTypeable\n           , NoImplicitPrelude\n  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,30)) "#if __GLASGOW_HASKELL__ >= 704" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,22)) "{-# LANGUAGE Safe #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-5),DP (0,16)) "{-# LANGUAGE Safe #-}" Nothing),DP (0,-5)),((AnnComment DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,75)) "-------------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,36)) "-- Module     : Control.Concurrent.Event" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,41)) "-- Module     : Control.Concurrent.Event" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-40),DP (0,18)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-40)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,15)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,8)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,52)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-51),DP (0,3)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-51)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,52)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-- An Event is a simple mechanism for communication between threads: one thread" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,51)) "-- signals an event and other threads wait for it." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-50),DP (0,29)) "-- An Event is a simple mechanism for communication between threads: one thread" Nothing),DP (0,-50)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,48)) "-- signals an event and other threads wait for it." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,76)) "-- An event has a state which is either \\\"set\\\" or \\\"cleared\\\". This state can" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,77)) "-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-76),DP (0,2)) "-- An event has a state which is either \\\"set\\\" or \\\"cleared\\\". This state can" Nothing),DP (0,-76)),((AnnComment DComment (DP (1,1),DP (1,77)) "-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-76),DP (0,3)) "-- function blocks until the state is \\\"set\\\". An important property of setting" Nothing),DP (0,-76)),((AnnComment DComment (DP (1,1),DP (1,60)) "-- an event is that /all/ threads waiting for it are woken." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-59),DP (0,20)) "-- function blocks until the state is \\\"set\\\". An important property of setting" Nothing),DP (0,-59)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,57)) "-- an event is that /all/ threads waiting for it are woken." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- It was inspired by the Python @Event@ object. See:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- It was inspired by the Python @Event@ object. See:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,66)) "-- <http://docs.python.org/3.1/library/threading.html#event-objects>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,66)) "-- <http://docs.python.org/3.1/library/threading.html#event-objects>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,74)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,9)) "-- like:" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-8),DP (0,68)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-8)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,6)) "-- like:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,59)) "-- import           Control.Concurrent.Event          ( Event )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,62)) "-- import qualified Control.Concurrent.Event as Event ( ... )" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-61),DP (0,2)) "-- import           Control.Concurrent.Event          ( Event )" Nothing),DP (0,-61)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,57)) "-- import qualified Control.Concurrent.Event as Event ( ... )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-------------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,25)) "Control.Concurrent.Event" Nothing),DP (0,1)),((G AnnModule),DP (40,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,6)) "Event" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])
 (HsModule 
  (Just 
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:41:8-31
     }
    Nothing{ModuleName: Control.Concurrent.Event})) 
  (Just 
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(42,3)-(57,3)
     }
    Just (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])
    [
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:42:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEThingAbs 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:42:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,25)) "-- * Creating events" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,17)) "-- * Creating events" Nothing),DP (0,-3)),((G AnnComma),DP (3,3))])
        (Unqual {OccName: Event})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:45:5-7
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:45:5-7
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,3)) "newSet" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: new})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:46:5-10
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:46:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,28)) "-- * Waiting for events" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,5)) "wait" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (0,19)) "-- * Waiting for events" Nothing),DP (0,-4)),((G AnnComma),DP (3,3))])
        (Unqual {OccName: newSet})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:49:5-8
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:49:5-8
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,7)) "waitTimeout" Nothing),DP (0,-4)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: wait})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:50:5-15
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:50:5-15
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-6)) "isSet" Nothing),DP (0,-11)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: waitTimeout})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:51:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:51:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,24)) "-- * Setting events" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "set" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,16)) "-- * Setting events" Nothing),DP (0,-3)),((G AnnComma),DP (3,3))])
        (Unqual {OccName: isSet})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:54:5-7
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:54:5-7
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,3)) "signal" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: set})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:55:5-10
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:55:5-10
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-1)) "clear" Nothing),DP (0,-6)),((G AnnComma),DP (1,3))])
        (Unqual {OccName: signal})))),
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:56:5-9
       }
      Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])
      (IEVar 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:56:5-9
         }
        Just (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: clear}))))])) 
  [
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,14)) "-- from base:" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,7)) "-- from base:" Nothing,DComment (DP (0,-6),DP (0,3)) "Data.Bool" Nothing,DComment (DP (0,15),DP (0,16)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:8-16
       }
      Nothing{ModuleName: Data.Bool}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:32-43
         }
        Just (Ann (DP (0,17)) (ColDelta 32) DP (0,15) [DComment (DP (0,-9),DP (0,-2)) "Data.Eq" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-41
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,-2)) "Eq" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])
          (IEThingAll 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-37
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Bool}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:1-37
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:8-14
       }
      Nothing{ModuleName: Data.Eq}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:32-37
         }
        Just (Ann (DP (0,11)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,6)) "Data.Function" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:34-35
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:34-35
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Eq}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:1-38
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:8-20
       }
      Nothing{ModuleName: Data.Function}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:32-38
         }
        Just (Ann (DP (0,12)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-1)) "Data.Functor" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,3)) "fmap" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: .}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:1-46
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "<$>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:8-19
       }
      Nothing{ModuleName: Data.Functor}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:32-46
         }
        Just (Ann (DP (0,14)) (ColDelta 32) DP (0,12) [DComment (DP (0,-12),DP (0,-2)) "Data.Maybe" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:34-37
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:34-37
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,2)) "isJust" Nothing),DP (0,-4)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: fmap})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44
           }
          Just (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44
             }
            Just (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) ")" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])
            (Unqual {OccName: <$>}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:1-41
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:8-17
       }
      Nothing{ModuleName: Data.Maybe}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:32-41
         }
        Just (Ann (DP (0,11)) (ColDelta 32) DP (0,14) [DComment (DP (0,-10),DP (0,3)) "Data.Typeable" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,2)) "Typeable" Nothing),DP (0,-6)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:34-39
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:34-39
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: isJust}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:1-43
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:8-20
       }
      Nothing{ModuleName: Data.Typeable}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:32-43
         }
        Just (Ann (DP (0,11)) (ColDelta 32) DP (0,11) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:34-41
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:34-41
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Typeable}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,18)) "#ifdef __HADDOCK__" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,18)) "Control.Exception" Nothing,DComment (DP (0,7),DP (0,8)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "mask" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,17),DP (0,18)) "(" Nothing,DComment (DP (0,1),DP (0,8)) "Integer" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:8-14
       }
      Nothing{ModuleName: Prelude}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:32-42
         }
        Just (Ann (DP (0,15)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,2)) "System.IO" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-5)) "IO" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:34-40
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:34-40
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Integer}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:1-37
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:8-16
       }
      Nothing{ModuleName: System.IO}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:32-37
         }
        Just (Ann (DP (0,15)) (ColDelta 32) DP (0,15) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:34-35
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:34-35
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: IO}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:1-59
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,41)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,34)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (0,-23),DP (0,5)) "Control.Concurrent.Broadcast" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "Broadcast" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "qualified" Nothing),DP (0,1)),((G AnnVal),DP (0,11))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:18-45
       }
      Nothing{ModuleName: Control.Concurrent.Broadcast}) 
     (Nothing) 
     (False) 
     (False) 
     (False) 
     (False) 
     (Nothing) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:47-59
         }
        Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,1)) "Broadcast" Nothing),DP (0,-8)),((G AnnCloseP),DP (0,1))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:49-57
           }
          Just (Ann (DP (0,0)) (ColDelta 49) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "as" Nothing] [])
          (IEThingAbs 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:49-57
             }
            Just (Ann (DP (0,0)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Broadcast}))))]))))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32)
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-14),DP (0,-13)) "(" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,16)) "newBroadcasting" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])
    (ImportDecl 
     (Nothing) 
     ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:81:18-45
       }
      Nothing{ModuleName: Control.Concurrent.Broadcast}) 
     (Nothing) 
     (False) 
     (False) 
     (True) 
     (False) 
     (Just {ModuleName: Broadcast}) 
     (Just 
      ((,) 
       (False) 
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(82,32)-(85,32)
         }
        Just (Ann (DP (1,32)) (ColDelta 32) DP (1,32) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,32))])
        [
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:34-36
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:34-36
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,3)) "listen" Nothing),DP (0,-3)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: new})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:39-53
           }
          Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:39-53
             }
            Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-14),DP (0,-13)) "," Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,10)) "tryListen" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,14)) "listenTimeout" Nothing),DP (0,1)),((G AnnComma),DP (1,32))])
            (Unqual {OccName: newBroadcasting})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:34-39
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:34-39
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,3)) "broadcast" Nothing),DP (0,-6)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: listen})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:42-50
           }
          Just (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:42-50
             }
            Just (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-7)) "," Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,7)) "signal" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: tryListen})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:53-65
           }
          Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:53-65
             }
            Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-13),DP (0,-6)) "silence" Nothing),DP (0,-13)),((G AnnComma),DP (1,32))])
            (Unqual {OccName: listenTimeout})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:34-42
           }
          Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:34-42
             }
            Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: broadcast})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:45-50
           }
          Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:45-50
             }
            Just (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
            (Unqual {OccName: signal})))),
         ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:53-59
           }
          Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [])
          (IEVar 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:53-59
             }
            Just (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: silence}))))])))))] 
  [
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1-75
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,10)) "-- Events" Nothing,DComment (DP (0,-9),DP (0,70)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,10)) "-- Events" Nothing,DComment (DP (0,-9),DP (0,70)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,72)) "-- | An event is in one of two possible states: \\\"set\\\" or \\\"cleared\\\"." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing,DComment (DP (0,-7),DP (0,64)) "-- | An event is in one of two possible states: \\\"set\\\" or \\\"cleared\\\"." Nothing,DComment (DP (0,-63),DP (0,-58)) "Event" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,10)) "Broadcast" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,1),DP (0,9)) "deriving" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "Eq" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "Typeable" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnNewtype),DP (0,0)),((G AnnEqual),DP (0,1))])
    (TyClD 
     (DataDecl 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:9-13
        }
       Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: Event})) 
      (HsQTvs 
       [] 
       []) 
      (HsDataDefn 
       (NewType) 
       ({ <no location info> }
        Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
        []) 
       (Nothing) 
       (Nothing) 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:17-51
          }
         Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
         (ConDecl 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:17-21
             }
            Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
            (Unqual {OccName: Event}))] 
          (Explicit) 
          (HsQTvs 
           [] 
           []) 
          ({ <no location info> }
           Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
           []) 
          (RecCon 
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:23-51
             }
            Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])
            [
             ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:24-50
               }
              Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnDcolon),DP (0,1))])
              (ConDeclField 
               [
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:24-34
                  }
                 Just (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (Unqual {OccName: evBroadcast}))] 
               ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:39-50
                 }
                Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])
                (HsAppTy 
                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:39-47
                   }
                  Just (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])
                  (HsTyVar 
                   (Unqual {OccName: Broadcast}))) 
                 ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:49-50
                   }
                  Just (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                  (HsTupleTy 
                   (HsBoxedOrConstraintTuple) 
                   [])))) 
               (Nothing)))])) 
          (ResTyH98) 
          (Nothing) 
          (False)))] 
       (Just 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:53-75
          }
         Just (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])
         [
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:63-64
            }
           Just (Ann (DP (0,0)) (ColDelta 63) DP (0,0) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
             []) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:63-64
              }
             Just (Ann (DP (0,0)) (ColDelta 63) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Eq}))))),
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:67-74
            }
           Just (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [])
           (HsForAllTy 
            (Implicit) 
            (Nothing) 
            (HsQTvs 
             [] 
             []) 
            ({ <no location info> }
             Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
             []) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:67-74
              }
             Just (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Typeable})))))]))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1-15
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Creating events" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Creating events" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,47)) "-- | Create an event in the \\\"cleared\\\" state." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "new" Nothing,DComment (DP (0,-3),DP (0,43)) "-- | Create an event in the \\\"cleared\\\" state." Nothing,DComment (DP (0,-42),DP (0,-40)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1-3
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: new}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:8-15
        }
       Just (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:8-15
          }
         Just (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:8-9
            }
           Just (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:11-15
            }
           Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Event}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,0)) "<$>" Nothing,DComment (DP (0,1),DP (0,14)) "Broadcast.new" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-3
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: new})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-3
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: new})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:5-29
              }
             Just (Ann (DP (0,-1)) (ColDelta 5) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:7-29
                }
               Just (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:7-11
                  }
                 Just (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: Event}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:13-15
                  }
                 Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: <$>}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:17-29
                  }
                 Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Broadcast} {OccName: new})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1-18
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,43)) "-- | Create an event in the \\\"set\\\" state." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "newSet" Nothing,DComment (DP (0,-6),DP (0,36)) "-- | Create an event in the \\\"set\\\" state." Nothing,DComment (DP (0,-35),DP (0,-33)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1-6
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: newSet}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:11-18
        }
       Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:11-18
          }
         Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [])
         (HsAppTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:11-12
            }
           Just (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-4))])
           (HsTyVar 
            (Unqual {OccName: IO}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:14-18
            }
           Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Event}))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,0)) "<$>" Nothing,DComment (DP (0,1),DP (0,26)) "Broadcast.newBroadcasting" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-6
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: newSet})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-6
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: newSet})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:8-47
              }
             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:10-47
                }
               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:10-14
                  }
                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: Event}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:16-18
                  }
                 Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: <$>}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:20-47
                  }
                 Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:20-44
                    }
                   Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Broadcast} {OccName: newBroadcasting}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:46-47
                    }
                   Just (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsVar 
                    (Exact {Name: ()})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1-22
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (16,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Waiting for events" Nothing,DComment (DP (0,-21),DP (0,58)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Waiting for events" Nothing,DComment (DP (0,-21),DP (0,58)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (9,3)) "{-|\nBlock until the event is 'set'.\n\nIf the state of the event is already \\\"set\\\" this function will return\nimmediately. Otherwise it will block until another thread calls 'set'.\n\n(You can also resume a thread that is waiting for an event by throwing an\nasynchronous exception.)\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nBlock until the event is 'set'.\n\nIf the state of the event is already \\\"set\\\" this function will return\nimmediately. Otherwise it will block until another thread calls 'set'.\n\n(You can also resume a thread that is waiting for an event by throwing an\nasynchronous exception.)\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "wait" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1-4
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: wait}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-22
        }
       Just (Ann (DP (0,-15)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,17)) "Broadcast.listen" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-22
          }
         Just (Ann (DP (0,-15)) (ColDelta 9) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-13
            }
           Just (Ann (DP (0,-15)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-15))])
           (HsTyVar 
            (Unqual {OccName: Event}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:18-22
            }
           Just (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:18-19
              }
             Just (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:21-22
              }
             Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) "." Nothing,DComment (DP (0,1),DP (0,12)) "evBroadcast" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-4
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: wait})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-4
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: wait})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:6-37
              }
             Just (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:8-37
                }
               Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:8-23
                  }
                 Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Broadcast} {OccName: listen}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:25
                  }
                 Just (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: .}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:27-37
                  }
                 Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: evBroadcast})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1-42
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (15,1) [DComment (DP (1,1),DP (13,3)) "{-|\nBlock until the event is 'set' or until a timer expires.\n\nLike 'wait', but with a timeout. A return value of 'False' indicates a timeout\noccurred.\n\nThe timeout is specified in microseconds.\n\nIf the event is \\\"cleared\\\" and a timeout of 0 &#x3bc;s is specified the\nfunction returns 'False' without blocking.\n\nNegative timeouts are treated the same as a timeout of 0 &#x3bc;s.\n-}" Nothing,DComment (DP (-11,1),DP (1,3)) "{-|\nBlock until the event is 'set' or until a timer expires.\n\nLike 'wait', but with a timeout. A return value of 'False' indicates a timeout\noccurred.\n\nThe timeout is specified in microseconds.\n\nIf the event is \\\"cleared\\\" and a timeout of 0 &#x3bc;s is specified the\nfunction returns 'False' without blocking.\n\nNegative timeouts are treated the same as a timeout of 0 &#x3bc;s.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "waitTimeout" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "Integer" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1-11
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: waitTimeout}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-42
        }
       Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-42
          }
         Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "time" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-20
            }
           Just (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Event}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:25-42
            }
           Just (Ann (DP (0,-4)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "isJust" Nothing] [((AnnComment DComment (DP (0,-2),DP (0,1)) "<$>" Nothing),DP (0,-2)),((G AnnRarrow),DP (0,1))])
           (HsFunTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:25-31
              }
             Just (Ann (DP (0,-4)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-4))])
             (HsTyVar 
              (Unqual {OccName: Integer}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:36-42
              }
             Just (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,22)) "Broadcast.listenTimeout" Nothing] [])
             (HsAppTy 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:36-37
                }
               Just (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-21))])
               (HsTyVar 
                (Unqual {OccName: IO}))) 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:39-42
                }
               Just (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])
               (HsTyVar 
                (Unqual {OccName: Bool}))))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,15),DP (0,16)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "ev" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "time" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-11
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: waitTimeout})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-11
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: waitTimeout})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:13-14
             }
            Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: ev}))),
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:16-19
             }
            Just (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: time})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:21-78
              }
             Just (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:23-78
                }
               Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:23-28
                  }
                 Just (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: isJust}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:30-32
                  }
                 Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: <$>}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:34-78
                  }
                 Just (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:34-73
                    }
                   Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:34-56
                      }
                     Just (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Qual {ModuleName: Broadcast} {OccName: listenTimeout}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:58-73
                      }
                     Just (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                     (HsPar 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:59-72
                        }
                       Just (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [])
                       (HsApp 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:59-69
                          }
                         Just (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: evBroadcast}))) 
                        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:71-72
                          }
                         Just (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])
                         (HsVar 
                          (Unqual {OccName: ev}))))))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:75-78
                    }
                   Just (Ann (DP (0,1)) (ColDelta 75) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: time})))))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1-25
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (1,1),DP (7,3)) "{-|\nReturns 'True' if the state of the event is \\\"set\\\" and 'False' if the state\nis \\\"cleared\\\".\n\nNotice that this is only a snapshot of the state. By the time a program reacts\non its result it may already be out of date.\n-}" Nothing,DComment (DP (-5,1),DP (1,3)) "{-|\nReturns 'True' if the state of the event is \\\"set\\\" and 'False' if the state\nis \\\"cleared\\\".\n\nNotice that this is only a snapshot of the state. By the time a program reacts\non its result it may already be out of date.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "isSet" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: isSet}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-25
        }
       Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "fmap" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-25
          }
         Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "isJust" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-14
            }
           Just (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-3))])
           (HsTyVar 
            (Unqual {OccName: Event}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:19-25
            }
           Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:19-20
              }
             Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:22-25
              }
             Just (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [DComment (DP (0,0),DP (0,1)) "." Nothing] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: Bool}))))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,16)) "Broadcast.tryListen" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,12)) "evBroadcast" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: isSet})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: isSet})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:7-55
              }
             Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-55
                }
               Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-41
                  }
                 Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                 (OpApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-19
                    }
                   Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])
                   (HsApp 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-12
                      }
                     Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: fmap}))) 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:14-19
                      }
                     Just (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])
                     (HsVar 
                      (Unqual {OccName: isJust}))))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:21
                    }
                   Just (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Unqual {OccName: .}))) 
                  (PlaceHolder) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:23-41
                    }
                   Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Broadcast} {OccName: tryListen}))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:43
                  }
                 Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: .}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:45-55
                  }
                 Just (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: evBroadcast})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1-21
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,18)) "-- Setting events" Nothing,DComment (DP (0,-17),DP (0,62)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,18)) "-- Setting events" Nothing,DComment (DP (0,-17),DP (0,62)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (5,3)) "{-|\nChanges the state of the event to \\\"set\\\". All threads that where waiting\nfor this event are woken. Threads that 'wait' after the state is changed to\n\\\"set\\\" will not block at all.\n-}" Nothing,DComment (DP (-3,1),DP (1,3)) "{-|\nChanges the state of the event to \\\"set\\\". All threads that where waiting\nfor this event are woken. Threads that 'wait' after the state is changed to\n\\\"set\\\" will not block at all.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,3)) "set" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1-3
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: set}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-21
        }
       Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-21
          }
         Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,20)) "Broadcast.broadcast" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-12
            }
           Just (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Event}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:17-21
            }
           Just (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:17-18
              }
             Just (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:20-21
              }
             Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,8),DP (0,9)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "ev" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-3
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: set})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-3
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: set})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:5-6
             }
            Just (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: ev})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:8-48
              }
             Just (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:10-48
                }
               Just (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:10-45
                  }
                 Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:10-28
                    }
                   Just (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Broadcast} {OccName: broadcast}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:30-45
                    }
                   Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsPar 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:31-44
                      }
                     Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:31-41
                        }
                       Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: evBroadcast}))) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:43-44
                        }
                       Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: ev}))))))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:47-48
                  }
                 Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsVar 
                  (Exact {Name: ()})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1-24
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (1,1),DP (10,4)) "{-|\nChanges the state to \\\"cleared\\\" after all threads that where waiting for this\nevent are woken. Threads that 'wait' after a @signal@ will block until the event\nis 'set' again.\n\nThe semantics of signal are equivalent to the following definition:\n\n@\n  signal e = 'mask' $ 'set' e >> 'clear' e\n@-}" Nothing,DComment (DP (-8,1),DP (1,4)) "{-|\nChanges the state to \\\"cleared\\\" after all threads that where waiting for this\nevent are woken. Threads that 'wait' after a @signal@ will block until the event\nis 'set' again.\n\nThe semantics of signal are equivalent to the following definition:\n\n@\n  signal e = 'mask' $ 'set' e >> 'clear' e\n@-}" Nothing,DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,6)) "signal" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1-6
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: signal}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-24
        }
       Just (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-24
          }
         Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,17)) "Broadcast.signal" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-15
            }
           Just (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])
           (HsTyVar 
            (Unqual {OccName: Event}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:20-24
            }
           Just (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:20-21
              }
             Just (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:23-24
              }
             Just (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,5),DP (0,6)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "ev" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-6
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: signal})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-6
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: signal})) 
            (False))) 
          [
           ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:8-9
             }
            Just (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])
            (VarPat 
             (Unqual {OccName: ev})))] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:11-48
              }
             Just (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:13-48
                }
               Just (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])
               (HsApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:13-45
                  }
                 Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])
                 (HsApp 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:13-28
                    }
                   Just (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])
                   (HsVar 
                    (Qual {ModuleName: Broadcast} {OccName: signal}))) 
                  ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:30-45
                    }
                   Just (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                   (HsPar 
                    ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:31-44
                      }
                     Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])
                     (HsApp 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:31-41
                        }
                       Just (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: evBroadcast}))) 
                      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:43-44
                        }
                       Just (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])
                       (HsVar 
                        (Unqual {OccName: ev}))))))))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:47-48
                  }
                 Just (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
                 (HsVar 
                  (Exact {Name: ()})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      []))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1-23
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (4,3)) "{-|\nChanges the state of the event to \\\"cleared\\\". Threads that 'wait' after the\nstate is changed to \\\"cleared\\\" will block until the state is changed to \\\"set\\\".\n-}" Nothing,DComment (DP (-2,1),DP (1,3)) "{-|\nChanges the state of the event to \\\"cleared\\\". Threads that 'wait' after the\nstate is changed to \\\"cleared\\\" will block until the state is changed to \\\"set\\\".\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "clear" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])
    (SigD 
     (TypeSig 
      [
       ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1-5
         }
        Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
        (Unqual {OccName: clear}))] 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-23
        }
       Just (Ann (DP (0,-16)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,18)) "Broadcast.silence" Nothing] [])
       (HsForAllTy 
        (Implicit) 
        (Nothing) 
        (HsQTvs 
         [] 
         []) 
        ({ <no location info> }
         Just (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] [])
         []) 
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-23
          }
         Just (Ann (DP (0,-16)) (ColDelta 10) DP (0,1) [] [((G AnnRarrow),DP (0,1))])
         (HsFunTy 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-14
            }
           Just (Ann (DP (0,-16)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-16))])
           (HsTyVar 
            (Unqual {OccName: Event}))) 
          ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:19-23
            }
           Just (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])
           (HsAppTy 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:19-20
              }
             Just (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (HsTyVar 
              (Unqual {OccName: IO}))) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:22-23
              }
             Just (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])
             (HsTupleTy 
              (HsBoxedOrConstraintTuple) 
              [])))))))) 
      (PlaceHolder)))),
   ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39
     }
    Just (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,4)) "." Nothing,DComment (DP (0,1),DP (0,12)) "evBroadcast" Nothing] [])
    (ValD 
     (FunBind 
      ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-5
        }
       Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
       (Unqual {OccName: clear})) 
      (False) 
      (MG 
       [
        ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39
          }
         Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])
         (Match 
          (Just 
           ((,) 
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-5
              }
             Just (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])
             (Unqual {OccName: clear})) 
            (False))) 
          [] 
          (Nothing) 
          (GRHSs 
           [
            ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:7-39
              }
             Just (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])
             (GRHS 
              [] 
              ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:9-39
                }
               Just (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])
               (OpApp 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:9-25
                  }
                 Just (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Qual {ModuleName: Broadcast} {OccName: silence}))) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:27
                  }
                 Just (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: .}))) 
                (PlaceHolder) 
                ({ ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:29-39
                  }
                 Just (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])
                 (HsVar 
                  (Unqual {OccName: evBroadcast})))))))] 
           (EmptyLocalBinds))))] 
       [] 
       (PlaceHolder) 
       (FromSource)) 
      (WpHole) 
      (PlaceHolder) 
      [])))] 
  (Nothing) 
  (Nothing)))
==============
[(AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:1:1 CN "HsModule" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((AnnComment DComment (DP (0,0),DP (3,6)) "{-# LANGUAGE CPP\n           , DeriveDataTypeable\n           , NoImplicitPrelude\n  #-}" Nothing),DP (0,0)),((AnnComment DComment (DP (2,1),DP (2,30)) "#if __GLASGOW_HASKELL__ >= 704" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,22)) "{-# LANGUAGE Safe #-}" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,6)) "#endif" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-5),DP (0,16)) "{-# LANGUAGE Safe #-}" Nothing),DP (0,-5)),((AnnComment DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing),DP (2,1)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,75)) "-------------------------------------------------------------------------------" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- |" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,36)) "-- Module     : Control.Concurrent.Event" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,41)) "-- Module     : Control.Concurrent.Event" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-40),DP (0,18)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-40)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,15)) "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,44)) "-- License    : BSD3 (see the file LICENSE)" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-43),DP (0,8)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (0,-43)),((AnnComment DComment (DP (1,1),DP (1,52)) "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-51),DP (0,3)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-51)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,52)) "--            , Roel van Dijk <vandijk.roel@gmail.com>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-- An Event is a simple mechanism for communication between threads: one thread" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,51)) "-- signals an event and other threads wait for it." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-50),DP (0,29)) "-- An Event is a simple mechanism for communication between threads: one thread" Nothing),DP (0,-50)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,48)) "-- signals an event and other threads wait for it." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,76)) "-- An event has a state which is either \\\"set\\\" or \\\"cleared\\\". This state can" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,77)) "-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-76),DP (0,2)) "-- An event has a state which is either \\\"set\\\" or \\\"cleared\\\". This state can" Nothing),DP (0,-76)),((AnnComment DComment (DP (1,1),DP (1,77)) "-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-76),DP (0,3)) "-- function blocks until the state is \\\"set\\\". An important property of setting" Nothing),DP (0,-76)),((AnnComment DComment (DP (1,1),DP (1,60)) "-- an event is that /all/ threads waiting for it are woken." Nothing),DP (1,1)),((AnnComment DComment (DP (0,-59),DP (0,20)) "-- function blocks until the state is \\\"set\\\". An important property of setting" Nothing),DP (0,-59)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,57)) "-- an event is that /all/ threads waiting for it are woken." Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- It was inspired by the Python @Event@ object. See:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,51)) "-- It was inspired by the Python @Event@ object. See:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,66)) "-- <http://docs.python.org/3.1/library/threading.html#event-objects>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,66)) "-- <http://docs.python.org/3.1/library/threading.html#event-objects>" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,74)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,9)) "-- like:" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-8),DP (0,68)) "-- This module is designed to be imported qualified. We suggest importing it" Nothing),DP (0,-8)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,6)) "-- like:" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,59)) "-- import           Control.Concurrent.Event          ( Event )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,62)) "-- import qualified Control.Concurrent.Event as Event ( ... )" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-61),DP (0,2)) "-- import           Control.Concurrent.Event          ( Event )" Nothing),DP (0,-61)),((AnnComment DComment (DP (1,1),DP (1,5)) "-- @" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-4),DP (0,57)) "-- import qualified Control.Concurrent.Event as Event ( ... )" Nothing),DP (0,-4)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,2)) "-- @" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,3)) "--" Nothing),DP (1,1)),((AnnComment DComment (DP (0,-2),DP (0,77)) "-------------------------------------------------------------------------------" Nothing),DP (0,-2)),((AnnComment DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing),DP (1,1)),((AnnComment DComment (DP (1,1),DP (1,7)) "module" Nothing),DP (1,1)),((AnnComment DComment (DP (0,1),DP (0,25)) "Control.Concurrent.Event" Nothing),DP (0,1)),((G AnnModule),DP (40,1)),((AnnComment DComment (DP (0,-4),DP (0,-3)) "(" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,6)) "Event" Nothing),DP (0,1)),((G AnnVal),DP (0,1)),((G AnnWhere),DP (0,1)),((G AnnEofPos),DP (2,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(42,3)-(57,3) CN "(:)" NotNeeded,
  (Ann (DP (1,3)) (ColDelta 3) DP (1,3) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:42:5-9 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:42:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,25)) "-- * Creating events" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,17)) "-- * Creating events" Nothing),DP (0,-3)),((G AnnComma),DP (3,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:45:5-7 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:45:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,3)) "newSet" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:46:5-10 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:46:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,28)) "-- * Waiting for events" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,5)) "wait" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-4),DP (0,19)) "-- * Waiting for events" Nothing),DP (0,-4)),((G AnnComma),DP (3,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:49:5-8 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:49:5-8 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,7)) "waitTimeout" Nothing),DP (0,-4)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:50:5-15 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:50:5-15 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-11),DP (0,-6)) "isSet" Nothing),DP (0,-11)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:51:5-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:51:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (1,5),DP (1,24)) "-- * Setting events" Nothing),DP (1,5)),((AnnComment DComment (DP (1,3),DP (1,4)) "," Nothing),DP (1,3)),((AnnComment DComment (DP (0,1),DP (0,4)) "set" Nothing),DP (0,1)),((AnnComment DComment (DP (0,-3),DP (0,16)) "-- * Setting events" Nothing),DP (0,-3)),((G AnnComma),DP (3,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:54:5-7 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:54:5-7 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,3)) "signal" Nothing),DP (0,-3)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:55:5-10 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:55:5-10 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,-1)) "clear" Nothing),DP (0,-6)),((G AnnComma),DP (1,3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:56:5-9 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:56:5-9 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 5) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,11)) "-- Imports" Nothing,DComment (DP (0,-10),DP (0,69)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,14)) "-- from base:" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,7)) "-- from base:" Nothing,DComment (DP (0,-6),DP (0,3)) "Data.Bool" Nothing,DComment (DP (0,15),DP (0,16)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing,DComment (DP (0,0),DP (0,1)) "(" Nothing,DComment (DP (0,0),DP (0,2)) ".." Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:32-43 CN "(:)" NotNeeded,
  (Ann (DP (0,17)) (ColDelta 32) DP (0,15) [DComment (DP (0,-9),DP (0,-2)) "Data.Eq" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-41 CN "IEThingAll" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [((AnnComment DComment (DP (0,-4),DP (0,-2)) "Eq" Nothing),DP (0,-4)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnOpenP),DP (0,0)),((G AnnDotdot),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:1-37 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:32-37 CN "(:)" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,6)) "Data.Function" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-2),DP (0,-1)) "(" Nothing),DP (0,-2)),((AnnComment DComment (DP (0,0),DP (0,1)) "." Nothing),DP (0,0)),((AnnComment DComment (DP (0,0),DP (0,1)) ")" Nothing),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:34-35 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:34-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:1-38 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:32-38 CN "(:)" NotNeeded,
  (Ann (DP (0,12)) (ColDelta 32) DP (0,11) [DComment (DP (0,-13),DP (0,-1)) "Data.Functor" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-1),DP (0,3)) "fmap" Nothing),DP (0,-1)),((G AnnVal),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:1-46 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,3)) "<$>" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:32-46 CN "(:)" NotNeeded,
  (Ann (DP (0,14)) (ColDelta 32) DP (0,12) [DComment (DP (0,-12),DP (0,-2)) "Data.Maybe" Nothing] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:34-37 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:34-37 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-4),DP (0,2)) "isJust" Nothing),DP (0,-4)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 40) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 40) DP (0,0) [] [((G AnnOpenP),DP (0,0)),((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,-2)) ")" Nothing),DP (0,-3)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:1-41 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:32-41 CN "(:)" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 32) DP (0,14) [DComment (DP (0,-10),DP (0,3)) "Data.Typeable" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,2)) "Typeable" Nothing),DP (0,-6)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:34-39 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:34-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:1-43 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:32-43 CN "(:)" NotNeeded,
  (Ann (DP (0,11)) (ColDelta 32) DP (0,11) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:34-41 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:34-41 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:1-42 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (1,18)) "#ifdef __HADDOCK__" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,18)) "Control.Exception" Nothing,DComment (DP (0,7),DP (0,8)) "(" Nothing,DComment (DP (0,1),DP (0,5)) "mask" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing,DComment (DP (1,1),DP (1,6)) "#endif" Nothing,DComment (DP (2,1),DP (2,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,1),DP (0,8)) "Prelude" Nothing,DComment (DP (0,17),DP (0,18)) "(" Nothing,DComment (DP (0,1),DP (0,8)) "Integer" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:32-42 CN "(:)" NotNeeded,
  (Ann (DP (0,15)) (ColDelta 32) DP (0,17) [DComment (DP (0,-7),DP (0,2)) "System.IO" Nothing] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-7),DP (0,-5)) "IO" Nothing),DP (0,-7)),((AnnComment DComment (DP (0,1),DP (0,2)) ")" Nothing),DP (0,1)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:34-40 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:34-40 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:1-37 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:32-37 CN "(:)" NotNeeded,
  (Ann (DP (0,15)) (ColDelta 32) DP (0,15) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:34-35 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:34-35 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:1-59 CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,41)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "import" Nothing,DComment (DP (0,-6),DP (0,34)) "-- from concurrent-extra (this package):" Nothing,DComment (DP (0,-23),DP (0,5)) "Control.Concurrent.Broadcast" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,1),DP (0,10)) "Broadcast" Nothing,DComment (DP (0,1),DP (0,2)) ")" Nothing] [((G AnnImport),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,10)) "qualified" Nothing),DP (0,1)),((G AnnVal),DP (0,11))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:47-59 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,1)) "Broadcast" Nothing),DP (0,-8)),((G AnnCloseP),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:49-57 CN "IEThingAbs" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,1) [DComment (DP (0,-1),DP (0,1)) "as" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:49-57 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 49) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32) CN "ImportDecl" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [] [((G AnnImport),DP (0,0)),((G AnnQualified),DP (0,1)),((G AnnVal),DP (0,1)),((AnnComment DComment (DP (0,-14),DP (0,-13)) "(" Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,4)) "new" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,16)) "newBroadcasting" Nothing),DP (0,1)),((G AnnAs),DP (0,1)),((G AnnVal),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(82,32)-(85,32) CN "(:)" NotNeeded,
  (Ann (DP (1,32)) (ColDelta 32) DP (1,32) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (1,32))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:34-36 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:34-36 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-3),DP (0,3)) "listen" Nothing),DP (0,-3)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:39-53 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:39-53 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-14),DP (0,-13)) "," Nothing),DP (0,-14)),((AnnComment DComment (DP (0,1),DP (0,10)) "tryListen" Nothing),DP (0,1)),((AnnComment DComment (DP (0,0),DP (0,1)) "," Nothing),DP (0,0)),((AnnComment DComment (DP (0,1),DP (0,14)) "listenTimeout" Nothing),DP (0,1)),((G AnnComma),DP (1,32))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:34-39 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:34-39 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-6),DP (0,3)) "broadcast" Nothing),DP (0,-6)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:42-50 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 42) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:42-50 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 42) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-8),DP (0,-7)) "," Nothing),DP (0,-8)),((AnnComment DComment (DP (0,1),DP (0,7)) "signal" Nothing),DP (0,1)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:53-65 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:53-65 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0)),((AnnComment DComment (DP (0,-13),DP (0,-6)) "silence" Nothing),DP (0,-13)),((G AnnComma),DP (1,32))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:34-42 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:34-42 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:45-50 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:45-50 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 45) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:53-59 CN "IEVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:53-59 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 53) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1-75 CN "TyClD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,10)) "-- Events" Nothing,DComment (DP (0,-9),DP (0,70)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,10)) "-- Events" Nothing,DComment (DP (0,-9),DP (0,70)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,72)) "-- | An event is in one of two possible states: \\\"set\\\" or \\\"cleared\\\"." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,7)) "newtype" Nothing,DComment (DP (0,-7),DP (0,64)) "-- | An event is in one of two possible states: \\\"set\\\" or \\\"cleared\\\"." Nothing,DComment (DP (0,-63),DP (0,-58)) "Event" Nothing,DComment (DP (0,1),DP (0,2)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,2)) "{" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,10)) "Broadcast" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,0),DP (0,1)) "}" Nothing,DComment (DP (0,1),DP (0,9)) "deriving" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,2)) "Eq" Nothing,DComment (DP (0,0),DP (0,1)) "," Nothing,DComment (DP (0,1),DP (0,9)) "Typeable" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnNewtype),DP (0,0)),((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:9-13 CN "Unqual" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:17-21 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:17-51 CN "ConDecl" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:23-51 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenC),DP (0,0)),((G AnnCloseC),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:24-34 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:24-50 CN "ConDeclField" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 24) DP (0,0) [] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:39-47 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 39) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:39-50 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:49-50 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 49) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:53-75 CN "(:)" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 53) DP (0,1) [] [((G AnnDeriving),DP (0,0)),((G AnnOpenP),DP (0,1)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:63-64 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 63) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:63-64 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 63) DP (0,0) [] [((G AnnVal),DP (0,0)),((G AnnComma),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:67-74 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 67) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:67-74 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 67) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1-15 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (8,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Creating events" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,19)) "-- Creating events" Nothing,DComment (DP (0,-18),DP (0,61)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,47)) "-- | Create an event in the \\\"cleared\\\" state." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,3)) "new" Nothing,DComment (DP (0,-3),DP (0,43)) "-- | Create an event in the \\\"cleared\\\" state." Nothing,DComment (DP (0,-42),DP (0,-40)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:8-9 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:8-15 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:8-15 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 8) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:11-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,0)) "<$>" Nothing,DComment (DP (0,1),DP (0,14)) "Broadcast.new" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:5-29 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 5) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:7-11 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 7) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:7-29 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 7) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:13-15 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:17-29 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1-18 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (3,1) [DComment (DP (1,1),DP (1,43)) "-- | Create an event in the \\\"set\\\" state." Nothing,DComment (DP (1,1),DP (1,1)) "" Nothing,DComment (DP (0,0),DP (0,6)) "newSet" Nothing,DComment (DP (0,-6),DP (0,36)) "-- | Create an event in the \\\"set\\\" state." Nothing,DComment (DP (0,-35),DP (0,-33)) "::" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:11-12 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:11-18 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:11-18 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 11) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:14-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,0)) "<$>" Nothing,DComment (DP (0,1),DP (0,26)) "Broadcast.newBroadcasting" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:8-47 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:10-14 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:10-47 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:16-18 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:20-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:20-47 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:46-47 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 46) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1-22 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (16,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Waiting for events" Nothing,DComment (DP (0,-21),DP (0,58)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,22)) "-- Waiting for events" Nothing,DComment (DP (0,-21),DP (0,58)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (9,3)) "{-|\nBlock until the event is 'set'.\n\nIf the state of the event is already \\\"set\\\" this function will return\nimmediately. Otherwise it will block until another thread calls 'set'.\n\n(You can also resume a thread that is waiting for an event by throwing an\nasynchronous exception.)\n-}" Nothing,DComment (DP (-7,1),DP (1,3)) "{-|\nBlock until the event is 'set'.\n\nIf the state of the event is already \\\"set\\\" this function will return\nimmediately. Otherwise it will block until another thread calls 'set'.\n\n(You can also resume a thread that is waiting for an event by throwing an\nasynchronous exception.)\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,4)) "wait" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-13 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 9) DP (0,1) [] [((G AnnVal),DP (0,-15))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-22 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 9) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,17)) "Broadcast.listen" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-22 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-15)) (ColDelta 9) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:18-19 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 18) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:18-22 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 18) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:21-22 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-4 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,2),DP (0,3)) "." Nothing,DComment (DP (0,1),DP (0,12)) "evBroadcast" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:6-37 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 6) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:8-23 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:8-37 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:25 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:27-37 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1-42 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (15,1) [DComment (DP (1,1),DP (13,3)) "{-|\nBlock until the event is 'set' or until a timer expires.\n\nLike 'wait', but with a timeout. A return value of 'False' indicates a timeout\noccurred.\n\nThe timeout is specified in microseconds.\n\nIf the event is \\\"cleared\\\" and a timeout of 0 &#x3bc;s is specified the\nfunction returns 'False' without blocking.\n\nNegative timeouts are treated the same as a timeout of 0 &#x3bc;s.\n-}" Nothing,DComment (DP (-11,1),DP (1,3)) "{-|\nBlock until the event is 'set' or until a timer expires.\n\nLike 'wait', but with a timeout. A return value of 'False' indicates a timeout\noccurred.\n\nThe timeout is specified in microseconds.\n\nIf the event is \\\"cleared\\\" and a timeout of 0 &#x3bc;s is specified the\nfunction returns 'False' without blocking.\n\nNegative timeouts are treated the same as a timeout of 0 &#x3bc;s.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,11)) "waitTimeout" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,8)) "Integer" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-42 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 16) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-1)) "time" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,2)) "=" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:25-31 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 25) DP (0,1) [] [((G AnnVal),DP (0,-4))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:25-42 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-4)) (ColDelta 25) DP (0,1) [DComment (DP (0,-1),DP (0,5)) "isJust" Nothing] [((AnnComment DComment (DP (0,-2),DP (0,1)) "<$>" Nothing),DP (0,-2)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:36-37 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [] [((G AnnVal),DP (0,-21))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:36-42 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,-21)) (ColDelta 36) DP (0,1) [DComment (DP (0,-1),DP (0,22)) "Broadcast.listenTimeout" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:39-42 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 39) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-11 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,15),DP (0,16)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "ev" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,5)) "time" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:13-14 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:16-19 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 16) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:21-78 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 21) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:23-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 23) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:23-78 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:30-32 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:34-56 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:34-73 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 34) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:34-78 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 34) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:58-73 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 58) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:59-69 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:59-72 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 59) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:71-72 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 71) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:75-78 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 75) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1-25 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (9,1) [DComment (DP (1,1),DP (7,3)) "{-|\nReturns 'True' if the state of the event is \\\"set\\\" and 'False' if the state\nis \\\"cleared\\\".\n\nNotice that this is only a snapshot of the state. By the time a program reacts\non its result it may already be out of date.\n-}" Nothing,DComment (DP (-5,1),DP (1,3)) "{-|\nReturns 'True' if the state of the event is \\\"set\\\" and 'False' if the state\nis \\\"cleared\\\".\n\nNotice that this is only a snapshot of the state. By the time a program reacts\non its result it may already be out of date.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "isSet" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,5)) "Bool" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-3))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-25 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,5)) "fmap" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-25 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-3)) (ColDelta 10) DP (0,1) [] [((AnnComment DComment (DP (0,-1),DP (0,5)) "isJust" Nothing),DP (0,-1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:19-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:19-25 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:22-25 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 22) DP (0,1) [DComment (DP (0,0),DP (0,1)) "." Nothing] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,-3),DP (0,16)) "Broadcast.tryListen" Nothing,DComment (DP (0,1),DP (0,2)) "." Nothing,DComment (DP (0,1),DP (0,12)) "evBroadcast" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:7-55 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-12 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-19 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-41 CN "OpApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-55 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:14-19 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 14) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:21 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 21) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:23-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:43 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:45-55 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 45) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1-21 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (2,1),DP (2,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,18)) "-- Setting events" Nothing,DComment (DP (0,-17),DP (0,62)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,18)) "-- Setting events" Nothing,DComment (DP (0,-17),DP (0,62)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (1,80)) "-------------------------------------------------------------------------------" Nothing,DComment (DP (1,1),DP (5,3)) "{-|\nChanges the state of the event to \\\"set\\\". All threads that where waiting\nfor this event are woken. Threads that 'wait' after the state is changed to\n\\\"set\\\" will not block at all.\n-}" Nothing,DComment (DP (-3,1),DP (1,3)) "{-|\nChanges the state of the event to \\\"set\\\". All threads that where waiting\nfor this event are woken. Threads that 'wait' after the state is changed to\n\\\"set\\\" will not block at all.\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,3)) "set" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-12 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-21 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-21 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 8) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,20)) "Broadcast.broadcast" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:17-18 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 17) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:17-21 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 17) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:20-21 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-3 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,8),DP (0,9)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "ev" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:5-6 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 5) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:8-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 8) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:10-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:10-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 10) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:10-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 10) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:30-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:31-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:31-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:43-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:47-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1-24 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (12,1) [DComment (DP (1,1),DP (10,4)) "{-|\nChanges the state to \\\"cleared\\\" after all threads that where waiting for this\nevent are woken. Threads that 'wait' after a @signal@ will block until the event\nis 'set' again.\n\nThe semantics of signal are equivalent to the following definition:\n\n@\n  signal e = 'mask' $ 'set' e >> 'clear' e\n@-}" Nothing,DComment (DP (-8,1),DP (1,4)) "{-|\nChanges the state to \\\"cleared\\\" after all threads that where waiting for this\nevent are woken. Threads that 'wait' after a @signal@ will block until the event\nis 'set' again.\n\nThe semantics of signal are equivalent to the following definition:\n\n@\n  signal e = 'mask' $ 'set' e >> 'clear' e\n@-}" Nothing,DComment (DP (0,-3),DP (0,-3)) "" Nothing,DComment (DP (0,0),DP (0,6)) "signal" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-15 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-24 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 11) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-24 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 11) DP (0,0) [] [((AnnComment DComment (DP (0,-5),DP (0,-4)) "=" Nothing),DP (0,-5)),((AnnComment DComment (DP (0,1),DP (0,17)) "Broadcast.signal" Nothing),DP (0,1)),((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:20-21 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 20) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:20-24 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 20) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:23-24 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 23) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-6 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,5),DP (0,6)) "(" Nothing,DComment (DP (0,0),DP (0,11)) "evBroadcast" Nothing,DComment (DP (0,1),DP (0,3)) "ev" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:8-9 CN "VarPat" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 8) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:11-48 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 11) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:13-28 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:13-45 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 13) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:13-48 CN "HsApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 13) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:30-45 CN "HsPar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 30) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:31-41 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:31-44 CN "HsApp" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 31) DP (0,0) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:43-44 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 43) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:47-48 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 47) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1-23 CN "SigD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (6,1) [DComment (DP (1,1),DP (4,3)) "{-|\nChanges the state of the event to \\\"cleared\\\". Threads that 'wait' after the\nstate is changed to \\\"cleared\\\" will block until the state is changed to \\\"set\\\".\n-}" Nothing,DComment (DP (-2,1),DP (1,3)) "{-|\nChanges the state of the event to \\\"cleared\\\". Threads that 'wait' after the\nstate is changed to \\\"cleared\\\" will block until the state is changed to \\\"set\\\".\n-}" Nothing,DComment (DP (0,-2),DP (0,-2)) "" Nothing,DComment (DP (0,0),DP (0,5)) "clear" Nothing,DComment (DP (0,1),DP (0,3)) "::" Nothing,DComment (DP (0,1),DP (0,6)) "Event" Nothing,DComment (DP (0,1),DP (0,3)) "->" Nothing,DComment (DP (0,1),DP (0,3)) "IO" Nothing,DComment (DP (0,1),DP (0,2)) "(" Nothing,DComment (DP (0,0),DP (0,1)) ")" Nothing] [((G AnnDcolon),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-14 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 10) DP (0,1) [] [((G AnnVal),DP (0,-16))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-23 CN "HsForAllTy" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 10) DP (0,1) [DComment (DP (0,-2),DP (0,-1)) "=" Nothing,DComment (DP (0,1),DP (0,18)) "Broadcast.silence" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-23 CN "HsFunTy" NotNeeded,
  (Ann (DP (0,-16)) (ColDelta 10) DP (0,1) [] [((G AnnRarrow),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:19-20 CN "HsTyVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 19) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:19-23 CN "HsAppTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 19) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:22-23 CN "HsTupleTy" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 22) DP (0,1) [] [((G AnnOpenP),DP (0,0)),((G AnnCloseP),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-5 CN "Unqual" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39 CN "Match" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 1) DP (0,0) [] [((G AnnEqual),DP (0,1))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39 CN "ValD" NotNeeded,
  (Ann (DP (1,1)) (ColDelta 1) DP (1,1) [DComment (DP (0,3),DP (0,4)) "." Nothing,DComment (DP (0,1),DP (0,12)) "evBroadcast" Nothing] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:7-39 CN "GRHS" NotNeeded,
  (Ann (DP (0,-1)) (ColDelta 7) DP (0,-1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:9-25 CN "HsVar" NotNeeded,
  (Ann (DP (0,0)) (ColDelta 9) DP (0,0) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:9-39 CN "OpApp" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 9) DP (0,1) [] [])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:27 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 27) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey ../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:29-39 CN "HsVar" NotNeeded,
  (Ann (DP (0,1)) (ColDelta 29) DP (0,1) [] [((G AnnVal),DP (0,0))])),
 (AnnKey <no location info> CN "EmptyLocalBinds" NotNeeded,
  (Ann (DP (-102,0)) (ColDelta 0) DP (-102,0) [] [])),
 (AnnKey <no location info> CN "[]" NotNeeded,
  (Ann (DP (-93,0)) (ColDelta 0) DP (-93,0) [] []))]
==============
([((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:1:1,
    AnnModule),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:41:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:1:1,
    AnnWhere),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:57:5-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(42,3)-(57,3),
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:57:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(42,3)-(57,3),
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:42:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:42:5-9,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:45:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:45:5-7,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:46:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:46:5-10,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:49:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:49:5-8,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:50:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:50:5-15,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:51:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:51:5-9,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:54:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:54:5-7,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:55:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:55:5-10,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:56:3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:1-43,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:1-43,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:32-43,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:32-43,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-41,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:41]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-41,
    AnnDotdot),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:39-40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:34-41,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:65:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:1-37,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:1-37,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:32-37,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:32-37,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:66:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:1-38,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:1-38,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:32-38,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:32-38,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:36]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:34-36,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:67:35]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:1-46,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:1-46,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:32-46,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:46]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:32-46,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:34-37,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:38]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:44]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:40-44,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:68:41-43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:1-41,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:1-41,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:32-41,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:41]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:32-41,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:69:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:1-43,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:1-43,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:32-43,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:32-43,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:70:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:1-42,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:1-42,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:32-42,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:42]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:32-42,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:76:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:1-37,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:1-37,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:32-37,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:32-37,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:77:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:1-59,
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:1-59,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:81:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:47-59,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:59]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:47-59,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:80:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32),
    AnnAs),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:81:47-48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32),
    AnnImport),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:81:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32),
    AnnQualified),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:81:8-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32),
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(81,1)-(85,32),
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:81:50-58]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(82,32)-(85,32),
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:85:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(82,32)-(85,32),
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:34-36,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:82:39-53,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:34-39,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:40]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:42-50,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:51]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:83:53-65,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:34-42,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:45-50,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:84:51]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1-75,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1-75,
    AnnNewtype),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:1-75,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:23-51,
    AnnCloseC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:51]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:23-51,
    AnnOpenC),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:24-50,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:36-37]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:49-50,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:50]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:49-50,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:49]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:53-75,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:75]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:53-75,
    AnnDeriving),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:53-60]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:53-75,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:62]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:63-64,
    AnnComma),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:93:65]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1-15,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:5-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:101:1-15,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:1-29,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:7-29,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:102:13-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1-18,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:8-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:105:1-18,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:1-47,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:10-47,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:16-18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:46-47,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:46-47,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:106:46]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1-22,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:6-7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:1-22,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:9-22,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:15-16]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:21-22,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:21-22,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:122:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-4]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:1-37,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:8-37,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:123:25]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1-42,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:13-14]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:1-42,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:16-42,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:22-23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:25-42,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:138:33-34]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:1-78,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:23-78,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:30-32]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:58-73,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:73]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:58-73,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:139:58]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1-25,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:7-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:1-25,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:10-25,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:148:16-17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:1-55,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-41,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:9-55,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:149:43]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1-21,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:5-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:1-21,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:8-21,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:14-15]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:20-21,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:21]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:20-21,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:161:20]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-3]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:1-48,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:30-45,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:45]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:30-45,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:47-48,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:47-48,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:162:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1-24,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:8-9]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:1-24,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:11-24,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:17-18]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:23-24,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:24]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:23-24,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:174:23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:11]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-6]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:1-48,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:30-45,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:45]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:30-45,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:30]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:47-48,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:48]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:47-48,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:175:47]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1-23,
    AnnDcolon),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:7-8]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:1-23,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:10-23,
    AnnRarrow),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:16-17]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:22-23,
    AnnCloseP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:23]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:22-23,
    AnnOpenP),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:181:22]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39,
    AnnEqual),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:7]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39,
    AnnFunId),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-5]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:1-39,
    AnnSemi),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:184:1]),
  ((../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:9-39,
    AnnVal),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:182:27]),
  ((<no location info>, AnnEofPos),
   [../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:184:1])],
 [(../../hackage-packages/concurrent-extra-0.7.0.9/Control/Concurrent/Event.hs:(42,3)-(57,3),
   [AnnLineComment "-- * Setting events",
    AnnLineComment "-- * Waiting for events",
    AnnLineComment "-- * Creating events"]),
  (<no location info>,
   [AnnBlockComment "{-|\nChanges the state of the event to \\\"cleared\\\". Threads that 'wait' after the\nstate is changed to \\\"cleared\\\" will block until the state is changed to \\\"set\\\".\n-}",
    AnnBlockComment "{-|\nChanges the state to \\\"cleared\\\" after all threads that where waiting for this\nevent are woken. Threads that 'wait' after a @signal@ will block until the event\nis 'set' again.\n\nThe semantics of signal are equivalent to the following definition:\n\n@\n  signal e = 'mask' $ 'set' e >> 'clear' e\n@-}",
    AnnBlockComment "{-|\nChanges the state of the event to \\\"set\\\". All threads that where waiting\nfor this event are woken. Threads that 'wait' after the state is changed to\n\\\"set\\\" will not block at all.\n-}",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Setting events",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnBlockComment "{-|\nReturns 'True' if the state of the event is \\\"set\\\" and 'False' if the state\nis \\\"cleared\\\".\n\nNotice that this is only a snapshot of the state. By the time a program reacts\non its result it may already be out of date.\n-}",
    AnnBlockComment "{-|\nBlock until the event is 'set' or until a timer expires.\n\nLike 'wait', but with a timeout. A return value of 'False' indicates a timeout\noccurred.\n\nThe timeout is specified in microseconds.\n\nIf the event is \\\"cleared\\\" and a timeout of 0 &#x3bc;s is specified the\nfunction returns 'False' without blocking.\n\nNegative timeouts are treated the same as a timeout of 0 &#x3bc;s.\n-}",
    AnnBlockComment "{-|\nBlock until the event is 'set'.\n\nIf the state of the event is already \\\"set\\\" this function will return\nimmediately. Otherwise it will block until another thread calls 'set'.\n\n(You can also resume a thread that is waiting for an event by throwing an\nasynchronous exception.)\n-}",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Waiting for events",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- | Create an event in the \\\"set\\\" state.",
    AnnLineComment "-- | Create an event in the \\\"cleared\\\" state.",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Creating events",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- | An event is in one of two possible states: \\\"set\\\" or \\\"cleared\\\".",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Events",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- from concurrent-extra (this package):",
    AnnLineComment "-- from base:",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-- Imports",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnLineComment "--", AnnLineComment "-- @",
    AnnLineComment "-- import qualified Control.Concurrent.Event as Event ( ... )",
    AnnLineComment "-- import           Control.Concurrent.Event          ( Event )",
    AnnLineComment "-- @", AnnLineComment "--",
    AnnLineComment "-- like:",
    AnnLineComment "-- This module is designed to be imported qualified. We suggest importing it",
    AnnLineComment "--",
    AnnLineComment "-- <http://docs.python.org/3.1/library/threading.html#event-objects>",
    AnnLineComment "--",
    AnnLineComment "-- It was inspired by the Python @Event@ object. See:",
    AnnLineComment "--",
    AnnLineComment "-- an event is that /all/ threads waiting for it are woken.",
    AnnLineComment "-- function blocks until the state is \\\"set\\\". An important property of setting",
    AnnLineComment "-- be changed with the corresponding functions 'set' and 'clear'. The 'wait'",
    AnnLineComment "-- An event has a state which is either \\\"set\\\" or \\\"cleared\\\". This state can",
    AnnLineComment "--",
    AnnLineComment "-- signals an event and other threads wait for it.",
    AnnLineComment "-- An Event is a simple mechanism for communication between threads: one thread",
    AnnLineComment "--",
    AnnLineComment "--            , Roel van Dijk <vandijk.roel@gmail.com>",
    AnnLineComment "-- Maintainer : Bas van Dijk <v.dijk.bas@gmail.com>",
    AnnLineComment "-- License    : BSD3 (see the file LICENSE)",
    AnnLineComment "-- Copyright  : (c) 2010-2011 Bas van Dijk & Roel van Dijk",
    AnnLineComment "-- Module     : Control.Concurrent.Event",
    AnnLineComment "-- |",
    AnnLineComment "-------------------------------------------------------------------------------",
    AnnBlockComment "{-# LANGUAGE Safe #-}",
    AnnBlockComment "{-# LANGUAGE CPP\n           , DeriveDataTypeable\n           , NoImplicitPrelude\n  #-}"])])